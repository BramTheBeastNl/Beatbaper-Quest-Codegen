// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongPacksDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.LazyInit
void GlobalNamespace::SongPacksDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.Start
void GlobalNamespace::SongPacksDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.OnDestroy
void GlobalNamespace::SongPacksDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.SetOverrideSongPacks
void GlobalNamespace::SongPacksDropdown::SetOverrideSongPacks(System::Collections::Generic::List_1<::Il2CppString*>* songPackSerializedNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::SetOverrideSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackSerializedNames)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackSerializedNames);
}
// Autogenerated method: SongPacksDropdown.GetSelectedSongPackMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.SelectCellWithSongPackMask
void GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.GetIdxForSongPackMask
int GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Writing MetadataGetter for method: SongPacksDropdown::add_didSelectCellWithIdxEvent
// Il2CppName: add_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Action_1<int>*)>(&SongPacksDropdown::add_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::remove_didSelectCellWithIdxEvent
// Il2CppName: remove_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Action_1<int>*)>(&SongPacksDropdown::remove_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::LazyInit
// Il2CppName: LazyInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::LazyInit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "LazyInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::SetOverrideSongPacks
// Il2CppName: SetOverrideSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&SongPacksDropdown::SetOverrideSongPacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "SetOverrideSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::GetSelectedSongPackMask
// Il2CppName: GetSelectedSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SongPackMask (SongPacksDropdown::*)()>(&SongPacksDropdown::GetSelectedSongPackMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "GetSelectedSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::SelectCellWithSongPackMask
// Il2CppName: SelectCellWithSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(GlobalNamespace::SongPackMask)>(&SongPacksDropdown::SelectCellWithSongPackMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "SelectCellWithSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::GetIdxForSongPackMask
// Il2CppName: GetIdxForSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SongPacksDropdown::*)(GlobalNamespace::SongPackMask)>(&SongPacksDropdown::GetIdxForSongPackMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "GetIdxForSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx
// Il2CppName: HandleSimpleTextDropdownDidSelectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)(HMUI::DropdownWithTableView*, int)>(&SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::DropdownWithTableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::*)()>(&SongPacksDropdown::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPacksDropdown/<>c <>9
GlobalNamespace::SongPacksDropdown::$$c* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SongPacksDropdown::$$c*>("", "SongPacksDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPacksDropdown/<>c <>9
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9(GlobalNamespace::SongPacksDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.String> <>9__7_0
System::Func_2<::Il2CppString*, ::Il2CppString*>* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, ::Il2CppString*>*>("", "SongPacksDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.String> <>9__7_0
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0(System::Func_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: SongPacksDropdown/<>c..cctor
void GlobalNamespace::SongPacksDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPacksDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPacksDropdown/<>c.<LazyInit>b__7_0
::Il2CppString* GlobalNamespace::SongPacksDropdown::$$c::$LazyInit$b__7_0(::Il2CppString* serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPacksDropdown::$$c::<LazyInit>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serializedName);
}
// Writing MetadataGetter for method: SongPacksDropdown::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SongPacksDropdown::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::$$c::$LazyInit$b__7_0
// Il2CppName: <LazyInit>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SongPacksDropdown::$$c::*)(::Il2CppString*)>(&SongPacksDropdown::$$c::$LazyInit$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown::$$c*), "<LazyInit>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SongPacksDropdown::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::$$c::*)()>(&SongPacksDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SongPacksDropdown::$$c::*)()>(&SongPacksDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SongPacksDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`5
#include "System/Action_5.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelLoader.add_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.add_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.LoadLevel
void GlobalNamespace::MultiplayerLevelLoader::LoadLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float initialStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(initialStartTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapId, gameplayModifiers, initialStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.SetNewStartTime
void GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime(float newStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newStartTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.ClearLoading
void GlobalNamespace::MultiplayerLevelLoader::ClearLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::ClearLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelLoader.Tick
void GlobalNamespace::MultiplayerLevelLoader::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::Tick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelLoader.<LoadLevel>b__19_0
bool GlobalNamespace::MultiplayerLevelLoader::$LoadLevel$b__19_0(GlobalNamespace::PreviewDifficultyBeatmapSet* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::<LoadLevel>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadLevel>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, set);
}
// Writing MetadataGetter for method: MultiplayerLevelLoader::add_stillDownloadingSongEvent
// Il2CppName: add_stillDownloadingSongEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(System::Action*)>(&MultiplayerLevelLoader::add_stillDownloadingSongEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "add_stillDownloadingSongEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::remove_stillDownloadingSongEvent
// Il2CppName: remove_stillDownloadingSongEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(System::Action*)>(&MultiplayerLevelLoader::remove_stillDownloadingSongEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "remove_stillDownloadingSongEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::add_countdownFinishedEvent
// Il2CppName: add_countdownFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>*)>(&MultiplayerLevelLoader::add_countdownFinishedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "add_countdownFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::remove_countdownFinishedEvent
// Il2CppName: remove_countdownFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>*)>(&MultiplayerLevelLoader::remove_countdownFinishedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "remove_countdownFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_5<GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::LoadLevel
// Il2CppName: LoadLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float)>(&MultiplayerLevelLoader::LoadLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "LoadLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapIdentifierNetSerializable*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::SetNewStartTime
// Il2CppName: SetNewStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)(float)>(&MultiplayerLevelLoader::SetNewStartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "SetNewStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::ClearLoading
// Il2CppName: ClearLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)()>(&MultiplayerLevelLoader::ClearLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "ClearLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::Tick
// Il2CppName: Tick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)()>(&MultiplayerLevelLoader::Tick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "Tick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::$LoadLevel$b__19_0
// Il2CppName: <LoadLevel>b__19_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MultiplayerLevelLoader::*)(GlobalNamespace::PreviewDifficultyBeatmapSet*)>(&MultiplayerLevelLoader::$LoadLevel$b__19_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), "<LoadLevel>b__19_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PreviewDifficultyBeatmapSet*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelLoader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)()>(&MultiplayerLevelLoader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelLoader::*)()>(&MultiplayerLevelLoader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelLoader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader/MultiplayerBeatmapLoaderState
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: MultiplayerLobbyAvatarManager
#include "GlobalNamespace/MultiplayerLobbyAvatarManager.hpp"
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: MultiplayerLobbyAvatarPlaceManager
#include "GlobalNamespace/MultiplayerLobbyAvatarPlaceManager.hpp"
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyController.get_lobbyActivated
bool GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lobbyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.set_lobbyActivated
void GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lobbyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyController.ActivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.DeactivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MultiplayerLobbyController::get_lobbyActivated
// Il2CppName: get_lobbyActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MultiplayerLobbyController::*)()>(&MultiplayerLobbyController::get_lobbyActivated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), "get_lobbyActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLobbyController::set_lobbyActivated
// Il2CppName: set_lobbyActivated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLobbyController::*)(bool)>(&MultiplayerLobbyController::set_lobbyActivated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), "set_lobbyActivated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLobbyController::ActivateMultiplayerLobby
// Il2CppName: ActivateMultiplayerLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLobbyController::*)()>(&MultiplayerLobbyController::ActivateMultiplayerLobby)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), "ActivateMultiplayerLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLobbyController::DeactivateMultiplayerLobby
// Il2CppName: DeactivateMultiplayerLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLobbyController::*)()>(&MultiplayerLobbyController::DeactivateMultiplayerLobby)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), "DeactivateMultiplayerLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLobbyController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLobbyController::*)()>(&MultiplayerLobbyController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLobbyController::*)()>(&MultiplayerLobbyController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLobbyController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuClient
#include "GlobalNamespace/MultiplayerMenuClient.hpp"
// Including type: MenuPlayerController
#include "GlobalNamespace/MenuPlayerController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMenuClient.LateUpdate
void GlobalNamespace::MultiplayerMenuClient::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerMenuClient::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MultiplayerMenuClient::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerMenuClient::*)()>(&MultiplayerMenuClient::LateUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerMenuClient*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerMenuClient::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerMenuClient::*)()>(&MultiplayerMenuClient::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerMenuClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerMenuClient::*)()>(&MultiplayerMenuClient::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerMenuClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkPlayerOptionsTableCell.get_player
GlobalNamespace::INetworkPlayer* GlobalNamespace::NetworkPlayerOptionsTableCell::get_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::get_player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.set_player
void GlobalNamespace::NetworkPlayerOptionsTableCell::set_player(GlobalNamespace::INetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::set_player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Refresh
void GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Block
void GlobalNamespace::NetworkPlayerOptionsTableCell::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Unblock
void GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Join
void GlobalNamespace::NetworkPlayerOptionsTableCell::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Invite
void GlobalNamespace::NetworkPlayerOptionsTableCell::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Kick
void GlobalNamespace::NetworkPlayerOptionsTableCell::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Kick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Leave
void GlobalNamespace::NetworkPlayerOptionsTableCell::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerOptionsTableCell::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::get_player
// Il2CppName: get_player
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::INetworkPlayer* (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::get_player)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "get_player", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::set_player
// Il2CppName: set_player
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)(GlobalNamespace::INetworkPlayer*)>(&NetworkPlayerOptionsTableCell::set_player)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "set_player", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayer*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Block
// Il2CppName: Block
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Block)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Block", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Unblock
// Il2CppName: Unblock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Unblock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Unblock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Join
// Il2CppName: Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Invite
// Il2CppName: Invite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Invite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Invite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Kick
// Il2CppName: Kick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Kick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Kick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::Leave
// Il2CppName: Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), "Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerOptionsTableCell::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerOptionsTableCell::*)()>(&NetworkPlayerOptionsTableCell::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerOptionsTableCell*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkPlayerTableCell.get_showSeparator
bool GlobalNamespace::NetworkPlayerTableCell::get_showSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::get_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.set_showSeparator
void GlobalNamespace::NetworkPlayerTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerTableCell.SetData
void GlobalNamespace::NetworkPlayerTableCell::SetData(::Il2CppString* userName, bool isOpenParty, bool wantsToPlayNextLevel, bool isMyPartyOwner, bool isMe) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isOpenParty), ::il2cpp_utils::ExtractType(wantsToPlayNextLevel), ::il2cpp_utils::ExtractType(isMyPartyOwner), ::il2cpp_utils::ExtractType(isMe)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userName, isOpenParty, wantsToPlayNextLevel, isMyPartyOwner, isMe);
}
// Autogenerated method: NetworkPlayerTableCell.RefreshVisuals
void GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.get_activeColor
UnityEngine::Color GlobalNamespace::NetworkPlayerTableCell::get_activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::get_activeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.SelectionDidChange
void GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: NetworkPlayerTableCell.HighlightDidChange
void GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Writing MetadataGetter for method: NetworkPlayerTableCell::get_showSeparator
// Il2CppName: get_showSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NetworkPlayerTableCell::*)()>(&NetworkPlayerTableCell::get_showSeparator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "get_showSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::set_showSeparator
// Il2CppName: set_showSeparator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)(bool)>(&NetworkPlayerTableCell::set_showSeparator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "set_showSeparator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)(::Il2CppString*, bool, bool, bool, bool)>(&NetworkPlayerTableCell::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::RefreshVisuals
// Il2CppName: RefreshVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)()>(&NetworkPlayerTableCell::RefreshVisuals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "RefreshVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::get_activeColor
// Il2CppName: get_activeColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (NetworkPlayerTableCell::*)()>(&NetworkPlayerTableCell::get_activeColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "get_activeColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::SelectionDidChange
// Il2CppName: SelectionDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)(HMUI::SelectableCell::TransitionType)>(&NetworkPlayerTableCell::SelectionDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "SelectionDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SelectableCell::TransitionType>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::HighlightDidChange
// Il2CppName: HighlightDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)(HMUI::SelectableCell::TransitionType)>(&NetworkPlayerTableCell::HighlightDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), "HighlightDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SelectableCell::TransitionType>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayerTableCell::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)()>(&NetworkPlayerTableCell::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayerTableCell::*)()>(&NetworkPlayerTableCell::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayerTableCell*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayersTableView
#include "GlobalNamespace/NetworkPlayersTableView.hpp"
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayerCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kPlayerCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayerCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kPlayerCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kHeaderCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kHeaderCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHeaderCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kHeaderCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kOptionsCellIdentifier
::Il2CppString* GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkPlayersTableView", "kOptionsCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kOptionsCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kOptionsCellIdentifier", value));
}
// Autogenerated method: NetworkPlayersTableView.CellSize
float GlobalNamespace::NetworkPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.NumberOfCells
int GlobalNamespace::NetworkPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::NetworkPlayersTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: NetworkPlayersTableView.AddPlayers
void GlobalNamespace::NetworkPlayersTableView::AddPlayers(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* players, ::Il2CppString* title) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::AddPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(players), ::il2cpp_utils::ExtractType(title)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, players, title);
}
// Autogenerated method: NetworkPlayersTableView.SetParties
void GlobalNamespace::NetworkPlayersTableView::SetParties(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* partyPlayers, System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* otherPlayers, ::Il2CppString* myPartyTitle, ::Il2CppString* otherPlayersTitle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::SetParties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyPlayers), ::il2cpp_utils::ExtractType(otherPlayers), ::il2cpp_utils::ExtractType(myPartyTitle), ::il2cpp_utils::ExtractType(otherPlayersTitle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, partyPlayers, otherPlayers, myPartyTitle, otherPlayersTitle);
}
// Autogenerated method: NetworkPlayersTableView.HandleCellWasPressed
void GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed(HMUI::TableView* tableView, HMUI::TableCell* tableCell) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(tableCell)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, tableCell);
}
// Autogenerated method: NetworkPlayersTableView.HasVisibleOptions
bool GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkPlayersTableView", "HasVisibleOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, player);
}
// Writing MetadataGetter for method: NetworkPlayersTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (NetworkPlayersTableView::*)()>(&NetworkPlayersTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NetworkPlayersTableView::*)()>(&NetworkPlayersTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (NetworkPlayersTableView::*)(HMUI::TableView*, int)>(&NetworkPlayersTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::AddPlayers
// Il2CppName: AddPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::*)(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, ::Il2CppString*)>(&NetworkPlayersTableView::AddPlayers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "AddPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::SetParties
// Il2CppName: SetParties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::*)(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, ::Il2CppString*, ::Il2CppString*)>(&NetworkPlayersTableView::SetParties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "SetParties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::HandleCellWasPressed
// Il2CppName: HandleCellWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::*)(HMUI::TableView*, HMUI::TableCell*)>(&NetworkPlayersTableView::HandleCellWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "HandleCellWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<HMUI::TableCell*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::HasVisibleOptions
// Il2CppName: HasVisibleOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(GlobalNamespace::INetworkPlayer*)>(&NetworkPlayersTableView::HasVisibleOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), "HasVisibleOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayer*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::*)()>(&NetworkPlayersTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::*)()>(&NetworkPlayersTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetworkPlayersTableView::CellInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::CellInfo::*)()>(&NetworkPlayersTableView::CellInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView::CellInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersTableView::CellInfo::*)()>(&NetworkPlayersTableView::CellInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersTableView::CellInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersTableView/CellInfo/CellType
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Header
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Header"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Header
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Header", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Player
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Player
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Options
GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Options"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Options
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options(GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Options", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoolSettingsController
#include "GlobalNamespace/BoolSettingsController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BoolSettingsController.GetInitValue
bool GlobalNamespace::BoolSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolSettingsController::GetInitValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BoolSettingsController.ApplyValue
void GlobalNamespace::BoolSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: BoolSettingsController::GetInitValue
// Il2CppName: GetInitValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BoolSettingsController::*)()>(&BoolSettingsController::GetInitValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoolSettingsController*), "GetInitValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoolSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoolSettingsController::*)(bool)>(&BoolSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoolSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BoolSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoolSettingsController::*)()>(&BoolSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoolSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoolSettingsController::*)()>(&BoolSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoolSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DropdownSettingsController
#include "GlobalNamespace/DropdownSettingsController.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DropdownSettingsController.add_dropDownValueDidChangeEvent
void GlobalNamespace::DropdownSettingsController::add_dropDownValueDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::add_dropDownValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DropdownSettingsController.remove_dropDownValueDidChangeEvent
void GlobalNamespace::DropdownSettingsController::remove_dropDownValueDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::remove_dropDownValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DropdownSettingsController.GetInitValues
bool GlobalNamespace::DropdownSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: DropdownSettingsController.ApplyValue
void GlobalNamespace::DropdownSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: DropdownSettingsController.TextForValue
::Il2CppString* GlobalNamespace::DropdownSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated method: DropdownSettingsController.OnEnable
void GlobalNamespace::DropdownSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.OnDisable
void GlobalNamespace::DropdownSettingsController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.HandleDropdownValueDidChange
void GlobalNamespace::DropdownSettingsController::HandleDropdownValueDidChange(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::HandleDropdownValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropdownValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: DropdownSettingsController.RefreshUI
void GlobalNamespace::DropdownSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.Refresh
void GlobalNamespace::DropdownSettingsController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DropdownSettingsController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, applyValue);
}
// Writing MetadataGetter for method: DropdownSettingsController::add_dropDownValueDidChangeEvent
// Il2CppName: add_dropDownValueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)(System::Action*)>(&DropdownSettingsController::add_dropDownValueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "add_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::remove_dropDownValueDidChangeEvent
// Il2CppName: remove_dropDownValueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)(System::Action*)>(&DropdownSettingsController::remove_dropDownValueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "remove_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DropdownSettingsController::*)(int&, int&)>(&DropdownSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)(int)>(&DropdownSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DropdownSettingsController::*)(int)>(&DropdownSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)()>(&DropdownSettingsController::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)()>(&DropdownSettingsController::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::HandleDropdownValueDidChange
// Il2CppName: HandleDropdownValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)(HMUI::DropdownWithTableView*, int)>(&DropdownSettingsController::HandleDropdownValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "HandleDropdownValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::DropdownWithTableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::RefreshUI
// Il2CppName: RefreshUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)()>(&DropdownSettingsController::RefreshUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "RefreshUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)(bool)>(&DropdownSettingsController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DropdownSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)()>(&DropdownSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DropdownSettingsController::*)()>(&DropdownSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DropdownSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FormattedFloatListSettingsController.add_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.get_value
float GlobalNamespace::FormattedFloatListSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.get_values
::Array<float>* GlobalNamespace::FormattedFloatListSettingsController::get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::get_values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.set_values
void GlobalNamespace::FormattedFloatListSettingsController::set_values(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::set_values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.SetValue
void GlobalNamespace::FormattedFloatListSettingsController::SetValue(float value, bool callCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, callCallback);
}
// Autogenerated method: FormattedFloatListSettingsController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: FormattedFloatListSettingsController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::FormattedFloatListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: FormattedFloatListSettingsController::add_valueDidChangeEvent
// Il2CppName: add_valueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>*)>(&FormattedFloatListSettingsController::add_valueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "add_valueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>*>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::remove_valueDidChangeEvent
// Il2CppName: remove_valueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)(System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>*)>(&FormattedFloatListSettingsController::remove_valueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "remove_valueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::FormattedFloatListSettingsController*, float>*>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FormattedFloatListSettingsController::*)()>(&FormattedFloatListSettingsController::get_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::get_values
// Il2CppName: get_values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (FormattedFloatListSettingsController::*)()>(&FormattedFloatListSettingsController::get_values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "get_values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::set_values
// Il2CppName: set_values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)(::Array<float>*)>(&FormattedFloatListSettingsController::set_values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "set_values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)(float, bool)>(&FormattedFloatListSettingsController::SetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FormattedFloatListSettingsController::*)(int&, int&)>(&FormattedFloatListSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)(int)>(&FormattedFloatListSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FormattedFloatListSettingsController::*)(int)>(&FormattedFloatListSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)()>(&FormattedFloatListSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsController::*)()>(&FormattedFloatListSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normal
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normalized
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized(GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FormattedFloatListSettingsValueController
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FormattedFloatListSettingsValueController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: FormattedFloatListSettingsValueController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsValueController.TextForValue
::Il2CppString* GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: FormattedFloatListSettingsValueController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FormattedFloatListSettingsValueController::*)(int&, int&)>(&FormattedFloatListSettingsValueController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsValueController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsValueController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsValueController::*)(int)>(&FormattedFloatListSettingsValueController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsValueController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsValueController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FormattedFloatListSettingsValueController::*)(int)>(&FormattedFloatListSettingsValueController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsValueController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FormattedFloatListSettingsValueController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsValueController::*)()>(&FormattedFloatListSettingsValueController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsValueController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormattedFloatListSettingsValueController::*)()>(&FormattedFloatListSettingsValueController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormattedFloatListSettingsValueController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsValueController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normal
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized(GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IncDecSettingsController
#include "GlobalNamespace/IncDecSettingsController.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IncDecSettingsController.set_enableDec
void GlobalNamespace::IncDecSettingsController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_enableInc
void GlobalNamespace::IncDecSettingsController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_text
void GlobalNamespace::IncDecSettingsController::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.Awake
void GlobalNamespace::IncDecSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.OnDestroy
void GlobalNamespace::IncDecSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.IncButtonPressed
void GlobalNamespace::IncDecSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.DecButtonPressed
void GlobalNamespace::IncDecSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecSettingsController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IncDecSettingsController::set_enableDec
// Il2CppName: set_enableDec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)(bool)>(&IncDecSettingsController::set_enableDec)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "set_enableDec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::set_enableInc
// Il2CppName: set_enableInc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)(bool)>(&IncDecSettingsController::set_enableInc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "set_enableInc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)(::Il2CppString*)>(&IncDecSettingsController::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::IncButtonPressed
// Il2CppName: IncButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::IncButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "IncButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::DecButtonPressed
// Il2CppName: DecButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::DecButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), "DecButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IncDecSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IncDecSettingsController::*)()>(&IncDecSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IncDecSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputFieldSettingsController
#include "GlobalNamespace/InputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InputFieldSettingsController.Awake
void GlobalNamespace::InputFieldSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnDestroy
void GlobalNamespace::InputFieldSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnEnable
void GlobalNamespace::InputFieldSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange(HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputFieldView)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputFieldView);
}
// Writing MetadataGetter for method: InputFieldSettingsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)()>(&InputFieldSettingsController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputFieldSettingsController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)()>(&InputFieldSettingsController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputFieldSettingsController::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)()>(&InputFieldSettingsController::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputFieldSettingsController::HandleInputFieldDidChange
// Il2CppName: HandleInputFieldDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)(HMUI::InputFieldView*)>(&InputFieldSettingsController::HandleInputFieldDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), "HandleInputFieldDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::InputFieldView*>()});
  }
};
// Writing MetadataGetter for method: InputFieldSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)()>(&InputFieldSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputFieldSettingsController::*)()>(&InputFieldSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputFieldSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IntListSettingsController
#include "GlobalNamespace/IntListSettingsController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IntListSettingsController.add_valueChangedEvent
void GlobalNamespace::IntListSettingsController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::add_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.remove_valueChangedEvent
void GlobalNamespace::IntListSettingsController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::remove_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.InitValues
void GlobalNamespace::IntListSettingsController::InitValues(int numberOfElements, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::InitValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfElements), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numberOfElements, index);
}
// Autogenerated method: IntListSettingsController.GetInitValues
bool GlobalNamespace::IntListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: IntListSettingsController.ApplyValue
void GlobalNamespace::IntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: IntListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::IntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: IntListSettingsController::add_valueChangedEvent
// Il2CppName: add_valueChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)(System::Action_1<int>*)>(&IntListSettingsController::add_valueChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "add_valueChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::remove_valueChangedEvent
// Il2CppName: remove_valueChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)(System::Action_1<int>*)>(&IntListSettingsController::remove_valueChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "remove_valueChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::InitValues
// Il2CppName: InitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)(int, int)>(&IntListSettingsController::InitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "InitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IntListSettingsController::*)(int&, int&)>(&IntListSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)(int)>(&IntListSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IntListSettingsController::*)(int)>(&IntListSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IntListSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)()>(&IntListSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IntListSettingsController::*)()>(&IntListSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IntListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListSettingsController
#include "GlobalNamespace/ListSettingsController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ListSettingsController.GetInitValues
bool GlobalNamespace::ListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: ListSettingsController.ApplyValue
void GlobalNamespace::ListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::ListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.OnEnable
void GlobalNamespace::ListSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.RefreshUI
void GlobalNamespace::ListSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.Refresh
void GlobalNamespace::ListSettingsController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, applyValue);
}
// Autogenerated method: ListSettingsController.IncButtonPressed
void GlobalNamespace::ListSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.DecButtonPressed
void GlobalNamespace::ListSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListSettingsController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ListSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ListSettingsController::*)(int&, int&)>(&ListSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: ListSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)(int)>(&ListSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ListSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ListSettingsController::*)(int)>(&ListSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ListSettingsController::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListSettingsController::RefreshUI
// Il2CppName: RefreshUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::RefreshUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "RefreshUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListSettingsController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)(bool)>(&ListSettingsController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ListSettingsController::IncButtonPressed
// Il2CppName: IncButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::IncButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "IncButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListSettingsController::DecButtonPressed
// Il2CppName: DecButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::DecButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), "DecButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListSettingsController::*)()>(&ListSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListSettingsController
#include "GlobalNamespace/NamedIntListSettingsController.hpp"
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListSettingsController.GetInitValues
bool GlobalNamespace::NamedIntListSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: NamedIntListSettingsController.ApplyValue
void GlobalNamespace::NamedIntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: NamedIntListSettingsController.TextForValue
::Il2CppString* GlobalNamespace::NamedIntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: NamedIntListSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NamedIntListSettingsController::*)(int&, int&)>(&NamedIntListSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: NamedIntListSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NamedIntListSettingsController::*)(int)>(&NamedIntListSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NamedIntListSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NamedIntListSettingsController::*)(int)>(&NamedIntListSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NamedIntListSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NamedIntListSettingsController::*)()>(&NamedIntListSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NamedIntListSettingsController::*)()>(&NamedIntListSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListSettingsController/TextValuePair.get_localizedText
::Il2CppString* GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NamedIntListSettingsController::TextValuePair::get_localizedText
// Il2CppName: get_localizedText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NamedIntListSettingsController::TextValuePair::*)()>(&NamedIntListSettingsController::TextValuePair::get_localizedText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController::TextValuePair*), "get_localizedText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NamedIntListSettingsController::TextValuePair::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NamedIntListSettingsController::TextValuePair::*)()>(&NamedIntListSettingsController::TextValuePair::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController::TextValuePair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NamedIntListSettingsController::TextValuePair::*)()>(&NamedIntListSettingsController::TextValuePair::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NamedIntListSettingsController::TextValuePair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PresetsSettingsController
#include "GlobalNamespace/PresetsSettingsController.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PresetsSettingsController.GetInitValues
bool GlobalNamespace::PresetsSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: PresetsSettingsController.ApplyValue
void GlobalNamespace::PresetsSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: PresetsSettingsController.TextForValue
::Il2CppString* GlobalNamespace::PresetsSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresetsSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: PresetsSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PresetsSettingsController::*)(int&, int&)>(&PresetsSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresetsSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: PresetsSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresetsSettingsController::*)(int)>(&PresetsSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresetsSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PresetsSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PresetsSettingsController::*)(int)>(&PresetsSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresetsSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PresetsSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresetsSettingsController::*)()>(&PresetsSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresetsSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresetsSettingsController::*)()>(&PresetsSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresetsSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SwitchSettingsController
#include "GlobalNamespace/SwitchSettingsController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SwitchSettingsController.GetInitValue
bool GlobalNamespace::SwitchSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::GetInitValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.ApplyValue
void GlobalNamespace::SwitchSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SwitchSettingsController.Awake
void GlobalNamespace::SwitchSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnDestroy
void GlobalNamespace::SwitchSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnEnable
void GlobalNamespace::SwitchSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.RefreshUI
void GlobalNamespace::SwitchSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.HandleToggleValueDidChange
void GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleToggleValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: SwitchSettingsController::GetInitValue
// Il2CppName: GetInitValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SwitchSettingsController::*)()>(&SwitchSettingsController::GetInitValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "GetInitValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)(bool)>(&SwitchSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::RefreshUI
// Il2CppName: RefreshUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::RefreshUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "RefreshUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::HandleToggleValueDidChange
// Il2CppName: HandleToggleValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)(bool)>(&SwitchSettingsController::HandleToggleValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), "HandleToggleValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SwitchSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SwitchSettingsController::*)()>(&SwitchSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SwitchSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UrlInputFieldSettingsController
#include "GlobalNamespace/UrlInputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UrlInputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange(HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputFieldView)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputFieldView);
}
// Writing MetadataGetter for method: UrlInputFieldSettingsController::HandleInputFieldDidChange
// Il2CppName: HandleInputFieldDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UrlInputFieldSettingsController::*)(HMUI::InputFieldView*)>(&UrlInputFieldSettingsController::HandleInputFieldDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UrlInputFieldSettingsController*), "HandleInputFieldDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::InputFieldView*>()});
  }
};
// Writing MetadataGetter for method: UrlInputFieldSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UrlInputFieldSettingsController::*)()>(&UrlInputFieldSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UrlInputFieldSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UrlInputFieldSettingsController::*)()>(&UrlInputFieldSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UrlInputFieldSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentEffectsFilterPresetDropdown
#include "GlobalNamespace/EnvironmentEffectsFilterPresetDropdown.hpp"
// Including type: EnvironmentEffectsFilterPresetDropdown/<>c
#include "GlobalNamespace/EnvironmentEffectsFilterPresetDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.get_lightReductionAmountData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*>* GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::get_lightReductionAmountData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::get_lightReductionAmountData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightReductionAmountData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.Start
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.OnDestroy
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.GetLightsReductionAmount
GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetLightsReductionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetLightsReductionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLightsReductionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentEffectsFilterPreset, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.SelectCellWithLightReductionAmount
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::SelectCellWithLightReductionAmount(GlobalNamespace::EnvironmentEffectsFilterPreset environmentEffectsFilterPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::SelectCellWithLightReductionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithLightReductionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentEffectsFilterPreset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, environmentEffectsFilterPreset);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.GetIdxForLightReductionAmount
int GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetIdxForLightReductionAmount(GlobalNamespace::EnvironmentEffectsFilterPreset environmentEffectsFilterPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetIdxForLightReductionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForLightReductionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentEffectsFilterPreset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, environmentEffectsFilterPreset);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::add_didSelectCellWithIdxEvent
// Il2CppName: add_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)(System::Action_1<int>*)>(&EnvironmentEffectsFilterPresetDropdown::add_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::remove_didSelectCellWithIdxEvent
// Il2CppName: remove_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)(System::Action_1<int>*)>(&EnvironmentEffectsFilterPresetDropdown::remove_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::get_lightReductionAmountData
// Il2CppName: get_lightReductionAmountData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*>* (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::get_lightReductionAmountData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "get_lightReductionAmountData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::GetLightsReductionAmount
// Il2CppName: GetLightsReductionAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EnvironmentEffectsFilterPreset (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::GetLightsReductionAmount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "GetLightsReductionAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::SelectCellWithLightReductionAmount
// Il2CppName: SelectCellWithLightReductionAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)(GlobalNamespace::EnvironmentEffectsFilterPreset)>(&EnvironmentEffectsFilterPresetDropdown::SelectCellWithLightReductionAmount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "SelectCellWithLightReductionAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentEffectsFilterPreset>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::GetIdxForLightReductionAmount
// Il2CppName: GetIdxForLightReductionAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EnvironmentEffectsFilterPresetDropdown::*)(GlobalNamespace::EnvironmentEffectsFilterPreset)>(&EnvironmentEffectsFilterPresetDropdown::GetIdxForLightReductionAmount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "GetIdxForLightReductionAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentEffectsFilterPreset>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx
// Il2CppName: HandleSimpleTextDropdownDidSelectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)(HMUI::DropdownWithTableView*, int)>(&EnvironmentEffectsFilterPresetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::DropdownWithTableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::*)()>(&EnvironmentEffectsFilterPresetDropdown::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentEffectsFilterPresetDropdown/<>c
#include "GlobalNamespace/EnvironmentEffectsFilterPresetDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly EnvironmentEffectsFilterPresetDropdown/<>c <>9
GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c* GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c*>("", "EnvironmentEffectsFilterPresetDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly EnvironmentEffectsFilterPresetDropdown/<>c <>9
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_set_$$9(GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPresetDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<EnvironmentEffectsFilterPreset,System.String>,System.String> <>9__7_0
System::Func_2<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*, ::Il2CppString*>*>("", "EnvironmentEffectsFilterPresetDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<EnvironmentEffectsFilterPreset,System.String>,System.String> <>9__7_0
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_set_$$9__7_0(System::Func_2<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPresetDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown/<>c..cctor
void GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentEffectsFilterPresetDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown/<>c.<Start>b__7_0
::Il2CppString* GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::$Start$b__7_0(System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::$$c::<Start>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EnvironmentEffectsFilterPresetDropdown::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::$$c::$Start$b__7_0
// Il2CppName: <Start>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (EnvironmentEffectsFilterPresetDropdown::$$c::*)(System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*)>(&EnvironmentEffectsFilterPresetDropdown::$$c::$Start$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown::$$c*), "<Start>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Tuple_2<GlobalNamespace::EnvironmentEffectsFilterPreset, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: EnvironmentEffectsFilterPresetDropdown::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::$$c::*)()>(&EnvironmentEffectsFilterPresetDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentEffectsFilterPresetDropdown::$$c::*)()>(&EnvironmentEffectsFilterPresetDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentEffectsFilterPresetDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LanguageSettingsController
#include "GlobalNamespace/LanguageSettingsController.hpp"
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LanguageSettingsController.GetInitValues
bool GlobalNamespace::LanguageSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: LanguageSettingsController.ApplyValue
void GlobalNamespace::LanguageSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: LanguageSettingsController.TextForValue
::Il2CppString* GlobalNamespace::LanguageSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: LanguageSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LanguageSettingsController::*)(int&, int&)>(&LanguageSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguageSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: LanguageSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LanguageSettingsController::*)(int)>(&LanguageSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguageSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LanguageSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LanguageSettingsController::*)(int)>(&LanguageSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguageSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LanguageSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LanguageSettingsController::*)()>(&LanguageSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguageSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LanguageSettingsController::*)()>(&LanguageSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguageSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJumpStartBeatOffsetDropdown
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown.hpp"
// Including type: NoteJumpStartBeatOffsetDropdown/<>c
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.get_noteJumpStartBeatOffsetData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<float, ::Il2CppString*>*>* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffsetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<float, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.Start
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.OnDestroy
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.GetSelectedOffset
float GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetSelectedOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetSelectedOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.SelectCellWithOffset
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.GetIdxForOffset
int GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetIdxForOffset(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetIdxForOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, offset);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent
// Il2CppName: add_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)(System::Action_1<int>*)>(&NoteJumpStartBeatOffsetDropdown::add_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent
// Il2CppName: remove_didSelectCellWithIdxEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)(System::Action_1<int>*)>(&NoteJumpStartBeatOffsetDropdown::remove_didSelectCellWithIdxEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData
// Il2CppName: get_noteJumpStartBeatOffsetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<float, ::Il2CppString*>*>* (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::get_noteJumpStartBeatOffsetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "get_noteJumpStartBeatOffsetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::GetSelectedOffset
// Il2CppName: GetSelectedOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::GetSelectedOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "GetSelectedOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset
// Il2CppName: SelectCellWithOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)(float)>(&NoteJumpStartBeatOffsetDropdown::SelectCellWithOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "SelectCellWithOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::GetIdxForOffset
// Il2CppName: GetIdxForOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NoteJumpStartBeatOffsetDropdown::*)(float)>(&NoteJumpStartBeatOffsetDropdown::GetIdxForOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "GetIdxForOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx
// Il2CppName: HandleSimpleTextDropdownDidSelectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)(HMUI::DropdownWithTableView*, int)>(&NoteJumpStartBeatOffsetDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::DropdownWithTableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::*)()>(&NoteJumpStartBeatOffsetDropdown::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJumpStartBeatOffsetDropdown/<>c
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NoteJumpStartBeatOffsetDropdown/<>c <>9
GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c*>("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NoteJumpStartBeatOffsetDropdown/<>c <>9
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9(GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<System.Single,System.String>,System.String> <>9__7_0
System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>*>("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<System.Single,System.String>,System.String> <>9__7_0
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9__7_0(System::Func_2<System::Tuple_2<float, ::Il2CppString*>*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "NoteJumpStartBeatOffsetDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown/<>c..cctor
void GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteJumpStartBeatOffsetDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NoteJumpStartBeatOffsetDropdown/<>c.<Start>b__7_0
::Il2CppString* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::$Start$b__7_0(System::Tuple_2<float, ::Il2CppString*>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartBeatOffsetDropdown::$$c::<Start>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NoteJumpStartBeatOffsetDropdown::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::$$c::$Start$b__7_0
// Il2CppName: <Start>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NoteJumpStartBeatOffsetDropdown::$$c::*)(System::Tuple_2<float, ::Il2CppString*>*)>(&NoteJumpStartBeatOffsetDropdown::$$c::$Start$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown::$$c*), "<Start>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Tuple_2<float, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: NoteJumpStartBeatOffsetDropdown::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::$$c::*)()>(&NoteJumpStartBeatOffsetDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NoteJumpStartBeatOffsetDropdown::$$c::*)()>(&NoteJumpStartBeatOffsetDropdown::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NoteJumpStartBeatOffsetDropdown::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeightSettingsController
#include "GlobalNamespace/PlayerHeightSettingsController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerHeightSettingsController.add_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.get_value
float GlobalNamespace::PlayerHeightSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.Awake
void GlobalNamespace::PlayerHeightSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.Init
void GlobalNamespace::PlayerHeightSettingsController::Init(float playerHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerHeight)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerHeight);
}
// Autogenerated method: PlayerHeightSettingsController.AutoSetHeight
void GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.RefreshUI
void GlobalNamespace::PlayerHeightSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlayerHeightSettingsController::add_valueDidChangeEvent
// Il2CppName: add_valueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)(System::Action_1<float>*)>(&PlayerHeightSettingsController::add_valueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "add_valueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>()});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::remove_valueDidChangeEvent
// Il2CppName: remove_valueDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)(System::Action_1<float>*)>(&PlayerHeightSettingsController::remove_valueDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "remove_valueDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>()});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::get_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)(float)>(&PlayerHeightSettingsController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::AutoSetHeight
// Il2CppName: AutoSetHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::AutoSetHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "AutoSetHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::RefreshUI
// Il2CppName: RefreshUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::RefreshUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), "RefreshUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerHeightSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerHeightSettingsController::*)()>(&PlayerHeightSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerHeightSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PresentServerSettingsAfterNClicks
#include "GlobalNamespace/PresentServerSettingsAfterNClicks.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: SettingsFlowCoordinator
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PresentServerSettingsAfterNClicks.OnEnable
void GlobalNamespace::PresentServerSettingsAfterNClicks::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresentServerSettingsAfterNClicks::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PresentServerSettingsAfterNClicks.OnDisable
void GlobalNamespace::PresentServerSettingsAfterNClicks::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresentServerSettingsAfterNClicks::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PresentServerSettingsAfterNClicks.<OnEnable>b__6_0
void GlobalNamespace::PresentServerSettingsAfterNClicks::$OnEnable$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PresentServerSettingsAfterNClicks::<OnEnable>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PresentServerSettingsAfterNClicks::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresentServerSettingsAfterNClicks::*)()>(&PresentServerSettingsAfterNClicks::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresentServerSettingsAfterNClicks*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PresentServerSettingsAfterNClicks::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresentServerSettingsAfterNClicks::*)()>(&PresentServerSettingsAfterNClicks::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresentServerSettingsAfterNClicks*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PresentServerSettingsAfterNClicks::$OnEnable$b__6_0
// Il2CppName: <OnEnable>b__6_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresentServerSettingsAfterNClicks::*)()>(&PresentServerSettingsAfterNClicks::$OnEnable$b__6_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresentServerSettingsAfterNClicks*), "<OnEnable>b__6_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PresentServerSettingsAfterNClicks::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresentServerSettingsAfterNClicks::*)()>(&PresentServerSettingsAfterNClicks::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresentServerSettingsAfterNClicks*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PresentServerSettingsAfterNClicks::*)()>(&PresentServerSettingsAfterNClicks::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PresentServerSettingsAfterNClicks*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SmoothCameraSmoothnessSettingsController
#include "GlobalNamespace/SmoothCameraSmoothnessSettingsController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SmoothCameraSmoothnessSettingsController.GetInitValues
bool GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.ApplyValue
void GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.TextForValue
::Il2CppString* GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: SmoothCameraSmoothnessSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SmoothCameraSmoothnessSettingsController::*)(int&, int&)>(&SmoothCameraSmoothnessSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SmoothCameraSmoothnessSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: SmoothCameraSmoothnessSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SmoothCameraSmoothnessSettingsController::*)(int)>(&SmoothCameraSmoothnessSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SmoothCameraSmoothnessSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SmoothCameraSmoothnessSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SmoothCameraSmoothnessSettingsController::*)(int)>(&SmoothCameraSmoothnessSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SmoothCameraSmoothnessSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SmoothCameraSmoothnessSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SmoothCameraSmoothnessSettingsController::*)()>(&SmoothCameraSmoothnessSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SmoothCameraSmoothnessSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SmoothCameraSmoothnessSettingsController::*)()>(&SmoothCameraSmoothnessSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SmoothCameraSmoothnessSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: WindowResolutionSettingsController
#include "GlobalNamespace/WindowResolutionSettingsController.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WindowResolutionSettingsController.GetInitValues
bool GlobalNamespace::WindowResolutionSettingsController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: WindowResolutionSettingsController.ApplyValue
void GlobalNamespace::WindowResolutionSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: WindowResolutionSettingsController.TextForValue
::Il2CppString* GlobalNamespace::WindowResolutionSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WindowResolutionSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: WindowResolutionSettingsController::GetInitValues
// Il2CppName: GetInitValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (WindowResolutionSettingsController::*)(int&, int&)>(&WindowResolutionSettingsController::GetInitValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowResolutionSettingsController*), "GetInitValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: WindowResolutionSettingsController::ApplyValue
// Il2CppName: ApplyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowResolutionSettingsController::*)(int)>(&WindowResolutionSettingsController::ApplyValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowResolutionSettingsController*), "ApplyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WindowResolutionSettingsController::TextForValue
// Il2CppName: TextForValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (WindowResolutionSettingsController::*)(int)>(&WindowResolutionSettingsController::TextForValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowResolutionSettingsController*), "TextForValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: WindowResolutionSettingsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowResolutionSettingsController::*)()>(&WindowResolutionSettingsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowResolutionSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowResolutionSettingsController::*)()>(&WindowResolutionSettingsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowResolutionSettingsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioLatencyViewController
#include "GlobalNamespace/AudioLatencyViewController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioLatencyViewController.SliderValueDidChange
void GlobalNamespace::AudioLatencyViewController::SliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::SliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: AudioLatencyViewController.HandleOverrideAudioLatencyToggleValueChanged
void GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideAudioLatencyToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AudioLatencyViewController.RefreshVisuals
void GlobalNamespace::AudioLatencyViewController::RefreshVisuals(bool overrideAudioLatencyIsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideAudioLatencyIsEnabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrideAudioLatencyIsEnabled);
}
// Autogenerated method: AudioLatencyViewController.DidActivate
void GlobalNamespace::AudioLatencyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: AudioLatencyViewController.DidDeactivate
void GlobalNamespace::AudioLatencyViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: AudioLatencyViewController.OnDestroy
void GlobalNamespace::AudioLatencyViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AudioLatencyViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AudioLatencyViewController::SliderValueDidChange
// Il2CppName: SliderValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)(HMUI::RangeValuesTextSlider*, float)>(&AudioLatencyViewController::SliderValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "SliderValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::RangeValuesTextSlider*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged
// Il2CppName: HandleOverrideAudioLatencyToggleValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)(bool)>(&AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "HandleOverrideAudioLatencyToggleValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::RefreshVisuals
// Il2CppName: RefreshVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)(bool)>(&AudioLatencyViewController::RefreshVisuals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "RefreshVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)(bool, bool, bool)>(&AudioLatencyViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)(bool, bool)>(&AudioLatencyViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)()>(&AudioLatencyViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AudioLatencyViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)()>(&AudioLatencyViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AudioLatencyViewController::*)()>(&AudioLatencyViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AudioLatencyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarEditHistory
#include "GlobalNamespace/AvatarEditHistory.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Menu.ViewControllers.EditAvatarHistorySnapshot
#include "Menu/ViewControllers/EditAvatarHistorySnapshot.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarEditHistory.get_undoAvailable
bool GlobalNamespace::AvatarEditHistory::get_undoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_undoAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_redoAvailable
bool GlobalNamespace::AvatarEditHistory::get_redoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_redoAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_redoAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_currentSnapShot
Menu::ViewControllers::EditAvatarHistorySnapshot* GlobalNamespace::AvatarEditHistory::get_currentSnapShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_currentSnapShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSnapShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Menu::ViewControllers::EditAvatarHistorySnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_lastEditedPart
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::AvatarEditHistory::get_lastEditedPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::get_lastEditedPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastEditedPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EditAvatarViewController::AvatarEditPart, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Clear
void GlobalNamespace::AvatarEditHistory::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Undo
void GlobalNamespace::AvatarEditHistory::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Redo
void GlobalNamespace::AvatarEditHistory::Redo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::Redo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.UpdateEditHistory
void GlobalNamespace::AvatarEditHistory::UpdateEditHistory(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarEditHistory::UpdateEditHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEditHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData), ::il2cpp_utils::ExtractType(avatarEditPart)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, avatarData, avatarEditPart);
}
// Writing MetadataGetter for method: AvatarEditHistory::get_undoAvailable
// Il2CppName: get_undoAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AvatarEditHistory::*)()>(&AvatarEditHistory::get_undoAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "get_undoAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::get_redoAvailable
// Il2CppName: get_redoAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AvatarEditHistory::*)()>(&AvatarEditHistory::get_redoAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "get_redoAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::get_currentSnapShot
// Il2CppName: get_currentSnapShot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Menu::ViewControllers::EditAvatarHistorySnapshot* (AvatarEditHistory::*)()>(&AvatarEditHistory::get_currentSnapShot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "get_currentSnapShot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::get_lastEditedPart
// Il2CppName: get_lastEditedPart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EditAvatarViewController::AvatarEditPart (AvatarEditHistory::*)()>(&AvatarEditHistory::get_lastEditedPart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "get_lastEditedPart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)()>(&AvatarEditHistory::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::Undo
// Il2CppName: Undo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)()>(&AvatarEditHistory::Undo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "Undo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::Redo
// Il2CppName: Redo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)()>(&AvatarEditHistory::Redo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "Redo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::UpdateEditHistory
// Il2CppName: UpdateEditHistory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)(GlobalNamespace::AvatarData*, GlobalNamespace::EditAvatarViewController::AvatarEditPart)>(&AvatarEditHistory::UpdateEditHistory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), "UpdateEditHistory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EditAvatarViewController::AvatarEditPart>()});
  }
};
// Writing MetadataGetter for method: AvatarEditHistory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)()>(&AvatarEditHistory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AvatarEditHistory::*)()>(&AvatarEditHistory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AvatarEditHistory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.Awake
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.SetData
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData(::Array<GlobalNamespace::IDifficultyBeatmapSet*>* difficultyBeatmapSets, GlobalNamespace::BeatmapCharacteristicSO* selectedBeatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmapSets), ::il2cpp_utils::ExtractType(selectedBeatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmapSets, selectedBeatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent
// Il2CppName: add_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent
// Il2CppName: remove_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic
// Il2CppName: get_selectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (BeatmapCharacteristicSegmentedControlController::*)()>(&BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)()>(&BeatmapCharacteristicSegmentedControlController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)()>(&BeatmapCharacteristicSegmentedControlController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)(::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, GlobalNamespace::BeatmapCharacteristicSO*)>(&BeatmapCharacteristicSegmentedControlController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell
// Il2CppName: HandleDifficultySegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)(HMUI::SegmentedControl*, int)>(&BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)()>(&BeatmapCharacteristicSegmentedControlController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::*)()>(&BeatmapCharacteristicSegmentedControlController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9(GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0(System::Comparison_1<GlobalNamespace::IDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0", value)));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c..cctor
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapCharacteristicSegmentedControlController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c.<SetData>b__10_0
int GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::$SetData$b__10_0(GlobalNamespace::IDifficultyBeatmapSet* a, GlobalNamespace::IDifficultyBeatmapSet* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::<SetData>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BeatmapCharacteristicSegmentedControlController::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::$$c::$SetData$b__10_0
// Il2CppName: <SetData>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeatmapCharacteristicSegmentedControlController::$$c::*)(GlobalNamespace::IDifficultyBeatmapSet*, GlobalNamespace::IDifficultyBeatmapSet*)>(&BeatmapCharacteristicSegmentedControlController::$$c::$SetData$b__10_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController::$$c*), "<SetData>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmapSet*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmapSet*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSegmentedControlController::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::$$c::*)()>(&BeatmapCharacteristicSegmentedControlController::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSegmentedControlController::$$c::*)()>(&BeatmapCharacteristicSegmentedControlController::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSegmentedControlController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSelectionViewController
#include "GlobalNamespace/BeatmapCharacteristicSelectionViewController.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicSelectionViewController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.Init
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.HandleBeatmapCharacteristicSegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidActivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidDeactivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent
// Il2CppName: add_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent
// Il2CppName: remove_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)(System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapCharacteristicSelectionViewController*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic
// Il2CppName: get_selectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (BeatmapCharacteristicSelectionViewController::*)()>(&BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)()>(&BeatmapCharacteristicSelectionViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell
// Il2CppName: HandleBeatmapCharacteristicSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)(HMUI::SegmentedControl*, int)>(&BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "HandleBeatmapCharacteristicSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)(bool, bool, bool)>(&BeatmapCharacteristicSelectionViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)(bool, bool)>(&BeatmapCharacteristicSelectionViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicSelectionViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)()>(&BeatmapCharacteristicSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicSelectionViewController::*)()>(&BeatmapCharacteristicSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultySegmentedControlController.add_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.remove_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.get_selectedDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.Awake
void GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.GetClosestDifficultyIndex
int GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex(GlobalNamespace::BeatmapDifficulty searchDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestDifficultyIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchDifficulty)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, searchDifficulty);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.SetData
void GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps, GlobalNamespace::BeatmapDifficulty selectedDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps), ::il2cpp_utils::ExtractType(selectedDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps, selectedDifficulty);
}
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent
// Il2CppName: add_didSelectDifficultyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>*)>(&BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "add_didSelectDifficultyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent
// Il2CppName: remove_didSelectDifficultyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)(System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>*)>(&BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "remove_didSelectDifficultyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::BeatmapDifficultySegmentedControlController*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::get_selectedDifficulty
// Il2CppName: get_selectedDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapDifficulty (BeatmapDifficultySegmentedControlController::*)()>(&BeatmapDifficultySegmentedControlController::get_selectedDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "get_selectedDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)()>(&BeatmapDifficultySegmentedControlController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)()>(&BeatmapDifficultySegmentedControlController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex
// Il2CppName: GetClosestDifficultyIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeatmapDifficultySegmentedControlController::*)(GlobalNamespace::BeatmapDifficulty)>(&BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "GetClosestDifficultyIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell
// Il2CppName: HandleDifficultySegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)(HMUI::SegmentedControl*, int)>(&BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)(::Array<GlobalNamespace::IDifficultyBeatmap*>*, GlobalNamespace::BeatmapDifficulty)>(&BeatmapDifficultySegmentedControlController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IDifficultyBeatmap*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: BeatmapDifficultySegmentedControlController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)()>(&BeatmapDifficultySegmentedControlController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapDifficultySegmentedControlController::*)()>(&BeatmapDifficultySegmentedControlController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapDifficultySegmentedControlController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController
#include "GlobalNamespace/CentralLeaderboardViewController.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__36
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__36.hpp"
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__37
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__37.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CentralLeaderboardViewController.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.get_hasScoresData
bool GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasScoresData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPressRefreshButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleGameplaySetupViewControllerDidChangeGameplayModifiers
void GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameplaySetupViewControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandlelatformServicesAvailabilityInfoChanged
void GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged(OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlelatformServicesAvailabilityInfoChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(availabilityInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, availabilityInfo);
}
// Autogenerated method: CentralLeaderboardViewController.HanldeLeaderboardTypeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell(HMUI::SegmentedControl* control, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HanldeLeaderboardTypeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, control, index);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScoreForLeaderboardDidUpload
void GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload(::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreForLeaderboardDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: CentralLeaderboardViewController.Refresh
void GlobalNamespace::CentralLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.RefreshDelayed
System::Collections::IEnumerator* GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.LoadScoresAsync
void GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScoresAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.ClearContent
void GlobalNamespace::CentralLeaderboardViewController::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.<DidActivate>b__26_0
void GlobalNamespace::CentralLeaderboardViewController::$DidActivate$b__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::<DidActivate>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.SetData
void GlobalNamespace::CentralLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: CentralLeaderboardViewController.DidActivate
void GlobalNamespace::CentralLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: CentralLeaderboardViewController.DidDeactivate
void GlobalNamespace::CentralLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: CentralLeaderboardViewController.OnDestroy
void GlobalNamespace::CentralLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CentralLeaderboardViewController::get_gameplayModifiers
// Il2CppName: get_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::get_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::get_hasScoresData
// Il2CppName: get_hasScoresData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::get_hasScoresData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "get_hasScoresData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HandleDidPressRefreshButton
// Il2CppName: HandleDidPressRefreshButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::HandleDidPressRefreshButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HandleDidPressRefreshButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers
// Il2CppName: HandleGameplaySetupViewControllerDidChangeGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HandleGameplaySetupViewControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged
// Il2CppName: HandlelatformServicesAvailabilityInfoChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(OnlineServices::PlatformServicesAvailabilityInfo*)>(&CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HandlelatformServicesAvailabilityInfoChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::PlatformServicesAvailabilityInfo*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell
// Il2CppName: HanldeLeaderboardTypeSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(HMUI::SegmentedControl*, int)>(&CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HanldeLeaderboardTypeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell
// Il2CppName: HandleScopeSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(HMUI::SegmentedControl*, int)>(&CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload
// Il2CppName: HandleScoreForLeaderboardDidUpload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(::Il2CppString*)>(&CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "HandleScoreForLeaderboardDidUpload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(bool, bool)>(&CentralLeaderboardViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::RefreshDelayed
// Il2CppName: RefreshDelayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CentralLeaderboardViewController::*)(bool, bool)>(&CentralLeaderboardViewController::RefreshDelayed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "RefreshDelayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::LoadScoresAsync
// Il2CppName: LoadScoresAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::LoadScoresAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "LoadScoresAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::ClearContent
// Il2CppName: ClearContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::ClearContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "ClearContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$DidActivate$b__26_0
// Il2CppName: <DidActivate>b__26_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::$DidActivate$b__26_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "<DidActivate>b__26_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(GlobalNamespace::IDifficultyBeatmap*)>(&CentralLeaderboardViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(bool, bool, bool)>(&CentralLeaderboardViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)(bool, bool)>(&CentralLeaderboardViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::*)()>(&CentralLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CentralLeaderboardViewController::LeaderboardPanel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::LeaderboardPanel::*)(::Il2CppString*, ::Il2CppString*, bool)>(&CentralLeaderboardViewController::LeaderboardPanel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::LeaderboardPanel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::LeaderboardPanel::*)(::Il2CppString*, ::Il2CppString*, bool)>(&CentralLeaderboardViewController::LeaderboardPanel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::LeaderboardPanel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CentralLeaderboardViewController::ScoreScopeInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::ScoreScopeInfo::*)(OnlineServices::ScoresScope, UnityEngine::Sprite*, ::Il2CppString*)>(&CentralLeaderboardViewController::ScoreScopeInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::ScoreScopeInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::ScoreScopeInfo::*)(OnlineServices::ScoresScope, UnityEngine::Sprite*, ::Il2CppString*)>(&CentralLeaderboardViewController::ScoreScopeInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::ScoreScopeInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: HMUI.IconSegmentedControl/DataItem
#include "HMUI/IconSegmentedControl_DataItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CentralLeaderboardViewController/<>c <>9
GlobalNamespace::CentralLeaderboardViewController::$$c* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::CentralLeaderboardViewController::$$c*>("", "CentralLeaderboardViewController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CentralLeaderboardViewController/<>c <>9
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9(GlobalNamespace::CentralLeaderboardViewController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<CentralLeaderboardViewController/LeaderboardPanel,System.String> <>9__26_1
System::Func_2<GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::Il2CppString*>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::Il2CppString*>*>("", "CentralLeaderboardViewController/<>c", "<>9__26_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<CentralLeaderboardViewController/LeaderboardPanel,System.String> <>9__26_1
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_1(System::Func_2<GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__26_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<CentralLeaderboardViewController/ScoreScopeInfo,HMUI.IconSegmentedControl/DataItem> <>9__26_2
System::Func_2<GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, HMUI::IconSegmentedControl::DataItem*>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, HMUI::IconSegmentedControl::DataItem*>*>("", "CentralLeaderboardViewController/<>c", "<>9__26_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<CentralLeaderboardViewController/ScoreScopeInfo,HMUI.IconSegmentedControl/DataItem> <>9__26_2
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_2(System::Func_2<GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, HMUI::IconSegmentedControl::DataItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__26_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<GameplayModifierParamsSO,System.String> <>9__37_0
System::Func_2<GlobalNamespace::GameplayModifierParamsSO*, ::Il2CppString*>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__37_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__37_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::GameplayModifierParamsSO*, ::Il2CppString*>*>("", "CentralLeaderboardViewController/<>c", "<>9__37_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<GameplayModifierParamsSO,System.String> <>9__37_0
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__37_0(System::Func_2<GlobalNamespace::GameplayModifierParamsSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__37_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__37_0", value)));
}
// Autogenerated method: CentralLeaderboardViewController/<>c..cctor
void GlobalNamespace::CentralLeaderboardViewController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CentralLeaderboardViewController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<DidActivate>b__26_1
::Il2CppString* GlobalNamespace::CentralLeaderboardViewController::$$c::$DidActivate$b__26_1(GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::<DidActivate>b__26_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<DidActivate>b__26_2
HMUI::IconSegmentedControl::DataItem* GlobalNamespace::CentralLeaderboardViewController::$$c::$DidActivate$b__26_2(GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::<DidActivate>b__26_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::IconSegmentedControl::DataItem*, false>(this, ___internal__method, x);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<LoadScoresAsync>b__37_0
::Il2CppString* GlobalNamespace::CentralLeaderboardViewController::$$c::$LoadScoresAsync$b__37_0(GlobalNamespace::GameplayModifierParamsSO* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$$c::<LoadScoresAsync>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadScoresAsync>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, m);
}
// Writing MetadataGetter for method: CentralLeaderboardViewController::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CentralLeaderboardViewController::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$$c::$DidActivate$b__26_1
// Il2CppName: <DidActivate>b__26_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CentralLeaderboardViewController::$$c::*)(GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*)>(&CentralLeaderboardViewController::$$c::$DidActivate$b__26_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), "<DidActivate>b__26_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$$c::$DidActivate$b__26_2
// Il2CppName: <DidActivate>b__26_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::IconSegmentedControl::DataItem* (CentralLeaderboardViewController::$$c::*)(GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*)>(&CentralLeaderboardViewController::$$c::$DidActivate$b__26_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), "<DidActivate>b__26_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$$c::$LoadScoresAsync$b__37_0
// Il2CppName: <LoadScoresAsync>b__37_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CentralLeaderboardViewController::$$c::*)(GlobalNamespace::GameplayModifierParamsSO*)>(&CentralLeaderboardViewController::$$c::$LoadScoresAsync$b__37_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), "<LoadScoresAsync>b__37_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifierParamsSO*>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$$c::*)()>(&CentralLeaderboardViewController::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$$c::*)()>(&CentralLeaderboardViewController::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__36
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__36.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.IDisposable.Dispose
void GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.MoveNext
bool GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.IEnumerator.Reset
void GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)(int)>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)(int)>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)()>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)()>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)()>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)()>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CentralLeaderboardViewController::$RefreshDelayed$d__36::*)()>(&CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$RefreshDelayed$d__36*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__37
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__37.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CentralLeaderboardViewController/<LoadScoresAsync>d__37.MoveNext
void GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<LoadScoresAsync>d__37.SetStateMachine
void GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$LoadScoresAsync$d__37::*)()>(&CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$LoadScoresAsync$d__37), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CentralLeaderboardViewController::$LoadScoresAsync$d__37::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CentralLeaderboardViewController::$LoadScoresAsync$d__37), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionErrorDialogViewController
#include "GlobalNamespace/ConnectionErrorDialogViewController.hpp"
// Including type: ConnectionErrorDialogViewController/<>c__DisplayClass0_0
#include "GlobalNamespace/ConnectionErrorDialogViewController_--c__DisplayClass0_0.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ConnectionErrorDialogViewController.Init
void GlobalNamespace::ConnectionErrorDialogViewController::Init(GlobalNamespace::DisconnectedReason reason, System::Action* buttonAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionErrorDialogViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason), ::il2cpp_utils::ExtractType(buttonAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason, buttonAction);
}
// Writing MetadataGetter for method: ConnectionErrorDialogViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::*)(GlobalNamespace::DisconnectedReason, System::Action*)>(&ConnectionErrorDialogViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::DisconnectedReason>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ConnectionErrorDialogViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::*)()>(&ConnectionErrorDialogViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::*)()>(&ConnectionErrorDialogViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionErrorDialogViewController/<>c__DisplayClass0_0
#include "GlobalNamespace/ConnectionErrorDialogViewController_--c__DisplayClass0_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ConnectionErrorDialogViewController/<>c__DisplayClass0_0.<Init>b__0
void GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::$Init$b__0(int btnIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::<Init>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, btnIdx);
}
// Writing MetadataGetter for method: ConnectionErrorDialogViewController::$$c__DisplayClass0_0::$Init$b__0
// Il2CppName: <Init>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::$$c__DisplayClass0_0::*)(int)>(&ConnectionErrorDialogViewController::$$c__DisplayClass0_0::$Init$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController::$$c__DisplayClass0_0*), "<Init>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ConnectionErrorDialogViewController::$$c__DisplayClass0_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::$$c__DisplayClass0_0::*)()>(&ConnectionErrorDialogViewController::$$c__DisplayClass0_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController::$$c__DisplayClass0_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionErrorDialogViewController::$$c__DisplayClass0_0::*)()>(&ConnectionErrorDialogViewController::$$c__DisplayClass0_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionErrorDialogViewController::$$c__DisplayClass0_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ControllersTransformSettingsViewController
#include "GlobalNamespace/ControllersTransformSettingsViewController.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPositionStep
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kPositionStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPositionStep
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kPositionStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPositionMul
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kPositionMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPositionMul
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kPositionMul", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRotationStep
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_get_kRotationStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kRotationStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRotationStep
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kRotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::_set_kRotationStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kRotationStep", value));
}
// Autogenerated method: ControllersTransformSettingsViewController.HandlePositionSliderValueDidChange
void GlobalNamespace::ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePositionSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: ControllersTransformSettingsViewController.HandleRotationSliderValueDidChange
void GlobalNamespace::ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRotationSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: ControllersTransformSettingsViewController.DidActivate
void GlobalNamespace::ControllersTransformSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ControllersTransformSettingsViewController.OnDestroy
void GlobalNamespace::ControllersTransformSettingsViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ControllersTransformSettingsViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange
// Il2CppName: HandlePositionSliderValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)(HMUI::RangeValuesTextSlider*, float)>(&ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), "HandlePositionSliderValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::RangeValuesTextSlider*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange
// Il2CppName: HandleRotationSliderValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)(HMUI::RangeValuesTextSlider*, float)>(&ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), "HandleRotationSliderValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::RangeValuesTextSlider*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ControllersTransformSettingsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)(bool, bool, bool)>(&ControllersTransformSettingsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ControllersTransformSettingsViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)()>(&ControllersTransformSettingsViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ControllersTransformSettingsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)()>(&ControllersTransformSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ControllersTransformSettingsViewController::*)()>(&ControllersTransformSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ControllersTransformSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CrashInfoViewController
#include "GlobalNamespace/CrashInfoViewController.hpp"
// Including type: CrashManagerSO
#include "GlobalNamespace/CrashManagerSO.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CrashInfoViewController.Start
void GlobalNamespace::CrashInfoViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashInfoViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CrashInfoViewController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CrashInfoViewController::*)()>(&CrashInfoViewController::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CrashInfoViewController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CrashInfoViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CrashInfoViewController::*)()>(&CrashInfoViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CrashInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CrashInfoViewController::*)()>(&CrashInfoViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CrashInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EditAvatarViewController
#include "GlobalNamespace/EditAvatarViewController.hpp"
// Including type: AvatarEditHistory
#include "GlobalNamespace/AvatarEditHistory.hpp"
// Including type: EditAvatarViewController/<>c__DisplayClass56_0
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass56_0.hpp"
// Including type: EditAvatarViewController/<>c__DisplayClass57_0`1
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass57_0_1.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
// Including type: AvatarPartCollection`1
#include "GlobalNamespace/AvatarPartCollection_1.hpp"
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ValueChangedBinder`1
#include "HMUI/ValueChangedBinder_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IAvatarPart
#include "GlobalNamespace/IAvatarPart.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xE24814
// Autogenerated static field getter
// Get static field: static private System.String kEditApplyButtonLocalizationKey
::Il2CppString* GlobalNamespace::EditAvatarViewController::_get_kEditApplyButtonLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::_get_kEditApplyButtonLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "EditAvatarViewController", "kEditApplyButtonLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEditApplyButtonLocalizationKey
void GlobalNamespace::EditAvatarViewController::_set_kEditApplyButtonLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::_set_kEditApplyButtonLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController", "kEditApplyButtonLocalizationKey", value));
}
// [LocalizationKeyAttribute] Offset: 0xE24824
// Autogenerated static field getter
// Get static field: static private System.String kCreateApplyButtonLocalizationKey
::Il2CppString* GlobalNamespace::EditAvatarViewController::_get_kCreateApplyButtonLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::_get_kCreateApplyButtonLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "EditAvatarViewController", "kCreateApplyButtonLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCreateApplyButtonLocalizationKey
void GlobalNamespace::EditAvatarViewController::_set_kCreateApplyButtonLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::_set_kCreateApplyButtonLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController", "kCreateApplyButtonLocalizationKey", value));
}
// Autogenerated method: EditAvatarViewController.add_didFinishEvent
void GlobalNamespace::EditAvatarViewController::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didFinishEvent
void GlobalNamespace::EditAvatarViewController::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.add_didRequestColorChangeEvent
void GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didRequestColorChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didRequestColorChangeEvent
void GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didRequestColorChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.add_didChangedAvatarPartEvent
void GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangedAvatarPartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didChangedAvatarPartEvent
void GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangedAvatarPartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.Setup
void GlobalNamespace::EditAvatarViewController::Setup(bool showAsCreateView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showAsCreateView)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showAsCreateView);
}
// Autogenerated method: EditAvatarViewController.InitHistory
void GlobalNamespace::EditAvatarViewController::InitHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::InitHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.DiscardLastEdit
void GlobalNamespace::EditAvatarViewController::DiscardLastEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::DiscardLastEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardLastEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.Update
void GlobalNamespace::EditAvatarViewController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.RefreshUi
void GlobalNamespace::EditAvatarViewController::RefreshUi() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::RefreshUi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.UpdateButtons
void GlobalNamespace::EditAvatarViewController::UpdateButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::UpdateButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleSkinColorDidChanged
void GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSkinColorDidChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.EyesValuePickerHasChanged
void GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged(::Il2CppString* eyesId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EyesValuePickerHasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyesId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eyesId);
}
// Autogenerated method: EditAvatarViewController.HandleUndoButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUndoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRedoButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRedoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeAllButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeModelsButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeModelsButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeColorsButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeColorsButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.ReportAllChangedAndUpdate
void GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportAllChangedAndUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleApplyButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.SaveAvatarAndFinish
void GlobalNamespace::EditAvatarViewController::SaveAvatarAndFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::SaveAvatarAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveAvatarAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleCancelButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.CreateColorValuePairsForAvatarPartCollection
::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection(::Array<GlobalNamespace::SkinColorSO*>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateColorValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>*, false>(this, ___internal__method, colors);
}
// Autogenerated method: EditAvatarViewController.SetupColorButton
void GlobalNamespace::EditAvatarViewController::SetupColorButton(UnityEngine::UI::Button* button, System::Action_1<UnityEngine::Color>* colorSetter, System::Func_1<UnityEngine::Color>* currentColor, GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::SetupColorButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupColorButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(colorSetter), ::il2cpp_utils::ExtractType(currentColor), ::il2cpp_utils::ExtractType(avatarEditPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, button, colorSetter, currentColor, avatarEditPart, uvSegment);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_0
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_1
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_2
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_2(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_3
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_4
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_4(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_5
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_6
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_6(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_7
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_8
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_8(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_9
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_10
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_10(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_11
UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_12
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_12(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_13
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_13(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__40_14
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__40_14(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::<DidActivate>b__40_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__40_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.DidActivate
void GlobalNamespace::EditAvatarViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: EditAvatarViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action*)>(&EditAvatarViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action*)>(&EditAvatarViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::add_didRequestColorChangeEvent
// Il2CppName: add_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&EditAvatarViewController::add_didRequestColorChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didRequestColorChangeEvent
// Il2CppName: remove_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&EditAvatarViewController::remove_didRequestColorChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<System::Action_1<UnityEngine::Color>*, UnityEngine::Color, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::add_didChangedAvatarPartEvent
// Il2CppName: add_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&EditAvatarViewController::add_didChangedAvatarPartEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "add_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::remove_didChangedAvatarPartEvent
// Il2CppName: remove_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&EditAvatarViewController::remove_didChangedAvatarPartEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "remove_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::EditAvatarViewController::AvatarEditPart>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(bool)>(&EditAvatarViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::InitHistory
// Il2CppName: InitHistory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::InitHistory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "InitHistory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::DiscardLastEdit
// Il2CppName: DiscardLastEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::DiscardLastEdit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "DiscardLastEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::RefreshUi
// Il2CppName: RefreshUi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::RefreshUi)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "RefreshUi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::UpdateButtons
// Il2CppName: UpdateButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::UpdateButtons)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "UpdateButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleSkinColorDidChanged
// Il2CppName: HandleSkinColorDidChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(int)>(&EditAvatarViewController::HandleSkinColorDidChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleSkinColorDidChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::EyesValuePickerHasChanged
// Il2CppName: EyesValuePickerHasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::EyesValuePickerHasChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "EyesValuePickerHasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleUndoButtonWasPressed
// Il2CppName: HandleUndoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleUndoButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleUndoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRedoButtonWasPressed
// Il2CppName: HandleRedoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRedoButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRedoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeAllButtonWasPressed
// Il2CppName: HandleRandomizeAllButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeAllButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeModelsButtonWasPressed
// Il2CppName: HandleRandomizeModelsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeModelsButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeModelsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleRandomizeColorsButtonWasPressed
// Il2CppName: HandleRandomizeColorsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleRandomizeColorsButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleRandomizeColorsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::ReportAllChangedAndUpdate
// Il2CppName: ReportAllChangedAndUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::ReportAllChangedAndUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "ReportAllChangedAndUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleApplyButtonWasPressed
// Il2CppName: HandleApplyButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleApplyButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SaveAvatarAndFinish
// Il2CppName: SaveAvatarAndFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::SaveAvatarAndFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "SaveAvatarAndFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::HandleCancelButtonWasPressed
// Il2CppName: HandleCancelButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::HandleCancelButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::CreateTextValuePairsForAvatarPartCollection
// Il2CppName: CreateTextValuePairsForAvatarPartCollection
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection
// Il2CppName: CreateColorValuePairsForAvatarPartCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* (EditAvatarViewController::*)(::Array<GlobalNamespace::SkinColorSO*>*)>(&EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "CreateColorValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::SkinColorSO*>*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SetupColorButton
// Il2CppName: SetupColorButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::UI::Button*, System::Action_1<UnityEngine::Color>*, System::Func_1<UnityEngine::Color>*, GlobalNamespace::EditAvatarViewController::AvatarEditPart, int)>(&EditAvatarViewController::SetupColorButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "SetupColorButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Button*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EditAvatarViewController::AvatarEditPart>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::SetupValuePicker
// Il2CppName: SetupValuePicker
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_0
// Il2CppName: <DidActivate>b__40_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_1
// Il2CppName: <DidActivate>b__40_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_2
// Il2CppName: <DidActivate>b__40_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_3
// Il2CppName: <DidActivate>b__40_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_4
// Il2CppName: <DidActivate>b__40_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_5
// Il2CppName: <DidActivate>b__40_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_6
// Il2CppName: <DidActivate>b__40_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_7
// Il2CppName: <DidActivate>b__40_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_8
// Il2CppName: <DidActivate>b__40_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_9
// Il2CppName: <DidActivate>b__40_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_9)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_10
// Il2CppName: <DidActivate>b__40_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(UnityEngine::Color)>(&EditAvatarViewController::$DidActivate$b__40_10)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_11
// Il2CppName: <DidActivate>b__40_11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (EditAvatarViewController::*)()>(&EditAvatarViewController::$DidActivate$b__40_11)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_12
// Il2CppName: <DidActivate>b__40_12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_12)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_13
// Il2CppName: <DidActivate>b__40_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_13)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$DidActivate$b__40_14
// Il2CppName: <DidActivate>b__40_14
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(::Il2CppString*)>(&EditAvatarViewController::$DidActivate$b__40_14)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "<DidActivate>b__40_14", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)(bool, bool, bool)>(&EditAvatarViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::*)()>(&EditAvatarViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController/AvatarEditPart
#include "GlobalNamespace/EditAvatarViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart Unknown
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart Unknown
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_Unknown(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart All
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "All"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart All
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_All(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "All", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart SkinColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_SkinColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_SkinColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "SkinColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart SkinColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_SkinColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_SkinColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "SkinColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopPrimaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopPrimaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopPrimaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopPrimaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopSecondaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopSecondaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopSecondaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopSecondaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "GlassesModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "GlassesModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "GlassesColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "GlassesColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "FacialHairModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "FacialHairModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "FacialHairColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "FacialHairColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HandsModel
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HandsModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HandsModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HandsModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HandsColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HandsColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HandsColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HandsColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModel(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelPrimaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelPrimaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelPrimaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelPrimaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelPrimaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelSecondaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelSecondaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelSecondaryColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelSecondaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelSecondaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelDetailColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelDetailColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelDetailColor(GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelDetailColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelDetailColor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController/<>c__DisplayClass56_0
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass56_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EditAvatarViewController/<>c__DisplayClass56_0.<SetupColorButton>b__0
void GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0::<SetupColorButton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupColorButton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController/<>c__DisplayClass56_0.<SetupColorButton>b__1
void GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__1(UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarViewController::$$c__DisplayClass56_0::<SetupColorButton>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupColorButton>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Writing MetadataGetter for method: EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__0
// Il2CppName: <SetupColorButton>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::$$c__DisplayClass56_0::*)()>(&EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController::$$c__DisplayClass56_0*), "<SetupColorButton>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__1
// Il2CppName: <SetupColorButton>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::$$c__DisplayClass56_0::*)(UnityEngine::Color)>(&EditAvatarViewController::$$c__DisplayClass56_0::$SetupColorButton$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController::$$c__DisplayClass56_0*), "<SetupColorButton>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: EditAvatarViewController::$$c__DisplayClass56_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::$$c__DisplayClass56_0::*)()>(&EditAvatarViewController::$$c__DisplayClass56_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController::$$c__DisplayClass56_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarViewController::$$c__DisplayClass56_0::*)()>(&EditAvatarViewController::$$c__DisplayClass56_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarViewController::$$c__DisplayClass56_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: EnterPlayerGuestNameViewController/FinishDelegate
#include "GlobalNamespace/EnterPlayerGuestNameViewController_FinishDelegate.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_1.hpp"
// Including type: StringSignal
#include "GlobalNamespace/StringSignal.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: GuestNameButtonsListItemsList
#include "GlobalNamespace/GuestNameButtonsListItemsList.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPlayerNameCompoundLength
int GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxPlayerNameCompoundLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxPlayerNameCompoundLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnterPlayerGuestNameViewController", "kMaxPlayerNameCompoundLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPlayerNameCompoundLength
void GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxPlayerNameCompoundLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxPlayerNameCompoundLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnterPlayerGuestNameViewController", "kMaxPlayerNameCompoundLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxShowPlayer
int GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxShowPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxShowPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnterPlayerGuestNameViewController", "kMaxShowPlayer"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxShowPlayer
void GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxShowPlayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxShowPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnterPlayerGuestNameViewController", "kMaxShowPlayer", value));
}
// Autogenerated method: EnterPlayerGuestNameViewController.Init
void GlobalNamespace::EnterPlayerGuestNameViewController::Init(GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate* didFinishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(didFinishCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, didFinishCallback);
}
// Autogenerated method: EnterPlayerGuestNameViewController.OkButtonPressed
void GlobalNamespace::EnterPlayerGuestNameViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnterPlayerGuestNameViewController.DidActivate
void GlobalNamespace::EnterPlayerGuestNameViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EnterPlayerGuestNameViewController.DidDeactivate
void GlobalNamespace::EnterPlayerGuestNameViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)(GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate*)>(&EnterPlayerGuestNameViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate*>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::OkButtonPressed
// Il2CppName: OkButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)()>(&EnterPlayerGuestNameViewController::OkButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), "OkButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)(bool, bool, bool)>(&EnterPlayerGuestNameViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)(bool, bool)>(&EnterPlayerGuestNameViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)()>(&EnterPlayerGuestNameViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::*)()>(&EnterPlayerGuestNameViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnterPlayerGuestNameViewController/FinishDelegate
#include "GlobalNamespace/EnterPlayerGuestNameViewController_FinishDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.Invoke
void GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::Invoke(GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, playerName);
}
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke(GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::Il2CppString* playerName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, viewController, playerName, callback, object);
}
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.EndInvoke
void GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::FinishDelegate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::FinishDelegate::*)(::Il2CppObject*, System::IntPtr)>(&EnterPlayerGuestNameViewController::FinishDelegate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::FinishDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::FinishDelegate::*)(::Il2CppObject*, System::IntPtr)>(&EnterPlayerGuestNameViewController::FinishDelegate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::FinishDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::FinishDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::FinishDelegate::*)(GlobalNamespace::EnterPlayerGuestNameViewController*, ::Il2CppString*)>(&EnterPlayerGuestNameViewController::FinishDelegate::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::FinishDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnterPlayerGuestNameViewController*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (EnterPlayerGuestNameViewController::FinishDelegate::*)(GlobalNamespace::EnterPlayerGuestNameViewController*, ::Il2CppString*, System::AsyncCallback*, ::Il2CppObject*)>(&EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::FinishDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnterPlayerGuestNameViewController*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::FinishDelegate::*)(System::IAsyncResult*)>(&EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::FinishDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0.<DidActivate>b__0
void GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::$DidActivate$b__0(int idx, GlobalNamespace::GuestNameButtonsListItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, item);
}
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::$DidActivate$b__0
// Il2CppName: <DidActivate>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::*)(int, GlobalNamespace::GuestNameButtonsListItem*)>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::$DidActivate$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_0*), "<DidActivate>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GuestNameButtonsListItem*>()});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::*)()>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::*)()>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_1.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1.<DidActivate>b__1
void GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::$DidActivate$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::<DidActivate>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::$DidActivate$b__1
// Il2CppName: <DidActivate>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::*)()>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::$DidActivate$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_1*), "<DidActivate>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::*)()>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::*)()>(&EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterPlayerGuestNameViewController::$$c__DisplayClass10_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnterTextViewController
#include "GlobalNamespace/EnterTextViewController.hpp"
// Including type: VRTextEntryController
#include "GlobalNamespace/VRTextEntryController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnterTextViewController.add_didFinishEvent
void GlobalNamespace::EnterTextViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterTextViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnterTextViewController.remove_didFinishEvent
void GlobalNamespace::EnterTextViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterTextViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnterTextViewController.Init
void GlobalNamespace::EnterTextViewController::Init(::Il2CppString* titleText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterTextViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(titleText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, titleText);
}
// Autogenerated method: EnterTextViewController.OkButtonPressed
void GlobalNamespace::EnterTextViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterTextViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnterTextViewController.DidActivate
void GlobalNamespace::EnterTextViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnterTextViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: EnterTextViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)(System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>*)>(&EnterTextViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: EnterTextViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)(System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>*)>(&EnterTextViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::EnterTextViewController*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: EnterTextViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)(::Il2CppString*)>(&EnterTextViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EnterTextViewController::OkButtonPressed
// Il2CppName: OkButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)()>(&EnterTextViewController::OkButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), "OkButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnterTextViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)(bool, bool, bool)>(&EnterTextViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EnterTextViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)()>(&EnterTextViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnterTextViewController::*)()>(&EnterTextViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnterTextViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EulaViewController
#include "GlobalNamespace/EulaViewController.hpp"
// Including type: EulaViewController/InitData
#include "GlobalNamespace/EulaViewController_InitData.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EulaViewController.add_didFinishEvent
void GlobalNamespace::EulaViewController::add_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EulaViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EulaViewController.remove_didFinishEvent
void GlobalNamespace::EulaViewController::remove_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EulaViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EulaViewController.<DidActivate>b__9_0
void GlobalNamespace::EulaViewController::$DidActivate$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EulaViewController::<DidActivate>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EulaViewController.<DidActivate>b__9_1
void GlobalNamespace::EulaViewController::$DidActivate$b__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EulaViewController::<DidActivate>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EulaViewController.DidActivate
void GlobalNamespace::EulaViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EulaViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: EulaViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)(System::Action_1<bool>*)>(&EulaViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: EulaViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)(System::Action_1<bool>*)>(&EulaViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: EulaViewController::$DidActivate$b__9_0
// Il2CppName: <DidActivate>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)()>(&EulaViewController::$DidActivate$b__9_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), "<DidActivate>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EulaViewController::$DidActivate$b__9_1
// Il2CppName: <DidActivate>b__9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)()>(&EulaViewController::$DidActivate$b__9_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), "<DidActivate>b__9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EulaViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)(bool, bool, bool)>(&EulaViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EulaViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)()>(&EulaViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::*)()>(&EulaViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EulaViewController/InitData
#include "GlobalNamespace/EulaViewController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: EulaViewController::InitData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::InitData::*)(bool)>(&EulaViewController::InitData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController::InitData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EulaViewController::InitData::*)(bool)>(&EulaViewController::InitData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EulaViewController::InitData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FloorAdjustViewController
#include "GlobalNamespace/FloorAdjustViewController.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMoveStep
float GlobalNamespace::FloorAdjustViewController::_get_kMoveStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_get_kMoveStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FloorAdjustViewController", "kMoveStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMoveStep
void GlobalNamespace::FloorAdjustViewController::_set_kMoveStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_set_kMoveStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FloorAdjustViewController", "kMoveStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinPlayerHeight
float GlobalNamespace::FloorAdjustViewController::_get_kMinPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_get_kMinPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FloorAdjustViewController", "kMinPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinPlayerHeight
void GlobalNamespace::FloorAdjustViewController::_set_kMinPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_set_kMinPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FloorAdjustViewController", "kMinPlayerHeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxPlayerHeight
float GlobalNamespace::FloorAdjustViewController::_get_kMaxPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_get_kMaxPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FloorAdjustViewController", "kMaxPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxPlayerHeight
void GlobalNamespace::FloorAdjustViewController::_set_kMaxPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::_set_kMaxPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FloorAdjustViewController", "kMaxPlayerHeight", value));
}
// Autogenerated method: FloorAdjustViewController.Update
void GlobalNamespace::FloorAdjustViewController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FloorAdjustViewController.<DidActivate>b__9_0
void GlobalNamespace::FloorAdjustViewController::$DidActivate$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::<DidActivate>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FloorAdjustViewController.<DidActivate>b__9_1
void GlobalNamespace::FloorAdjustViewController::$DidActivate$b__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::<DidActivate>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FloorAdjustViewController.DidActivate
void GlobalNamespace::FloorAdjustViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FloorAdjustViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: FloorAdjustViewController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)()>(&FloorAdjustViewController::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloorAdjustViewController::$DidActivate$b__9_0
// Il2CppName: <DidActivate>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)()>(&FloorAdjustViewController::$DidActivate$b__9_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), "<DidActivate>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloorAdjustViewController::$DidActivate$b__9_1
// Il2CppName: <DidActivate>b__9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)()>(&FloorAdjustViewController::$DidActivate$b__9_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), "<DidActivate>b__9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloorAdjustViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)(bool, bool, bool)>(&FloorAdjustViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FloorAdjustViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)()>(&FloorAdjustViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloorAdjustViewController::*)()>(&FloorAdjustViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloorAdjustViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FriendsViewController
#include "GlobalNamespace/FriendsViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: PlatformNetworkPlayerModel
#include "GlobalNamespace/PlatformNetworkPlayerModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FriendsViewController.HandleOpenPartyToggleChanged
void GlobalNamespace::FriendsViewController::HandleOpenPartyToggleChanged(bool openParty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::HandleOpenPartyToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOpenPartyToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openParty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, openParty);
}
// Autogenerated method: FriendsViewController.RefreshParty
void GlobalNamespace::FriendsViewController::RefreshParty(bool overrideHide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::RefreshParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideHide)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrideHide);
}
// Autogenerated method: FriendsViewController.get_myPartyTitle
::Il2CppString* GlobalNamespace::FriendsViewController::get_myPartyTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::get_myPartyTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myPartyTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FriendsViewController.get_otherPlayersTitle
::Il2CppString* GlobalNamespace::FriendsViewController::get_otherPlayersTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::get_otherPlayersTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FriendsViewController.get_networkPlayerModel
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::FriendsViewController::get_networkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::get_networkPlayerModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_networkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: FriendsViewController.NetworkPlayersViewControllerDidActivate
void GlobalNamespace::FriendsViewController::NetworkPlayersViewControllerDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::NetworkPlayersViewControllerDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: FriendsViewController.DidDeactivate
void GlobalNamespace::FriendsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: FriendsViewController.OnDestroy
void GlobalNamespace::FriendsViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FriendsViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: FriendsViewController::HandleOpenPartyToggleChanged
// Il2CppName: HandleOpenPartyToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)(bool)>(&FriendsViewController::HandleOpenPartyToggleChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "HandleOpenPartyToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FriendsViewController::RefreshParty
// Il2CppName: RefreshParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)(bool)>(&FriendsViewController::RefreshParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "RefreshParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FriendsViewController::get_myPartyTitle
// Il2CppName: get_myPartyTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FriendsViewController::*)()>(&FriendsViewController::get_myPartyTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "get_myPartyTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FriendsViewController::get_otherPlayersTitle
// Il2CppName: get_otherPlayersTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FriendsViewController::*)()>(&FriendsViewController::get_otherPlayersTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "get_otherPlayersTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FriendsViewController::get_networkPlayerModel
// Il2CppName: get_networkPlayerModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::INetworkPlayerModel* (FriendsViewController::*)()>(&FriendsViewController::get_networkPlayerModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "get_networkPlayerModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FriendsViewController::NetworkPlayersViewControllerDidActivate
// Il2CppName: NetworkPlayersViewControllerDidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)(bool, bool)>(&FriendsViewController::NetworkPlayersViewControllerDidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FriendsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)(bool, bool)>(&FriendsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FriendsViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)()>(&FriendsViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FriendsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)()>(&FriendsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FriendsViewController::*)()>(&FriendsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FriendsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersPanelController
#include "GlobalNamespace/GameplayModifiersPanelController.hpp"
// Including type: GameplayModifiersPanelController/<>c__DisplayClass16_0
#include "GlobalNamespace/GameplayModifiersPanelController_--c__DisplayClass16_0.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: GameplayModifierToggle
#include "GlobalNamespace/GameplayModifierToggle.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersPanelController.add_didChangeGameplayModifiersEvent
void GlobalNamespace::GameplayModifiersPanelController::add_didChangeGameplayModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::add_didChangeGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersPanelController.remove_didChangeGameplayModifiersEvent
void GlobalNamespace::GameplayModifiersPanelController::remove_didChangeGameplayModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::remove_didChangeGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersPanelController.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiersPanelController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersPanelController.SetData
void GlobalNamespace::GameplayModifiersPanelController::SetData(GlobalNamespace::GameplayModifiers* newGameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameplayModifiers);
}
// Autogenerated method: GameplayModifiersPanelController.Awake
void GlobalNamespace::GameplayModifiersPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersPanelController.OnDestroy
void GlobalNamespace::GameplayModifiersPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersPanelController.SetToggleValueWithGameplayModifierParams
void GlobalNamespace::GameplayModifiersPanelController::SetToggleValueWithGameplayModifierParams(GlobalNamespace::GameplayModifierParamsSO* gameplayModifierParams, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::SetToggleValueWithGameplayModifierParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToggleValueWithGameplayModifierParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifierParams), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifierParams, value);
}
// Autogenerated method: GameplayModifiersPanelController.GetToggleValueWithGameplayModifierParams
bool GlobalNamespace::GameplayModifiersPanelController::GetToggleValueWithGameplayModifierParams(GlobalNamespace::GameplayModifierParamsSO* gameplayModifierParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::GetToggleValueWithGameplayModifierParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetToggleValueWithGameplayModifierParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifierParams)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifierParams);
}
// Autogenerated method: GameplayModifiersPanelController.RefreshTotalMultiplierAndRankUI
void GlobalNamespace::GameplayModifiersPanelController::RefreshTotalMultiplierAndRankUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::RefreshTotalMultiplierAndRankUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTotalMultiplierAndRankUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersPanelController.IRefreshable.Refresh
void GlobalNamespace::GameplayModifiersPanelController::IRefreshable_Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::IRefreshable.Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IRefreshable.Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameplayModifiersPanelController::add_didChangeGameplayModifiersEvent
// Il2CppName: add_didChangeGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)(System::Action*)>(&GameplayModifiersPanelController::add_didChangeGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "add_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::remove_didChangeGameplayModifiersEvent
// Il2CppName: remove_didChangeGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)(System::Action*)>(&GameplayModifiersPanelController::remove_didChangeGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "remove_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::get_gameplayModifiers
// Il2CppName: get_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::get_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)(GlobalNamespace::GameplayModifiers*)>(&GameplayModifiersPanelController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::SetToggleValueWithGameplayModifierParams
// Il2CppName: SetToggleValueWithGameplayModifierParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)(GlobalNamespace::GameplayModifierParamsSO*, bool)>(&GameplayModifiersPanelController::SetToggleValueWithGameplayModifierParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "SetToggleValueWithGameplayModifierParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifierParamsSO*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::GetToggleValueWithGameplayModifierParams
// Il2CppName: GetToggleValueWithGameplayModifierParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GameplayModifiersPanelController::*)(GlobalNamespace::GameplayModifierParamsSO*)>(&GameplayModifiersPanelController::GetToggleValueWithGameplayModifierParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "GetToggleValueWithGameplayModifierParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifierParamsSO*>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::RefreshTotalMultiplierAndRankUI
// Il2CppName: RefreshTotalMultiplierAndRankUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::RefreshTotalMultiplierAndRankUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "RefreshTotalMultiplierAndRankUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::IRefreshable_Refresh
// Il2CppName: IRefreshable.Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::IRefreshable_Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), "IRefreshable.Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::*)()>(&GameplayModifiersPanelController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersPanelController/<>c__DisplayClass16_0
#include "GlobalNamespace/GameplayModifiersPanelController_--c__DisplayClass16_0.hpp"
// Including type: GameplayModifierToggle
#include "GlobalNamespace/GameplayModifierToggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersPanelController/<>c__DisplayClass16_0.<Awake>b__0
void GlobalNamespace::GameplayModifiersPanelController::$$c__DisplayClass16_0::$Awake$b__0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersPanelController::$$c__DisplayClass16_0::<Awake>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Writing MetadataGetter for method: GameplayModifiersPanelController::$$c__DisplayClass16_0::$Awake$b__0
// Il2CppName: <Awake>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::$$c__DisplayClass16_0::*)(bool)>(&GameplayModifiersPanelController::$$c__DisplayClass16_0::$Awake$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController::$$c__DisplayClass16_0*), "<Awake>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameplayModifiersPanelController::$$c__DisplayClass16_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::$$c__DisplayClass16_0::*)()>(&GameplayModifiersPanelController::$$c__DisplayClass16_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController::$$c__DisplayClass16_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayModifiersPanelController::$$c__DisplayClass16_0::*)()>(&GameplayModifiersPanelController::$$c__DisplayClass16_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayModifiersPanelController::$$c__DisplayClass16_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: GameplaySetupViewController/Panel
#include "GlobalNamespace/GameplaySetupViewController_Panel.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: PlayerSettingsPanelController
#include "GlobalNamespace/PlayerSettingsPanelController.hpp"
// Including type: GameplayModifiersPanelController
#include "GlobalNamespace/GameplayModifiersPanelController.hpp"
// Including type: EnvironmentOverrideSettingsPanelController
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController.hpp"
// Including type: ColorsOverrideSettingsPanelController
#include "GlobalNamespace/ColorsOverrideSettingsPanelController.hpp"
// Including type: MultiplayerSettingsPanelController
#include "GlobalNamespace/MultiplayerSettingsPanelController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplaySetupViewController.add_didChangeGameplayModifiersEvent
void GlobalNamespace::GameplaySetupViewController::add_didChangeGameplayModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::add_didChangeGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplaySetupViewController.remove_didChangeGameplayModifiersEvent
void GlobalNamespace::GameplaySetupViewController::remove_didChangeGameplayModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::remove_didChangeGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplaySetupViewController.get_playerSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::GameplaySetupViewController::get_playerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::get_playerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplaySetupViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.get_environmentOverrideSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::GameplaySetupViewController::get_environmentOverrideSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::get_environmentOverrideSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentOverrideSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.get_colorSchemesSettings
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::GameplaySetupViewController::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemesSettings*, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.Setup
void GlobalNamespace::GameplaySetupViewController::Setup(bool showModifiers, bool showEnvironmentOverrideSettings, bool showColorSchemesSettings, GlobalNamespace::GameplaySetupViewController::GameplayMode gameplayMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showModifiers), ::il2cpp_utils::ExtractType(showEnvironmentOverrideSettings), ::il2cpp_utils::ExtractType(showColorSchemesSettings), ::il2cpp_utils::ExtractType(gameplayMode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings, gameplayMode);
}
// Autogenerated method: GameplaySetupViewController.Init
void GlobalNamespace::GameplaySetupViewController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.OnDisable
void GlobalNamespace::GameplaySetupViewController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.HandleSelectionSegmentedControlDidSelectCell
void GlobalNamespace::GameplaySetupViewController::HandleSelectionSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::HandleSelectionSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectionSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: GameplaySetupViewController.HandlePlayerSettingsPanelControllerDidChangePlayerSettings
void GlobalNamespace::GameplaySetupViewController::HandlePlayerSettingsPanelControllerDidChangePlayerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::HandlePlayerSettingsPanelControllerDidChangePlayerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerSettingsPanelControllerDidChangePlayerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers
void GlobalNamespace::GameplaySetupViewController::HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.SetActivePanel
void GlobalNamespace::GameplaySetupViewController::SetActivePanel(int panelIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::SetActivePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActivePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(panelIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, panelIdx);
}
// Autogenerated method: GameplaySetupViewController.RefreshContent
void GlobalNamespace::GameplaySetupViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.RefreshActivePanel
void GlobalNamespace::GameplaySetupViewController::RefreshActivePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::RefreshActivePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshActivePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplaySetupViewController.DidActivate
void GlobalNamespace::GameplaySetupViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: GameplaySetupViewController::add_didChangeGameplayModifiersEvent
// Il2CppName: add_didChangeGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(System::Action*)>(&GameplaySetupViewController::add_didChangeGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "add_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::remove_didChangeGameplayModifiersEvent
// Il2CppName: remove_didChangeGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(System::Action*)>(&GameplaySetupViewController::remove_didChangeGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "remove_didChangeGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::get_playerSettings
// Il2CppName: get_playerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerSpecificSettings* (GameplaySetupViewController::*)()>(&GameplaySetupViewController::get_playerSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "get_playerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::get_gameplayModifiers
// Il2CppName: get_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (GameplaySetupViewController::*)()>(&GameplaySetupViewController::get_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::get_environmentOverrideSettings
// Il2CppName: get_environmentOverrideSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OverrideEnvironmentSettings* (GameplaySetupViewController::*)()>(&GameplaySetupViewController::get_environmentOverrideSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "get_environmentOverrideSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::get_colorSchemesSettings
// Il2CppName: get_colorSchemesSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorSchemesSettings* (GameplaySetupViewController::*)()>(&GameplaySetupViewController::get_colorSchemesSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "get_colorSchemesSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(bool, bool, bool, GlobalNamespace::GameplaySetupViewController::GameplayMode)>(&GameplaySetupViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplaySetupViewController::GameplayMode>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::HandleSelectionSegmentedControlDidSelectCell
// Il2CppName: HandleSelectionSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(HMUI::SegmentedControl*, int)>(&GameplaySetupViewController::HandleSelectionSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "HandleSelectionSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::HandlePlayerSettingsPanelControllerDidChangePlayerSettings
// Il2CppName: HandlePlayerSettingsPanelControllerDidChangePlayerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::HandlePlayerSettingsPanelControllerDidChangePlayerSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "HandlePlayerSettingsPanelControllerDidChangePlayerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers
// Il2CppName: HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "HandleGameplayModifiersPanelControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::SetActivePanel
// Il2CppName: SetActivePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(int)>(&GameplaySetupViewController::SetActivePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "SetActivePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::RefreshContent
// Il2CppName: RefreshContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::RefreshContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "RefreshContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::RefreshActivePanel
// Il2CppName: RefreshActivePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::RefreshActivePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "RefreshActivePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)(bool, bool, bool)>(&GameplaySetupViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameplaySetupViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::*)()>(&GameplaySetupViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplaySetupViewController/Panel
#include "GlobalNamespace/GameplaySetupViewController_Panel.hpp"
// Including type: IRefreshable
#include "GlobalNamespace/IRefreshable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GameplaySetupViewController::Panel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::Panel::*)(::Il2CppString*, GlobalNamespace::IRefreshable*, UnityEngine::GameObject*)>(&GameplaySetupViewController::Panel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController::Panel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IRefreshable*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplaySetupViewController::Panel::*)(::Il2CppString*, GlobalNamespace::IRefreshable*, UnityEngine::GameObject*)>(&GameplaySetupViewController::Panel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplaySetupViewController::Panel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IRefreshable*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplaySetupViewController/GameplayMode
#include "GlobalNamespace/GameplaySetupViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplaySetupViewController/GameplayMode SinglePlayer
GlobalNamespace::GameplaySetupViewController::GameplayMode GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_SinglePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_SinglePlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplaySetupViewController::GameplayMode>("", "GameplaySetupViewController/GameplayMode", "SinglePlayer"));
}
// Autogenerated static field setter
// Set static field: static public GameplaySetupViewController/GameplayMode SinglePlayer
void GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_SinglePlayer(GlobalNamespace::GameplaySetupViewController::GameplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_SinglePlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplaySetupViewController/GameplayMode", "SinglePlayer", value));
}
// Autogenerated static field getter
// Get static field: static public GameplaySetupViewController/GameplayMode MultiplayerQuickPlay
GlobalNamespace::GameplaySetupViewController::GameplayMode GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_MultiplayerQuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_MultiplayerQuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplaySetupViewController::GameplayMode>("", "GameplaySetupViewController/GameplayMode", "MultiplayerQuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public GameplaySetupViewController/GameplayMode MultiplayerQuickPlay
void GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_MultiplayerQuickPlay(GlobalNamespace::GameplaySetupViewController::GameplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_MultiplayerQuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplaySetupViewController/GameplayMode", "MultiplayerQuickPlay", value));
}
// Autogenerated static field getter
// Get static field: static public GameplaySetupViewController/GameplayMode MultiplayerPrivate
GlobalNamespace::GameplaySetupViewController::GameplayMode GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_MultiplayerPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_get_MultiplayerPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplaySetupViewController::GameplayMode>("", "GameplaySetupViewController/GameplayMode", "MultiplayerPrivate"));
}
// Autogenerated static field setter
// Set static field: static public GameplaySetupViewController/GameplayMode MultiplayerPrivate
void GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_MultiplayerPrivate(GlobalNamespace::GameplaySetupViewController::GameplayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplaySetupViewController::GameplayMode::_set_MultiplayerPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplaySetupViewController/GameplayMode", "MultiplayerPrivate", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSettingsPanelController
#include "GlobalNamespace/MultiplayerSettingsPanelController.hpp"
// Including type: ServerCodeView
#include "GlobalNamespace/ServerCodeView.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerSettingsPanelController.add_playerActiveStateChangedEvent
void GlobalNamespace::MultiplayerSettingsPanelController::add_playerActiveStateChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::add_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSettingsPanelController.remove_playerActiveStateChangedEvent
void GlobalNamespace::MultiplayerSettingsPanelController::remove_playerActiveStateChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::remove_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSettingsPanelController.SetLobbyPlayerDataModel
void GlobalNamespace::MultiplayerSettingsPanelController::SetLobbyPlayerDataModel(GlobalNamespace::ILobbyPlayerDataModel* lobbyPlayerDataModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::SetLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerDataModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyPlayerDataModel);
}
// Autogenerated method: MultiplayerSettingsPanelController.HideConnectionSettings
void GlobalNamespace::MultiplayerSettingsPanelController::HideConnectionSettings(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::HideConnectionSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideConnectionSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: MultiplayerSettingsPanelController.SetLobbyCode
void GlobalNamespace::MultiplayerSettingsPanelController::SetLobbyCode(::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::SetLobbyCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: MultiplayerSettingsPanelController.Awake
void GlobalNamespace::MultiplayerSettingsPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSettingsPanelController.OnDestroy
void GlobalNamespace::MultiplayerSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSettingsPanelController.UpdateLocalPlayerIsActiveState
void GlobalNamespace::MultiplayerSettingsPanelController::UpdateLocalPlayerIsActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::UpdateLocalPlayerIsActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalPlayerIsActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: MultiplayerSettingsPanelController.HandleJoinableToggleChange
void GlobalNamespace::MultiplayerSettingsPanelController::HandleJoinableToggleChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::HandleJoinableToggleChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinableToggleChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSettingsPanelController.Refresh
void GlobalNamespace::MultiplayerSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSettingsPanelController.<Awake>b__14_0
void GlobalNamespace::MultiplayerSettingsPanelController::$Awake$b__14_0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSettingsPanelController::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::add_playerActiveStateChangedEvent
// Il2CppName: add_playerActiveStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(System::Action_1<bool>*)>(&MultiplayerSettingsPanelController::add_playerActiveStateChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "add_playerActiveStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::remove_playerActiveStateChangedEvent
// Il2CppName: remove_playerActiveStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(System::Action_1<bool>*)>(&MultiplayerSettingsPanelController::remove_playerActiveStateChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "remove_playerActiveStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::SetLobbyPlayerDataModel
// Il2CppName: SetLobbyPlayerDataModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&MultiplayerSettingsPanelController::SetLobbyPlayerDataModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "SetLobbyPlayerDataModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::HideConnectionSettings
// Il2CppName: HideConnectionSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(bool)>(&MultiplayerSettingsPanelController::HideConnectionSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "HideConnectionSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::SetLobbyCode
// Il2CppName: SetLobbyCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(::Il2CppString*)>(&MultiplayerSettingsPanelController::SetLobbyCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "SetLobbyCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)()>(&MultiplayerSettingsPanelController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)()>(&MultiplayerSettingsPanelController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::UpdateLocalPlayerIsActiveState
// Il2CppName: UpdateLocalPlayerIsActiveState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(bool)>(&MultiplayerSettingsPanelController::UpdateLocalPlayerIsActiveState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "UpdateLocalPlayerIsActiveState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::HandleJoinableToggleChange
// Il2CppName: HandleJoinableToggleChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(bool)>(&MultiplayerSettingsPanelController::HandleJoinableToggleChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "HandleJoinableToggleChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)()>(&MultiplayerSettingsPanelController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::$Awake$b__14_0
// Il2CppName: <Awake>b__14_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)(bool)>(&MultiplayerSettingsPanelController::$Awake$b__14_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), "<Awake>b__14_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerSettingsPanelController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)()>(&MultiplayerSettingsPanelController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerSettingsPanelController::*)()>(&MultiplayerSettingsPanelController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerSettingsPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerOptionsViewController
#include "GlobalNamespace/PlayerOptionsViewController.hpp"
// Including type: PlayerSettingsPanelController
#include "GlobalNamespace/PlayerSettingsPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerOptionsViewController.add_didFinishEvent
void GlobalNamespace::PlayerOptionsViewController::add_didFinishEvent(System::Action_1<HMUI::ViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerOptionsViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerOptionsViewController.remove_didFinishEvent
void GlobalNamespace::PlayerOptionsViewController::remove_didFinishEvent(System::Action_1<HMUI::ViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerOptionsViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerOptionsViewController.<DidActivate>b__6_0
void GlobalNamespace::PlayerOptionsViewController::$DidActivate$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerOptionsViewController::<DidActivate>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerOptionsViewController.DidActivate
void GlobalNamespace::PlayerOptionsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerOptionsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PlayerOptionsViewController.DidDeactivate
void GlobalNamespace::PlayerOptionsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerOptionsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: PlayerOptionsViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)(System::Action_1<HMUI::ViewController*>*)>(&PlayerOptionsViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<HMUI::ViewController*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerOptionsViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)(System::Action_1<HMUI::ViewController*>*)>(&PlayerOptionsViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<HMUI::ViewController*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerOptionsViewController::$DidActivate$b__6_0
// Il2CppName: <DidActivate>b__6_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)()>(&PlayerOptionsViewController::$DidActivate$b__6_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), "<DidActivate>b__6_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerOptionsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)(bool, bool, bool)>(&PlayerOptionsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerOptionsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)(bool, bool)>(&PlayerOptionsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerOptionsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)()>(&PlayerOptionsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerOptionsViewController::*)()>(&PlayerOptionsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerOptionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSettingsPanelController
#include "GlobalNamespace/PlayerSettingsPanelController.hpp"
// Including type: PlayerSettingsPanelController/PlayerSettingsPanelLayout
#include "GlobalNamespace/PlayerSettingsPanelController_PlayerSettingsPanelLayout.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: PlayerHeightSettingsController
#include "GlobalNamespace/PlayerHeightSettingsController.hpp"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: NoteJumpStartBeatOffsetDropdown
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown.hpp"
// Including type: EnvironmentEffectsFilterPresetDropdown
#include "GlobalNamespace/EnvironmentEffectsFilterPresetDropdown.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDisabledSectionAlpha
float GlobalNamespace::PlayerSettingsPanelController::_get_kDisabledSectionAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::_get_kDisabledSectionAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PlayerSettingsPanelController", "kDisabledSectionAlpha"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDisabledSectionAlpha
void GlobalNamespace::PlayerSettingsPanelController::_set_kDisabledSectionAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::_set_kDisabledSectionAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSettingsPanelController", "kDisabledSectionAlpha", value));
}
// Autogenerated method: PlayerSettingsPanelController.add_didChangePlayerSettingsEvent
void GlobalNamespace::PlayerSettingsPanelController::add_didChangePlayerSettingsEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::add_didChangePlayerSettingsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangePlayerSettingsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSettingsPanelController.remove_didChangePlayerSettingsEvent
void GlobalNamespace::PlayerSettingsPanelController::remove_didChangePlayerSettingsEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::remove_didChangePlayerSettingsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangePlayerSettingsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSettingsPanelController.get_playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PlayerSettingsPanelController::get_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::get_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSettingsPanelController.SetData
void GlobalNamespace::PlayerSettingsPanelController::SetData(GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: PlayerSettingsPanelController.SetLayout
void GlobalNamespace::PlayerSettingsPanelController::SetLayout(GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout layout) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::SetLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, layout);
}
// Autogenerated method: PlayerSettingsPanelController.Awake
void GlobalNamespace::PlayerSettingsPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSettingsPanelController.OnDestroy
void GlobalNamespace::PlayerSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSettingsPanelController.Refresh
void GlobalNamespace::PlayerSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSettingsPanelController.HandleSFXVolumeSettingsControllerValueDidChange
void GlobalNamespace::PlayerSettingsPanelController::HandleSFXVolumeSettingsControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* settingsController, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleSFXVolumeSettingsControllerValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSFXVolumeSettingsControllerValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsController), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settingsController, value);
}
// Autogenerated method: PlayerSettingsPanelController.HandleSaberTrailIntensitySettingsControllerValueDidChange
void GlobalNamespace::PlayerSettingsPanelController::HandleSaberTrailIntensitySettingsControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* settingsController, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleSaberTrailIntensitySettingsControllerValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberTrailIntensitySettingsControllerValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsController), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, settingsController, value);
}
// Autogenerated method: PlayerSettingsPanelController.HandlePlayerHeightSettingsControllerValueDidChange
void GlobalNamespace::PlayerSettingsPanelController::HandlePlayerHeightSettingsControllerValueDidChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandlePlayerHeightSettingsControllerValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerHeightSettingsControllerValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSettingsPanelController.HandleNoteJumpStartBeatOffsetPositionSelected
void GlobalNamespace::PlayerSettingsPanelController::HandleNoteJumpStartBeatOffsetPositionSelected(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleNoteJumpStartBeatOffsetPositionSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteJumpStartBeatOffsetPositionSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: PlayerSettingsPanelController.HandleLightReductionAmountSelected
void GlobalNamespace::PlayerSettingsPanelController::HandleLightReductionAmountSelected(int obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleLightReductionAmountSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLightReductionAmountSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: PlayerSettingsPanelController.HandleAdvancedHudToggleChanged
void GlobalNamespace::PlayerSettingsPanelController::HandleAdvancedHudToggleChanged(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleAdvancedHudToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdvancedHudToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.HandleNoTextsAndHudsToggleChanged
void GlobalNamespace::PlayerSettingsPanelController::HandleNoTextsAndHudsToggleChanged(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::HandleNoTextsAndHudsToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTextsAndHudsToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.SetIsDirty
void GlobalNamespace::PlayerSettingsPanelController::SetIsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::SetIsDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSettingsPanelController.SetSection
void GlobalNamespace::PlayerSettingsPanelController::SetSection(UnityEngine::CanvasGroup* sectionCanvasGroup, bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::SetSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sectionCanvasGroup), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sectionCanvasGroup, block);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_0
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_1
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_1(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_2
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_2(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_3
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_3(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_4
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_4(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: PlayerSettingsPanelController.<Awake>b__28_5
void GlobalNamespace::PlayerSettingsPanelController::$Awake$b__28_5(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::<Awake>b__28_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__28_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Writing MetadataGetter for method: PlayerSettingsPanelController::add_didChangePlayerSettingsEvent
// Il2CppName: add_didChangePlayerSettingsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(System::Action*)>(&PlayerSettingsPanelController::add_didChangePlayerSettingsEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "add_didChangePlayerSettingsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::remove_didChangePlayerSettingsEvent
// Il2CppName: remove_didChangePlayerSettingsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(System::Action*)>(&PlayerSettingsPanelController::remove_didChangePlayerSettingsEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "remove_didChangePlayerSettingsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::get_playerSpecificSettings
// Il2CppName: get_playerSpecificSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerSpecificSettings* (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::get_playerSpecificSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "get_playerSpecificSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(GlobalNamespace::PlayerSpecificSettings*)>(&PlayerSettingsPanelController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::SetLayout
// Il2CppName: SetLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout)>(&PlayerSettingsPanelController::SetLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "SetLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleSFXVolumeSettingsControllerValueDidChange
// Il2CppName: HandleSFXVolumeSettingsControllerValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(GlobalNamespace::FormattedFloatListSettingsController*, float)>(&PlayerSettingsPanelController::HandleSFXVolumeSettingsControllerValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleSFXVolumeSettingsControllerValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::FormattedFloatListSettingsController*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleSaberTrailIntensitySettingsControllerValueDidChange
// Il2CppName: HandleSaberTrailIntensitySettingsControllerValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(GlobalNamespace::FormattedFloatListSettingsController*, float)>(&PlayerSettingsPanelController::HandleSaberTrailIntensitySettingsControllerValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleSaberTrailIntensitySettingsControllerValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::FormattedFloatListSettingsController*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandlePlayerHeightSettingsControllerValueDidChange
// Il2CppName: HandlePlayerHeightSettingsControllerValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(float)>(&PlayerSettingsPanelController::HandlePlayerHeightSettingsControllerValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandlePlayerHeightSettingsControllerValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleNoteJumpStartBeatOffsetPositionSelected
// Il2CppName: HandleNoteJumpStartBeatOffsetPositionSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(int)>(&PlayerSettingsPanelController::HandleNoteJumpStartBeatOffsetPositionSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleNoteJumpStartBeatOffsetPositionSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleLightReductionAmountSelected
// Il2CppName: HandleLightReductionAmountSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(int)>(&PlayerSettingsPanelController::HandleLightReductionAmountSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleLightReductionAmountSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleAdvancedHudToggleChanged
// Il2CppName: HandleAdvancedHudToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::HandleAdvancedHudToggleChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleAdvancedHudToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::HandleNoTextsAndHudsToggleChanged
// Il2CppName: HandleNoTextsAndHudsToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::HandleNoTextsAndHudsToggleChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "HandleNoTextsAndHudsToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::SetIsDirty
// Il2CppName: SetIsDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::SetIsDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "SetIsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::SetSection
// Il2CppName: SetSection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(UnityEngine::CanvasGroup*, bool)>(&PlayerSettingsPanelController::SetSection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "SetSection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CanvasGroup*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_0
// Il2CppName: <Awake>b__28_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_1
// Il2CppName: <Awake>b__28_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_2
// Il2CppName: <Awake>b__28_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_3
// Il2CppName: <Awake>b__28_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_4
// Il2CppName: <Awake>b__28_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::$Awake$b__28_5
// Il2CppName: <Awake>b__28_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)(bool)>(&PlayerSettingsPanelController::$Awake$b__28_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), "<Awake>b__28_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerSettingsPanelController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSettingsPanelController::*)()>(&PlayerSettingsPanelController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSettingsPanelController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSettingsPanelController/PlayerSettingsPanelLayout
#include "GlobalNamespace/PlayerSettingsPanelController_PlayerSettingsPanelLayout.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout All
GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout>("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout All
void GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_All(GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "All", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout Singleplayer
GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_Singleplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_Singleplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout>("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "Singleplayer"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout Singleplayer
void GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_Singleplayer(GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_Singleplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "Singleplayer", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout Multiplayer
GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_Multiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_get_Multiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout>("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "Multiplayer"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSettingsPanelController/PlayerSettingsPanelLayout Multiplayer
void GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_Multiplayer(GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSettingsPanelController::PlayerSettingsPanelLayout::_set_Multiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSettingsPanelController/PlayerSettingsPanelLayout", "Multiplayer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningViewController
#include "GlobalNamespace/HealthWarningViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningViewController.add_privacyPolicyButtonPressedEvent
void GlobalNamespace::HealthWarningViewController::add_privacyPolicyButtonPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::add_privacyPolicyButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_privacyPolicyButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.remove_privacyPolicyButtonPressedEvent
void GlobalNamespace::HealthWarningViewController::remove_privacyPolicyButtonPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::remove_privacyPolicyButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_privacyPolicyButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.add_openDataPrivacyPageButtonPressedEvent
void GlobalNamespace::HealthWarningViewController::add_openDataPrivacyPageButtonPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::add_openDataPrivacyPageButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_openDataPrivacyPageButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.remove_openDataPrivacyPageButtonPressedEvent
void GlobalNamespace::HealthWarningViewController::remove_openDataPrivacyPageButtonPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::remove_openDataPrivacyPageButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_openDataPrivacyPageButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.add_didFinishEvent
void GlobalNamespace::HealthWarningViewController::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.remove_didFinishEvent
void GlobalNamespace::HealthWarningViewController::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HealthWarningViewController.<DidActivate>b__15_0
void GlobalNamespace::HealthWarningViewController::$DidActivate$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::<DidActivate>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningViewController.<DidActivate>b__15_1
void GlobalNamespace::HealthWarningViewController::$DidActivate$b__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::<DidActivate>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningViewController.<DidActivate>b__15_2
void GlobalNamespace::HealthWarningViewController::$DidActivate$b__15_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::<DidActivate>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningViewController.DidActivate
void GlobalNamespace::HealthWarningViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: HealthWarningViewController::add_privacyPolicyButtonPressedEvent
// Il2CppName: add_privacyPolicyButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::add_privacyPolicyButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "add_privacyPolicyButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::remove_privacyPolicyButtonPressedEvent
// Il2CppName: remove_privacyPolicyButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::remove_privacyPolicyButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "remove_privacyPolicyButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::add_openDataPrivacyPageButtonPressedEvent
// Il2CppName: add_openDataPrivacyPageButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::add_openDataPrivacyPageButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "add_openDataPrivacyPageButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::remove_openDataPrivacyPageButtonPressedEvent
// Il2CppName: remove_openDataPrivacyPageButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::remove_openDataPrivacyPageButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "remove_openDataPrivacyPageButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(System::Action*)>(&HealthWarningViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::$DidActivate$b__15_0
// Il2CppName: <DidActivate>b__15_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)()>(&HealthWarningViewController::$DidActivate$b__15_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "<DidActivate>b__15_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::$DidActivate$b__15_1
// Il2CppName: <DidActivate>b__15_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)()>(&HealthWarningViewController::$DidActivate$b__15_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "<DidActivate>b__15_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::$DidActivate$b__15_2
// Il2CppName: <DidActivate>b__15_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)()>(&HealthWarningViewController::$DidActivate$b__15_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "<DidActivate>b__15_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)(bool, bool, bool)>(&HealthWarningViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HealthWarningViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)()>(&HealthWarningViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningViewController::*)()>(&HealthWarningViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HowToPlayViewController
#include "GlobalNamespace/HowToPlayViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HowToPlayViewController.add_didFinishEvent
void GlobalNamespace::HowToPlayViewController::add_didFinishEvent(System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HowToPlayViewController.remove_didFinishEvent
void GlobalNamespace::HowToPlayViewController::remove_didFinishEvent(System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HowToPlayViewController.Setup
void GlobalNamespace::HowToPlayViewController::Setup(bool showTutorialButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showTutorialButton)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showTutorialButton);
}
// Autogenerated method: HowToPlayViewController.<DidActivate>b__7_0
void GlobalNamespace::HowToPlayViewController::$DidActivate$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::<DidActivate>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HowToPlayViewController.<DidActivate>b__7_1
void GlobalNamespace::HowToPlayViewController::$DidActivate$b__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::<DidActivate>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HowToPlayViewController.DidActivate
void GlobalNamespace::HowToPlayViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: HowToPlayViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)(System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>*)>(&HowToPlayViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>*>()});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)(System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>*)>(&HowToPlayViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>*>()});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)(bool)>(&HowToPlayViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::$DidActivate$b__7_0
// Il2CppName: <DidActivate>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)()>(&HowToPlayViewController::$DidActivate$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "<DidActivate>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::$DidActivate$b__7_1
// Il2CppName: <DidActivate>b__7_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)()>(&HowToPlayViewController::$DidActivate$b__7_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "<DidActivate>b__7_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)(bool, bool, bool)>(&HowToPlayViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HowToPlayViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)()>(&HowToPlayViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HowToPlayViewController::*)()>(&HowToPlayViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HowToPlayViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HowToPlayViewController/HowToPlayOptions
#include "GlobalNamespace/HowToPlayViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HowToPlayViewController/HowToPlayOptions HowToPlay
GlobalNamespace::HowToPlayViewController::HowToPlayOptions GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_get_HowToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_get_HowToPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>("", "HowToPlayViewController/HowToPlayOptions", "HowToPlay"));
}
// Autogenerated static field setter
// Set static field: static public HowToPlayViewController/HowToPlayOptions HowToPlay
void GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_set_HowToPlay(GlobalNamespace::HowToPlayViewController::HowToPlayOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_set_HowToPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HowToPlayViewController/HowToPlayOptions", "HowToPlay", value));
}
// Autogenerated static field getter
// Get static field: static public HowToPlayViewController/HowToPlayOptions Credits
GlobalNamespace::HowToPlayViewController::HowToPlayOptions GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_get_Credits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_get_Credits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HowToPlayViewController::HowToPlayOptions>("", "HowToPlayViewController/HowToPlayOptions", "Credits"));
}
// Autogenerated static field setter
// Set static field: static public HowToPlayViewController/HowToPlayOptions Credits
void GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_set_Credits(GlobalNamespace::HowToPlayViewController::HowToPlayOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HowToPlayViewController::HowToPlayOptions::_set_Credits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HowToPlayViewController/HowToPlayOptions", "Credits", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardViewController.SetData
void GlobalNamespace::LeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: LeaderboardViewController.RefreshLevelStats
void GlobalNamespace::LeaderboardViewController::RefreshLevelStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardViewController::RefreshLevelStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLevelStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LeaderboardViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardViewController::*)(GlobalNamespace::IDifficultyBeatmap*)>(&LeaderboardViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardViewController::RefreshLevelStats
// Il2CppName: RefreshLevelStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardViewController::*)()>(&LeaderboardViewController::RefreshLevelStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardViewController*), "RefreshLevelStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardViewController::*)()>(&LeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardViewController::*)()>(&LeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionsViewController
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsViewController.hpp"
// Including type: AnnotatedBeatmapLevelCollectionsTableView
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsTableView.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.add_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::add_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::add_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.remove_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.get_selectedAnnotatedBeatmapLevelCollection
GlobalNamespace::IAnnotatedBeatmapLevelCollection* GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::get_selectedAnnotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::get_selectedAnnotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.get_selectedItemIndex
int GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::get_selectedItemIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::get_selectedItemIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedItemIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.RefreshAvailability
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::RefreshAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::RefreshAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* annotatedBeatmapLevelCollections, int selectedItemIndex, bool hideIfOneOrNoPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollections), ::il2cpp_utils::ExtractType(selectedItemIndex), ::il2cpp_utils::ExtractType(hideIfOneOrNoPacks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollections, selectedItemIndex, hideIfOneOrNoPacks);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.ShowLoading
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::ShowLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::ShowLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.HandleDidSelectAnnotatedBeatmapLevelCollection
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::HandleDidSelectAnnotatedBeatmapLevelCollection(GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView* levelPacksTableView, GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::HandleDidSelectAnnotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPacksTableView), ::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelPacksTableView, annotatedBeatmapLevelCollection);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.DidActivate
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsViewController.DidDeactivate
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::add_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: add_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*)>(&AnnotatedBeatmapLevelCollectionsViewController::add_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: remove_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*)>(&AnnotatedBeatmapLevelCollectionsViewController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::get_selectedAnnotatedBeatmapLevelCollection
// Il2CppName: get_selectedAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IAnnotatedBeatmapLevelCollection* (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::get_selectedAnnotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "get_selectedAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::get_selectedItemIndex
// Il2CppName: get_selectedItemIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::get_selectedItemIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "get_selectedItemIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::RefreshAvailability
// Il2CppName: RefreshAvailability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::RefreshAvailability)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "RefreshAvailability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*, int, bool)>(&AnnotatedBeatmapLevelCollectionsViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::ShowLoading
// Il2CppName: ShowLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::ShowLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "ShowLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::HandleDidSelectAnnotatedBeatmapLevelCollection
// Il2CppName: HandleDidSelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*)>(&AnnotatedBeatmapLevelCollectionsViewController::HandleDidSelectAnnotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "HandleDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(bool, bool, bool)>(&AnnotatedBeatmapLevelCollectionsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)(bool, bool)>(&AnnotatedBeatmapLevelCollectionsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsViewController::*)()>(&AnnotatedBeatmapLevelCollectionsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsViewController
#include "GlobalNamespace/BeatmapCharacteristicsViewController.hpp"
// Including type: BeatmapCharacteristicsTableView
#include "GlobalNamespace/BeatmapCharacteristicsTableView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicsViewController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicsViewController::add_didSelectBeatmapCharacteristicEvent(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsViewController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicsViewController::remove_didSelectBeatmapCharacteristicEvent(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsViewController.get_beatmapCharacteristicCollection
GlobalNamespace::BeatmapCharacteristicCollectionSO* GlobalNamespace::BeatmapCharacteristicsViewController::get_beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::get_beatmapCharacteristicCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsViewController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicsViewController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsViewController.SetData
void GlobalNamespace::BeatmapCharacteristicsViewController::SetData(GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection, int selectedCharacteristicNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection), ::il2cpp_utils::ExtractType(selectedCharacteristicNum)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristicCollection, selectedCharacteristicNum);
}
// Autogenerated method: BeatmapCharacteristicsViewController.HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic
void GlobalNamespace::BeatmapCharacteristicsViewController::HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicsViewController.DidActivate
void GlobalNamespace::BeatmapCharacteristicsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BeatmapCharacteristicsViewController.DidDeactivate
void GlobalNamespace::BeatmapCharacteristicsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::add_didSelectBeatmapCharacteristicEvent
// Il2CppName: add_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicsViewController::add_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::remove_didSelectBeatmapCharacteristicEvent
// Il2CppName: remove_didSelectBeatmapCharacteristicEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicsViewController::remove_didSelectBeatmapCharacteristicEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::get_beatmapCharacteristicCollection
// Il2CppName: get_beatmapCharacteristicCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicCollectionSO* (BeatmapCharacteristicsViewController::*)()>(&BeatmapCharacteristicsViewController::get_beatmapCharacteristicCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "get_beatmapCharacteristicCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::get_selectedBeatmapCharacteristic
// Il2CppName: get_selectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (BeatmapCharacteristicsViewController::*)()>(&BeatmapCharacteristicsViewController::get_selectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(GlobalNamespace::BeatmapCharacteristicCollectionSO*, int)>(&BeatmapCharacteristicsViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicCollectionSO*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic
// Il2CppName: HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(GlobalNamespace::BeatmapCharacteristicSO*)>(&BeatmapCharacteristicsViewController::HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "HandleBeatmapCharacteristicsTableViewDidSelecteCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(bool, bool, bool)>(&BeatmapCharacteristicsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)(bool, bool)>(&BeatmapCharacteristicsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)()>(&BeatmapCharacteristicsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsViewController::*)()>(&BeatmapCharacteristicsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FilteredBeatmapLevel
#include "GlobalNamespace/FilteredBeatmapLevel.hpp"
// Including type: FilteredBeatmapLevel/FilteredBeatmapLevelData
#include "GlobalNamespace/FilteredBeatmapLevel_FilteredBeatmapLevelData.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FilteredBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::FilteredBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::FilteredBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::FilteredBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::FilteredBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::FilteredBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::FilteredBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_songTimeOffset
float GlobalNamespace::FilteredBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_shuffle
float GlobalNamespace::FilteredBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_shufflePeriod
float GlobalNamespace::FilteredBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_previewStartTime
float GlobalNamespace::FilteredBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_previewDuration
float GlobalNamespace::FilteredBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_songDuration
float GlobalNamespace::FilteredBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::FilteredBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::FilteredBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::FilteredBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.set_previewDifficultyBeatmapSets
void GlobalNamespace::FilteredBeatmapLevel::set_previewDifficultyBeatmapSets(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::set_previewDifficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FilteredBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::FilteredBeatmapLevel::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::GetPreviewAudioClipAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: FilteredBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::FilteredBeatmapLevel::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: FilteredBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::FilteredBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel.set_beatmapLevelData
void GlobalNamespace::FilteredBeatmapLevel::set_beatmapLevelData(GlobalNamespace::IBeatmapLevelData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::set_beatmapLevelData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FilteredBeatmapLevel.get_isEmpty
bool GlobalNamespace::FilteredBeatmapLevel::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_levelID
// Il2CppName: get_levelID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_levelID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_levelID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_songName
// Il2CppName: get_songName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_songName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_songName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_songSubName
// Il2CppName: get_songSubName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_songSubName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_songSubName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_songAuthorName
// Il2CppName: get_songAuthorName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_songAuthorName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_songAuthorName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_levelAuthorName
// Il2CppName: get_levelAuthorName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_levelAuthorName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_levelAuthorName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_beatsPerMinute
// Il2CppName: get_beatsPerMinute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_beatsPerMinute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_beatsPerMinute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_songTimeOffset
// Il2CppName: get_songTimeOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_songTimeOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_songTimeOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_shuffle
// Il2CppName: get_shuffle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_shuffle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_shuffle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_shufflePeriod
// Il2CppName: get_shufflePeriod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_shufflePeriod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_shufflePeriod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_previewStartTime
// Il2CppName: get_previewStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_previewStartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_previewStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_previewDuration
// Il2CppName: get_previewDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_previewDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_previewDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_songDuration
// Il2CppName: get_songDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_songDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_songDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_environmentInfo
// Il2CppName: get_environmentInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EnvironmentInfoSO* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_environmentInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_environmentInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_allDirectionsEnvironmentInfo
// Il2CppName: get_allDirectionsEnvironmentInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EnvironmentInfoSO* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_allDirectionsEnvironmentInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_previewDifficultyBeatmapSets
// Il2CppName: get_previewDifficultyBeatmapSets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_previewDifficultyBeatmapSets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::set_previewDifficultyBeatmapSets
// Il2CppName: set_previewDifficultyBeatmapSets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::*)(::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*)>(&FilteredBeatmapLevel::set_previewDifficultyBeatmapSets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "set_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*>()});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::GetPreviewAudioClipAsync
// Il2CppName: GetPreviewAudioClipAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* (FilteredBeatmapLevel::*)(System::Threading::CancellationToken)>(&FilteredBeatmapLevel::GetPreviewAudioClipAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::GetCoverImageAsync
// Il2CppName: GetCoverImageAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* (FilteredBeatmapLevel::*)(System::Threading::CancellationToken)>(&FilteredBeatmapLevel::GetCoverImageAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "GetCoverImageAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_beatmapLevelData
// Il2CppName: get_beatmapLevelData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IBeatmapLevelData* (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_beatmapLevelData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_beatmapLevelData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::set_beatmapLevelData
// Il2CppName: set_beatmapLevelData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::*)(GlobalNamespace::IBeatmapLevelData*)>(&FilteredBeatmapLevel::set_beatmapLevelData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "set_beatmapLevelData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelData*>()});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::get_isEmpty
// Il2CppName: get_isEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FilteredBeatmapLevel::*)()>(&FilteredBeatmapLevel::get_isEmpty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), "get_isEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::*)(GlobalNamespace::IBeatmapLevel*, GlobalNamespace::BeatmapDifficultyMask, System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&FilteredBeatmapLevel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::*)(GlobalNamespace::IBeatmapLevel*, GlobalNamespace::BeatmapDifficultyMask, System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&FilteredBeatmapLevel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FilteredBeatmapLevel/FilteredBeatmapLevelData
#include "GlobalNamespace/FilteredBeatmapLevel_FilteredBeatmapLevelData.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FilteredBeatmapLevel/FilteredBeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel/FilteredBeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: FilteredBeatmapLevel/FilteredBeatmapLevelData.set_difficultyBeatmapSets
void GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::set_difficultyBeatmapSets(::Array<GlobalNamespace::IDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FilteredBeatmapLevel::FilteredBeatmapLevelData::set_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: FilteredBeatmapLevel::FilteredBeatmapLevelData::get_audioClip
// Il2CppName: get_audioClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AudioClip* (FilteredBeatmapLevel::FilteredBeatmapLevelData::*)()>(&FilteredBeatmapLevel::FilteredBeatmapLevelData::get_audioClip)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel::FilteredBeatmapLevelData*), "get_audioClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::FilteredBeatmapLevelData::get_difficultyBeatmapSets
// Il2CppName: get_difficultyBeatmapSets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::IDifficultyBeatmapSet*>* (FilteredBeatmapLevel::FilteredBeatmapLevelData::*)()>(&FilteredBeatmapLevel::FilteredBeatmapLevelData::get_difficultyBeatmapSets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel::FilteredBeatmapLevelData*), "get_difficultyBeatmapSets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::FilteredBeatmapLevelData::set_difficultyBeatmapSets
// Il2CppName: set_difficultyBeatmapSets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::FilteredBeatmapLevelData::*)(::Array<GlobalNamespace::IDifficultyBeatmapSet*>*)>(&FilteredBeatmapLevel::FilteredBeatmapLevelData::set_difficultyBeatmapSets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel::FilteredBeatmapLevelData*), "set_difficultyBeatmapSets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*>()});
  }
};
// Writing MetadataGetter for method: FilteredBeatmapLevel::FilteredBeatmapLevelData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::FilteredBeatmapLevelData::*)(GlobalNamespace::IBeatmapLevelData*, GlobalNamespace::BeatmapDifficultyMask, System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&FilteredBeatmapLevel::FilteredBeatmapLevelData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel::FilteredBeatmapLevelData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilteredBeatmapLevel::FilteredBeatmapLevelData::*)(GlobalNamespace::IBeatmapLevelData*, GlobalNamespace::BeatmapDifficultyMask, System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&FilteredBeatmapLevel::FilteredBeatmapLevelData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilteredBeatmapLevel::FilteredBeatmapLevelData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelCollectionNavigationController
#include "GlobalNamespace/LevelCollectionNavigationController.hpp"
// Including type: LevelCollectionNavigationController/<>c__DisplayClass51_0
#include "GlobalNamespace/LevelCollectionNavigationController_--c__DisplayClass51_0.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: LevelCollectionViewController
#include "GlobalNamespace/LevelCollectionViewController.hpp"
// Including type: LevelPackDetailViewController
#include "GlobalNamespace/LevelPackDetailViewController.hpp"
// Including type: StandardLevelDetailViewController
#include "GlobalNamespace/StandardLevelDetailViewController.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCollectionNavigationController.add_didChangeLevelDetailContentEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didChangeLevelDetailContentEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didChangeLevelDetailContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didChangeLevelDetailContentEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didChangeLevelDetailContentEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didChangeLevelDetailContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.add_didSelectLevelPackEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didSelectLevelPackEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didSelectLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didSelectLevelPackEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didSelectLevelPackEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didSelectLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.add_didPressActionButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didPressActionButtonEvent(System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didPressActionButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didPressActionButtonEvent(System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.add_didPressOpenPackButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didPressOpenPackButtonEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didPressOpenPackButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressOpenPackButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didPressOpenPackButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didPressOpenPackButtonEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didPressOpenPackButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressOpenPackButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.add_didPressPracticeButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didPressPracticeButtonEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::LevelCollectionNavigationController::add_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::LevelCollectionNavigationController::remove_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionNavigationController.get_selectedDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LevelCollectionNavigationController::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.get_selectedBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelCollectionNavigationController::get_selectedBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::get_selectedBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.SetData
void GlobalNamespace::LevelCollectionNavigationController::SetData(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection, bool showPackHeader, bool showPlayerStats, bool showPracticeButton, ::Il2CppString* actionButtonText, UnityEngine::GameObject* noDataInfoPrefab, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>* notAllowedCharacteristics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection), ::il2cpp_utils::ExtractType(showPackHeader), ::il2cpp_utils::ExtractType(showPlayerStats), ::il2cpp_utils::ExtractType(showPracticeButton), ::il2cpp_utils::ExtractType(actionButtonText), ::il2cpp_utils::ExtractType(noDataInfoPrefab), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(notAllowedCharacteristics)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollection, showPackHeader, showPlayerStats, showPracticeButton, actionButtonText, noDataInfoPrefab, allowedBeatmapDifficultyMask, notAllowedCharacteristics);
}
// Autogenerated method: LevelCollectionNavigationController.SelectLevel
void GlobalNamespace::LevelCollectionNavigationController::SelectLevel(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::SelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LevelCollectionNavigationController.SetDataForPack
void GlobalNamespace::LevelCollectionNavigationController::SetDataForPack(GlobalNamespace::IBeatmapLevelPack* levelPack, bool showPackHeader, bool showPlayerStats, bool showPracticeButton, ::Il2CppString* actionButtonText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::SetDataForPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataForPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPack), ::il2cpp_utils::ExtractType(showPackHeader), ::il2cpp_utils::ExtractType(showPlayerStats), ::il2cpp_utils::ExtractType(showPracticeButton), ::il2cpp_utils::ExtractType(actionButtonText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelPack, showPackHeader, showPlayerStats, showPracticeButton, actionButtonText);
}
// Autogenerated method: LevelCollectionNavigationController.SetDataForLevelCollection
void GlobalNamespace::LevelCollectionNavigationController::SetDataForLevelCollection(GlobalNamespace::IBeatmapLevelCollection* beatmapLevelCollection, bool showPlayerStats, bool showPracticeButton, ::Il2CppString* actionButtonText, UnityEngine::GameObject* noDataInfoPrefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::SetDataForLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataForLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelCollection), ::il2cpp_utils::ExtractType(showPlayerStats), ::il2cpp_utils::ExtractType(showPracticeButton), ::il2cpp_utils::ExtractType(actionButtonText), ::il2cpp_utils::ExtractType(noDataInfoPrefab)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelCollection, showPlayerStats, showPracticeButton, actionButtonText, noDataInfoPrefab);
}
// Autogenerated method: LevelCollectionNavigationController.RefreshDetail
void GlobalNamespace::LevelCollectionNavigationController::RefreshDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::RefreshDetail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.ClearSelected
void GlobalNamespace::LevelCollectionNavigationController::ClearSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::ClearSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.ShowLoading
void GlobalNamespace::LevelCollectionNavigationController::ShowLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::ShowLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.PresentViewControllersForPack
void GlobalNamespace::LevelCollectionNavigationController::PresentViewControllersForPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::PresentViewControllersForPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentViewControllersForPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.PresentViewControllersForLevelCollection
void GlobalNamespace::LevelCollectionNavigationController::PresentViewControllersForLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::PresentViewControllersForLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentViewControllersForLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.HideLoading
void GlobalNamespace::LevelCollectionNavigationController::HideLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HideLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.HideDetailViewController
void GlobalNamespace::LevelCollectionNavigationController::HideDetailViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HideDetailViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideDetailViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelCollectionViewControllerDidSelectLevel
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectLevel(GlobalNamespace::LevelCollectionViewController* viewController, GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionViewControllerDidSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, level);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelCollectionViewControllerDidSelectPack
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectPack(GlobalNamespace::LevelCollectionViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionViewControllerDidSelectPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelCollectionNavigationController.PresentDetailViewController
void GlobalNamespace::LevelCollectionNavigationController::PresentDetailViewController(HMUI::ViewController* viewController, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::PresentDetailViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentDetailViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, immediately);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerDidPressActionButton
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressActionButton(GlobalNamespace::StandardLevelDetailViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressActionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerDidPressActionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerDidPressPracticeButton
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressPracticeButton(GlobalNamespace::StandardLevelDetailViewController* viewController, GlobalNamespace::IBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressPracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerDidPressPracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, level);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerDidChangeDifficultyBeatmap
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidChangeDifficultyBeatmap(GlobalNamespace::StandardLevelDetailViewController* viewController, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidChangeDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(beatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, beatmap);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerDidPresentContent
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPresentContent(GlobalNamespace::StandardLevelDetailViewController* viewController, GlobalNamespace::StandardLevelDetailViewController::ContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPresentContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerDidPresentContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(contentType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, contentType);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerDidPressOpenLevelPackButton
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressOpenLevelPackButton(GlobalNamespace::StandardLevelDetailViewController* viewController, GlobalNamespace::IBeatmapLevelPack* levelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressOpenLevelPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerDidPressOpenLevelPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelPack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, levelPack);
}
// Autogenerated method: LevelCollectionNavigationController.HandleLevelDetailViewControllerLevelFavoriteStatusDidChange
void GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerLevelFavoriteStatusDidChange(GlobalNamespace::StandardLevelDetailViewController* viewController, bool favoriteStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::HandleLevelDetailViewControllerLevelFavoriteStatusDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDetailViewControllerLevelFavoriteStatusDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(favoriteStatus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, favoriteStatus);
}
// Autogenerated method: LevelCollectionNavigationController.DidActivate
void GlobalNamespace::LevelCollectionNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelCollectionNavigationController.DidDeactivate
void GlobalNamespace::LevelCollectionNavigationController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didChangeLevelDetailContentEvent
// Il2CppName: add_didChangeLevelDetailContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&LevelCollectionNavigationController::add_didChangeLevelDetailContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didChangeLevelDetailContentEvent
// Il2CppName: remove_didChangeLevelDetailContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&LevelCollectionNavigationController::remove_didChangeLevelDetailContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didSelectLevelPackEvent
// Il2CppName: add_didSelectLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelCollectionNavigationController::add_didSelectLevelPackEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didSelectLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didSelectLevelPackEvent
// Il2CppName: remove_didSelectLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelCollectionNavigationController::remove_didSelectLevelPackEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didSelectLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didPressActionButtonEvent
// Il2CppName: add_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>*)>(&LevelCollectionNavigationController::add_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didPressActionButtonEvent
// Il2CppName: remove_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>*)>(&LevelCollectionNavigationController::remove_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelCollectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didPressOpenPackButtonEvent
// Il2CppName: add_didPressOpenPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelCollectionNavigationController::add_didPressOpenPackButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didPressOpenPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didPressOpenPackButtonEvent
// Il2CppName: remove_didPressOpenPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelCollectionNavigationController::remove_didPressOpenPackButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didPressOpenPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didPressPracticeButtonEvent
// Il2CppName: add_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*)>(&LevelCollectionNavigationController::add_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didPressPracticeButtonEvent
// Il2CppName: remove_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*)>(&LevelCollectionNavigationController::remove_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::add_didChangeDifficultyBeatmapEvent
// Il2CppName: add_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&LevelCollectionNavigationController::add_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::remove_didChangeDifficultyBeatmapEvent
// Il2CppName: remove_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&LevelCollectionNavigationController::remove_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::get_selectedDifficultyBeatmap
// Il2CppName: get_selectedDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::get_selectedDifficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::get_selectedBeatmapLevel
// Il2CppName: get_selectedBeatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IPreviewBeatmapLevel* (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::get_selectedBeatmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "get_selectedBeatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::IAnnotatedBeatmapLevelCollection*, bool, bool, bool, ::Il2CppString*, UnityEngine::GameObject*, GlobalNamespace::BeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&LevelCollectionNavigationController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::SelectLevel
// Il2CppName: SelectLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&LevelCollectionNavigationController::SelectLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "SelectLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::SetDataForPack
// Il2CppName: SetDataForPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*, bool, bool, bool, ::Il2CppString*)>(&LevelCollectionNavigationController::SetDataForPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "SetDataForPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::SetDataForLevelCollection
// Il2CppName: SetDataForLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::IBeatmapLevelCollection*, bool, bool, ::Il2CppString*, UnityEngine::GameObject*)>(&LevelCollectionNavigationController::SetDataForLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "SetDataForLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelCollection*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::RefreshDetail
// Il2CppName: RefreshDetail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::RefreshDetail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "RefreshDetail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::ClearSelected
// Il2CppName: ClearSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::ClearSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "ClearSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::ShowLoading
// Il2CppName: ShowLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::ShowLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "ShowLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::PresentViewControllersForPack
// Il2CppName: PresentViewControllersForPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::PresentViewControllersForPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "PresentViewControllersForPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::PresentViewControllersForLevelCollection
// Il2CppName: PresentViewControllersForLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::PresentViewControllersForLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "PresentViewControllersForLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HideLoading
// Il2CppName: HideLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::HideLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HideLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HideDetailViewController
// Il2CppName: HideDetailViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::HideDetailViewController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HideDetailViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectLevel
// Il2CppName: HandleLevelCollectionViewControllerDidSelectLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*)>(&LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelCollectionViewControllerDidSelectLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectPack
// Il2CppName: HandleLevelCollectionViewControllerDidSelectPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::LevelCollectionViewController*)>(&LevelCollectionNavigationController::HandleLevelCollectionViewControllerDidSelectPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelCollectionViewControllerDidSelectPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionViewController*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::PresentDetailViewController
// Il2CppName: PresentDetailViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(HMUI::ViewController*, bool)>(&LevelCollectionNavigationController::PresentDetailViewController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "PresentDetailViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::ViewController*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressActionButton
// Il2CppName: HandleLevelDetailViewControllerDidPressActionButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressActionButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerDidPressActionButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressPracticeButton
// Il2CppName: HandleLevelDetailViewControllerDidPressPracticeButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressPracticeButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerDidPressPracticeButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerDidChangeDifficultyBeatmap
// Il2CppName: HandleLevelDetailViewControllerDidChangeDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerDidChangeDifficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPresentContent
// Il2CppName: HandleLevelDetailViewControllerDidPresentContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPresentContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerDidPresentContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController::ContentType>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressOpenLevelPackButton
// Il2CppName: HandleLevelDetailViewControllerDidPressOpenLevelPackButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerDidPressOpenLevelPackButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerDidPressOpenLevelPackButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::HandleLevelDetailViewControllerLevelFavoriteStatusDidChange
// Il2CppName: HandleLevelDetailViewControllerLevelFavoriteStatusDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(GlobalNamespace::StandardLevelDetailViewController*, bool)>(&LevelCollectionNavigationController::HandleLevelDetailViewControllerLevelFavoriteStatusDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "HandleLevelDetailViewControllerLevelFavoriteStatusDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(bool, bool, bool)>(&LevelCollectionNavigationController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)(bool, bool)>(&LevelCollectionNavigationController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::*)()>(&LevelCollectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCollectionNavigationController/<>c__DisplayClass51_0
#include "GlobalNamespace/LevelCollectionNavigationController_--c__DisplayClass51_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCollectionNavigationController/<>c__DisplayClass51_0.<PresentDetailViewController>b__0
void GlobalNamespace::LevelCollectionNavigationController::$$c__DisplayClass51_0::$PresentDetailViewController$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionNavigationController::$$c__DisplayClass51_0::<PresentDetailViewController>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentDetailViewController>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LevelCollectionNavigationController::$$c__DisplayClass51_0::$PresentDetailViewController$b__0
// Il2CppName: <PresentDetailViewController>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::$$c__DisplayClass51_0::*)()>(&LevelCollectionNavigationController::$$c__DisplayClass51_0::$PresentDetailViewController$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController::$$c__DisplayClass51_0*), "<PresentDetailViewController>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionNavigationController::$$c__DisplayClass51_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::$$c__DisplayClass51_0::*)()>(&LevelCollectionNavigationController::$$c__DisplayClass51_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController::$$c__DisplayClass51_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionNavigationController::$$c__DisplayClass51_0::*)()>(&LevelCollectionNavigationController::$$c__DisplayClass51_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionNavigationController::$$c__DisplayClass51_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelCollectionViewController
#include "GlobalNamespace/LevelCollectionViewController.hpp"
// Including type: LevelCollectionViewController/<SongPlayerCrossfadeToLevelAsync>d__24
#include "GlobalNamespace/LevelCollectionViewController_-SongPlayerCrossfadeToLevelAsync-d__24.hpp"
// Including type: LevelCollectionTableView
#include "GlobalNamespace/LevelCollectionTableView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: DataModels.Levels.PerceivedLoudnessPerLevelModel
#include "DataModels/Levels/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCollectionViewController.add_didSelectLevelEvent
void GlobalNamespace::LevelCollectionViewController::add_didSelectLevelEvent(System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionViewController.remove_didSelectLevelEvent
void GlobalNamespace::LevelCollectionViewController::remove_didSelectLevelEvent(System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionViewController.add_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionViewController::add_didSelectHeaderEvent(System::Action_1<GlobalNamespace::LevelCollectionViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionViewController.remove_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionViewController::remove_didSelectHeaderEvent(System::Action_1<GlobalNamespace::LevelCollectionViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionViewController.SetData
void GlobalNamespace::LevelCollectionViewController::SetData(GlobalNamespace::IBeatmapLevelCollection* beatmapLevelCollection, ::Il2CppString* headerText, UnityEngine::Sprite* headerSprite, bool sortLevels, UnityEngine::GameObject* noDataInfoPrefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelCollection), ::il2cpp_utils::ExtractType(headerText), ::il2cpp_utils::ExtractType(headerSprite), ::il2cpp_utils::ExtractType(sortLevels), ::il2cpp_utils::ExtractType(noDataInfoPrefab)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelCollection, headerText, headerSprite, sortLevels, noDataInfoPrefab);
}
// Autogenerated method: LevelCollectionViewController.SelectLevel
void GlobalNamespace::LevelCollectionViewController::SelectLevel(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::SelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LevelCollectionViewController.RefreshFavorites
void GlobalNamespace::LevelCollectionViewController::RefreshFavorites() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::RefreshFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionViewController.HandleLevelCollectionTableViewDidSelectLevel
void GlobalNamespace::LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectLevel(GlobalNamespace::LevelCollectionTableView* tableView, GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionTableViewDidSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, level);
}
// Autogenerated method: LevelCollectionViewController.SongPlayerCrossfadeToLevelAsync
void GlobalNamespace::LevelCollectionViewController::SongPlayerCrossfadeToLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::SongPlayerCrossfadeToLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SongPlayerCrossfadeToLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: LevelCollectionViewController.HandleLevelCollectionTableViewDidSelectPack
void GlobalNamespace::LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectPack(GlobalNamespace::LevelCollectionTableView* tableView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionTableViewDidSelectPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView);
}
// Autogenerated method: LevelCollectionViewController.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::LevelCollectionViewController::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionViewController.DidActivate
void GlobalNamespace::LevelCollectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelCollectionViewController.DidDeactivate
void GlobalNamespace::LevelCollectionViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: LevelCollectionViewController::add_didSelectLevelEvent
// Il2CppName: add_didSelectLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>*)>(&LevelCollectionViewController::add_didSelectLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "add_didSelectLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::remove_didSelectLevelEvent
// Il2CppName: remove_didSelectLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>*)>(&LevelCollectionViewController::remove_didSelectLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "remove_didSelectLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCollectionViewController*, GlobalNamespace::IPreviewBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::add_didSelectHeaderEvent
// Il2CppName: add_didSelectHeaderEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(System::Action_1<GlobalNamespace::LevelCollectionViewController*>*)>(&LevelCollectionViewController::add_didSelectHeaderEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "add_didSelectHeaderEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelCollectionViewController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::remove_didSelectHeaderEvent
// Il2CppName: remove_didSelectHeaderEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(System::Action_1<GlobalNamespace::LevelCollectionViewController*>*)>(&LevelCollectionViewController::remove_didSelectHeaderEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelCollectionViewController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(GlobalNamespace::IBeatmapLevelCollection*, ::Il2CppString*, UnityEngine::Sprite*, bool, UnityEngine::GameObject*)>(&LevelCollectionViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelCollection*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::SelectLevel
// Il2CppName: SelectLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&LevelCollectionViewController::SelectLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "SelectLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::RefreshFavorites
// Il2CppName: RefreshFavorites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)()>(&LevelCollectionViewController::RefreshFavorites)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "RefreshFavorites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectLevel
// Il2CppName: HandleLevelCollectionTableViewDidSelectLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(GlobalNamespace::LevelCollectionTableView*, GlobalNamespace::IPreviewBeatmapLevel*)>(&LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "HandleLevelCollectionTableViewDidSelectLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionTableView*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::SongPlayerCrossfadeToLevelAsync
// Il2CppName: SongPlayerCrossfadeToLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&LevelCollectionViewController::SongPlayerCrossfadeToLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "SongPlayerCrossfadeToLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectPack
// Il2CppName: HandleLevelCollectionTableViewDidSelectPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(GlobalNamespace::LevelCollectionTableView*)>(&LevelCollectionViewController::HandleLevelCollectionTableViewDidSelectPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "HandleLevelCollectionTableViewDidSelectPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionTableView*>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)()>(&LevelCollectionViewController::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(bool, bool, bool)>(&LevelCollectionViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)(bool, bool)>(&LevelCollectionViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)()>(&LevelCollectionViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::*)()>(&LevelCollectionViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCollectionViewController/<SongPlayerCrossfadeToLevelAsync>d__24
#include "GlobalNamespace/LevelCollectionViewController_-SongPlayerCrossfadeToLevelAsync-d__24.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCollectionViewController/<SongPlayerCrossfadeToLevelAsync>d__24.MoveNext
void GlobalNamespace::LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelCollectionViewController/<SongPlayerCrossfadeToLevelAsync>d__24.SetStateMachine
void GlobalNamespace::LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::*)()>(&LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelCollectionViewController::$SongPlayerCrossfadeToLevelAsync$d__24), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilteringNavigationController
#include "GlobalNamespace/LevelFilteringNavigationController.hpp"
// Including type: LevelFilteringNavigationController/<>c
#include "GlobalNamespace/LevelFilteringNavigationController_--c.hpp"
// Including type: LevelFilteringNavigationController/<>c__DisplayClass44_0
#include "GlobalNamespace/LevelFilteringNavigationController_--c__DisplayClass44_0.hpp"
// Including type: LevelFilteringNavigationController/<UpdateCustomSongs>d__45
#include "GlobalNamespace/LevelFilteringNavigationController_-UpdateCustomSongs-d__45.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SelectLevelCategoryViewController
#include "GlobalNamespace/SelectLevelCategoryViewController.hpp"
// Including type: AnnotatedBeatmapLevelCollectionsViewController
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsViewController.hpp"
// Including type: LevelSearchViewController
#include "GlobalNamespace/LevelSearchViewController.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelFilteringNavigationController.add_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.remove_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.add_didStartLoadingEvent
void GlobalNamespace::LevelFilteringNavigationController::add_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::add_didStartLoadingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didStartLoadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.remove_didStartLoadingEvent
void GlobalNamespace::LevelFilteringNavigationController::remove_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::remove_didStartLoadingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didStartLoadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.add_didPressAllSongsEvent
void GlobalNamespace::LevelFilteringNavigationController::add_didPressAllSongsEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::add_didPressAllSongsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressAllSongsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.remove_didPressAllSongsEvent
void GlobalNamespace::LevelFilteringNavigationController::remove_didPressAllSongsEvent(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::remove_didPressAllSongsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressAllSongsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilteringNavigationController.get_selectedBeatmapLevelPack
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::LevelFilteringNavigationController::get_selectedBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::get_selectedBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.get_selectedLevelCategory
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::LevelFilteringNavigationController::get_selectedLevelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::get_selectedLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.Setup
void GlobalNamespace::LevelFilteringNavigationController::Setup(GlobalNamespace::SongPackMask songPackMask, GlobalNamespace::IBeatmapLevelPack* levelPackToBeSelectedAfterPresent, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory startLevelCategory, bool hidePacksIfOneOrNone, bool enableCustomLevels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(levelPackToBeSelectedAfterPresent), ::il2cpp_utils::ExtractType(startLevelCategory), ::il2cpp_utils::ExtractType(hidePacksIfOneOrNone), ::il2cpp_utils::ExtractType(enableCustomLevels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackMask, levelPackToBeSelectedAfterPresent, startLevelCategory, hidePacksIfOneOrNone, enableCustomLevels);
}
// Autogenerated method: LevelFilteringNavigationController.SetupBeatmapLevelPacks
void GlobalNamespace::LevelFilteringNavigationController::SetupBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::SetupBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.LevelSearchViewControllerDidStartLoading
void GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading(GlobalNamespace::LevelSearchViewController* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSearchViewControllerDidStartLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: LevelFilteringNavigationController.LevelSearchViewControllerDidFilterBeatmapLevelCollection
void GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection, GlobalNamespace::BeatmapCharacteristicSO* preferredBeatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSearchViewControllerDidFilterBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection), ::il2cpp_utils::ExtractType(preferredBeatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollection, preferredBeatmapCharacteristic);
}
// Autogenerated method: LevelFilteringNavigationController.SelectLevelCategoryViewControllerDidSelectLevelCategory
void GlobalNamespace::LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory(GlobalNamespace::SelectLevelCategoryViewController* viewController, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory levelCategory) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevelCategoryViewControllerDidSelectLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelCategory)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, levelCategory);
}
// Autogenerated method: LevelFilteringNavigationController.UpdateSecondChildControllerContent
void GlobalNamespace::LevelFilteringNavigationController::UpdateSecondChildControllerContent(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory levelCategory) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::UpdateSecondChildControllerContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSecondChildControllerContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCategory)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCategory);
}
// Autogenerated method: LevelFilteringNavigationController.ShowPacksInSecondChildController
void GlobalNamespace::LevelFilteringNavigationController::ShowPacksInSecondChildController(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::ShowPacksInSecondChildController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowPacksInSecondChildController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelPacks);
}
// Autogenerated method: LevelFilteringNavigationController.ReplaceSecondViewController
void GlobalNamespace::LevelFilteringNavigationController::ReplaceSecondViewController(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::ReplaceSecondViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceSecondViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelFilteringNavigationController.HandlePlayerDataFavoriteLevelsSetDidChange
void GlobalNamespace::LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDataFavoriteLevelsSetDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.HandleIncreaseNumberOfGameplays
void GlobalNamespace::LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIncreaseNumberOfGameplays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection
void GlobalNamespace::LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollection);
}
// Autogenerated method: LevelFilteringNavigationController.SelectAnnotatedBeatmapLevelCollection
void GlobalNamespace::LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection(GlobalNamespace::IBeatmapLevelPack* levelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelPack);
}
// Autogenerated method: LevelFilteringNavigationController.UpdateCustomSongs
void GlobalNamespace::LevelFilteringNavigationController::UpdateCustomSongs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::UpdateCustomSongs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCustomSongs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController.<SetupBeatmapLevelPacks>b__32_0
bool GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::<SetupBeatmapLevelPacks>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupBeatmapLevelPacks>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pack);
}
// Autogenerated method: LevelFilteringNavigationController.<SetupBeatmapLevelPacks>b__32_1
bool GlobalNamespace::LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_1(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::<SetupBeatmapLevelPacks>b__32_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupBeatmapLevelPacks>b__32_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pack);
}
// Autogenerated method: LevelFilteringNavigationController.DidActivate
void GlobalNamespace::LevelFilteringNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelFilteringNavigationController.DidDeactivate
void GlobalNamespace::LevelFilteringNavigationController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: add_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&LevelFilteringNavigationController::add_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: remove_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&LevelFilteringNavigationController::remove_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_4<GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::add_didStartLoadingEvent
// Il2CppName: add_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&LevelFilteringNavigationController::add_didStartLoadingEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "add_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::remove_didStartLoadingEvent
// Il2CppName: remove_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&LevelFilteringNavigationController::remove_didStartLoadingEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "remove_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::add_didPressAllSongsEvent
// Il2CppName: add_didPressAllSongsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&LevelFilteringNavigationController::add_didPressAllSongsEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "add_didPressAllSongsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::remove_didPressAllSongsEvent
// Il2CppName: remove_didPressAllSongsEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*)>(&LevelFilteringNavigationController::remove_didPressAllSongsEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "remove_didPressAllSongsEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelFilteringNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::get_selectedBeatmapLevelPack
// Il2CppName: get_selectedBeatmapLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IBeatmapLevelPack* (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::get_selectedBeatmapLevelPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::get_selectedLevelCategory
// Il2CppName: get_selectedLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::get_selectedLevelCategory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "get_selectedLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::SongPackMask, GlobalNamespace::IBeatmapLevelPack*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, bool, bool)>(&LevelFilteringNavigationController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::SetupBeatmapLevelPacks
// Il2CppName: SetupBeatmapLevelPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::SetupBeatmapLevelPacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "SetupBeatmapLevelPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading
// Il2CppName: LevelSearchViewControllerDidStartLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::LevelSearchViewController*)>(&LevelFilteringNavigationController::LevelSearchViewControllerDidStartLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "LevelSearchViewControllerDidStartLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelSearchViewController*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection
// Il2CppName: LevelSearchViewControllerDidFilterBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*)>(&LevelFilteringNavigationController::LevelSearchViewControllerDidFilterBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "LevelSearchViewControllerDidFilterBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory
// Il2CppName: SelectLevelCategoryViewControllerDidSelectLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory)>(&LevelFilteringNavigationController::SelectLevelCategoryViewControllerDidSelectLevelCategory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "SelectLevelCategoryViewControllerDidSelectLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::UpdateSecondChildControllerContent
// Il2CppName: UpdateSecondChildControllerContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory)>(&LevelFilteringNavigationController::UpdateSecondChildControllerContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "UpdateSecondChildControllerContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::ShowPacksInSecondChildController
// Il2CppName: ShowPacksInSecondChildController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelFilteringNavigationController::ShowPacksInSecondChildController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "ShowPacksInSecondChildController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::ReplaceSecondViewController
// Il2CppName: ReplaceSecondViewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(HMUI::ViewController*)>(&LevelFilteringNavigationController::ReplaceSecondViewController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "ReplaceSecondViewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::ViewController*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange
// Il2CppName: HandlePlayerDataFavoriteLevelsSetDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::HandlePlayerDataFavoriteLevelsSetDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "HandlePlayerDataFavoriteLevelsSetDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays
// Il2CppName: HandleIncreaseNumberOfGameplays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::HandleIncreaseNumberOfGameplays)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "HandleIncreaseNumberOfGameplays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection
// Il2CppName: HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::IAnnotatedBeatmapLevelCollection*)>(&LevelFilteringNavigationController::HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "HandleAnnotatedBeatmapLevelCollectionsViewControllerDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection
// Il2CppName: SelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::SelectAnnotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "SelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::UpdateCustomSongs
// Il2CppName: UpdateCustomSongs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::UpdateCustomSongs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "UpdateCustomSongs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_0
// Il2CppName: <SetupBeatmapLevelPacks>b__32_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "<SetupBeatmapLevelPacks>b__32_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_1
// Il2CppName: <SetupBeatmapLevelPacks>b__32_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LevelFilteringNavigationController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::$SetupBeatmapLevelPacks$b__32_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "<SetupBeatmapLevelPacks>b__32_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(bool, bool, bool)>(&LevelFilteringNavigationController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)(bool, bool)>(&LevelFilteringNavigationController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::*)()>(&LevelFilteringNavigationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilteringNavigationController/<>c
#include "GlobalNamespace/LevelFilteringNavigationController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LevelFilteringNavigationController/<>c <>9
GlobalNamespace::LevelFilteringNavigationController::$$c* GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LevelFilteringNavigationController::$$c*>("", "LevelFilteringNavigationController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LevelFilteringNavigationController/<>c <>9
void GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9(GlobalNamespace::LevelFilteringNavigationController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LevelFilteringNavigationController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__31_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "LevelFilteringNavigationController/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__31_0
void GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__31_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LevelFilteringNavigationController/<>c", "<>9__31_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__44_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__44_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__44_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "LevelFilteringNavigationController/<>c", "<>9__44_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__44_0
void GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__44_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__44_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LevelFilteringNavigationController/<>c", "<>9__44_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__44_2
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__44_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_get_$$9__44_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "LevelFilteringNavigationController/<>c", "<>9__44_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__44_2
void GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__44_2(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::_set_$$9__44_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LevelFilteringNavigationController/<>c", "<>9__44_2", value)));
}
// Autogenerated method: LevelFilteringNavigationController/<>c..cctor
void GlobalNamespace::LevelFilteringNavigationController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelFilteringNavigationController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController/<>c.<Setup>b__31_0
::Il2CppString* GlobalNamespace::LevelFilteringNavigationController::$$c::$Setup$b__31_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::<Setup>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated method: LevelFilteringNavigationController/<>c.<SelectAnnotatedBeatmapLevelCollection>b__44_0
::Il2CppString* GlobalNamespace::LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::<SelectAnnotatedBeatmapLevelCollection>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SelectAnnotatedBeatmapLevelCollection>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated method: LevelFilteringNavigationController/<>c.<SelectAnnotatedBeatmapLevelCollection>b__44_2
::Il2CppString* GlobalNamespace::LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_2(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c::<SelectAnnotatedBeatmapLevelCollection>b__44_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SelectAnnotatedBeatmapLevelCollection>b__44_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LevelFilteringNavigationController::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c::$Setup$b__31_0
// Il2CppName: <Setup>b__31_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelFilteringNavigationController::$$c::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::$$c::$Setup$b__31_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), "<Setup>b__31_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_0
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__44_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelFilteringNavigationController::$$c::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), "<SelectAnnotatedBeatmapLevelCollection>b__44_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_2
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__44_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelFilteringNavigationController::$$c::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelFilteringNavigationController::$$c::$SelectAnnotatedBeatmapLevelCollection$b__44_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), "<SelectAnnotatedBeatmapLevelCollection>b__44_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$$c::*)()>(&LevelFilteringNavigationController::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$$c::*)()>(&LevelFilteringNavigationController::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilteringNavigationController/<>c__DisplayClass44_0
#include "GlobalNamespace/LevelFilteringNavigationController_--c__DisplayClass44_0.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelFilteringNavigationController/<>c__DisplayClass44_0.<SelectAnnotatedBeatmapLevelCollection>b__1
bool GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__1(::Il2CppString* packID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::<SelectAnnotatedBeatmapLevelCollection>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SelectAnnotatedBeatmapLevelCollection>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packID);
}
// Autogenerated method: LevelFilteringNavigationController/<>c__DisplayClass44_0.<SelectAnnotatedBeatmapLevelCollection>b__3
bool GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__3(::Il2CppString* packID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$$c__DisplayClass44_0::<SelectAnnotatedBeatmapLevelCollection>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SelectAnnotatedBeatmapLevelCollection>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packID);
}
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__1
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LevelFilteringNavigationController::$$c__DisplayClass44_0::*)(::Il2CppString*)>(&LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c__DisplayClass44_0*), "<SelectAnnotatedBeatmapLevelCollection>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__3
// Il2CppName: <SelectAnnotatedBeatmapLevelCollection>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LevelFilteringNavigationController::$$c__DisplayClass44_0::*)(::Il2CppString*)>(&LevelFilteringNavigationController::$$c__DisplayClass44_0::$SelectAnnotatedBeatmapLevelCollection$b__3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c__DisplayClass44_0*), "<SelectAnnotatedBeatmapLevelCollection>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$$c__DisplayClass44_0::*)()>(&LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c__DisplayClass44_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$$c__DisplayClass44_0::*)()>(&LevelFilteringNavigationController::$$c__DisplayClass44_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$$c__DisplayClass44_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelFilteringNavigationController/<UpdateCustomSongs>d__45
#include "GlobalNamespace/LevelFilteringNavigationController_-UpdateCustomSongs-d__45.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelFilteringNavigationController/<UpdateCustomSongs>d__45.MoveNext
void GlobalNamespace::LevelFilteringNavigationController::$UpdateCustomSongs$d__45::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$UpdateCustomSongs$d__45::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelFilteringNavigationController/<UpdateCustomSongs>d__45.SetStateMachine
void GlobalNamespace::LevelFilteringNavigationController::$UpdateCustomSongs$d__45::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilteringNavigationController::$UpdateCustomSongs$d__45::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelFilteringNavigationController::$UpdateCustomSongs$d__45::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$UpdateCustomSongs$d__45::*)()>(&LevelFilteringNavigationController::$UpdateCustomSongs$d__45::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$UpdateCustomSongs$d__45), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelFilteringNavigationController::$UpdateCustomSongs$d__45::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelFilteringNavigationController::$UpdateCustomSongs$d__45::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelFilteringNavigationController::$UpdateCustomSongs$d__45::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelFilteringNavigationController::$UpdateCustomSongs$d__45), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelPackDetailViewController
#include "GlobalNamespace/LevelPackDetailViewController.hpp"
// Including type: LevelPackDetailViewController/ContentType
#include "GlobalNamespace/LevelPackDetailViewController_ContentType.hpp"
// Including type: LevelPackDetailViewController/<>c__DisplayClass15_0
#include "GlobalNamespace/LevelPackDetailViewController_--c__DisplayClass15_0.hpp"
// Including type: LevelPackDetailViewController/<RefreshAvailabilityAsync>d__18
#include "GlobalNamespace/LevelPackDetailViewController_-RefreshAvailabilityAsync-d__18.hpp"
// Including type: LevelPackDetailViewController/<OpenLevelPackProductStoreAsync>d__20
#include "GlobalNamespace/LevelPackDetailViewController_-OpenLevelPackProductStoreAsync-d__20.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: DlcPromoExperimentModel
#include "GlobalNamespace/DlcPromoExperimentModel.hpp"
// Including type: EventBinder
#include "GlobalNamespace/EventBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelPackDetailViewController.SetData
void GlobalNamespace::LevelPackDetailViewController::SetData(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack);
}
// Autogenerated method: LevelPackDetailViewController.RefreshAvailabilityAsync
void GlobalNamespace::LevelPackDetailViewController::RefreshAvailabilityAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController.BuyPackButtonWasPressed
void GlobalNamespace::LevelPackDetailViewController::BuyPackButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::BuyPackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController.OpenLevelPackProductStoreAsync
void GlobalNamespace::LevelPackDetailViewController::OpenLevelPackProductStoreAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::OpenLevelPackProductStoreAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController.ShowContent
void GlobalNamespace::LevelPackDetailViewController::ShowContent(GlobalNamespace::LevelPackDetailViewController::ContentType contentType, ::Il2CppString* errorText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ShowContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(errorText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contentType, errorText);
}
// Autogenerated method: LevelPackDetailViewController.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::LevelPackDetailViewController::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController.<DidActivate>b__15_0
void GlobalNamespace::LevelPackDetailViewController::$DidActivate$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::<DidActivate>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController.DidActivate
void GlobalNamespace::LevelPackDetailViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelPackDetailViewController.DidDeactivate
void GlobalNamespace::LevelPackDetailViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LevelPackDetailViewController.OnDestroy
void GlobalNamespace::LevelPackDetailViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LevelPackDetailViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)(GlobalNamespace::IBeatmapLevelPack*)>(&LevelPackDetailViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::RefreshAvailabilityAsync
// Il2CppName: RefreshAvailabilityAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::RefreshAvailabilityAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "RefreshAvailabilityAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::BuyPackButtonWasPressed
// Il2CppName: BuyPackButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::BuyPackButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "BuyPackButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::OpenLevelPackProductStoreAsync
// Il2CppName: OpenLevelPackProductStoreAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::OpenLevelPackProductStoreAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::ShowContent
// Il2CppName: ShowContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)(GlobalNamespace::LevelPackDetailViewController::ContentType, ::Il2CppString*)>(&LevelPackDetailViewController::ShowContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "ShowContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelPackDetailViewController::ContentType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::$DidActivate$b__15_0
// Il2CppName: <DidActivate>b__15_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::$DidActivate$b__15_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "<DidActivate>b__15_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)(bool, bool, bool)>(&LevelPackDetailViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)(bool, bool)>(&LevelPackDetailViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::*)()>(&LevelPackDetailViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelPackDetailViewController/ContentType
#include "GlobalNamespace/LevelPackDetailViewController_ContentType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelPackDetailViewController/ContentType Loading
GlobalNamespace::LevelPackDetailViewController::ContentType GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelPackDetailViewController::ContentType>("", "LevelPackDetailViewController/ContentType", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public LevelPackDetailViewController/ContentType Loading
void GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Loading(GlobalNamespace::LevelPackDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelPackDetailViewController/ContentType", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public LevelPackDetailViewController/ContentType Owned
GlobalNamespace::LevelPackDetailViewController::ContentType GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Owned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Owned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelPackDetailViewController::ContentType>("", "LevelPackDetailViewController/ContentType", "Owned"));
}
// Autogenerated static field setter
// Set static field: static public LevelPackDetailViewController/ContentType Owned
void GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Owned(GlobalNamespace::LevelPackDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Owned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelPackDetailViewController/ContentType", "Owned", value));
}
// Autogenerated static field getter
// Get static field: static public LevelPackDetailViewController/ContentType Buy
GlobalNamespace::LevelPackDetailViewController::ContentType GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Buy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Buy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelPackDetailViewController::ContentType>("", "LevelPackDetailViewController/ContentType", "Buy"));
}
// Autogenerated static field setter
// Set static field: static public LevelPackDetailViewController/ContentType Buy
void GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Buy(GlobalNamespace::LevelPackDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Buy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelPackDetailViewController/ContentType", "Buy", value));
}
// Autogenerated static field getter
// Get static field: static public LevelPackDetailViewController/ContentType Error
GlobalNamespace::LevelPackDetailViewController::ContentType GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelPackDetailViewController::ContentType>("", "LevelPackDetailViewController/ContentType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public LevelPackDetailViewController/ContentType Error
void GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Error(GlobalNamespace::LevelPackDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::ContentType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelPackDetailViewController/ContentType", "Error", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelPackDetailViewController/<>c__DisplayClass15_0
#include "GlobalNamespace/LevelPackDetailViewController_--c__DisplayClass15_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelPackDetailViewController/<>c__DisplayClass15_0.<DidActivate>b__1
void GlobalNamespace::LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$$c__DisplayClass15_0::<DidActivate>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController/<>c__DisplayClass15_0.<DidActivate>b__2
void GlobalNamespace::LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$$c__DisplayClass15_0::<DidActivate>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__1
// Il2CppName: <DidActivate>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$$c__DisplayClass15_0::*)()>(&LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$$c__DisplayClass15_0*), "<DidActivate>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__2
// Il2CppName: <DidActivate>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$$c__DisplayClass15_0::*)()>(&LevelPackDetailViewController::$$c__DisplayClass15_0::$DidActivate$b__2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$$c__DisplayClass15_0*), "<DidActivate>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::$$c__DisplayClass15_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$$c__DisplayClass15_0::*)()>(&LevelPackDetailViewController::$$c__DisplayClass15_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$$c__DisplayClass15_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$$c__DisplayClass15_0::*)()>(&LevelPackDetailViewController::$$c__DisplayClass15_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$$c__DisplayClass15_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelPackDetailViewController/<RefreshAvailabilityAsync>d__18
#include "GlobalNamespace/LevelPackDetailViewController_-RefreshAvailabilityAsync-d__18.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelPackDetailViewController/<RefreshAvailabilityAsync>d__18.MoveNext
void GlobalNamespace::LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController/<RefreshAvailabilityAsync>d__18.SetStateMachine
void GlobalNamespace::LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::*)()>(&LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$RefreshAvailabilityAsync$d__18), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelPackDetailViewController/<OpenLevelPackProductStoreAsync>d__20
#include "GlobalNamespace/LevelPackDetailViewController_-OpenLevelPackProductStoreAsync-d__20.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelPackDetailViewController/<OpenLevelPackProductStoreAsync>d__20.MoveNext
void GlobalNamespace::LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelPackDetailViewController/<OpenLevelPackProductStoreAsync>d__20.SetStateMachine
void GlobalNamespace::LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::*)()>(&LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelPackDetailViewController::$OpenLevelPackProductStoreAsync$d__20), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelSearchViewController
#include "GlobalNamespace/LevelSearchViewController.hpp"
// Including type: LevelSearchViewController/BeatmapLevelPackCollection
#include "GlobalNamespace/LevelSearchViewController_BeatmapLevelPackCollection.hpp"
// Including type: LevelSearchViewController/<UpdateBeatmapLevelPackCollectionAsync>d__30
#include "GlobalNamespace/LevelSearchViewController_-UpdateBeatmapLevelPackCollectionAsync-d__30.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelSearchViewController.add_didPressSearchButtonEvent
void GlobalNamespace::LevelSearchViewController::add_didPressSearchButtonEvent(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::add_didPressSearchButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressSearchButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.remove_didPressSearchButtonEvent
void GlobalNamespace::LevelSearchViewController::remove_didPressSearchButtonEvent(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::remove_didPressSearchButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressSearchButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.add_didFilterBeatmapLevelCollectionEvent
void GlobalNamespace::LevelSearchViewController::add_didFilterBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::add_didFilterBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFilterBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.remove_didFilterBeatmapLevelCollectionEvent
void GlobalNamespace::LevelSearchViewController::remove_didFilterBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::remove_didFilterBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFilterBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.add_didStartLoadingEvent
void GlobalNamespace::LevelSearchViewController::add_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelSearchViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::add_didStartLoadingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didStartLoadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.remove_didStartLoadingEvent
void GlobalNamespace::LevelSearchViewController::remove_didStartLoadingEvent(System::Action_1<GlobalNamespace::LevelSearchViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::remove_didStartLoadingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didStartLoadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSearchViewController.Setup
void GlobalNamespace::LevelSearchViewController::Setup(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelPacks);
}
// Autogenerated method: LevelSearchViewController.ResetFilterParams
void GlobalNamespace::LevelSearchViewController::ResetFilterParams(bool onlyFavorites) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::ResetFilterParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFilterParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyFavorites)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, onlyFavorites);
}
// Autogenerated method: LevelSearchViewController.UpdateSearchLevelFilterParams
void GlobalNamespace::LevelSearchViewController::UpdateSearchLevelFilterParams(GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::UpdateSearchLevelFilterParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSearchLevelFilterParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelFilterParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelFilterParams);
}
// Autogenerated method: LevelSearchViewController.ResetCurrentFilterParams
void GlobalNamespace::LevelSearchViewController::ResetCurrentFilterParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::ResetCurrentFilterParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCurrentFilterParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.UpdateBeatmapLevelPackCollectionAsync
void GlobalNamespace::LevelSearchViewController::UpdateBeatmapLevelPackCollectionAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::UpdateBeatmapLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBeatmapLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.SearchTextInputFieldViewOnValueChanged
void GlobalNamespace::LevelSearchViewController::SearchTextInputFieldViewOnValueChanged(HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::SearchTextInputFieldViewOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchTextInputFieldViewOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputFieldView)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputFieldView);
}
// Autogenerated method: LevelSearchViewController.UpdateCurrentFilterParams
void GlobalNamespace::LevelSearchViewController::UpdateCurrentFilterParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::UpdateCurrentFilterParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurrentFilterParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.RefreshAfterIncreaseNumberOfGameplay
void GlobalNamespace::LevelSearchViewController::RefreshAfterIncreaseNumberOfGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::RefreshAfterIncreaseNumberOfGameplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAfterIncreaseNumberOfGameplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.Refresh
void GlobalNamespace::LevelSearchViewController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.LocalizedLevelFilterParamsDescription
::Il2CppString* GlobalNamespace::LevelSearchViewController::LocalizedLevelFilterParamsDescription(GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::LocalizedLevelFilterParamsDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalizedLevelFilterParamsDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelFilterParams)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, levelFilterParams);
}
// Autogenerated method: LevelSearchViewController.<DidActivate>b__27_0
void GlobalNamespace::LevelSearchViewController::$DidActivate$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::<DidActivate>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.<DidActivate>b__27_1
void GlobalNamespace::LevelSearchViewController::$DidActivate$b__27_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::<DidActivate>b__27_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController.DidActivate
void GlobalNamespace::LevelSearchViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelSearchViewController.DidDeactivate
void GlobalNamespace::LevelSearchViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: LevelSearchViewController::add_didPressSearchButtonEvent
// Il2CppName: add_didPressSearchButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>*)>(&LevelSearchViewController::add_didPressSearchButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "add_didPressSearchButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::remove_didPressSearchButtonEvent
// Il2CppName: remove_didPressSearchButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>*)>(&LevelSearchViewController::remove_didPressSearchButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "remove_didPressSearchButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSearchViewController*, GlobalNamespace::LevelFilterParams*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::add_didFilterBeatmapLevelCollectionEvent
// Il2CppName: add_didFilterBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&LevelSearchViewController::add_didFilterBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "add_didFilterBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::remove_didFilterBeatmapLevelCollectionEvent
// Il2CppName: remove_didFilterBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>*)>(&LevelSearchViewController::remove_didFilterBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "remove_didFilterBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::add_didStartLoadingEvent
// Il2CppName: add_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_1<GlobalNamespace::LevelSearchViewController*>*)>(&LevelSearchViewController::add_didStartLoadingEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "add_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelSearchViewController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::remove_didStartLoadingEvent
// Il2CppName: remove_didStartLoadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(System::Action_1<GlobalNamespace::LevelSearchViewController*>*)>(&LevelSearchViewController::remove_didStartLoadingEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "remove_didStartLoadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelSearchViewController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(::Array<GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelSearchViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::ResetFilterParams
// Il2CppName: ResetFilterParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(bool)>(&LevelSearchViewController::ResetFilterParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "ResetFilterParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::UpdateSearchLevelFilterParams
// Il2CppName: UpdateSearchLevelFilterParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(GlobalNamespace::LevelFilterParams*)>(&LevelSearchViewController::UpdateSearchLevelFilterParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "UpdateSearchLevelFilterParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilterParams*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::ResetCurrentFilterParams
// Il2CppName: ResetCurrentFilterParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::ResetCurrentFilterParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "ResetCurrentFilterParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::UpdateBeatmapLevelPackCollectionAsync
// Il2CppName: UpdateBeatmapLevelPackCollectionAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::UpdateBeatmapLevelPackCollectionAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "UpdateBeatmapLevelPackCollectionAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::SearchTextInputFieldViewOnValueChanged
// Il2CppName: SearchTextInputFieldViewOnValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(HMUI::InputFieldView*)>(&LevelSearchViewController::SearchTextInputFieldViewOnValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "SearchTextInputFieldViewOnValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::InputFieldView*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::UpdateCurrentFilterParams
// Il2CppName: UpdateCurrentFilterParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::UpdateCurrentFilterParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "UpdateCurrentFilterParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::RefreshAfterIncreaseNumberOfGameplay
// Il2CppName: RefreshAfterIncreaseNumberOfGameplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::RefreshAfterIncreaseNumberOfGameplay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "RefreshAfterIncreaseNumberOfGameplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::LocalizedLevelFilterParamsDescription
// Il2CppName: LocalizedLevelFilterParamsDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelSearchViewController::*)(GlobalNamespace::LevelFilterParams*)>(&LevelSearchViewController::LocalizedLevelFilterParamsDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "LocalizedLevelFilterParamsDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilterParams*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::$DidActivate$b__27_0
// Il2CppName: <DidActivate>b__27_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::$DidActivate$b__27_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "<DidActivate>b__27_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::$DidActivate$b__27_1
// Il2CppName: <DidActivate>b__27_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::$DidActivate$b__27_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "<DidActivate>b__27_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(bool, bool, bool)>(&LevelSearchViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)(bool, bool)>(&LevelSearchViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::*)()>(&LevelSearchViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelSearchViewController/BeatmapLevelPackCollection
#include "GlobalNamespace/LevelSearchViewController_BeatmapLevelPackCollection.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelSearchViewController/BeatmapLevelPackCollection.get_collectionName
::Il2CppString* GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController/BeatmapLevelPackCollection.get_coverImage
UnityEngine::Sprite* GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController/BeatmapLevelPackCollection.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController/BeatmapLevelPackCollection.set_beatmapLevelCollection
void GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::set_beatmapLevelCollection(GlobalNamespace::IBeatmapLevelCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::BeatmapLevelPackCollection::set_beatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: LevelSearchViewController::BeatmapLevelPackCollection::get_collectionName
// Il2CppName: get_collectionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelSearchViewController::BeatmapLevelPackCollection::*)()>(&LevelSearchViewController::BeatmapLevelPackCollection::get_collectionName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), "get_collectionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::BeatmapLevelPackCollection::get_coverImage
// Il2CppName: get_coverImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (LevelSearchViewController::BeatmapLevelPackCollection::*)()>(&LevelSearchViewController::BeatmapLevelPackCollection::get_coverImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), "get_coverImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::BeatmapLevelPackCollection::get_beatmapLevelCollection
// Il2CppName: get_beatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IBeatmapLevelCollection* (LevelSearchViewController::BeatmapLevelPackCollection::*)()>(&LevelSearchViewController::BeatmapLevelPackCollection::get_beatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), "get_beatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::BeatmapLevelPackCollection::set_beatmapLevelCollection
// Il2CppName: set_beatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::BeatmapLevelPackCollection::*)(GlobalNamespace::IBeatmapLevelCollection*)>(&LevelSearchViewController::BeatmapLevelPackCollection::set_beatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), "set_beatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelCollection*>()});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::BeatmapLevelPackCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::BeatmapLevelPackCollection::*)(GlobalNamespace::IBeatmapLevelCollection*)>(&LevelSearchViewController::BeatmapLevelPackCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelCollection*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::BeatmapLevelPackCollection::*)(GlobalNamespace::IBeatmapLevelCollection*)>(&LevelSearchViewController::BeatmapLevelPackCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::BeatmapLevelPackCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelCollection*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelSearchViewController/<UpdateBeatmapLevelPackCollectionAsync>d__30
#include "GlobalNamespace/LevelSearchViewController_-UpdateBeatmapLevelPackCollectionAsync-d__30.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelSearchViewController/<UpdateBeatmapLevelPackCollectionAsync>d__30.MoveNext
void GlobalNamespace::LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelSearchViewController/<UpdateBeatmapLevelPackCollectionAsync>d__30.SetStateMachine
void GlobalNamespace::LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::*)()>(&LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSearchViewController::$UpdateBeatmapLevelPackCollectionAsync$d__30), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SearchFilterParamsViewController
#include "GlobalNamespace/SearchFilterParamsViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: BeatmapCharacteristicsDropdown
#include "GlobalNamespace/BeatmapCharacteristicsDropdown.hpp"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SearchFilterParamsViewController.add_didFinishEvent
void GlobalNamespace::SearchFilterParamsViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SearchFilterParamsViewController.remove_didFinishEvent
void GlobalNamespace::SearchFilterParamsViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SearchFilterParamsViewController.Setup
void GlobalNamespace::SearchFilterParamsViewController::Setup(GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelFilterParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelFilterParams);
}
// Autogenerated method: SearchFilterParamsViewController.OkButtonPressed
void GlobalNamespace::SearchFilterParamsViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SearchFilterParamsViewController.MinBpmControllerValueDidChange
void GlobalNamespace::SearchFilterParamsViewController::MinBpmControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* minBpmController, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::MinBpmControllerValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MinBpmControllerValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minBpmController), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, minBpmController, value);
}
// Autogenerated method: SearchFilterParamsViewController.MaxBpmControllerValueDidChange
void GlobalNamespace::SearchFilterParamsViewController::MaxBpmControllerValueDidChange(GlobalNamespace::FormattedFloatListSettingsController* maxBpmController, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::MaxBpmControllerValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxBpmControllerValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBpmController), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maxBpmController, value);
}
// Autogenerated method: SearchFilterParamsViewController.Refresh
void GlobalNamespace::SearchFilterParamsViewController::Refresh(GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelFilterParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelFilterParams);
}
// Autogenerated method: SearchFilterParamsViewController.DidActivate
void GlobalNamespace::SearchFilterParamsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SearchFilterParamsViewController.DidDeactivate
void GlobalNamespace::SearchFilterParamsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SearchFilterParamsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: SearchFilterParamsViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>*)>(&SearchFilterParamsViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>*>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>*)>(&SearchFilterParamsViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SearchFilterParamsViewController*, GlobalNamespace::LevelFilterParams*>*>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(GlobalNamespace::LevelFilterParams*)>(&SearchFilterParamsViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilterParams*>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::OkButtonPressed
// Il2CppName: OkButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)()>(&SearchFilterParamsViewController::OkButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "OkButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::MinBpmControllerValueDidChange
// Il2CppName: MinBpmControllerValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(GlobalNamespace::FormattedFloatListSettingsController*, float)>(&SearchFilterParamsViewController::MinBpmControllerValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "MinBpmControllerValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::FormattedFloatListSettingsController*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::MaxBpmControllerValueDidChange
// Il2CppName: MaxBpmControllerValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(GlobalNamespace::FormattedFloatListSettingsController*, float)>(&SearchFilterParamsViewController::MaxBpmControllerValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "MaxBpmControllerValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::FormattedFloatListSettingsController*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(GlobalNamespace::LevelFilterParams*)>(&SearchFilterParamsViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilterParams*>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(bool, bool, bool)>(&SearchFilterParamsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)(bool, bool)>(&SearchFilterParamsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SearchFilterParamsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)()>(&SearchFilterParamsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SearchFilterParamsViewController::*)()>(&SearchFilterParamsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SearchFilterParamsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectLevelCategoryViewController
#include "GlobalNamespace/SelectLevelCategoryViewController.hpp"
// Including type: SelectLevelCategoryViewController/LevelCategoryInfo
#include "GlobalNamespace/SelectLevelCategoryViewController_LevelCategoryInfo.hpp"
// Including type: SelectLevelCategoryViewController/<>c__DisplayClass11_0
#include "GlobalNamespace/SelectLevelCategoryViewController_--c__DisplayClass11_0.hpp"
// Including type: SelectLevelCategoryViewController/<>c
#include "GlobalNamespace/SelectLevelCategoryViewController_--c.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectLevelCategoryViewController.add_didSelectLevelCategoryEvent
void GlobalNamespace::SelectLevelCategoryViewController::add_didSelectLevelCategoryEvent(System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::add_didSelectLevelCategoryEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelCategoryEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLevelCategoryViewController.remove_didSelectLevelCategoryEvent
void GlobalNamespace::SelectLevelCategoryViewController::remove_didSelectLevelCategoryEvent(System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::remove_didSelectLevelCategoryEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelCategoryEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLevelCategoryViewController.get_selectedLevelCategory
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::get_selectedLevelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::get_selectedLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(this, ___internal__method);
}
// Autogenerated method: SelectLevelCategoryViewController.Setup
void GlobalNamespace::SelectLevelCategoryViewController::Setup(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory selectedCategory, ::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* enabledLevelCategories) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedCategory), ::il2cpp_utils::ExtractType(enabledLevelCategories)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selectedCategory, enabledLevelCategories);
}
// Autogenerated method: SelectLevelCategoryViewController.LevelFilterCategoryIconSegmentedControlDidSelectCell
void GlobalNamespace::SelectLevelCategoryViewController::LevelFilterCategoryIconSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelFilterCategoryIconSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFilterCategoryIconSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, index);
}
// Autogenerated method: SelectLevelCategoryViewController.DidActivate
void GlobalNamespace::SelectLevelCategoryViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SelectLevelCategoryViewController.DidDeactivate
void GlobalNamespace::SelectLevelCategoryViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: SelectLevelCategoryViewController::add_didSelectLevelCategoryEvent
// Il2CppName: add_didSelectLevelCategoryEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*)>(&SelectLevelCategoryViewController::add_didSelectLevelCategoryEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "add_didSelectLevelCategoryEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::remove_didSelectLevelCategoryEvent
// Il2CppName: remove_didSelectLevelCategoryEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*)>(&SelectLevelCategoryViewController::remove_didSelectLevelCategoryEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "remove_didSelectLevelCategoryEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SelectLevelCategoryViewController*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::get_selectedLevelCategory
// Il2CppName: get_selectedLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory (SelectLevelCategoryViewController::*)()>(&SelectLevelCategoryViewController::get_selectedLevelCategory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "get_selectedLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, ::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*)>(&SelectLevelCategoryViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::LevelFilterCategoryIconSegmentedControlDidSelectCell
// Il2CppName: LevelFilterCategoryIconSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(HMUI::SegmentedControl*, int)>(&SelectLevelCategoryViewController::LevelFilterCategoryIconSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "LevelFilterCategoryIconSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(bool, bool, bool)>(&SelectLevelCategoryViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)(bool, bool)>(&SelectLevelCategoryViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)()>(&SelectLevelCategoryViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::*)()>(&SelectLevelCategoryViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelCategoryViewController/LevelCategory
#include "GlobalNamespace/SelectLevelCategoryViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory None
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "None"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory None
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_None(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "None", value));
}
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory OstAndExtras
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_OstAndExtras() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_OstAndExtras");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "OstAndExtras"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory OstAndExtras
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_OstAndExtras(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_OstAndExtras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "OstAndExtras", value));
}
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory MusicPacks
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_MusicPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_MusicPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "MusicPacks"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory MusicPacks
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_MusicPacks(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_MusicPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "MusicPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory CustomSongs
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_CustomSongs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_CustomSongs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "CustomSongs"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory CustomSongs
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_CustomSongs(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_CustomSongs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "CustomSongs", value));
}
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory Favorites
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_Favorites() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_Favorites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "Favorites"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory Favorites
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_Favorites(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_Favorites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "Favorites", value));
}
// Autogenerated static field getter
// Get static field: static public SelectLevelCategoryViewController/LevelCategory All
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>("", "SelectLevelCategoryViewController/LevelCategory", "All"));
}
// Autogenerated static field setter
// Set static field: static public SelectLevelCategoryViewController/LevelCategory All
void GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_All(GlobalNamespace::SelectLevelCategoryViewController::LevelCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::LevelCategory::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/LevelCategory", "All", value));
}
