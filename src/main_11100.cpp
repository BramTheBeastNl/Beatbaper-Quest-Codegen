// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.LoadSceneRelationship
#include "Zenject/LoadSceneRelationship.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship None
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "None"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship None
void Zenject::LoadSceneRelationship::_set_None(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship Child
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "Child"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship Child
void Zenject::LoadSceneRelationship::_set_Child(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.LoadSceneRelationship Sibling
Zenject::LoadSceneRelationship Zenject::LoadSceneRelationship::_get_Sibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_Sibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LoadSceneRelationship>("Zenject", "LoadSceneRelationship", "Sibling"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.LoadSceneRelationship Sibling
void Zenject::LoadSceneRelationship::_set_Sibling(Zenject::LoadSceneRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_Sibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "LoadSceneRelationship", "Sibling", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int Zenject::LoadSceneRelationship::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void Zenject::LoadSceneRelationship::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LoadSceneRelationship::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenjectSceneLoader
#include "Zenject/ZenjectSceneLoader.hpp"
// Including type: Zenject.ProjectKernel
#include "Zenject/ProjectKernel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.LoadSceneRelationship
#include "Zenject/LoadSceneRelationship.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.ProjectKernel _projectKernel
Zenject::ProjectKernel* Zenject::ZenjectSceneLoader::_get__projectKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::_get__projectKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_projectKernel"))->offset;
  return *reinterpret_cast<Zenject::ProjectKernel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.ProjectKernel _projectKernel
void Zenject::ZenjectSceneLoader::_set__projectKernel(Zenject::ProjectKernel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::_set__projectKernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_projectKernel"))->offset;
  *reinterpret_cast<Zenject::ProjectKernel**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _sceneContainer
Zenject::DiContainer* Zenject::ZenjectSceneLoader::_get__sceneContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::_get__sceneContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneContainer"))->offset;
  return *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.DiContainer _sceneContainer
void Zenject::ZenjectSceneLoader::_set__sceneContainer(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::_set__sceneContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneContainer"))->offset;
  *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneName);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneName, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode), ::il2cpp_utils::ExtractType(extraBindingsLate)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneName);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneName, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindingsEarly, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindingsEarly), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode), ::il2cpp_utils::ExtractType(extraBindingsLate)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneName, loadMode, extraBindingsEarly, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.PrepareForLoadScene
void Zenject::ZenjectSceneLoader::PrepareForLoadScene(UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindingsEarly, System::Action_1<Zenject::DiContainer*>* extraBindings, System::Action_1<Zenject::DiContainer*>* extraBindingsLate, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::PrepareForLoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForLoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindingsEarly), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(extraBindingsLate), ::il2cpp_utils::ExtractType(containerMode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, loadMode, extraBindingsEarly, extraBindings, extraBindingsLate, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneIndex);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneIndex, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadScene
void Zenject::ZenjectSceneLoader::LoadScene(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode), ::il2cpp_utils::ExtractType(extraBindingsLate)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneIndex);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneIndex, loadMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode);
}
// Autogenerated method: Zenject.ZenjectSceneLoader.LoadSceneAsync
UnityEngine::AsyncOperation* Zenject::ZenjectSceneLoader::LoadSceneAsync(int sceneIndex, UnityEngine::SceneManagement::LoadSceneMode loadMode, System::Action_1<Zenject::DiContainer*>* extraBindings, Zenject::LoadSceneRelationship containerMode, System::Action_1<Zenject::DiContainer*>* extraBindingsLate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectSceneLoader::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(extraBindings), ::il2cpp_utils::ExtractType(containerMode), ::il2cpp_utils::ExtractType(extraBindingsLate)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, sceneIndex, loadMode, extraBindings, containerMode, extraBindingsLate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectStateMachineBehaviourAutoInjecter
#include "Zenject/ZenjectStateMachineBehaviourAutoInjecter.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::ZenjectStateMachineBehaviourAutoInjecter::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::_get__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::_set__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
UnityEngine::Animator* Zenject::ZenjectStateMachineBehaviourAutoInjecter::_get__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::_get__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Animator _animator
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::_set__animator(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::_set__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  *reinterpret_cast<UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.ZenjectStateMachineBehaviourAutoInjecter.Construct
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::Construct(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container);
}
// Autogenerated method: Zenject.ZenjectStateMachineBehaviourAutoInjecter.Start
void Zenject::ZenjectStateMachineBehaviourAutoInjecter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectStateMachineBehaviourAutoInjecter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IValidatable
#include "Zenject/IValidatable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IValidatable.Validate
void Zenject::IValidatable::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IValidatable::Validate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ValidationMarker
#include "Zenject/ValidationMarker.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <InstantiateFailed>k__BackingField
bool Zenject::ValidationMarker::_get_$InstantiateFailed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::_get_$InstantiateFailed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InstantiateFailed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <InstantiateFailed>k__BackingField
void Zenject::ValidationMarker::_set_$InstantiateFailed$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::_set_$InstantiateFailed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InstantiateFailed>k__BackingField"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Type <MarkedType>k__BackingField
System::Type* Zenject::ValidationMarker::_get_$MarkedType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::_get_$MarkedType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MarkedType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Type <MarkedType>k__BackingField
void Zenject::ValidationMarker::_set_$MarkedType$k__BackingField(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::_set_$MarkedType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MarkedType>k__BackingField"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.ValidationMarker.get_InstantiateFailed
bool Zenject::ValidationMarker::get_InstantiateFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::get_InstantiateFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstantiateFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.ValidationMarker.set_InstantiateFailed
void Zenject::ValidationMarker::set_InstantiateFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::set_InstantiateFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstantiateFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: Zenject.ValidationMarker.get_MarkedType
System::Type* Zenject::ValidationMarker::get_MarkedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::get_MarkedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MarkedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.ValidationMarker.set_MarkedType
void Zenject::ValidationMarker::set_MarkedType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ValidationMarker::set_MarkedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MarkedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.LookupId
#include "Zenject/Internal/LookupId.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.IProvider Provider
Zenject::IProvider* Zenject::Internal::LookupId::_get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::LookupId::_get_Provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Provider"))->offset;
  return *reinterpret_cast<Zenject::IProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Zenject.IProvider Provider
void Zenject::Internal::LookupId::_set_Provider(Zenject::IProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::LookupId::_set_Provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Provider"))->offset;
  *reinterpret_cast<Zenject::IProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Zenject.BindingId BindingId
Zenject::BindingId Zenject::Internal::LookupId::_get_BindingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::LookupId::_get_BindingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BindingId"))->offset;
  return *reinterpret_cast<Zenject::BindingId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Zenject.BindingId BindingId
void Zenject::Internal::LookupId::_set_BindingId(Zenject::BindingId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::LookupId::_set_BindingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BindingId"))->offset;
  *reinterpret_cast<Zenject::BindingId*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.LookupId.GetHashCode
int Zenject::Internal::LookupId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::LookupId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.SingletonMarkRegistry
#include "Zenject/Internal/SingletonMarkRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _boundSingletons
System::Collections::Generic::HashSet_1<System::Type*>* Zenject::Internal::SingletonMarkRegistry::_get__boundSingletons() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::_get__boundSingletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundSingletons"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _boundSingletons
void Zenject::Internal::SingletonMarkRegistry::_set__boundSingletons(System::Collections::Generic::HashSet_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::_set__boundSingletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundSingletons"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _boundNonSingletons
System::Collections::Generic::HashSet_1<System::Type*>* Zenject::Internal::SingletonMarkRegistry::_get__boundNonSingletons() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::_get__boundNonSingletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundNonSingletons"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _boundNonSingletons
void Zenject::Internal::SingletonMarkRegistry::_set__boundNonSingletons(System::Collections::Generic::HashSet_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::_set__boundNonSingletons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boundNonSingletons"))->offset;
  *reinterpret_cast<System::Collections::Generic::HashSet_1<System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.SingletonMarkRegistry.MarkNonSingleton
void Zenject::Internal::SingletonMarkRegistry::MarkNonSingleton(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::MarkNonSingleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkNonSingleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.SingletonMarkRegistry.MarkSingleton
void Zenject::Internal::SingletonMarkRegistry::MarkSingleton(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::SingletonMarkRegistry::MarkSingleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkSingleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.IDecoratorProvider
#include "Zenject/Internal/IDecoratorProvider.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Internal.IDecoratorProvider.GetAllInstances
void Zenject::Internal::IDecoratorProvider::GetAllInstances(Zenject::IProvider* provider, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::IDecoratorProvider::GetAllInstances");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provider, context, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass0_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass0_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass4_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass4_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_1
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_1.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass9_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ZenFactoryMethod
#include "Zenject/ZenFactoryMethod.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Zenject.ZenInjectMethod
#include "Zenject/ZenInjectMethod.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: Zenject.ZenMemberSetterMethod
#include "Zenject/ZenMemberSetterMethod.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: Zenject.InjectTypeInfo/Zenject.InjectMethodInfo
#include "Zenject/InjectTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.InjectTypeInfo/Zenject.InjectConstructorInfo
#include "Zenject/InjectTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.InjectTypeInfo/Zenject.InjectMemberInfo
#include "Zenject/InjectTypeInfo_InjectMemberInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertMethod
Zenject::InjectTypeInfo::InjectMethodInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertMethod(Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo* injectMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectMethod)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, injectMethod);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertConstructor
Zenject::InjectTypeInfo::InjectConstructorInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertConstructor(Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* injectConstructor, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectConstructor), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectConstructorInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, injectConstructor, type);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertField
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertField(System::Type* parentType, Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo* injectField) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(injectField)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, injectField);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertProperty
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertProperty(System::Type* parentType, Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo* injectProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(injectProperty)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, injectProperty);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateFactoryMethod
Zenject::ZenFactoryMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethod(System::Type* type, Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* reflectionInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateFactoryMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(reflectionInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenFactoryMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, reflectionInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateFactoryMethodCompiledLambdaExpression
Zenject::ZenFactoryMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethodCompiledLambdaExpression(System::Type* type, System::Reflection::ConstructorInfo* constructor) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethodCompiledLambdaExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateFactoryMethodCompiledLambdaExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(constructor)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenFactoryMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, constructor);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateActionForMethod
Zenject::ZenInjectMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateActionForMethod(System::Reflection::MethodInfo* methodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateActionForMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateActionForMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenInjectMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetAllFields
System::Collections::Generic::IEnumerable_1<System::Reflection::FieldInfo*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetAllFields(System::Type* t, System::Reflection::BindingFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::GetAllFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetAllFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Reflection::FieldInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, flags);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetOnlyPropertySetter
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetOnlyPropertySetter(System::Type* parentType, ::Il2CppString* propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::GetOnlyPropertySetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetOnlyPropertySetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, propertyName);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetSetter
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetSetter(System::Type* parentType, System::Reflection::MemberInfo* memInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::GetSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(memInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, memInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryGetSetterAsCompiledExpression
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryGetSetterAsCompiledExpression(System::Type* parentType, System::Reflection::MemberInfo* memInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::TryGetSetterAsCompiledExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryGetSetterAsCompiledExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(memInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, memInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass0_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass0_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo methodInfo
System::Reflection::MethodInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::_get_methodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::_get_methodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodInfo"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.MethodInfo methodInfo
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::_set_methodInfo(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::_set_methodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodInfo"))->offset;
  *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass0_0.<ConvertMethod>b__0
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::$ConvertMethod$b__0(::Il2CppObject* obj, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass0_0::<ConvertMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConvertMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(args)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c <>9
Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c*>("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c <>9
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9(Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo,Zenject.InjectableInfo> <>9__0_1
System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__0_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__0_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>*>("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__0_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo,Zenject.InjectableInfo> <>9__0_1
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__0_1(System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__0_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__0_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo,Zenject.InjectableInfo> <>9__1_0
System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>*>("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo,Zenject.InjectableInfo> <>9__1_0
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__1_0(System::Func_2<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, Zenject::InjectableInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__1_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.String> <>9__8_1
System::Func_2<System::Reflection::FieldInfo*, ::Il2CppString*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::FieldInfo*, ::Il2CppString*>*>("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.String> <>9__8_1
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__8_1(System::Func_2<System::Reflection::FieldInfo*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", "<>9__8_1", value)));
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c..cctor
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c.<ConvertMethod>b__0_1
Zenject::InjectableInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::$ConvertMethod$b__0_1(Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::<ConvertMethod>b__0_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConvertMethod>b__0_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectableInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c.<ConvertConstructor>b__1_0
Zenject::InjectableInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::$ConvertConstructor$b__1_0(Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::<ConvertConstructor>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConvertConstructor>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectableInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c.<GetOnlyPropertySetter>b__8_1
::Il2CppString* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::$GetOnlyPropertySetter$b__8_1(System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c::<GetOnlyPropertySetter>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOnlyPropertySetter>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass4_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass4_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::_get_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Type type
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::_set_type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::_set_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass4_0.<TryCreateFactoryMethod>b__0
::Il2CppObject* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::$TryCreateFactoryMethod$b__0(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass4_0::<TryCreateFactoryMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryCreateFactoryMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String propertyName
::Il2CppString* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_get_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_get_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.String propertyName
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_set_propertyName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_set_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Reflection.FieldInfo> writeableFields
System::Collections::Generic::List_1<System::Reflection::FieldInfo*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_get_writeableFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_get_writeableFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeableFields"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Reflection::FieldInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<System.Reflection.FieldInfo> writeableFields
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_set_writeableFields(System::Collections::Generic::List_1<System::Reflection::FieldInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::_set_writeableFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeableFields"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<System::Reflection::FieldInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_0.<GetOnlyPropertySetter>b__0
bool Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::$GetOnlyPropertySetter$b__0(System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::<GetOnlyPropertySetter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOnlyPropertySetter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, f);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_0.<GetOnlyPropertySetter>b__2
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::$GetOnlyPropertySetter$b__2(::Il2CppObject* injectable, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0::<GetOnlyPropertySetter>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOnlyPropertySetter>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, injectable, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_1
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object injectable
::Il2CppObject* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_get_injectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_get_injectable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "injectable"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Object injectable
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_set_injectable(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_set_injectable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "injectable"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
::Il2CppObject* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_get_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Object value
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_set_value(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::_set_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass8_1.<GetOnlyPropertySetter>b__3
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::$GetOnlyPropertySetter$b__3(System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_1::<GetOnlyPropertySetter>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOnlyPropertySetter>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass9_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.FieldInfo fieldInfo
System::Reflection::FieldInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_get_fieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_get_fieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldInfo"))->offset;
  return *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.FieldInfo fieldInfo
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_set_fieldInfo(System::Reflection::FieldInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_set_fieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldInfo"))->offset;
  *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.PropertyInfo propInfo
System::Reflection::PropertyInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_get_propInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_get_propInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propInfo"))->offset;
  return *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.PropertyInfo propInfo
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_set_propInfo(System::Reflection::PropertyInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::_set_propInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propInfo"))->offset;
  *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass9_0.<GetSetter>b__0
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::$GetSetter$b__0(::Il2CppObject* injectable, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::<GetSetter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSetter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, injectable, value);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter/Zenject.Internal.<>c__DisplayClass9_0.<GetSetter>b__1
void Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::$GetSetter$b__1(::Il2CppObject* injectable, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass9_0::<GetSetter>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSetter>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, injectable, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo
#include "Zenject/Internal/ReflectionTypeInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type Type
System::Type* Zenject::Internal::ReflectionTypeInfo::_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Type Type
void Zenject::Internal::ReflectionTypeInfo::_set_Type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Type BaseType
System::Type* Zenject::Internal::ReflectionTypeInfo::_get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_BaseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Type BaseType
void Zenject::Internal::ReflectionTypeInfo::_set_BaseType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_BaseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseType"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo> InjectProperties
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>* Zenject::Internal::ReflectionTypeInfo::_get_InjectProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_InjectProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectProperties"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo> InjectProperties
void Zenject::Internal::ReflectionTypeInfo::_set_InjectProperties(System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_InjectProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectProperties"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo> InjectFields
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>* Zenject::Internal::ReflectionTypeInfo::_get_InjectFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_InjectFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectFields"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo> InjectFields
void Zenject::Internal::ReflectionTypeInfo::_set_InjectFields(System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_InjectFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectFields"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo InjectConstructor
Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* Zenject::Internal::ReflectionTypeInfo::_get_InjectConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_InjectConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectConstructor"))->offset;
  return *reinterpret_cast<Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo InjectConstructor
void Zenject::Internal::ReflectionTypeInfo::_set_InjectConstructor(Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_InjectConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectConstructor"))->offset;
  *reinterpret_cast<Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo> InjectMethods
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>* Zenject::Internal::ReflectionTypeInfo::_get_InjectMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_get_InjectMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectMethods"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo> InjectMethods
void Zenject::Internal::ReflectionTypeInfo::_set_InjectMethods(System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::_set_InjectMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectMethods"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.FieldInfo FieldInfo
System::Reflection::FieldInfo* Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_get_FieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_get_FieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldInfo"))->offset;
  return *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Reflection.FieldInfo FieldInfo
void Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_set_FieldInfo(System::Reflection::FieldInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_set_FieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldInfo"))->offset;
  *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.InjectableInfo InjectableInfo
Zenject::InjectableInfo* Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_get_InjectableInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_get_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  return *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.InjectableInfo InjectableInfo
void Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_set_InjectableInfo(Zenject::InjectableInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo::_set_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.ParameterInfo ParameterInfo
System::Reflection::ParameterInfo* Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_get_ParameterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_get_ParameterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParameterInfo"))->offset;
  return *reinterpret_cast<System::Reflection::ParameterInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Reflection.ParameterInfo ParameterInfo
void Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_set_ParameterInfo(System::Reflection::ParameterInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_set_ParameterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParameterInfo"))->offset;
  *reinterpret_cast<System::Reflection::ParameterInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.InjectableInfo InjectableInfo
Zenject::InjectableInfo* Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_get_InjectableInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_get_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  return *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.InjectableInfo InjectableInfo
void Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_set_InjectableInfo(Zenject::InjectableInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo::_set_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.PropertyInfo PropertyInfo
System::Reflection::PropertyInfo* Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_get_PropertyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_get_PropertyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyInfo"))->offset;
  return *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Reflection.PropertyInfo PropertyInfo
void Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_set_PropertyInfo(System::Reflection::PropertyInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_set_PropertyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyInfo"))->offset;
  *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.InjectableInfo InjectableInfo
Zenject::InjectableInfo* Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_get_InjectableInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_get_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  return *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.InjectableInfo InjectableInfo
void Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_set_InjectableInfo(Zenject::InjectableInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo::_set_InjectableInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InjectableInfo"))->offset;
  *reinterpret_cast<Zenject::InjectableInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectMethodInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.MethodInfo MethodInfo
System::Reflection::MethodInfo* Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_get_MethodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MethodInfo"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Reflection.MethodInfo MethodInfo
void Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_set_MethodInfo(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_set_MethodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MethodInfo"))->offset;
  *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> Parameters
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_get_Parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> Parameters
void Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_set_Parameters(System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo::_set_Parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parameters"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectConstructorInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Reflection.ConstructorInfo ConstructorInfo
System::Reflection::ConstructorInfo* Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_get_ConstructorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_get_ConstructorInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstructorInfo"))->offset;
  return *reinterpret_cast<System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Reflection.ConstructorInfo ConstructorInfo
void Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_set_ConstructorInfo(System::Reflection::ConstructorInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_set_ConstructorInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstructorInfo"))->offset;
  *reinterpret_cast<System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> Parameters
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_get_Parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Collections.Generic.List`1<Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> Parameters
void Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_set_Parameters(System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo::_set_Parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parameters"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ZenPools
#include "Zenject/Internal/ZenPools.hpp"
// Including type: Zenject.StaticMemoryPool`1
#include "Zenject/StaticMemoryPool_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.Internal.LookupId
#include "Zenject/Internal/LookupId.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindingId
#include "Zenject/BindingId.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.InjectContext> _contextPool
Zenject::StaticMemoryPool_1<Zenject::InjectContext*>* Zenject::Internal::ZenPools::_get__contextPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_get__contextPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_1<Zenject::InjectContext*>*>("Zenject.Internal", "ZenPools", "_contextPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.InjectContext> _contextPool
void Zenject::Internal::ZenPools::_set__contextPool(Zenject::StaticMemoryPool_1<Zenject::InjectContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_set__contextPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenPools", "_contextPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.Internal.LookupId> _lookupIdPool
Zenject::StaticMemoryPool_1<Zenject::Internal::LookupId*>* Zenject::Internal::ZenPools::_get__lookupIdPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_get__lookupIdPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_1<Zenject::Internal::LookupId*>*>("Zenject.Internal", "ZenPools", "_lookupIdPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.Internal.LookupId> _lookupIdPool
void Zenject::Internal::ZenPools::_set__lookupIdPool(Zenject::StaticMemoryPool_1<Zenject::Internal::LookupId*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_set__lookupIdPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenPools", "_lookupIdPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.BindInfo> _bindInfoPool
Zenject::StaticMemoryPool_1<Zenject::BindInfo*>* Zenject::Internal::ZenPools::_get__bindInfoPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_get__bindInfoPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_1<Zenject::BindInfo*>*>("Zenject.Internal", "ZenPools", "_bindInfoPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.BindInfo> _bindInfoPool
void Zenject::Internal::ZenPools::_set__bindInfoPool(Zenject::StaticMemoryPool_1<Zenject::BindInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_set__bindInfoPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenPools", "_bindInfoPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.BindStatement> _bindStatementPool
Zenject::StaticMemoryPool_1<Zenject::BindStatement*>* Zenject::Internal::ZenPools::_get__bindStatementPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_get__bindStatementPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_1<Zenject::BindStatement*>*>("Zenject.Internal", "ZenPools", "_bindStatementPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly Zenject.StaticMemoryPool`1<Zenject.BindStatement> _bindStatementPool
void Zenject::Internal::ZenPools::_set__bindStatementPool(Zenject::StaticMemoryPool_1<Zenject::BindStatement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::_set__bindStatementPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenPools", "_bindStatementPool", value));
}
// Autogenerated method: Zenject.Internal.ZenPools..cctor
void Zenject::Internal::ZenPools::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenPools.SpawnStatement
Zenject::BindStatement* Zenject::Internal::ZenPools::SpawnStatement() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::SpawnStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "SpawnStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindStatement*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenPools.DespawnStatement
void Zenject::Internal::ZenPools::DespawnStatement(Zenject::BindStatement* statement) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::DespawnStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "DespawnStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statement)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, statement);
}
// Autogenerated method: Zenject.Internal.ZenPools.SpawnBindInfo
Zenject::BindInfo* Zenject::Internal::ZenPools::SpawnBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::SpawnBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "SpawnBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenPools.DespawnBindInfo
void Zenject::Internal::ZenPools::DespawnBindInfo(Zenject::BindInfo* bindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::DespawnBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "DespawnBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindInfo);
}
// Autogenerated method: Zenject.Internal.ZenPools.SpawnLookupId
Zenject::Internal::LookupId* Zenject::Internal::ZenPools::SpawnLookupId(Zenject::IProvider* provider, Zenject::BindingId bindingId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::SpawnLookupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "SpawnLookupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(bindingId)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::LookupId*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, bindingId);
}
// Autogenerated method: Zenject.Internal.ZenPools.DespawnLookupId
void Zenject::Internal::ZenPools::DespawnLookupId(Zenject::Internal::LookupId* lookupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::DespawnLookupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "DespawnLookupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookupId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lookupId);
}
// Autogenerated method: Zenject.Internal.ZenPools.SpawnInjectContext
Zenject::InjectContext* Zenject::Internal::ZenPools::SpawnInjectContext(Zenject::DiContainer* container, System::Type* memberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::SpawnInjectContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "SpawnInjectContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(memberType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, container, memberType);
}
// Autogenerated method: Zenject.Internal.ZenPools.DespawnInjectContext
void Zenject::Internal::ZenPools::DespawnInjectContext(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::DespawnInjectContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "DespawnInjectContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, context);
}
// Autogenerated method: Zenject.Internal.ZenPools.SpawnInjectContext
Zenject::InjectContext* Zenject::Internal::ZenPools::SpawnInjectContext(Zenject::DiContainer* container, Zenject::InjectableInfo* injectableInfo, Zenject::InjectContext* currentContext, ::Il2CppObject* targetInstance, System::Type* targetType, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenPools::SpawnInjectContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenPools", "SpawnInjectContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(injectableInfo), ::il2cpp_utils::ExtractType(currentContext), ::il2cpp_utils::ExtractType(targetInstance), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, container, injectableInfo, currentContext, targetInstance, targetType, concreteIdentifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer
#include "Zenject/Internal/ReflectionTypeAnalyzer.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass7_0.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass7_1.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass8_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass8_0.hpp"
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass11_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass11_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectMethodInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectConstructorInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<System.Type> _injectAttributeTypes
System::Collections::Generic::HashSet_1<System::Type*>* Zenject::Internal::ReflectionTypeAnalyzer::_get__injectAttributeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::_get__injectAttributeTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<System::Type*>*>("Zenject.Internal", "ReflectionTypeAnalyzer", "_injectAttributeTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<System.Type> _injectAttributeTypes
void Zenject::Internal::ReflectionTypeAnalyzer::_set__injectAttributeTypes(System::Collections::Generic::HashSet_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::_set__injectAttributeTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer", "_injectAttributeTypes", value));
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer..cctor
void Zenject::Internal::ReflectionTypeAnalyzer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.AddCustomInjectAttribute
void Zenject::Internal::ReflectionTypeAnalyzer::AddCustomInjectAttribute(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::AddCustomInjectAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "AddCustomInjectAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetReflectionInfo
Zenject::Internal::ReflectionTypeInfo* Zenject::Internal::ReflectionTypeAnalyzer::GetReflectionInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetReflectionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetReflectionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetPropertyInfos
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>* Zenject::Internal::ReflectionTypeAnalyzer::GetPropertyInfos(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetPropertyInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetPropertyInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetFieldInfos
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>* Zenject::Internal::ReflectionTypeAnalyzer::GetFieldInfos(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetFieldInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetFieldInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetMethodInfos
System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>* Zenject::Internal::ReflectionTypeAnalyzer::GetMethodInfos(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetMethodInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetMethodInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetConstructorInfo
Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* Zenject::Internal::ReflectionTypeAnalyzer::GetConstructorInfo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetConstructorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.CreateInjectableInfoForParam
Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo* Zenject::Internal::ReflectionTypeAnalyzer::CreateInjectableInfoForParam(System::Type* parentType, System::Reflection::ParameterInfo* paramInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::CreateInjectableInfoForParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "CreateInjectableInfoForParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(paramInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, paramInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.GetInjectableInfoForMember
Zenject::InjectableInfo* Zenject::Internal::ReflectionTypeAnalyzer::GetInjectableInfoForMember(System::Type* parentType, System::Reflection::MemberInfo* memInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::GetInjectableInfoForMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "GetInjectableInfoForMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractType(memInfo)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectableInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, memInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer.TryGetInjectConstructor
System::Reflection::ConstructorInfo* Zenject::Internal::ReflectionTypeAnalyzer::TryGetInjectConstructor(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::TryGetInjectConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer", "TryGetInjectConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass5_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::_get_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Type type
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::_set_type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::_set_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_0.<GetPropertyInfos>b__1
Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::$GetPropertyInfos$b__1(System::Reflection::PropertyInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_0::<GetPropertyInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPropertyInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass5_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.PropertyInfo x
System::Reflection::PropertyInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::_get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::_get_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.PropertyInfo x
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::_set_x(System::Reflection::PropertyInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::_set_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass5_1.<GetPropertyInfos>b__2
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::$GetPropertyInfos$b__2(System::Type* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass5_1::<GetPropertyInfos>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPropertyInfos>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c <>9
Zenject::Internal::ReflectionTypeAnalyzer::$$c* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::Internal::ReflectionTypeAnalyzer::$$c*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c <>9
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9(Zenject::Internal::ReflectionTypeAnalyzer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.PropertyInfo,System.Boolean> <>9__5_0
System::Func_2<System::Reflection::PropertyInfo*, bool>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::PropertyInfo*, bool>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.PropertyInfo,System.Boolean> <>9__5_0
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__5_0(System::Func_2<System::Reflection::PropertyInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__6_0
System::Func_2<System::Reflection::FieldInfo*, bool>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::FieldInfo*, bool>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__6_0
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__6_0(System::Func_2<System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__7_0
System::Func_2<System::Reflection::MethodInfo*, bool>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::MethodInfo*, bool>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__7_0
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__7_0(System::Func_2<System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_0
System::Func_2<System::Reflection::ConstructorInfo*, bool>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::ConstructorInfo*, bool>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_0
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_0(System::Func_2<System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_1
System::Func_2<System::Reflection::ConstructorInfo*, bool>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::ConstructorInfo*, bool>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__11_1
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_1(System::Func_2<System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Int32> <>9__11_2
System::Func_2<System::Reflection::ConstructorInfo*, int>* Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::ConstructorInfo*, int>*>("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Int32> <>9__11_2
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_2(System::Func_2<System::Reflection::ConstructorInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", "<>9__11_2", value)));
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c..cctor
void Zenject::Internal::ReflectionTypeAnalyzer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionTypeAnalyzer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<GetPropertyInfos>b__5_0
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c::$GetPropertyInfos$b__5_0(System::Reflection::PropertyInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<GetPropertyInfos>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPropertyInfos>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<GetFieldInfos>b__6_0
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c::$GetFieldInfos$b__6_0(System::Reflection::FieldInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<GetFieldInfos>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldInfos>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<GetMethodInfos>b__7_0
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c::$GetMethodInfos$b__7_0(System::Reflection::MethodInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<GetMethodInfos>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMethodInfos>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<TryGetInjectConstructor>b__11_0
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c::$TryGetInjectConstructor$b__11_0(System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<TryGetInjectConstructor>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetInjectConstructor>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<TryGetInjectConstructor>b__11_1
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c::$TryGetInjectConstructor$b__11_1(System::Reflection::ConstructorInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<TryGetInjectConstructor>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetInjectConstructor>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c.<TryGetInjectConstructor>b__11_2
int Zenject::Internal::ReflectionTypeAnalyzer::$$c::$TryGetInjectConstructor$b__11_2(System::Reflection::ConstructorInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c::<TryGetInjectConstructor>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetInjectConstructor>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass6_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::_get_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Type type
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::_set_type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::_set_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_0.<GetFieldInfos>b__1
Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::$GetFieldInfos$b__1(System::Reflection::FieldInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_0::<GetFieldInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass6_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.FieldInfo x
System::Reflection::FieldInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::_get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::_get_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.FieldInfo x
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::_set_x(System::Reflection::FieldInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::_set_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass6_1.<GetFieldInfos>b__2
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::$GetFieldInfos$b__2(System::Type* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass6_1::<GetFieldInfos>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldInfos>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass7_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_get_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Type type
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_set_type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_set_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Reflection.ParameterInfo,Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> <>9__2
System::Func_2<System::Reflection::ParameterInfo*, Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_get_$$9__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_get_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  return *reinterpret_cast<System::Func_2<System::Reflection::ParameterInfo*, Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Func`2<System.Reflection.ParameterInfo,Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo> <>9__2
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_set_$$9__2(System::Func_2<System::Reflection::ParameterInfo*, Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::_set_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  *reinterpret_cast<System::Func_2<System::Reflection::ParameterInfo*, Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_0.<GetMethodInfos>b__2
Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::$GetMethodInfos$b__2(System::Reflection::ParameterInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_0::<GetMethodInfos>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMethodInfos>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_1
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass7_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo x
System::Reflection::MethodInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::_get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::_get_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.MethodInfo x
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::_set_x(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::_set_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass7_1.<GetMethodInfos>b__1
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::$GetMethodInfos$b__1(System::Type* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass7_1::<GetMethodInfos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMethodInfos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass8_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass8_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/Zenject.Internal.InjectParameterInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectParameterInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::_get_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Type type
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::_set_type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::_set_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass8_0.<GetConstructorInfo>b__0
Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::$GetConstructorInfo$b__0(System::Reflection::ParameterInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass8_0::<GetConstructorInfo>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetConstructorInfo>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::ReflectionTypeInfo::InjectParameterInfo*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass11_0
#include "Zenject/Internal/ReflectionTypeAnalyzer_--c__DisplayClass11_0.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.ConstructorInfo c
System::Reflection::ConstructorInfo* Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::_get_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::_get_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Reflection.ConstructorInfo c
void Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::_set_c(System::Reflection::ConstructorInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::_set_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  *reinterpret_cast<System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ReflectionTypeAnalyzer/Zenject.Internal.<>c__DisplayClass11_0.<TryGetInjectConstructor>b__3
bool Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::$TryGetInjectConstructor$b__3(System::Type* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ReflectionTypeAnalyzer::$$c__DisplayClass11_0::<TryGetInjectConstructor>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryGetInjectConstructor>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ZenUtilInternal
#include "Zenject/Internal/ZenUtilInternal.hpp"
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c
#include "Zenject/Internal/ZenUtilInternal_--c.hpp"
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3
#include "Zenject/Internal/ZenUtilInternal_-GetAllSceneContexts-d__3.hpp"
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c__DisplayClass10_0
#include "Zenject/Internal/ZenUtilInternal_--c__DisplayClass10_0.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Internal.ZenUtilInternal.IsNull
bool Zenject::Internal::ZenUtilInternal::IsNull(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.AreFunctionsEqual
bool Zenject::Internal::ZenUtilInternal::AreFunctionsEqual(System::Delegate* left, System::Delegate* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::AreFunctionsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "AreFunctionsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetInheritanceDelta
int Zenject::Internal::ZenUtilInternal::GetInheritanceDelta(System::Type* derived, System::Type* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetInheritanceDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetInheritanceDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derived), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, derived, parent);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetAllSceneContexts
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::Internal::ZenUtilInternal::GetAllSceneContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetAllSceneContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetAllSceneContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.AddStateMachineBehaviourAutoInjectersInScene
void Zenject::Internal::ZenUtilInternal::AddStateMachineBehaviourAutoInjectersInScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::AddStateMachineBehaviourAutoInjectersInScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "AddStateMachineBehaviourAutoInjectersInScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.AddStateMachineBehaviourAutoInjectersUnderGameObject
void Zenject::Internal::ZenUtilInternal::AddStateMachineBehaviourAutoInjectersUnderGameObject(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::AddStateMachineBehaviourAutoInjectersUnderGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "AddStateMachineBehaviourAutoInjectersUnderGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetInjectableMonoBehavioursInScene
void Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursInScene(UnityEngine::SceneManagement::Scene scene, System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursInScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetInjectableMonoBehavioursInScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene, monoBehaviours);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetInjectableMonoBehavioursUnderGameObject
void Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursUnderGameObject(UnityEngine::GameObject* gameObject, System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableComponents) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursUnderGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetInjectableMonoBehavioursUnderGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(injectableComponents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject, injectableComponents);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetInjectableMonoBehavioursUnderGameObjectInternal
void Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursUnderGameObjectInternal(UnityEngine::GameObject* gameObject, System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableComponents) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetInjectableMonoBehavioursUnderGameObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetInjectableMonoBehavioursUnderGameObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(injectableComponents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject, injectableComponents);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.IsInjectableMonoBehaviourType
bool Zenject::Internal::ZenUtilInternal::IsInjectableMonoBehaviourType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::IsInjectableMonoBehaviourType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "IsInjectableMonoBehaviourType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::Internal::ZenUtilInternal::GetRootGameObjects(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal", "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c
#include "Zenject/Internal/ZenUtilInternal_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c <>9
Zenject::Internal::ZenUtilInternal::$$c* Zenject::Internal::ZenUtilInternal::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::Internal::ZenUtilInternal::$$c*>("Zenject.Internal", "ZenUtilInternal/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c <>9
void Zenject::Internal::ZenUtilInternal::$$c::_set_$$9(Zenject::Internal::ZenUtilInternal::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenUtilInternal/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__3_0
System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* Zenject::Internal::ZenUtilInternal::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>*>("Zenject.Internal", "ZenUtilInternal/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__3_0
void Zenject::Internal::ZenUtilInternal::$$c::_set_$$9__3_0(System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenUtilInternal/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__10_0
System::Func_2<UnityEngine::GameObject*, bool>* Zenject::Internal::ZenUtilInternal::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, bool>*>("Zenject.Internal", "ZenUtilInternal/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Boolean> <>9__10_0
void Zenject::Internal::ZenUtilInternal::$$c::_set_$$9__10_0(System::Func_2<UnityEngine::GameObject*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject.Internal", "ZenUtilInternal/<>c", "<>9__10_0", value)));
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c..cctor
void Zenject::Internal::ZenUtilInternal::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject.Internal", "ZenUtilInternal/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c.<GetAllSceneContexts>b__3_0
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::Internal::ZenUtilInternal::$$c::$GetAllSceneContexts$b__3_0(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::<GetAllSceneContexts>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllSceneContexts>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(___instance_arg, ___internal__method, root);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c.<GetRootGameObjects>b__10_0
bool Zenject::Internal::ZenUtilInternal::$$c::$GetRootGameObjects$b__10_0(UnityEngine::GameObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c::<GetRootGameObjects>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRootGameObjects>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3
#include "Zenject/Internal/ZenUtilInternal_-GetAllSceneContexts-d__3.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private Zenject.SceneContext <>2__current
Zenject::SceneContext* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<Zenject::SceneContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Zenject.SceneContext <>2__current
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$2__current(Zenject::SceneContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<Zenject::SceneContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.SceneManagement.Scene> <>7__wrap1
System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_get_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.SceneManagement.Scene> <>7__wrap1
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$7__wrap1(System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::_set_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  *reinterpret_cast<System::Collections::Generic::IEnumerator_1<UnityEngine::SceneManagement::Scene>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.Collections.Generic.IEnumerator<Zenject.SceneContext>.get_Current
Zenject::SceneContext* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_Collections_Generic_IEnumerator$Zenject_SceneContext$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.Collections.Generic.IEnumerator<Zenject.SceneContext>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Zenject.SceneContext>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.IDisposable.Dispose
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.MoveNext
bool Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.<>m__Finally1
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.Collections.IEnumerator.Reset
void Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.Collections.Generic.IEnumerable<Zenject.SceneContext>.GetEnumerator
System::Collections::Generic::IEnumerator_1<Zenject::SceneContext*>* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_Collections_Generic_IEnumerable$Zenject_SceneContext$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.Collections.Generic.IEnumerable<Zenject.SceneContext>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<Zenject.SceneContext>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<Zenject::SceneContext*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<GetAllSceneContexts>d__3.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$GetAllSceneContexts$d__3::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c__DisplayClass10_0
#include "Zenject/Internal/ZenUtilInternal_--c__DisplayClass10_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SceneManagement.Scene scene
UnityEngine::SceneManagement::Scene Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::_get_scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::_get_scene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scene"))->offset;
  return *reinterpret_cast<UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.SceneManagement.Scene scene
void Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::_set_scene(UnityEngine::SceneManagement::Scene value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::_set_scene");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scene"))->offset;
  *reinterpret_cast<UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: Zenject.Internal.ZenUtilInternal/Zenject.Internal.<>c__DisplayClass10_0.<GetRootGameObjects>b__1
bool Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::$GetRootGameObjects$b__1(UnityEngine::GameObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Internal::ZenUtilInternal::$$c__DisplayClass10_0::<GetRootGameObjects>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRootGameObjects>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/MessageType
#include "GlobalNamespace/MultiplayerSessionManager_MessageType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType MenuRpc
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_MenuRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_MenuRpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "MenuRpc"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType MenuRpc
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_MenuRpc(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_MenuRpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "MenuRpc", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType GameplayRpc
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_GameplayRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_GameplayRpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "GameplayRpc"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType GameplayRpc
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_GameplayRpc(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_GameplayRpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "GameplayRpc", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType NodePoseSyncState
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_NodePoseSyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_NodePoseSyncState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "NodePoseSyncState"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType NodePoseSyncState
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_NodePoseSyncState(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_NodePoseSyncState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "NodePoseSyncState", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType ScoreSyncState
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_ScoreSyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_ScoreSyncState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "ScoreSyncState"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType ScoreSyncState
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_ScoreSyncState(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_ScoreSyncState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "ScoreSyncState", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType NodePoseSyncStateDelta
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_NodePoseSyncStateDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_NodePoseSyncStateDelta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "NodePoseSyncStateDelta"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType NodePoseSyncStateDelta
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_NodePoseSyncStateDelta(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_NodePoseSyncStateDelta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "NodePoseSyncStateDelta", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/MessageType ScoreSyncStateDelta
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::MultiplayerSessionManager_MessageType::_get_ScoreSyncStateDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_ScoreSyncStateDelta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager_MessageType>("", "MultiplayerSessionManager/MessageType", "ScoreSyncStateDelta"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/MessageType ScoreSyncStateDelta
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_ScoreSyncStateDelta(GlobalNamespace::MultiplayerSessionManager_MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_ScoreSyncStateDelta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/MessageType", "ScoreSyncStateDelta", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t GlobalNamespace::MultiplayerSessionManager_MessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Byte value__
void GlobalNamespace::MultiplayerSessionManager_MessageType::_set_value__(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager_MessageType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncState/NodePose
#include "GlobalNamespace/NodePoseSyncState_NodePose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodePoseSyncState/NodePose Head
GlobalNamespace::NodePoseSyncState_NodePose GlobalNamespace::NodePoseSyncState_NodePose::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState_NodePose>("", "NodePoseSyncState/NodePose", "Head"));
}
// Autogenerated static field setter
// Set static field: static public NodePoseSyncState/NodePose Head
void GlobalNamespace::NodePoseSyncState_NodePose::_set_Head(GlobalNamespace::NodePoseSyncState_NodePose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncState/NodePose", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public NodePoseSyncState/NodePose LeftController
GlobalNamespace::NodePoseSyncState_NodePose GlobalNamespace::NodePoseSyncState_NodePose::_get_LeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_get_LeftController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState_NodePose>("", "NodePoseSyncState/NodePose", "LeftController"));
}
// Autogenerated static field setter
// Set static field: static public NodePoseSyncState/NodePose LeftController
void GlobalNamespace::NodePoseSyncState_NodePose::_set_LeftController(GlobalNamespace::NodePoseSyncState_NodePose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_set_LeftController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncState/NodePose", "LeftController", value));
}
// Autogenerated static field getter
// Get static field: static public NodePoseSyncState/NodePose RightController
GlobalNamespace::NodePoseSyncState_NodePose GlobalNamespace::NodePoseSyncState_NodePose::_get_RightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_get_RightController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState_NodePose>("", "NodePoseSyncState/NodePose", "RightController"));
}
// Autogenerated static field setter
// Set static field: static public NodePoseSyncState/NodePose RightController
void GlobalNamespace::NodePoseSyncState_NodePose::_set_RightController(GlobalNamespace::NodePoseSyncState_NodePose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_set_RightController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncState/NodePose", "RightController", value));
}
// Autogenerated static field getter
// Get static field: static public NodePoseSyncState/NodePose Count
GlobalNamespace::NodePoseSyncState_NodePose GlobalNamespace::NodePoseSyncState_NodePose::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState_NodePose>("", "NodePoseSyncState/NodePose", "Count"));
}
// Autogenerated static field setter
// Set static field: static public NodePoseSyncState/NodePose Count
void GlobalNamespace::NodePoseSyncState_NodePose::_set_Count(GlobalNamespace::NodePoseSyncState_NodePose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncState/NodePose", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::NodePoseSyncState_NodePose::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::NodePoseSyncState_NodePose::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState_NodePose::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncState/Score
#include "GlobalNamespace/StandardScoreSyncState_Score.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score ModifiedScore
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_ModifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_ModifiedScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "ModifiedScore"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score ModifiedScore
void GlobalNamespace::StandardScoreSyncState_Score::_set_ModifiedScore(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_ModifiedScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "ModifiedScore", value));
}
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score RawScore
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_RawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_RawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "RawScore"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score RawScore
void GlobalNamespace::StandardScoreSyncState_Score::_set_RawScore(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_RawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "RawScore", value));
}
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score ImmediateMaxPossibleRawScore
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_ImmediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_ImmediateMaxPossibleRawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "ImmediateMaxPossibleRawScore"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score ImmediateMaxPossibleRawScore
void GlobalNamespace::StandardScoreSyncState_Score::_set_ImmediateMaxPossibleRawScore(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_ImmediateMaxPossibleRawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "ImmediateMaxPossibleRawScore", value));
}
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score Combo
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_Combo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_Combo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "Combo"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score Combo
void GlobalNamespace::StandardScoreSyncState_Score::_set_Combo(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_Combo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "Combo", value));
}
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score Multiplier
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_Multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_Multiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "Multiplier"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score Multiplier
void GlobalNamespace::StandardScoreSyncState_Score::_set_Multiplier(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_Multiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "Multiplier", value));
}
// Autogenerated static field getter
// Get static field: static public StandardScoreSyncState/Score Count
GlobalNamespace::StandardScoreSyncState_Score GlobalNamespace::StandardScoreSyncState_Score::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState_Score>("", "StandardScoreSyncState/Score", "Count"));
}
// Autogenerated static field setter
// Set static field: static public StandardScoreSyncState/Score Count
void GlobalNamespace::StandardScoreSyncState_Score::_set_Count(GlobalNamespace::StandardScoreSyncState_Score value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncState/Score", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::StandardScoreSyncState_Score::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::StandardScoreSyncState_Score::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState_Score::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/Pool
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler_Pool.hpp"
// Including type: NoteExecutionRating
#include "GlobalNamespace/NoteExecutionRating.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ICutScoreHandlerDidFinishEvent
#include "GlobalNamespace/ICutScoreHandlerDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteExecutionRating _noteExecutionRating
GlobalNamespace::NoteExecutionRating* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__noteExecutionRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__noteExecutionRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteExecutionRating"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteExecutionRating**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private NoteExecutionRating _noteExecutionRating
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__noteExecutionRating(GlobalNamespace::NoteExecutionRating* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__noteExecutionRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteExecutionRating"))->offset;
  *reinterpret_cast<GlobalNamespace::NoteExecutionRating**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ISaberSwingRatingCounter _saberSwingRatingCounter
GlobalNamespace::ISaberSwingRatingCounter* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__saberSwingRatingCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__saberSwingRatingCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberSwingRatingCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::ISaberSwingRatingCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ISaberSwingRatingCounter _saberSwingRatingCounter
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__saberSwingRatingCounter(GlobalNamespace::ISaberSwingRatingCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__saberSwingRatingCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberSwingRatingCounter"))->offset;
  *reinterpret_cast<GlobalNamespace::ISaberSwingRatingCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutDistanceToCenter
float GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__cutDistanceToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__cutDistanceToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDistanceToCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cutDistanceToCenter
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__cutDistanceToCenter(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__cutDistanceToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDistanceToCenter"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ICutScoreHandlerDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_get__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly LazyCopyHashSet`1<ICutScoreHandlerDidFinishEvent> _didFinishEvent
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__didFinishEvent(GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::_set__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::ICutScoreHandlerDidFinishEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.Set
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Set(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, GlobalNamespace::NoteExecutionRating* noteExecutionRating, GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(noteExecutionRating), ::il2cpp_utils::ExtractType(swingRatingCounter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(noteCutInfo), noteExecutionRating, swingRatingCounter);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.Reinitialize
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Reinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Reinitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::HandleSaberSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::HandleSaberSwingRatingCounterDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/Pool
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/Pool.OnDespawned
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Pool::OnDespawned(GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder_CutScoreHandler::Pool::OnDespawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameNoteController/GameNoteType Normal
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::GameNoteController_GameNoteType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameNoteController_GameNoteType>("", "GameNoteController/GameNoteType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public GameNoteController/GameNoteType Normal
void GlobalNamespace::GameNoteController_GameNoteType::_set_Normal(GlobalNamespace::GameNoteController_GameNoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameNoteController/GameNoteType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public GameNoteController/GameNoteType DisappearingArrow
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::GameNoteController_GameNoteType::_get_DisappearingArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_get_DisappearingArrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameNoteController_GameNoteType>("", "GameNoteController/GameNoteType", "DisappearingArrow"));
}
// Autogenerated static field setter
// Set static field: static public GameNoteController/GameNoteType DisappearingArrow
void GlobalNamespace::GameNoteController_GameNoteType::_set_DisappearingArrow(GlobalNamespace::GameNoteController_GameNoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_set_DisappearingArrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameNoteController/GameNoteType", "DisappearingArrow", value));
}
// Autogenerated static field getter
// Get static field: static public GameNoteController/GameNoteType Ghost
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::GameNoteController_GameNoteType::_get_Ghost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_get_Ghost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameNoteController_GameNoteType>("", "GameNoteController/GameNoteType", "Ghost"));
}
// Autogenerated static field setter
// Set static field: static public GameNoteController/GameNoteType Ghost
void GlobalNamespace::GameNoteController_GameNoteType::_set_Ghost(GlobalNamespace::GameNoteController_GameNoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_set_Ghost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameNoteController/GameNoteType", "Ghost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::GameNoteController_GameNoteType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::GameNoteController_GameNoteType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController_GameNoteType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XrApi
#include "GlobalNamespace/OVRManager_XrApi.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi Unknown
GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi Unknown
void GlobalNamespace::OVRManager_XrApi::_set_Unknown(GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi CAPI
GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi CAPI
void GlobalNamespace::OVRManager_XrApi::_set_CAPI(GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi VRAPI
GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi VRAPI
void GlobalNamespace::OVRManager_XrApi::_set_VRAPI(GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi OpenXR
GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi OpenXR
void GlobalNamespace::OVRManager_XrApi::_set_OpenXR(GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "OpenXR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_XrApi::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_XrApi::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XrApi::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin EyeLevel
GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin EyeLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel(GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin FloorLevel
GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin FloorLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel(GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin Stage
GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin Stage
void GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage(GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "Stage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_TrackingOrigin::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_TrackingOrigin::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TrackingOrigin::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat Default
GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat Default
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default(GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP(GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP(GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_EyeTextureFormat::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_EyeTextureFormat::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Off
GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off(GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Low
GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low(GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium(GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel High
GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High(GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop(GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel Off
GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel Off
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off(GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSLow
GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow(GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSMedium
GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium(GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHigh
GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh(GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHighTop
GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop(GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_TiledMultiResLevel::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_TiledMultiResLevel::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType None
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType None
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_None(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_10
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_10
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_11
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_11
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_12
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_12
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_13
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_13
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_14
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_14
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK1
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK2
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CV1
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CV1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CB
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CB
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_S
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_S
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107(GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_SystemHeadsetType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_SystemHeadsetType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XRDevice
#include "GlobalNamespace/OVRManager_XRDevice.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Unknown
GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Unknown
void GlobalNamespace::OVRManager_XRDevice::_set_Unknown(GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Oculus
GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Oculus
void GlobalNamespace::OVRManager_XRDevice::_set_Oculus(GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice OpenVR
GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice OpenVR
void GlobalNamespace::OVRManager_XRDevice::_set_OpenVR(GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "OpenVR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_XRDevice::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_XRDevice::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_XRDevice::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/ColorSpace
#include "GlobalNamespace/OVRManager_ColorSpace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unknown
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unknown
void GlobalNamespace::OVRManager_ColorSpace::_set_Unknown(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unmanaged
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unmanaged
void GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_2020
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_2020
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_709
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_709
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_CV1
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_CV1
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_S
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_S
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Quest
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Quest
void GlobalNamespace::OVRManager_ColorSpace::_set_Quest(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace P3
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace P3
void GlobalNamespace::OVRManager_ColorSpace::_set_P3(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Adobe_RGB
GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Adobe_RGB
void GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB(GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_ColorSpace::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_ColorSpace::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_ColorSpace::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod External
GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "External"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod External
void GlobalNamespace::OVRManager_CompositionMethod::_set_External(GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "External", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod Direct
GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod Direct
void GlobalNamespace::OVRManager_CompositionMethod::_set_Direct(GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "Direct", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_CompositionMethod::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_CompositionMethod::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CompositionMethod::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera0
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera0
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera1
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera1
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice ZEDCamera
GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice ZEDCamera
void GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera(GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "ZEDCamera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_CameraDevice::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_CameraDevice::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_CameraDevice::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager_DepthQuality.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Low
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Low
void GlobalNamespace::OVRManager_DepthQuality::_set_Low(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Medium
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Medium
void GlobalNamespace::OVRManager_DepthQuality::_set_Medium(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality High
GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality High
void GlobalNamespace::OVRManager_DepthQuality::_set_High(GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_DepthQuality::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_DepthQuality::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_DepthQuality::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType Off
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType Off
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType PlayArea
GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType PlayArea
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea(GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager_MrcActivationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Automatic
GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Automatic
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic(GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Disabled
GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Disabled
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled(GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_MrcActivationMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_MrcActivationMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcActivationMode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Normal
GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Normal
void GlobalNamespace::OVRManager_MrcCameraType::_set_Normal(GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Foreground
GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Foreground
void GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground(GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Background
GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Background"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Background
void GlobalNamespace::OVRManager_MrcCameraType::_set_Background(GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OVRManager_MrcCameraType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OVRManager_MrcCameraType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_MrcCameraType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.Invoke
UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke(UnityEngine::GameObject* mainCameraGameObject, GlobalNamespace::OVRManager_MrcCameraType cameraType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject), ::il2cpp_utils::ExtractType(cameraType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, mainCameraGameObject, cameraType);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke(UnityEngine::GameObject* mainCameraGameObject, GlobalNamespace::OVRManager_MrcCameraType cameraType, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject), ::il2cpp_utils::ExtractType(cameraType), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, mainCameraGameObject, cameraType, callback, object);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.EndInvoke
UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRManager/<>c <>9
GlobalNamespace::OVRManager_$$c* GlobalNamespace::OVRManager_$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager_$$c*>("", "OVRManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRManager/<>c <>9
void GlobalNamespace::OVRManager_$$c::_set_$$9(GlobalNamespace::OVRManager_$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.String> <>9__337_0
System::Func_2<float, ::Il2CppString*>* GlobalNamespace::OVRManager_$$c::_get_$$9__337_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_get_$$9__337_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<float, ::Il2CppString*>*>("", "OVRManager/<>c", "<>9__337_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.String> <>9__337_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__337_0(System::Func_2<float, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_set_$$9__337_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__337_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__345_0
System::Comparison_1<UnityEngine::Camera*>* GlobalNamespace::OVRManager_$$c::_get_$$9__345_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_get_$$9__345_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Camera*>*>("", "OVRManager/<>c", "<>9__345_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__345_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__345_0(System::Comparison_1<UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::_set_$$9__345_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__345_0", value)));
}
// Autogenerated method: OVRManager/<>c..cctor
void GlobalNamespace::OVRManager_$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager/<>c.<InitOVRManager>b__337_0
::Il2CppString* GlobalNamespace::OVRManager_$$c::$InitOVRManager$b__337_0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::<InitOVRManager>b__337_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitOVRManager>b__337_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, f);
}
// Autogenerated method: OVRManager/<>c.<FindMainCamera>b__345_0
int GlobalNamespace::OVRManager_$$c::$FindMainCamera$b__345_0(UnityEngine::Camera* c0, UnityEngine::Camera* c1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRManager_$$c::<FindMainCamera>b__345_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindMainCamera>b__345_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c0), ::il2cpp_utils::ExtractType(c1)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, c0, c1);
}
