// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.PlatformSettings
#include "Oculus/Platform/PlatformSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.PlatformSettings instance
Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::_get_instance() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PlatformSettings*>("Oculus.Platform", "PlatformSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.PlatformSettings instance
void Oculus::Platform::PlatformSettings::_set_instance(Oculus::Platform::PlatformSettings* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformSettings", "instance", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_AppID
::Il2CppString* Oculus::Platform::PlatformSettings::get_AppID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("Oculus.Platform", "PlatformSettings", "get_AppID"));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_AppID
void Oculus::Platform::PlatformSettings::set_AppID(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "PlatformSettings", "set_AppID", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_MobileAppID
::Il2CppString* Oculus::Platform::PlatformSettings::get_MobileAppID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("Oculus.Platform", "PlatformSettings", "get_MobileAppID"));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_MobileAppID
void Oculus::Platform::PlatformSettings::set_MobileAppID(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "PlatformSettings", "set_MobileAppID", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_UseStandalonePlatform
bool Oculus::Platform::PlatformSettings::get_UseStandalonePlatform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Oculus.Platform", "PlatformSettings", "get_UseStandalonePlatform"));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_UseStandalonePlatform
void Oculus::Platform::PlatformSettings::set_UseStandalonePlatform(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "PlatformSettings", "set_UseStandalonePlatform", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_Instance
Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::get_Instance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::PlatformSettings*>("Oculus.Platform", "PlatformSettings", "get_Instance"));
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_Instance
void Oculus::Platform::PlatformSettings::set_Instance(Oculus::Platform::PlatformSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "PlatformSettings", "set_Instance", value));
}
// Autogenerated method: Oculus.Platform.PlatformSettings..ctor
Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::New_ctor() {
  return (PlatformSettings*)THROW_UNLESS(il2cpp_utils::New("Oculus.Platform", "PlatformSettings"));
}
