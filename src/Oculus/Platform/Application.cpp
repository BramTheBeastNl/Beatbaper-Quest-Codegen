// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Application").WithContext("GetVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Application", il2cpp_utils::NoArgClass<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>*>(), "GetVersion", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Application").WithContext("LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Application", il2cpp_utils::NoArgClass<Oculus::Platform::Request_1<::Il2CppString*>*>(), "LaunchOtherApp", {}, ::il2cpp_utils::ExtractTypes(appID, deeplink_options)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, deeplink_options);
}
