// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, System::Collections::Generic::Dictionary_2<::CsString*, int>* data) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request*>("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", roomID, data));
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::CsString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>*>("Oculus.Platform", "Matchmaking", "GetStats", pool, maxLevel, approach));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::CsString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*>("Oculus.Platform", "Matchmaking", "Browse", pool, customQueryData));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::CsString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*>("Oculus.Platform", "Matchmaking", "Browse2", pool, matchmakingOptions));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::CsString* pool, ::CsString* requestHash) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request*>("Oculus.Platform", "Matchmaking", "Cancel", pool, requestHash));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request*>("Oculus.Platform", "Matchmaking", "Cancel"));
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::CsString* pool, uint maxUsers, bool subscribeToUpdates, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*>("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", pool, maxUsers, subscribeToUpdates, customQueryData));
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::CsString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*>("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", pool, matchmakingOptions));
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::CsString* pool, uint maxUsers, bool subscribeToUpdates) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*>("Oculus.Platform", "Matchmaking", "CreateRoom", pool, maxUsers, subscribeToUpdates));
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::CsString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*>("Oculus.Platform", "Matchmaking", "CreateRoom2", pool, matchmakingOptions));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::CsString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*>("Oculus.Platform", "Matchmaking", "Enqueue", pool, customQueryData));
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::CsString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*>("Oculus.Platform", "Matchmaking", "Enqueue2", pool, matchmakingOptions));
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*>("Oculus.Platform", "Matchmaking", "EnqueueRoom", roomID, customQueryData));
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*>("Oculus.Platform", "Matchmaking", "EnqueueRoom2", roomID, matchmakingOptions));
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>*>("Oculus.Platform", "Matchmaking", "GetAdminSnapshot"));
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*>("Oculus.Platform", "Matchmaking", "JoinRoom", roomID, subscribeToUpdates));
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request*>("Oculus.Platform", "Matchmaking", "StartMatch", roomID));
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", callback));
}
