// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Packet..ctor
Oculus::Platform::Packet* Oculus::Platform::Packet::New_ctor(System::IntPtr packetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Packet*>(packetHandle));
}
// Autogenerated method: Oculus.Platform.Packet.ReadBytes
uint64_t Oculus::Platform::Packet::ReadBytes(::Array<uint8_t>* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("ReadBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint64_t>(), "ReadBytes", {}, ::il2cpp_utils::ExtractTypes(destination)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, destination);
}
// Autogenerated method: Oculus.Platform.Packet.get_SenderID
uint64_t Oculus::Platform::Packet::get_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_SenderID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint64_t>(), "get_SenderID", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Size
uint64_t Oculus::Platform::Packet::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_Size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint64_t>(), "get_Size", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Policy
Oculus::Platform::SendPolicy Oculus::Platform::Packet::get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_Policy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Oculus::Platform::SendPolicy>(), "get_Policy", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Finalize
void Oculus::Platform::Packet::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Finalize", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Dispose
void Oculus::Platform::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Oculus::Platform::Packet::System_IDisposable_Dispose() {
  Oculus::Platform::Packet::Dispose();
}
