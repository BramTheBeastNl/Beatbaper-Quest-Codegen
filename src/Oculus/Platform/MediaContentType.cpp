// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Unknown
Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Unknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MediaContentType").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Unknown
void Oculus::Platform::MediaContentType::_set_Unknown(Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MediaContentType").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Photo
Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Photo() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MediaContentType").WithContext("_get_Photo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Photo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Photo
void Oculus::Platform::MediaContentType::_set_Photo(Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MediaContentType").WithContext("_set_Photo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Photo", value));
}
