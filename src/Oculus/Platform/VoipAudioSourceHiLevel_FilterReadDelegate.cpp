// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate
#include "Oculus/Platform/VoipAudioSourceHiLevel_FilterReadDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate.Awake
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("FilterReadDelegate").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate.OnAudioFilterRead
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("FilterReadDelegate").WithContext("OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnAudioFilterRead", {}, ::il2cpp_utils::ExtractTypes(data, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate..ctor
Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate* Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("FilterReadDelegate").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<VoipAudioSourceHiLevel::FilterReadDelegate*>());
}
