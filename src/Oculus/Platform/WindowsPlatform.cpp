// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform
#include "Oculus/Platform/WindowsPlatform.hpp"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform.CPPLogCallback
void Oculus::Platform::WindowsPlatform::CPPLogCallback(System::IntPtr tag, System::IntPtr message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CPPLogCallback", tag, message));
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.getCallbackPointer
System::IntPtr Oculus::Platform::WindowsPlatform::getCallbackPointer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "getCallbackPointer"));
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.Initialize
bool Oculus::Platform::WindowsPlatform::Initialize(::Il2CppString* appId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Initialize", appId));
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::WindowsPlatform::AsyncInitialize(::Il2CppString* appId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*>(this, "AsyncInitialize", appId));
}
// Autogenerated method: Oculus.Platform.WindowsPlatform..ctor
Oculus::Platform::WindowsPlatform* Oculus::Platform::WindowsPlatform::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<WindowsPlatform*>());
}
