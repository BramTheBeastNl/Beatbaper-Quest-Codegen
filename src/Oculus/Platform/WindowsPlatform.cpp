// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform
#include "Oculus/Platform/WindowsPlatform.hpp"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform.CPPLogCallback
void Oculus::Platform::WindowsPlatform::CPPLogCallback(System::IntPtr tag, System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("WindowsPlatform").WithContext("CPPLogCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "CPPLogCallback", {}, ::il2cpp_utils::ExtractTypes(tag, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.getCallbackPointer
System::IntPtr Oculus::Platform::WindowsPlatform::getCallbackPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("WindowsPlatform").WithContext("getCallbackPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IntPtr>(), "getCallbackPointer", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.Initialize
bool Oculus::Platform::WindowsPlatform::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("WindowsPlatform").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Initialize", {}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::WindowsPlatform::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("WindowsPlatform").WithContext("AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*>(), "AsyncInitialize", {}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform..ctor
Oculus::Platform::WindowsPlatform* Oculus::Platform::WindowsPlatform::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("WindowsPlatform").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<WindowsPlatform*>());
}
