// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore(::Il2CppString* key, ::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetCreateRoomDataStore", key, value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearCreateRoomDataStore"));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomJoinPolicy
void Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy(Oculus::Platform::RoomJoinPolicy value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetCreateRoomJoinPolicy", value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomMaxUsers
void Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers(uint value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetCreateRoomMaxUsers", value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.AddEnqueueAdditionalUser
void Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser(uint64_t userID) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddEnqueueAdditionalUser", userID));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueAdditionalUsers
void Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearEnqueueAdditionalUsers"));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetEnqueueDataSettings", key, value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, double value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetEnqueueDataSettings", key, value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, ::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetEnqueueDataSettings", key, value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearEnqueueDataSettings"));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueIsDebug
void Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetEnqueueIsDebug", value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueQueryKey
void Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetEnqueueQueryKey", value));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions..ctor
Oculus::Platform::MatchmakingOptions* Oculus::Platform::MatchmakingOptions::New_ctor() {
  return (MatchmakingOptions*)THROW_UNLESS(il2cpp_utils::New("Oculus.Platform", "MatchmakingOptions"));
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.Finalize
void Oculus::Platform::MatchmakingOptions::Finalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Finalize"));
}
