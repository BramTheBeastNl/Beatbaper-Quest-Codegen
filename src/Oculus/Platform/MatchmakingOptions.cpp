// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore(::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomJoinPolicy
void Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomMaxUsers
void Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.AddEnqueueAdditionalUser
void Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueAdditionalUsers
void Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueIsDebug
void Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueQueryKey
void Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::MatchmakingOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.MatchmakingOptions.Finalize
void Oculus::Platform::MatchmakingOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MatchmakingOptions").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
