// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::Il2CppString* Oculus::Platform::Core::getAppID(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("getAppID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::Il2CppString* Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
