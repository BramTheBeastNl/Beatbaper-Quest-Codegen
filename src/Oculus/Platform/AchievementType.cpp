// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDADB04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDADB3C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0xDADB74
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0xDADBAC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AchievementType").WithContext("_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
