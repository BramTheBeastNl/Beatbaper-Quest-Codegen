// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "Start", userID));
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "Accept", userID));
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "Stop", userID));
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* callback) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", callback));
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(Oculus::Platform::VoipMuteState state) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", state));
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::VoipMuteState>("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted"));
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "Voip", "GetSystemVoipStatus"));
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::VoipDtxState>("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", peerID));
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::VoipBitrate>("Oculus.Platform", "Voip", "GetLocalBitrate", peerID));
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::VoipBitrate>("Oculus.Platform", "Voip", "GetRemoteBitrate", peerID));
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(Oculus::Platform::VoipOptions* voipOptions) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", voipOptions));
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>*>("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", suppressed));
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", callback));
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", callback));
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", callback));
}
