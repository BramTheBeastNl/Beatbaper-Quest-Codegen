// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Application/LogCallback
#include "UnityEngine/Application_LogCallback.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Application/LogCallback.Invoke
void UnityEngine::Application::LogCallback::Invoke(::Il2CppString* condition, ::Il2CppString* stackTrace, UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Application::LogCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, condition, stackTrace, type);
}
// Autogenerated method: UnityEngine.Application/LogCallback.BeginInvoke
System::IAsyncResult* UnityEngine::Application::LogCallback::BeginInvoke(::Il2CppString* condition, ::Il2CppString* stackTrace, UnityEngine::LogType type, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Application::LogCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, condition, stackTrace, type, callback, object);
}
// Autogenerated method: UnityEngine.Application/LogCallback.EndInvoke
void UnityEngine::Application::LogCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Application::LogCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Application::LogCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Application::LogCallback::*)(::Il2CppObject*, System::IntPtr)>(&Application::LogCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application::LogCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Application::LogCallback::*)(::Il2CppObject*, System::IntPtr)>(&Application::LogCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application::LogCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Application::LogCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Application::LogCallback::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::LogType)>(&Application::LogCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application::LogCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: Application::LogCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Application::LogCallback::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::LogType, System::AsyncCallback*, ::Il2CppObject*)>(&Application::LogCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application::LogCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Application::LogCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Application::LogCallback::*)(System::IAsyncResult*)>(&Application::LogCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Application::LogCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.NetworkReachability
#include "UnityEngine/NetworkReachability.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability NotReachable
UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_NotReachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_get_NotReachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "NotReachable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability NotReachable
void UnityEngine::NetworkReachability::_set_NotReachable(UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_set_NotReachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "NotReachable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability ReachableViaCarrierDataNetwork
UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_ReachableViaCarrierDataNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_get_ReachableViaCarrierDataNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "ReachableViaCarrierDataNetwork"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability ReachableViaCarrierDataNetwork
void UnityEngine::NetworkReachability::_set_ReachableViaCarrierDataNetwork(UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_set_ReachableViaCarrierDataNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "ReachableViaCarrierDataNetwork", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability ReachableViaLocalAreaNetwork
UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_ReachableViaLocalAreaNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_get_ReachableViaLocalAreaNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "ReachableViaLocalAreaNetwork"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability ReachableViaLocalAreaNetwork
void UnityEngine::NetworkReachability::_set_ReachableViaLocalAreaNetwork(UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::NetworkReachability::_set_ReachableViaLocalAreaNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "ReachableViaLocalAreaNetwork", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType UNKNOWN
UnityEngine::AudioType UnityEngine::AudioType::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType UNKNOWN
void UnityEngine::AudioType::_set_UNKNOWN(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType ACC
UnityEngine::AudioType UnityEngine::AudioType::_get_ACC() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_ACC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "ACC"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType ACC
void UnityEngine::AudioType::_set_ACC(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_ACC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "ACC", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType AIFF
UnityEngine::AudioType UnityEngine::AudioType::_get_AIFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_AIFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "AIFF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType AIFF
void UnityEngine::AudioType::_set_AIFF(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_AIFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "AIFF", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType IT
UnityEngine::AudioType UnityEngine::AudioType::_get_IT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_IT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "IT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType IT
void UnityEngine::AudioType::_set_IT(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_IT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "IT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType MOD
UnityEngine::AudioType UnityEngine::AudioType::_get_MOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_MOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "MOD"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType MOD
void UnityEngine::AudioType::_set_MOD(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_MOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "MOD", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType MPEG
UnityEngine::AudioType UnityEngine::AudioType::_get_MPEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_MPEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "MPEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType MPEG
void UnityEngine::AudioType::_set_MPEG(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_MPEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "MPEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType OGGVORBIS
UnityEngine::AudioType UnityEngine::AudioType::_get_OGGVORBIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_OGGVORBIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "OGGVORBIS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType OGGVORBIS
void UnityEngine::AudioType::_set_OGGVORBIS(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_OGGVORBIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "OGGVORBIS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType S3M
UnityEngine::AudioType UnityEngine::AudioType::_get_S3M() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_S3M");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "S3M"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType S3M
void UnityEngine::AudioType::_set_S3M(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_S3M");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "S3M", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType WAV
UnityEngine::AudioType UnityEngine::AudioType::_get_WAV() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_WAV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "WAV"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType WAV
void UnityEngine::AudioType::_set_WAV(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_WAV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "WAV", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType XM
UnityEngine::AudioType UnityEngine::AudioType::_get_XM() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_XM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "XM"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType XM
void UnityEngine::AudioType::_set_XM(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_XM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "XM", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType XMA
UnityEngine::AudioType UnityEngine::AudioType::_get_XMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_XMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "XMA"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType XMA
void UnityEngine::AudioType::_set_XMA(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_XMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "XMA", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType VAG
UnityEngine::AudioType UnityEngine::AudioType::_get_VAG() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_VAG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "VAG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType VAG
void UnityEngine::AudioType::_set_VAG(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_VAG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "VAG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType AUDIOQUEUE
UnityEngine::AudioType UnityEngine::AudioType::_get_AUDIOQUEUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_get_AUDIOQUEUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioType>("UnityEngine", "AudioType", "AUDIOQUEUE"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType AUDIOQUEUE
void UnityEngine::AudioType::_set_AUDIOQUEUE(UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioType::_set_AUDIOQUEUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "AUDIOQUEUE", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BootConfigData
#include "UnityEngine/BootConfigData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BootConfigData.WrapBootConfigData
UnityEngine::BootConfigData* UnityEngine::BootConfigData::WrapBootConfigData(System::IntPtr nativeHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BootConfigData::WrapBootConfigData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BootConfigData", "WrapBootConfigData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeHandle)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::BootConfigData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeHandle);
}
// Writing MetadataGetter for method: BootConfigData::WrapBootConfigData
// Il2CppName: WrapBootConfigData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::BootConfigData* (*)(System::IntPtr)>(&BootConfigData::WrapBootConfigData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BootConfigData*), "WrapBootConfigData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: BootConfigData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BootConfigData::*)(System::IntPtr)>(&BootConfigData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BootConfigData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BootConfigData::*)(System::IntPtr)>(&BootConfigData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BootConfigData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CachedAssetBundle
#include "UnityEngine/CachedAssetBundle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CachedAssetBundle.get_name
::Il2CppString* UnityEngine::CachedAssetBundle::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CachedAssetBundle::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.CachedAssetBundle.get_hash
UnityEngine::Hash128 UnityEngine::CachedAssetBundle::get_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CachedAssetBundle::get_hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Hash128, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: CachedAssetBundle::CachedAssetBundle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedAssetBundle::*)(::Il2CppString*, UnityEngine::Hash128)>(&CachedAssetBundle::CachedAssetBundle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedAssetBundle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CachedAssetBundle::*)(::Il2CppString*, UnityEngine::Hash128)>(&CachedAssetBundle::CachedAssetBundle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedAssetBundle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: CachedAssetBundle::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CachedAssetBundle::*)()>(&CachedAssetBundle::get_name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedAssetBundle), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CachedAssetBundle::get_hash
// Il2CppName: get_hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Hash128 (CachedAssetBundle::*)()>(&CachedAssetBundle::get_hash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CachedAssetBundle), "get_hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Cache
#include "UnityEngine/Cache.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Cache.get_handle
int UnityEngine::Cache::get_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::get_handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.Equals
bool UnityEngine::Cache::Equals(UnityEngine::Cache other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Cache.get_valid
bool UnityEngine::Cache::get_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::get_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.Cache_IsValid
bool UnityEngine::Cache::Cache_IsValid(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Cache_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Cache.get_path
::Il2CppString* UnityEngine::Cache::get_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::get_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.Cache_GetPath
::Il2CppString* UnityEngine::Cache::Cache_GetPath(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Cache_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Cache.set_maximumAvailableStorageSpace
void UnityEngine::Cache::set_maximumAvailableStorageSpace(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::set_maximumAvailableStorageSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maximumAvailableStorageSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cache.Cache_SetMaximumDiskSpaceAvailable
void UnityEngine::Cache::Cache_SetMaximumDiskSpaceAvailable(int handle, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Cache_SetMaximumDiskSpaceAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_SetMaximumDiskSpaceAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Cache.set_expirationDelay
void UnityEngine::Cache::set_expirationDelay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::set_expirationDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_expirationDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cache.Cache_SetExpirationDelay
void UnityEngine::Cache::Cache_SetExpirationDelay(int handle, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Cache_SetExpirationDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_SetExpirationDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Cache.GetHashCode
int UnityEngine::Cache::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.Equals
bool UnityEngine::Cache::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cache::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: Cache::get_handle
// Il2CppName: get_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cache::*)()>(&Cache::get_handle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "get_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cache::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cache::*)(UnityEngine::Cache)>(&Cache::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache>()});
  }
};
// Writing MetadataGetter for method: Cache::get_valid
// Il2CppName: get_valid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cache::*)()>(&Cache::get_valid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "get_valid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cache::Cache_IsValid
// Il2CppName: Cache_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&Cache::Cache_IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Cache_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cache::get_path
// Il2CppName: get_path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Cache::*)()>(&Cache::get_path)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "get_path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cache::Cache_GetPath
// Il2CppName: Cache_GetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&Cache::Cache_GetPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Cache_GetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cache::set_maximumAvailableStorageSpace
// Il2CppName: set_maximumAvailableStorageSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cache::*)(int64_t)>(&Cache::set_maximumAvailableStorageSpace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "set_maximumAvailableStorageSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: Cache::Cache_SetMaximumDiskSpaceAvailable
// Il2CppName: Cache_SetMaximumDiskSpaceAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int64_t)>(&Cache::Cache_SetMaximumDiskSpaceAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Cache_SetMaximumDiskSpaceAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: Cache::set_expirationDelay
// Il2CppName: set_expirationDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cache::*)(int)>(&Cache::set_expirationDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "set_expirationDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cache::Cache_SetExpirationDelay
// Il2CppName: Cache_SetExpirationDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&Cache::Cache_SetExpirationDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Cache_SetExpirationDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cache::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cache::*)()>(&Cache::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cache::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cache::*)(::Il2CppObject*)>(&Cache::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cache), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Caching
#include "UnityEngine/Caching.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
// Including type: UnityEngine.CachedAssetBundle
#include "UnityEngine/CachedAssetBundle.hpp"
// Including type: UnityEngine.Cache
#include "UnityEngine/Cache.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Caching.set_compressionEnabled
void UnityEngine::Caching::set_compressionEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::set_compressionEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_compressionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Caching.get_ready
bool UnityEngine::Caching::get_ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::get_ready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_ready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersion
bool UnityEngine::Caching::ClearCachedVersion(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearCachedVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersionInternal
bool UnityEngine::Caching::ClearCachedVersionInternal(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearCachedVersionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearOtherCachedVersions
bool UnityEngine::Caching::ClearOtherCachedVersions(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearOtherCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearOtherCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearAllCachedVersions
bool UnityEngine::Caching::ClearAllCachedVersions(::Il2CppString* assetBundleName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearAllCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearAllCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersions
bool UnityEngine::Caching::ClearCachedVersions(::Il2CppString* assetBundleName, UnityEngine::Hash128 hash, bool keepInputVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(keepInputVersion)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash, keepInputVersion);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached
bool UnityEngine::Caching::IsVersionCached(UnityEngine::CachedAssetBundle cachedBundle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::IsVersionCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachedBundle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachedBundle);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached
bool UnityEngine::Caching::IsVersionCached(::Il2CppString* url, ::Il2CppString* assetBundleName, UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::IsVersionCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.AddCache
UnityEngine::Cache UnityEngine::Caching::AddCache(::Il2CppString* cachePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::AddCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cache, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachePath);
}
// Autogenerated method: UnityEngine.Caching.AddCache
UnityEngine::Cache UnityEngine::Caching::AddCache(::Il2CppString* cachePath, bool isReadonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::AddCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractType(isReadonly)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cache, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachePath, isReadonly);
}
// Autogenerated method: UnityEngine.Caching.GetCacheByPath
UnityEngine::Cache UnityEngine::Caching::GetCacheByPath(::Il2CppString* cachePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::GetCacheByPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "GetCacheByPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cache, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachePath);
}
// Autogenerated method: UnityEngine.Caching.get_defaultCache
UnityEngine::Cache UnityEngine::Caching::get_defaultCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::get_defaultCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_defaultCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cache, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.get_currentCacheForWriting
UnityEngine::Cache UnityEngine::Caching::get_currentCacheForWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::get_currentCacheForWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_currentCacheForWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cache, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.set_currentCacheForWriting
void UnityEngine::Caching::set_currentCacheForWriting(UnityEngine::Cache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::set_currentCacheForWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_currentCacheForWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersionInternal_Injected
bool UnityEngine::Caching::ClearCachedVersionInternal_Injected(::Il2CppString* assetBundleName, UnityEngine::Hash128& hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearCachedVersionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersions_Injected
bool UnityEngine::Caching::ClearCachedVersions_Injected(::Il2CppString* assetBundleName, UnityEngine::Hash128& hash, bool keepInputVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::ClearCachedVersions_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersions_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(keepInputVersion)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetBundleName, hash, keepInputVersion);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached_Injected
bool UnityEngine::Caching::IsVersionCached_Injected(::Il2CppString* url, ::Il2CppString* assetBundleName, UnityEngine::Hash128& hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::IsVersionCached_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.AddCache_Injected
void UnityEngine::Caching::AddCache_Injected(::Il2CppString* cachePath, bool isReadonly, UnityEngine::Cache& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::AddCache_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractType(isReadonly), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachePath, isReadonly, ret);
}
// Autogenerated method: UnityEngine.Caching.GetCacheByPath_Injected
void UnityEngine::Caching::GetCacheByPath_Injected(::Il2CppString* cachePath, UnityEngine::Cache& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::GetCacheByPath_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "GetCacheByPath_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cachePath, ret);
}
// Autogenerated method: UnityEngine.Caching.get_defaultCache_Injected
void UnityEngine::Caching::get_defaultCache_Injected(UnityEngine::Cache& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::get_defaultCache_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_defaultCache_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Caching.get_currentCacheForWriting_Injected
void UnityEngine::Caching::get_currentCacheForWriting_Injected(UnityEngine::Cache& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::get_currentCacheForWriting_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_currentCacheForWriting_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Caching.set_currentCacheForWriting_Injected
void UnityEngine::Caching::set_currentCacheForWriting_Injected(UnityEngine::Cache& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Caching::set_currentCacheForWriting_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_currentCacheForWriting_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: Caching::set_compressionEnabled
// Il2CppName: set_compressionEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Caching::set_compressionEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "set_compressionEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Caching::get_ready
// Il2CppName: get_ready
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Caching::get_ready)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "get_ready", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Caching::ClearCachedVersion
// Il2CppName: ClearCachedVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128)>(&Caching::ClearCachedVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearCachedVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearCachedVersionInternal
// Il2CppName: ClearCachedVersionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128)>(&Caching::ClearCachedVersionInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearCachedVersionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearOtherCachedVersions
// Il2CppName: ClearOtherCachedVersions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128)>(&Caching::ClearOtherCachedVersions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearOtherCachedVersions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearAllCachedVersions
// Il2CppName: ClearAllCachedVersions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&Caching::ClearAllCachedVersions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearAllCachedVersions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearCachedVersions
// Il2CppName: ClearCachedVersions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128, bool)>(&Caching::ClearCachedVersions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearCachedVersions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Caching::IsVersionCached
// Il2CppName: IsVersionCached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::CachedAssetBundle)>(&Caching::IsVersionCached)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "IsVersionCached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CachedAssetBundle>()});
  }
};
// Writing MetadataGetter for method: Caching::IsVersionCached
// Il2CppName: IsVersionCached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, ::Il2CppString*, UnityEngine::Hash128)>(&Caching::IsVersionCached)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "IsVersionCached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Caching::AddCache
// Il2CppName: AddCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cache (*)(::Il2CppString*)>(&Caching::AddCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "AddCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Caching::AddCache
// Il2CppName: AddCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cache (*)(::Il2CppString*, bool)>(&Caching::AddCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "AddCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Caching::GetCacheByPath
// Il2CppName: GetCacheByPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cache (*)(::Il2CppString*)>(&Caching::GetCacheByPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "GetCacheByPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Caching::get_defaultCache
// Il2CppName: get_defaultCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cache (*)()>(&Caching::get_defaultCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "get_defaultCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Caching::get_currentCacheForWriting
// Il2CppName: get_currentCacheForWriting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cache (*)()>(&Caching::get_currentCacheForWriting)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "get_currentCacheForWriting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Caching::set_currentCacheForWriting
// Il2CppName: set_currentCacheForWriting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cache)>(&Caching::set_currentCacheForWriting)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "set_currentCacheForWriting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearCachedVersionInternal_Injected
// Il2CppName: ClearCachedVersionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128&)>(&Caching::ClearCachedVersionInternal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearCachedVersionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Caching::ClearCachedVersions_Injected
// Il2CppName: ClearCachedVersions_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::Hash128&, bool)>(&Caching::ClearCachedVersions_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "ClearCachedVersions_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Caching::IsVersionCached_Injected
// Il2CppName: IsVersionCached_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, ::Il2CppString*, UnityEngine::Hash128&)>(&Caching::IsVersionCached_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "IsVersionCached_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Caching::AddCache_Injected
// Il2CppName: AddCache_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, bool, UnityEngine::Cache&)>(&Caching::AddCache_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "AddCache_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()});
  }
};
// Writing MetadataGetter for method: Caching::GetCacheByPath_Injected
// Il2CppName: GetCacheByPath_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Cache&)>(&Caching::GetCacheByPath_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "GetCacheByPath_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()});
  }
};
// Writing MetadataGetter for method: Caching::get_defaultCache_Injected
// Il2CppName: get_defaultCache_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cache&)>(&Caching::get_defaultCache_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "get_defaultCache_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()});
  }
};
// Writing MetadataGetter for method: Caching::get_currentCacheForWriting_Injected
// Il2CppName: get_currentCacheForWriting_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cache&)>(&Caching::get_currentCacheForWriting_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "get_currentCacheForWriting_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()});
  }
};
// Writing MetadataGetter for method: Caching::set_currentCacheForWriting_Injected
// Il2CppName: set_currentCacheForWriting_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cache&)>(&Caching::set_currentCacheForWriting_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Caching*), "set_currentCacheForWriting_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cache&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Camera/StereoscopicEye
#include "UnityEngine/Camera_StereoscopicEye.hpp"
// Including type: UnityEngine.Camera/MonoOrStereoscopicEye
#include "UnityEngine/Camera_MonoOrStereoscopicEye.hpp"
// Including type: UnityEngine.Camera/CameraCallback
#include "UnityEngine/Camera_CameraCallback.hpp"
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.CameraClearFlags
#include "UnityEngine/CameraClearFlags.hpp"
// Including type: UnityEngine.DepthTextureMode
#include "UnityEngine/DepthTextureMode.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.StereoTargetEyeMask
#include "UnityEngine/StereoTargetEyeMask.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/CameraCallback onPreCull
UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_get_onPreCull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPreCull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/CameraCallback onPreCull
void UnityEngine::Camera::_set_onPreCull(UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_set_onPreCull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPreCull", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/CameraCallback onPreRender
UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_get_onPreRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPreRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/CameraCallback onPreRender
void UnityEngine::Camera::_set_onPreRender(UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_set_onPreRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPreRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/CameraCallback onPostRender
UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_get_onPostRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPostRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/CameraCallback onPostRender
void UnityEngine::Camera::_set_onPostRender(UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::_set_onPostRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPostRender", value));
}
// Autogenerated method: UnityEngine.Camera.get_nearClipPlane
float UnityEngine::Camera::get_nearClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_nearClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_nearClipPlane
void UnityEngine::Camera::set_nearClipPlane(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_nearClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nearClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_farClipPlane
float UnityEngine::Camera::get_farClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_farClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_farClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_farClipPlane
void UnityEngine::Camera::set_farClipPlane(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_farClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_farClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_fieldOfView
float UnityEngine::Camera::get_fieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_fieldOfView
void UnityEngine::Camera::set_fieldOfView(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_renderingPath
void UnityEngine::Camera::set_renderingPath(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_renderingPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderingPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_allowHDR
void UnityEngine::Camera::set_allowHDR(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_allowHDR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHDR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_allowMSAA
void UnityEngine::Camera::set_allowMSAA(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_allowMSAA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowMSAA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_forceIntoRenderTexture
void UnityEngine::Camera::set_forceIntoRenderTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_forceIntoRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceIntoRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_orthographicSize
void UnityEngine::Camera::set_orthographicSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_orthographicSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orthographicSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_orthographic
bool UnityEngine::Camera::get_orthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_orthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_orthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_orthographic
void UnityEngine::Camera::set_orthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_orthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_depth
float UnityEngine::Camera::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_depth
void UnityEngine::Camera::set_depth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_aspect
float UnityEngine::Camera::get_aspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_aspect
void UnityEngine::Camera::set_aspect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_cullingMask
int UnityEngine::Camera::get_cullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_cullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_cullingMask
void UnityEngine::Camera::set_cullingMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_cullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_eventMask
int UnityEngine::Camera::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_useOcclusionCulling
void UnityEngine::Camera::set_useOcclusionCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_useOcclusionCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useOcclusionCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_backgroundColor
UnityEngine::Color UnityEngine::Camera::get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_backgroundColor
void UnityEngine::Camera::set_backgroundColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_clearFlags
UnityEngine::CameraClearFlags UnityEngine::Camera::get_clearFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_clearFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CameraClearFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_clearFlags
void UnityEngine::Camera::set_clearFlags(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_clearFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_depthTextureMode
UnityEngine::DepthTextureMode UnityEngine::Camera::get_depthTextureMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_depthTextureMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthTextureMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::DepthTextureMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_depthTextureMode
void UnityEngine::Camera::set_depthTextureMode(UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_depthTextureMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthTextureMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_rect
UnityEngine::Rect UnityEngine::Camera::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_rect
void UnityEngine::Camera::set_rect(UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_pixelRect
UnityEngine::Rect UnityEngine::Camera::get_pixelRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_pixelRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_pixelWidth
int UnityEngine::Camera::get_pixelWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_pixelWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_pixelHeight
int UnityEngine::Camera::get_pixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_pixelHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_targetTexture
UnityEngine::RenderTexture* UnityEngine::Camera::get_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_targetTexture
void UnityEngine::Camera::set_targetTexture(UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_targetDisplay
int UnityEngine::Camera::get_targetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_targetDisplay
void UnityEngine::Camera::set_targetDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_worldToCameraMatrix
UnityEngine::Matrix4x4 UnityEngine::Camera::get_worldToCameraMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_worldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_worldToCameraMatrix
void UnityEngine::Camera::set_worldToCameraMatrix(UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_worldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_projectionMatrix
UnityEngine::Matrix4x4 UnityEngine::Camera::get_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_projectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_projectionMatrix
void UnityEngine::Camera::set_projectionMatrix(UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_projectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.ResetWorldToCameraMatrix
void UnityEngine::Camera::ResetWorldToCameraMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ResetWorldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWorldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.CalculateObliqueMatrix
UnityEngine::Matrix4x4 UnityEngine::Camera::CalculateObliqueMatrix(UnityEngine::Vector4 clipPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CalculateObliqueMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateObliqueMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipPlane)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, clipPlane);
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint
UnityEngine::Vector3 UnityEngine::Camera::WorldToScreenPoint(UnityEngine::Vector3 position, UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position, eye);
}
// Autogenerated method: UnityEngine.Camera.ViewportToWorldPoint
UnityEngine::Vector3 UnityEngine::Camera::ViewportToWorldPoint(UnityEngine::Vector3 position, UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ViewportToWorldPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ViewportToWorldPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position, eye);
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint
UnityEngine::Vector3 UnityEngine::Camera::WorldToScreenPoint(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Camera.ScreenToViewportPoint
UnityEngine::Vector3 UnityEngine::Camera::ScreenToViewportPoint(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenToViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenToViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(UnityEngine::Vector2 pos, UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Ray, false>(this, ___internal__method, pos, eye);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(UnityEngine::Vector3 pos, UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Ray, false>(this, ___internal__method, pos, eye);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Ray, false>(this, ___internal__method, pos);
}
// Autogenerated method: UnityEngine.Camera.get_main
UnityEngine::Camera* UnityEngine::Camera::get_main() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_main");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_main", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_current
UnityEngine::Camera* UnityEngine::Camera::get_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_stereoEnabled
bool UnityEngine::Camera::get_stereoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_stereoEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stereoEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_stereoTargetEye
UnityEngine::StereoTargetEyeMask UnityEngine::Camera::get_stereoTargetEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_stereoTargetEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stereoTargetEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::StereoTargetEyeMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_stereoTargetEye
void UnityEngine::Camera::set_stereoTargetEye(UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_stereoTargetEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stereoTargetEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.GetStereoProjectionMatrix
UnityEngine::Matrix4x4 UnityEngine::Camera::GetStereoProjectionMatrix(UnityEngine::Camera::StereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::GetStereoProjectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStereoProjectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, eye);
}
// Autogenerated method: UnityEngine.Camera.GetAllCamerasCount
int UnityEngine::Camera::GetAllCamerasCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::GetAllCamerasCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCamerasCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.GetAllCamerasImpl
int UnityEngine::Camera::GetAllCamerasImpl(::Array<UnityEngine::Camera*>*& cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::GetAllCamerasImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCamerasImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Camera*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.get_allCamerasCount
int UnityEngine::Camera::get_allCamerasCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_allCamerasCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_allCamerasCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.GetAllCameras
int UnityEngine::Camera::GetAllCameras(::Array<UnityEngine::Camera*>* cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::GetAllCameras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCameras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameras)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameras);
}
// Autogenerated method: UnityEngine.Camera.RenderToCubemapImpl
bool UnityEngine::Camera::RenderToCubemapImpl(UnityEngine::Texture* tex, int faceMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::RenderToCubemapImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderToCubemapImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tex), ::il2cpp_utils::ExtractType(faceMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tex, faceMask);
}
// Autogenerated method: UnityEngine.Camera.RenderToCubemap
bool UnityEngine::Camera::RenderToCubemap(UnityEngine::RenderTexture* cubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::RenderToCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderToCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, cubemap);
}
// Autogenerated method: UnityEngine.Camera.Render
void UnityEngine::Camera::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.RenderWithShader
void UnityEngine::Camera::RenderWithShader(UnityEngine::Shader* shader, ::Il2CppString* replacementTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::RenderWithShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderWithShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(replacementTag)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shader, replacementTag);
}
// Autogenerated method: UnityEngine.Camera.CopyFrom
void UnityEngine::Camera::CopyFrom(UnityEngine::Camera* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Camera.AddCommandBufferImpl
void UnityEngine::Camera::AddCommandBufferImpl(UnityEngine::Rendering::CameraEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::AddCommandBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.RemoveCommandBufferImpl
void UnityEngine::Camera::RemoveCommandBufferImpl(UnityEngine::Rendering::CameraEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::RemoveCommandBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommandBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.AddCommandBuffer
void UnityEngine::Camera::AddCommandBuffer(UnityEngine::Rendering::CameraEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.RemoveCommandBuffer
void UnityEngine::Camera::RemoveCommandBuffer(UnityEngine::Rendering::CameraEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::RemoveCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.FireOnPreCull
void UnityEngine::Camera::FireOnPreCull(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::FireOnPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.FireOnPreRender
void UnityEngine::Camera::FireOnPreRender(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::FireOnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.FireOnPostRender
void UnityEngine::Camera::FireOnPostRender(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::FireOnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.get_backgroundColor_Injected
void UnityEngine::Camera::get_backgroundColor_Injected(UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_backgroundColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Camera.set_backgroundColor_Injected
void UnityEngine::Camera::set_backgroundColor_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_backgroundColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_rect_Injected
void UnityEngine::Camera::get_rect_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Camera.set_rect_Injected
void UnityEngine::Camera::set_rect_Injected(UnityEngine::Rect& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_pixelRect_Injected
void UnityEngine::Camera::get_pixelRect_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_pixelRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Camera.get_worldToCameraMatrix_Injected
void UnityEngine::Camera::get_worldToCameraMatrix_Injected(UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_worldToCameraMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Camera.set_worldToCameraMatrix_Injected
void UnityEngine::Camera::set_worldToCameraMatrix_Injected(UnityEngine::Matrix4x4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_worldToCameraMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_projectionMatrix_Injected
void UnityEngine::Camera::get_projectionMatrix_Injected(UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::get_projectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Camera.set_projectionMatrix_Injected
void UnityEngine::Camera::set_projectionMatrix_Injected(UnityEngine::Matrix4x4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::set_projectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.CalculateObliqueMatrix_Injected
void UnityEngine::Camera::CalculateObliqueMatrix_Injected(UnityEngine::Vector4& clipPlane, UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CalculateObliqueMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateObliqueMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipPlane), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipPlane, ret);
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint_Injected
void UnityEngine::Camera::WorldToScreenPoint_Injected(UnityEngine::Vector3& position, UnityEngine::Camera::MonoOrStereoscopicEye eye, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::WorldToScreenPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, eye, ret);
}
// Autogenerated method: UnityEngine.Camera.ViewportToWorldPoint_Injected
void UnityEngine::Camera::ViewportToWorldPoint_Injected(UnityEngine::Vector3& position, UnityEngine::Camera::MonoOrStereoscopicEye eye, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ViewportToWorldPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ViewportToWorldPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, eye, ret);
}
// Autogenerated method: UnityEngine.Camera.ScreenToViewportPoint_Injected
void UnityEngine::Camera::ScreenToViewportPoint_Injected(UnityEngine::Vector3& position, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenToViewportPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenToViewportPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, ret);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay_Injected
void UnityEngine::Camera::ScreenPointToRay_Injected(UnityEngine::Vector2& pos, UnityEngine::Camera::MonoOrStereoscopicEye eye, UnityEngine::Ray& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::ScreenPointToRay_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, eye, ret);
}
// Autogenerated method: UnityEngine.Camera.GetStereoProjectionMatrix_Injected
void UnityEngine::Camera::GetStereoProjectionMatrix_Injected(UnityEngine::Camera::StereoscopicEye eye, UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::GetStereoProjectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eye, ret);
}
// Writing MetadataGetter for method: Camera::get_nearClipPlane
// Il2CppName: get_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Camera::*)()>(&Camera::get_nearClipPlane)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_nearClipPlane
// Il2CppName: set_nearClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_nearClipPlane)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_nearClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::get_farClipPlane
// Il2CppName: get_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Camera::*)()>(&Camera::get_farClipPlane)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_farClipPlane
// Il2CppName: set_farClipPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_farClipPlane)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_farClipPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::get_fieldOfView
// Il2CppName: get_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Camera::*)()>(&Camera::get_fieldOfView)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_fieldOfView
// Il2CppName: set_fieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_fieldOfView)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_fieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::set_renderingPath
// Il2CppName: set_renderingPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::RenderingPath)>(&Camera::set_renderingPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_renderingPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderingPath>()});
  }
};
// Writing MetadataGetter for method: Camera::set_allowHDR
// Il2CppName: set_allowHDR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(bool)>(&Camera::set_allowHDR)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_allowHDR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Camera::set_allowMSAA
// Il2CppName: set_allowMSAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(bool)>(&Camera::set_allowMSAA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_allowMSAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Camera::set_forceIntoRenderTexture
// Il2CppName: set_forceIntoRenderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(bool)>(&Camera::set_forceIntoRenderTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_forceIntoRenderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Camera::set_orthographicSize
// Il2CppName: set_orthographicSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_orthographicSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_orthographicSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::get_orthographic
// Il2CppName: get_orthographic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Camera::*)()>(&Camera::get_orthographic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_orthographic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_orthographic
// Il2CppName: set_orthographic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(bool)>(&Camera::set_orthographic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_orthographic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Camera::get_depth
// Il2CppName: get_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Camera::*)()>(&Camera::get_depth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_depth
// Il2CppName: set_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_depth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::get_aspect
// Il2CppName: get_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Camera::*)()>(&Camera::get_aspect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_aspect
// Il2CppName: set_aspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(float)>(&Camera::set_aspect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_aspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Camera::get_cullingMask
// Il2CppName: get_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Camera::*)()>(&Camera::get_cullingMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_cullingMask
// Il2CppName: set_cullingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(int)>(&Camera::set_cullingMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_cullingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Camera::get_eventMask
// Il2CppName: get_eventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Camera::*)()>(&Camera::get_eventMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_eventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_useOcclusionCulling
// Il2CppName: set_useOcclusionCulling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(bool)>(&Camera::set_useOcclusionCulling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_useOcclusionCulling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Camera::get_backgroundColor
// Il2CppName: get_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Camera::*)()>(&Camera::get_backgroundColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_backgroundColor
// Il2CppName: set_backgroundColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Color)>(&Camera::set_backgroundColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_backgroundColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Camera::get_clearFlags
// Il2CppName: get_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::CameraClearFlags (Camera::*)()>(&Camera::get_clearFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_clearFlags
// Il2CppName: set_clearFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::CameraClearFlags)>(&Camera::set_clearFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_clearFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CameraClearFlags>()});
  }
};
// Writing MetadataGetter for method: Camera::get_depthTextureMode
// Il2CppName: get_depthTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::DepthTextureMode (Camera::*)()>(&Camera::get_depthTextureMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_depthTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_depthTextureMode
// Il2CppName: set_depthTextureMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::DepthTextureMode)>(&Camera::set_depthTextureMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_depthTextureMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::DepthTextureMode>()});
  }
};
// Writing MetadataGetter for method: Camera::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Camera::*)()>(&Camera::get_rect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_rect
// Il2CppName: set_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rect)>(&Camera::set_rect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Camera::get_pixelRect
// Il2CppName: get_pixelRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Camera::*)()>(&Camera::get_pixelRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_pixelRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_pixelWidth
// Il2CppName: get_pixelWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Camera::*)()>(&Camera::get_pixelWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_pixelWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_pixelHeight
// Il2CppName: get_pixelHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Camera::*)()>(&Camera::get_pixelHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_pixelHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_targetTexture
// Il2CppName: get_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (Camera::*)()>(&Camera::get_targetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_targetTexture
// Il2CppName: set_targetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::RenderTexture*)>(&Camera::set_targetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_targetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: Camera::get_targetDisplay
// Il2CppName: get_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Camera::*)()>(&Camera::get_targetDisplay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_targetDisplay
// Il2CppName: set_targetDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(int)>(&Camera::set_targetDisplay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_targetDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Camera::get_worldToCameraMatrix
// Il2CppName: get_worldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Camera::*)()>(&Camera::get_worldToCameraMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_worldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_worldToCameraMatrix
// Il2CppName: set_worldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4)>(&Camera::set_worldToCameraMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_worldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Camera::get_projectionMatrix
// Il2CppName: get_projectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Camera::*)()>(&Camera::get_projectionMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_projectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_projectionMatrix
// Il2CppName: set_projectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4)>(&Camera::set_projectionMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_projectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Camera::ResetWorldToCameraMatrix
// Il2CppName: ResetWorldToCameraMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)()>(&Camera::ResetWorldToCameraMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ResetWorldToCameraMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::CalculateObliqueMatrix
// Il2CppName: CalculateObliqueMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Camera::*)(UnityEngine::Vector4)>(&Camera::CalculateObliqueMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "CalculateObliqueMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Camera::*)(UnityEngine::Vector3, UnityEngine::Camera::MonoOrStereoscopicEye)>(&Camera::WorldToScreenPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>()});
  }
};
// Writing MetadataGetter for method: Camera::ViewportToWorldPoint
// Il2CppName: ViewportToWorldPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Camera::*)(UnityEngine::Vector3, UnityEngine::Camera::MonoOrStereoscopicEye)>(&Camera::ViewportToWorldPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ViewportToWorldPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>()});
  }
};
// Writing MetadataGetter for method: Camera::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Camera::*)(UnityEngine::Vector3)>(&Camera::WorldToScreenPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenToViewportPoint
// Il2CppName: ScreenToViewportPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Camera::*)(UnityEngine::Vector3)>(&Camera::ScreenToViewportPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenToViewportPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Ray (Camera::*)(UnityEngine::Vector2, UnityEngine::Camera::MonoOrStereoscopicEye)>(&Camera::ScreenPointToRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Ray (Camera::*)(UnityEngine::Vector3, UnityEngine::Camera::MonoOrStereoscopicEye)>(&Camera::ScreenPointToRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Ray (Camera::*)(UnityEngine::Vector3)>(&Camera::ScreenPointToRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Camera::get_main
// Il2CppName: get_main
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (*)()>(&Camera::get_main)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_main", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (*)()>(&Camera::get_current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_stereoEnabled
// Il2CppName: get_stereoEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Camera::*)()>(&Camera::get_stereoEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_stereoEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::get_stereoTargetEye
// Il2CppName: get_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::StereoTargetEyeMask (Camera::*)()>(&Camera::get_stereoTargetEye)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::set_stereoTargetEye
// Il2CppName: set_stereoTargetEye
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::StereoTargetEyeMask)>(&Camera::set_stereoTargetEye)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_stereoTargetEye", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::StereoTargetEyeMask>()});
  }
};
// Writing MetadataGetter for method: Camera::GetStereoProjectionMatrix
// Il2CppName: GetStereoProjectionMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Camera::*)(UnityEngine::Camera::StereoscopicEye)>(&Camera::GetStereoProjectionMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "GetStereoProjectionMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::StereoscopicEye>()});
  }
};
// Writing MetadataGetter for method: Camera::GetAllCamerasCount
// Il2CppName: GetAllCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Camera::GetAllCamerasCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "GetAllCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::GetAllCamerasImpl
// Il2CppName: GetAllCamerasImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<UnityEngine::Camera*>*&)>(&Camera::GetAllCamerasImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "GetAllCamerasImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Camera*>*&>()});
  }
};
// Writing MetadataGetter for method: Camera::get_allCamerasCount
// Il2CppName: get_allCamerasCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Camera::get_allCamerasCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_allCamerasCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::GetAllCameras
// Il2CppName: GetAllCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<UnityEngine::Camera*>*)>(&Camera::GetAllCameras)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "GetAllCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Camera*>*>()});
  }
};
// Writing MetadataGetter for method: Camera::RenderToCubemapImpl
// Il2CppName: RenderToCubemapImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Camera::*)(UnityEngine::Texture*, int)>(&Camera::RenderToCubemapImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "RenderToCubemapImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Camera::RenderToCubemap
// Il2CppName: RenderToCubemap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Camera::*)(UnityEngine::RenderTexture*)>(&Camera::RenderToCubemap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "RenderToCubemap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: Camera::Render
// Il2CppName: Render
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)()>(&Camera::Render)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "Render", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Camera::RenderWithShader
// Il2CppName: RenderWithShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Shader*, ::Il2CppString*)>(&Camera::RenderWithShader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "RenderWithShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Camera::CopyFrom
// Il2CppName: CopyFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Camera*)>(&Camera::CopyFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "CopyFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Camera::AddCommandBufferImpl
// Il2CppName: AddCommandBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rendering::CameraEvent, UnityEngine::Rendering::CommandBuffer*)>(&Camera::AddCommandBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "AddCommandBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CameraEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Camera::RemoveCommandBufferImpl
// Il2CppName: RemoveCommandBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rendering::CameraEvent, UnityEngine::Rendering::CommandBuffer*)>(&Camera::RemoveCommandBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "RemoveCommandBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CameraEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Camera::AddCommandBuffer
// Il2CppName: AddCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rendering::CameraEvent, UnityEngine::Rendering::CommandBuffer*)>(&Camera::AddCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "AddCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CameraEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Camera::RemoveCommandBuffer
// Il2CppName: RemoveCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rendering::CameraEvent, UnityEngine::Rendering::CommandBuffer*)>(&Camera::RemoveCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "RemoveCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CameraEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Camera::FireOnPreCull
// Il2CppName: FireOnPreCull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Camera*)>(&Camera::FireOnPreCull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "FireOnPreCull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Camera::FireOnPreRender
// Il2CppName: FireOnPreRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Camera*)>(&Camera::FireOnPreRender)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "FireOnPreRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Camera::FireOnPostRender
// Il2CppName: FireOnPostRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Camera*)>(&Camera::FireOnPostRender)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "FireOnPostRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Camera::get_backgroundColor_Injected
// Il2CppName: get_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Color&)>(&Camera::get_backgroundColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Camera::set_backgroundColor_Injected
// Il2CppName: set_backgroundColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Color&)>(&Camera::set_backgroundColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_backgroundColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Camera::get_rect_Injected
// Il2CppName: get_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rect&)>(&Camera::get_rect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Camera::set_rect_Injected
// Il2CppName: set_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rect&)>(&Camera::set_rect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Camera::get_pixelRect_Injected
// Il2CppName: get_pixelRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Rect&)>(&Camera::get_pixelRect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_pixelRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Camera::get_worldToCameraMatrix_Injected
// Il2CppName: get_worldToCameraMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4&)>(&Camera::get_worldToCameraMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::set_worldToCameraMatrix_Injected
// Il2CppName: set_worldToCameraMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4&)>(&Camera::set_worldToCameraMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::get_projectionMatrix_Injected
// Il2CppName: get_projectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4&)>(&Camera::get_projectionMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "get_projectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::set_projectionMatrix_Injected
// Il2CppName: set_projectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Matrix4x4&)>(&Camera::set_projectionMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "set_projectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::CalculateObliqueMatrix_Injected
// Il2CppName: CalculateObliqueMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Vector4&, UnityEngine::Matrix4x4&)>(&Camera::CalculateObliqueMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "CalculateObliqueMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::WorldToScreenPoint_Injected
// Il2CppName: WorldToScreenPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Vector3&, UnityEngine::Camera::MonoOrStereoscopicEye, UnityEngine::Vector3&)>(&Camera::WorldToScreenPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "WorldToScreenPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Camera::ViewportToWorldPoint_Injected
// Il2CppName: ViewportToWorldPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Vector3&, UnityEngine::Camera::MonoOrStereoscopicEye, UnityEngine::Vector3&)>(&Camera::ViewportToWorldPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ViewportToWorldPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenToViewportPoint_Injected
// Il2CppName: ScreenToViewportPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Camera::ScreenToViewportPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenToViewportPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Camera::ScreenPointToRay_Injected
// Il2CppName: ScreenPointToRay_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Vector2&, UnityEngine::Camera::MonoOrStereoscopicEye, UnityEngine::Ray&)>(&Camera::ScreenPointToRay_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "ScreenPointToRay_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::MonoOrStereoscopicEye>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>()});
  }
};
// Writing MetadataGetter for method: Camera::GetStereoProjectionMatrix_Injected
// Il2CppName: GetStereoProjectionMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)(UnityEngine::Camera::StereoscopicEye, UnityEngine::Matrix4x4&)>(&Camera::GetStereoProjectionMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), "GetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera::StereoscopicEye>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Camera::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)()>(&Camera::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::*)()>(&Camera::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Camera/StereoscopicEye
#include "UnityEngine/Camera_StereoscopicEye.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/StereoscopicEye Left
UnityEngine::Camera::StereoscopicEye UnityEngine::Camera::StereoscopicEye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::StereoscopicEye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::StereoscopicEye>("UnityEngine", "Camera/StereoscopicEye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/StereoscopicEye Left
void UnityEngine::Camera::StereoscopicEye::_set_Left(UnityEngine::Camera::StereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::StereoscopicEye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/StereoscopicEye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/StereoscopicEye Right
UnityEngine::Camera::StereoscopicEye UnityEngine::Camera::StereoscopicEye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::StereoscopicEye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::StereoscopicEye>("UnityEngine", "Camera/StereoscopicEye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/StereoscopicEye Right
void UnityEngine::Camera::StereoscopicEye::_set_Right(UnityEngine::Camera::StereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::StereoscopicEye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/StereoscopicEye", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Camera/MonoOrStereoscopicEye
#include "UnityEngine/Camera_MonoOrStereoscopicEye.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Left
UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Left
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Left(UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Right
UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Right
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Right(UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Mono
UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/MonoOrStereoscopicEye Mono
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Mono(UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::MonoOrStereoscopicEye::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Mono", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Camera/CameraCallback
#include "UnityEngine/Camera_CameraCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Camera/CameraCallback.Invoke
void UnityEngine::Camera::CameraCallback::Invoke(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CameraCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera/CameraCallback.BeginInvoke
System::IAsyncResult* UnityEngine::Camera::CameraCallback::BeginInvoke(UnityEngine::Camera* cam, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CameraCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, cam, callback, object);
}
// Autogenerated method: UnityEngine.Camera/CameraCallback.EndInvoke
void UnityEngine::Camera::CameraCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Camera::CameraCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Camera::CameraCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::CameraCallback::*)(::Il2CppObject*, System::IntPtr)>(&Camera::CameraCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera::CameraCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::CameraCallback::*)(::Il2CppObject*, System::IntPtr)>(&Camera::CameraCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera::CameraCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Camera::CameraCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::CameraCallback::*)(UnityEngine::Camera*)>(&Camera::CameraCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera::CameraCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Camera::CameraCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Camera::CameraCallback::*)(UnityEngine::Camera*, System::AsyncCallback*, ::Il2CppObject*)>(&Camera::CameraCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera::CameraCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Camera::CameraCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Camera::CameraCallback::*)(System::IAsyncResult*)>(&Camera::CameraCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Camera::CameraCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CullingGroup
#include "UnityEngine/CullingGroup.hpp"
// Including type: UnityEngine.CullingGroup/StateChanged
#include "UnityEngine/CullingGroup_StateChanged.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CullingGroup.SendEvents
void UnityEngine::CullingGroup::SendEvents(UnityEngine::CullingGroup* cullingGroup, System::IntPtr eventsPtr, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CullingGroup::SendEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CullingGroup", "SendEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cullingGroup), ::il2cpp_utils::ExtractType(eventsPtr), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cullingGroup, eventsPtr, count);
}
// Writing MetadataGetter for method: CullingGroup::SendEvents
// Il2CppName: SendEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::CullingGroup*, System::IntPtr, int)>(&CullingGroup::SendEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup*), "SendEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CullingGroup*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CullingGroup/StateChanged
#include "UnityEngine/CullingGroup_StateChanged.hpp"
// Including type: UnityEngine.CullingGroupEvent
#include "UnityEngine/CullingGroupEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CullingGroup/StateChanged.Invoke
void UnityEngine::CullingGroup::StateChanged::Invoke(UnityEngine::CullingGroupEvent sphere) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CullingGroup::StateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sphere)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sphere);
}
// Autogenerated method: UnityEngine.CullingGroup/StateChanged.BeginInvoke
System::IAsyncResult* UnityEngine::CullingGroup::StateChanged::BeginInvoke(UnityEngine::CullingGroupEvent sphere, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CullingGroup::StateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sphere), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sphere, callback, object);
}
// Autogenerated method: UnityEngine.CullingGroup/StateChanged.EndInvoke
void UnityEngine::CullingGroup::StateChanged::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CullingGroup::StateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: CullingGroup::StateChanged::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CullingGroup::StateChanged::*)(::Il2CppObject*, System::IntPtr)>(&CullingGroup::StateChanged::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup::StateChanged*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CullingGroup::StateChanged::*)(::Il2CppObject*, System::IntPtr)>(&CullingGroup::StateChanged::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup::StateChanged*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CullingGroup::StateChanged::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CullingGroup::StateChanged::*)(UnityEngine::CullingGroupEvent)>(&CullingGroup::StateChanged::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup::StateChanged*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CullingGroupEvent>()});
  }
};
// Writing MetadataGetter for method: CullingGroup::StateChanged::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (CullingGroup::StateChanged::*)(UnityEngine::CullingGroupEvent, System::AsyncCallback*, ::Il2CppObject*)>(&CullingGroup::StateChanged::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup::StateChanged*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CullingGroupEvent>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CullingGroup::StateChanged::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CullingGroup::StateChanged::*)(System::IAsyncResult*)>(&CullingGroup::StateChanged::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CullingGroup::StateChanged*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ReflectionProbe
#include "UnityEngine/ReflectionProbe.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xD92E94
// [DebuggerBrowsableAttribute] Offset: 0xD92E94
// Autogenerated static field getter
// Get static field: static private System.Action`2<UnityEngine.ReflectionProbe,UnityEngine.ReflectionProbe/ReflectionProbeEvent> reflectionProbeChanged
System::Action_2<UnityEngine::ReflectionProbe*, UnityEngine::ReflectionProbe::ReflectionProbeEvent>* UnityEngine::ReflectionProbe::_get_reflectionProbeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::_get_reflectionProbeChanged");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<UnityEngine::ReflectionProbe*, UnityEngine::ReflectionProbe::ReflectionProbeEvent>*>("UnityEngine", "ReflectionProbe", "reflectionProbeChanged")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<UnityEngine.ReflectionProbe,UnityEngine.ReflectionProbe/ReflectionProbeEvent> reflectionProbeChanged
void UnityEngine::ReflectionProbe::_set_reflectionProbeChanged(System::Action_2<UnityEngine::ReflectionProbe*, UnityEngine::ReflectionProbe::ReflectionProbeEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::_set_reflectionProbeChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe", "reflectionProbeChanged", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD92ED0
// [DebuggerBrowsableAttribute] Offset: 0xD92ED0
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Cubemap> defaultReflectionSet
System::Action_1<UnityEngine::Cubemap*>* UnityEngine::ReflectionProbe::_get_defaultReflectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::_get_defaultReflectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Cubemap*>*>("UnityEngine", "ReflectionProbe", "defaultReflectionSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Cubemap> defaultReflectionSet
void UnityEngine::ReflectionProbe::_set_defaultReflectionSet(System::Action_1<UnityEngine::Cubemap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::_set_defaultReflectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe", "defaultReflectionSet", value));
}
// Autogenerated method: UnityEngine.ReflectionProbe.CallReflectionProbeEvent
void UnityEngine::ReflectionProbe::CallReflectionProbeEvent(UnityEngine::ReflectionProbe* probe, UnityEngine::ReflectionProbe::ReflectionProbeEvent probeEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::CallReflectionProbeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ReflectionProbe", "CallReflectionProbeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(probe), ::il2cpp_utils::ExtractType(probeEvent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, probe, probeEvent);
}
// Autogenerated method: UnityEngine.ReflectionProbe.CallSetDefaultReflection
void UnityEngine::ReflectionProbe::CallSetDefaultReflection(UnityEngine::Cubemap* defaultReflectionCubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::CallSetDefaultReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ReflectionProbe", "CallSetDefaultReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultReflectionCubemap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, defaultReflectionCubemap);
}
// Writing MetadataGetter for method: ReflectionProbe::CallReflectionProbeEvent
// Il2CppName: CallReflectionProbeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::ReflectionProbe*, UnityEngine::ReflectionProbe::ReflectionProbeEvent)>(&ReflectionProbe::CallReflectionProbeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionProbe*), "CallReflectionProbeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ReflectionProbe*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ReflectionProbe::ReflectionProbeEvent>()});
  }
};
// Writing MetadataGetter for method: ReflectionProbe::CallSetDefaultReflection
// Il2CppName: CallSetDefaultReflection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cubemap*)>(&ReflectionProbe::CallSetDefaultReflection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionProbe*), "CallSetDefaultReflection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cubemap*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ReflectionProbe/ReflectionProbeEvent
#include "UnityEngine/ReflectionProbe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ReflectionProbe/ReflectionProbeEvent ReflectionProbeAdded
UnityEngine::ReflectionProbe::ReflectionProbeEvent UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ReflectionProbe::ReflectionProbeEvent>("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ReflectionProbe/ReflectionProbeEvent ReflectionProbeAdded
void UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeAdded(UnityEngine::ReflectionProbe::ReflectionProbeEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ReflectionProbe/ReflectionProbeEvent ReflectionProbeRemoved
UnityEngine::ReflectionProbe::ReflectionProbeEvent UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ReflectionProbe::ReflectionProbeEvent>("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ReflectionProbe/ReflectionProbeEvent ReflectionProbeRemoved
void UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeRemoved(UnityEngine::ReflectionProbe::ReflectionProbeEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeRemoved", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.DebugLogHandler
#include "UnityEngine/DebugLogHandler.hpp"
// Including type: UnityEngine.LogOption
#include "UnityEngine/LogOption.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.DebugLogHandler.Internal_Log
void UnityEngine::DebugLogHandler::Internal_Log(UnityEngine::LogType level, UnityEngine::LogOption options, ::Il2CppString* msg, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DebugLogHandler::Internal_Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "DebugLogHandler", "Internal_Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level, options, msg, obj);
}
// Autogenerated method: UnityEngine.DebugLogHandler.Internal_LogException
void UnityEngine::DebugLogHandler::Internal_LogException(System::Exception* exception, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DebugLogHandler::Internal_LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "DebugLogHandler", "Internal_LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception, obj);
}
// Autogenerated method: UnityEngine.DebugLogHandler.LogFormat
void UnityEngine::DebugLogHandler::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DebugLogHandler::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::DebugLogHandler::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::DebugLogHandler::LogFormat(logType, context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.DebugLogHandler.LogException
void UnityEngine::DebugLogHandler::LogException(System::Exception* exception, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DebugLogHandler::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exception, context);
}
// Writing MetadataGetter for method: DebugLogHandler::Internal_Log
// Il2CppName: Internal_Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::LogType, UnityEngine::LogOption, ::Il2CppString*, UnityEngine::Object*)>(&DebugLogHandler::Internal_Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), "Internal_Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogOption>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: DebugLogHandler::Internal_LogException
// Il2CppName: Internal_LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Exception*, UnityEngine::Object*)>(&DebugLogHandler::Internal_LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), "Internal_LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: DebugLogHandler::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugLogHandler::*)(UnityEngine::LogType, UnityEngine::Object*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&DebugLogHandler::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: DebugLogHandler::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugLogHandler::*)(System::Exception*, UnityEngine::Object*)>(&DebugLogHandler::LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: DebugLogHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugLogHandler::*)()>(&DebugLogHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugLogHandler::*)()>(&DebugLogHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugLogHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Debug
#include "UnityEngine/Debug.hpp"
// Including type: UnityEngine.ILogger
#include "UnityEngine/ILogger.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.ILogger s_Logger
UnityEngine::ILogger* UnityEngine::Debug::_get_s_Logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::_get_s_Logger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ILogger*>("UnityEngine", "Debug", "s_Logger"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.ILogger s_Logger
void UnityEngine::Debug::_set_s_Logger(UnityEngine::ILogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::_set_s_Logger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Debug", "s_Logger", value));
}
// Autogenerated method: UnityEngine.Debug.get_unityLogger
UnityEngine::ILogger* UnityEngine::Debug::get_unityLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::get_unityLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "get_unityLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ILogger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(UnityEngine::Vector3 start, UnityEngine::Vector3 end, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, end, color);
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(UnityEngine::Vector3 start, UnityEngine::Vector3 end, UnityEngine::Color color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, end, color, duration, depthTest);
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogFormat
void UnityEngine::Debug::LogFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(System.String format, params System.Object[] args)
void UnityEngine::Debug::LogFormat(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Debug::LogFormat(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogErrorFormat(System.String format, params System.Object[] args)
void UnityEngine::Debug::LogErrorFormat(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Debug::LogErrorFormat(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogErrorFormat(UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::Debug::LogErrorFormat(UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Debug::LogErrorFormat(context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(System::Exception* exception, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception, context);
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogWarningFormat(System.String format, params System.Object[] args)
void UnityEngine::Debug::LogWarningFormat(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Debug::LogWarningFormat(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogWarningFormat(UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::Debug::LogWarningFormat(UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Debug::LogWarningFormat(context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Debug.LogAssertion
void UnityEngine::Debug::LogAssertion(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::LogAssertion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogAssertion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.get_isDebugBuild
bool UnityEngine::Debug::get_isDebugBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::get_isDebugBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "get_isDebugBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.CallOverridenDebugHandler
bool UnityEngine::Debug::CallOverridenDebugHandler(System::Exception* exception, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::CallOverridenDebugHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "CallOverridenDebugHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception, obj);
}
// Autogenerated method: UnityEngine.Debug..cctor
void UnityEngine::Debug::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.DrawLine_Injected
void UnityEngine::Debug::DrawLine_Injected(UnityEngine::Vector3& start, UnityEngine::Vector3& end, UnityEngine::Color& color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Debug::DrawLine_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, end, color, duration, depthTest);
}
// Writing MetadataGetter for method: Debug::get_unityLogger
// Il2CppName: get_unityLogger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ILogger* (*)()>(&Debug::get_unityLogger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "get_unityLogger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Debug::DrawLine
// Il2CppName: DrawLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Color)>(&Debug::DrawLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "DrawLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Debug::DrawLine
// Il2CppName: DrawLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Color, float, bool)>(&Debug::DrawLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "DrawLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Debug::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Debug::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Debug::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, UnityEngine::Object*)>(&Debug::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Debug::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Debug::LogError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, UnityEngine::Object*)>(&Debug::LogError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogErrorFormat
// Il2CppName: LogErrorFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Debug::LogErrorFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogErrorFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogErrorFormat
// Il2CppName: LogErrorFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Object*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Debug::LogErrorFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogErrorFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Exception*)>(&Debug::LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Exception*, UnityEngine::Object*)>(&Debug::LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Debug::LogWarning)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, UnityEngine::Object*)>(&Debug::LogWarning)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogWarningFormat
// Il2CppName: LogWarningFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Debug::LogWarningFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogWarningFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogWarningFormat
// Il2CppName: LogWarningFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Object*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Debug::LogWarningFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogWarningFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Debug::LogAssertion
// Il2CppName: LogAssertion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Debug::LogAssertion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "LogAssertion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Debug::get_isDebugBuild
// Il2CppName: get_isDebugBuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Debug::get_isDebugBuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "get_isDebugBuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Debug::CallOverridenDebugHandler
// Il2CppName: CallOverridenDebugHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Exception*, UnityEngine::Object*)>(&Debug::CallOverridenDebugHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "CallOverridenDebugHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Debug::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Debug::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Debug::DrawLine_Injected
// Il2CppName: DrawLine_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, UnityEngine::Vector3&, UnityEngine::Color&, float, bool)>(&Debug::DrawLine_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Debug*), "DrawLine_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IExposedPropertyTable
#include "UnityEngine/IExposedPropertyTable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IExposedPropertyTable.GetReferenceValue
UnityEngine::Object* UnityEngine::IExposedPropertyTable::GetReferenceValue(UnityEngine::PropertyName id, bool& idValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::IExposedPropertyTable::GetReferenceValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReferenceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method, id, idValid);
}
// Writing MetadataGetter for method: IExposedPropertyTable::GetReferenceValue
// Il2CppName: GetReferenceValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Object* (IExposedPropertyTable::*)(UnityEngine::PropertyName, bool&)>(&IExposedPropertyTable::GetReferenceValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IExposedPropertyTable*), "GetReferenceValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::PropertyName>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(UnityEngine::Bounds other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Bounds.get_center
UnityEngine::Vector3 UnityEngine::Bounds::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_center
void UnityEngine::Bounds::set_center(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_size
UnityEngine::Vector3 UnityEngine::Bounds::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_size
void UnityEngine::Bounds::set_size(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_extents
UnityEngine::Vector3 UnityEngine::Bounds::get_extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::get_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_extents
void UnityEngine::Bounds::set_extents(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::set_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_min
UnityEngine::Vector3 UnityEngine::Bounds::get_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::get_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.get_max
UnityEngine::Vector3 UnityEngine::Bounds::get_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::get_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.SetMinMax
void UnityEngine::Bounds::SetMinMax(UnityEngine::Vector3 min, UnityEngine::Vector3 max) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::SetMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.Bounds.Encapsulate
void UnityEngine::Bounds::Encapsulate(UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::Encapsulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Encapsulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Bounds.IntersectRay
bool UnityEngine::Bounds::IntersectRay(UnityEngine::Ray ray, float& distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::IntersectRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntersectRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ray, distance);
}
// Autogenerated method: UnityEngine.Bounds.Contains
bool UnityEngine::Bounds::Contains(UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB
bool UnityEngine::Bounds::IntersectRayAABB(UnityEngine::Ray ray, UnityEngine::Bounds bounds, float& dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::IntersectRayAABB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "IntersectRayAABB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, bounds, dist);
}
// Autogenerated method: UnityEngine.Bounds.Contains_Injected
bool UnityEngine::Bounds::Contains_Injected(UnityEngine::Bounds& _unity_self, UnityEngine::Vector3& point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::Contains_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "Contains_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, point);
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB_Injected
bool UnityEngine::Bounds::IntersectRayAABB_Injected(UnityEngine::Ray& ray, UnityEngine::Bounds& bounds, float& dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::IntersectRayAABB_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "IntersectRayAABB_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ray, bounds, dist);
}
// Autogenerated method: UnityEngine.Bounds.GetHashCode
int UnityEngine::Bounds::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Bounds.ToString
::Il2CppString* UnityEngine::Bounds::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Bounds& lhs, const UnityEngine::Bounds& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Bounds.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Bounds& lhs, const UnityEngine::Bounds& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Bounds::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Writing MetadataGetter for method: Bounds::Bounds
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Bounds::Bounds<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Bounds::Bounds<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Bounds::*)(UnityEngine::Bounds)>(&Bounds::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds>()});
  }
};
// Writing MetadataGetter for method: Bounds::get_center
// Il2CppName: get_center
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Bounds::*)()>(&Bounds::get_center)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "get_center", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::set_center
// Il2CppName: set_center
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3)>(&Bounds::set_center)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "set_center", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Bounds::*)()>(&Bounds::get_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3)>(&Bounds::set_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::get_extents
// Il2CppName: get_extents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Bounds::*)()>(&Bounds::get_extents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "get_extents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::set_extents
// Il2CppName: set_extents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3)>(&Bounds::set_extents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "set_extents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::get_min
// Il2CppName: get_min
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Bounds::*)()>(&Bounds::get_min)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "get_min", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::get_max
// Il2CppName: get_max
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Bounds::*)()>(&Bounds::get_max)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "get_max", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::SetMinMax
// Il2CppName: SetMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Bounds::SetMinMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "SetMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::Encapsulate
// Il2CppName: Encapsulate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Bounds::*)(UnityEngine::Vector3)>(&Bounds::Encapsulate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "Encapsulate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::IntersectRay
// Il2CppName: IntersectRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Bounds::*)(UnityEngine::Ray, float&)>(&Bounds::IntersectRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "IntersectRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: Bounds::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Bounds::*)(UnityEngine::Vector3)>(&Bounds::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Bounds::IntersectRayAABB
// Il2CppName: IntersectRayAABB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray, UnityEngine::Bounds, float&)>(&Bounds::IntersectRayAABB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "IntersectRayAABB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: Bounds::Contains_Injected
// Il2CppName: Contains_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Bounds&, UnityEngine::Vector3&)>(&Bounds::Contains_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "Contains_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Bounds::IntersectRayAABB_Injected
// Il2CppName: IntersectRayAABB_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Ray&, UnityEngine::Bounds&, float&)>(&Bounds::IntersectRayAABB_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "IntersectRayAABB_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: Bounds::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Bounds::*)()>(&Bounds::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Bounds::*)(::Il2CppObject*)>(&Bounds::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Bounds::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Bounds::*)()>(&Bounds::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Bounds::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Bounds&, const UnityEngine::Bounds&)>(&Bounds::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: Bounds::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Bounds&, const UnityEngine::Bounds&)>(&Bounds::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Bounds), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Bounds&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 size
int UnityEngine::Plane::_get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::_get_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Plane", "size"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 size
void UnityEngine::Plane::_set_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::_set_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Plane", "size", value));
}
// Autogenerated method: UnityEngine.Plane.get_normal
UnityEngine::Vector3 UnityEngine::Plane::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Plane.SetNormalAndPosition
void UnityEngine::Plane::SetNormalAndPosition(UnityEngine::Vector3 inNormal, UnityEngine::Vector3 inPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::SetNormalAndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetNormalAndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormal), ::il2cpp_utils::ExtractType(inPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, inNormal, inPoint);
}
// Autogenerated method: UnityEngine.Plane.ClosestPointOnPlane
UnityEngine::Vector3 UnityEngine::Plane::ClosestPointOnPlane(UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::ClosestPointOnPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClosestPointOnPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Plane.GetDistanceToPoint
float UnityEngine::Plane::GetDistanceToPoint(UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::GetDistanceToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDistanceToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Plane.SameSide
bool UnityEngine::Plane::SameSide(UnityEngine::Vector3 inPt0, UnityEngine::Vector3 inPt1) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::SameSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SameSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inPt0), ::il2cpp_utils::ExtractType(inPt1)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inPt0, inPt1);
}
// Autogenerated method: UnityEngine.Plane.Raycast
bool UnityEngine::Plane::Raycast(UnityEngine::Ray ray, float& enter) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, ray, enter);
}
// Autogenerated method: UnityEngine.Plane.ToString
::Il2CppString* UnityEngine::Plane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Plane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Plane::get_normal
// Il2CppName: get_normal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Plane::*)()>(&Plane::get_normal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "get_normal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Plane::Plane
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::Plane<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::Plane<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::Plane
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::Plane<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::Plane<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::SetNormalAndPosition
// Il2CppName: SetNormalAndPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::SetNormalAndPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "SetNormalAndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::ClosestPointOnPlane
// Il2CppName: ClosestPointOnPlane
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Plane::*)(UnityEngine::Vector3)>(&Plane::ClosestPointOnPlane)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "ClosestPointOnPlane", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::GetDistanceToPoint
// Il2CppName: GetDistanceToPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Plane::*)(UnityEngine::Vector3)>(&Plane::GetDistanceToPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "GetDistanceToPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::SameSide
// Il2CppName: SameSide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Plane::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Plane::SameSide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "SameSide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Plane::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Plane::*)(UnityEngine::Ray, float&)>(&Plane::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: Plane::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Plane::*)()>(&Plane::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Plane), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Ray.get_origin
UnityEngine::Vector3 UnityEngine::Ray::get_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::get_origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ray.set_origin
void UnityEngine::Ray::set_origin(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::set_origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Ray.get_direction
UnityEngine::Vector3 UnityEngine::Ray::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ray.set_direction
void UnityEngine::Ray::set_direction(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Ray.GetPoint
UnityEngine::Vector3 UnityEngine::Ray::GetPoint(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method, distance);
}
// Autogenerated method: UnityEngine.Ray.ToString
::Il2CppString* UnityEngine::Ray::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Ray::Ray
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Ray::Ray<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Ray::Ray<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Ray::get_origin
// Il2CppName: get_origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Ray::*)()>(&Ray::get_origin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "get_origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Ray::set_origin
// Il2CppName: set_origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray::*)(UnityEngine::Vector3)>(&Ray::set_origin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "set_origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Ray::get_direction
// Il2CppName: get_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Ray::*)()>(&Ray::get_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "get_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Ray::set_direction
// Il2CppName: set_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray::*)(UnityEngine::Vector3)>(&Ray::set_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "set_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Ray::GetPoint
// Il2CppName: GetPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Ray::*)(float)>(&Ray::GetPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "GetPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Ray::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Ray::*)()>(&Ray::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Ray2D
#include "UnityEngine/Ray2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Ray2D.get_origin
UnityEngine::Vector2 UnityEngine::Ray2D::get_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray2D::get_origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ray2D.get_direction
UnityEngine::Vector2 UnityEngine::Ray2D::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray2D::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ray2D.GetPoint
UnityEngine::Vector2 UnityEngine::Ray2D::GetPoint(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray2D::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method, distance);
}
// Autogenerated method: UnityEngine.Ray2D.ToString
::Il2CppString* UnityEngine::Ray2D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Ray2D::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Ray2D::Ray2D
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray2D::*)(UnityEngine::Vector2, UnityEngine::Vector2)>(&Ray2D::Ray2D<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ray2D::*)(UnityEngine::Vector2, UnityEngine::Vector2)>(&Ray2D::Ray2D<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Ray2D::get_origin
// Il2CppName: get_origin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Ray2D::*)()>(&Ray2D::get_origin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), "get_origin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Ray2D::get_direction
// Il2CppName: get_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Ray2D::*)()>(&Ray2D::get_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), "get_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Ray2D::GetPoint
// Il2CppName: GetPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Ray2D::*)(float)>(&Ray2D::GetPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), "GetPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Ray2D::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Ray2D::*)()>(&Ray2D::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ray2D), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rect.get_zero
UnityEngine::Rect UnityEngine::Rect::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Rect", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.MinMaxRect
UnityEngine::Rect UnityEngine::Rect::MinMaxRect(float xmin, float ymin, float xmax, float ymax) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::MinMaxRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Rect", "MinMaxRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmin), ::il2cpp_utils::ExtractType(ymin), ::il2cpp_utils::ExtractType(xmax), ::il2cpp_utils::ExtractType(ymax)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xmin, ymin, xmax, ymax);
}
// Autogenerated method: UnityEngine.Rect.get_x
float UnityEngine::Rect::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_x
void UnityEngine::Rect::set_x(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_y
float UnityEngine::Rect::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_y
void UnityEngine::Rect::set_y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_position
UnityEngine::Vector2 UnityEngine::Rect::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_position
void UnityEngine::Rect::set_position(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_center
UnityEngine::Vector2 UnityEngine::Rect::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_center
void UnityEngine::Rect::set_center(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_min
UnityEngine::Vector2 UnityEngine::Rect::get_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.get_max
UnityEngine::Vector2 UnityEngine::Rect::get_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.get_width
float UnityEngine::Rect::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_width
void UnityEngine::Rect::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_height
float UnityEngine::Rect::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_height
void UnityEngine::Rect::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_size
UnityEngine::Vector2 UnityEngine::Rect::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_size
void UnityEngine::Rect::set_size(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_xMin
float UnityEngine::Rect::get_xMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_xMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_xMin
void UnityEngine::Rect::set_xMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_xMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_yMin
float UnityEngine::Rect::get_yMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_yMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_yMin
void UnityEngine::Rect::set_yMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_yMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_xMax
float UnityEngine::Rect::get_xMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_xMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_xMax
void UnityEngine::Rect::set_xMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_xMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.get_yMax
float UnityEngine::Rect::get_yMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::get_yMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.set_yMax
void UnityEngine::Rect::set_yMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::set_yMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rect.Contains
bool UnityEngine::Rect::Contains(UnityEngine::Vector2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Rect.Contains
bool UnityEngine::Rect::Contains(UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Rect.OrderMinMax
UnityEngine::Rect UnityEngine::Rect::OrderMinMax(UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::OrderMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Rect", "OrderMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.Rect.Overlaps
bool UnityEngine::Rect::Overlaps(UnityEngine::Rect other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Overlaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Overlaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rect.Overlaps
bool UnityEngine::Rect::Overlaps(UnityEngine::Rect other, bool allowInverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Overlaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Overlaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(allowInverse)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other, allowInverse);
}
// Autogenerated method: UnityEngine.Rect.Equals
bool UnityEngine::Rect::Equals(UnityEngine::Rect other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rect.GetHashCode
int UnityEngine::Rect::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.Equals
bool UnityEngine::Rect::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rect.ToString
::Il2CppString* UnityEngine::Rect::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rect.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Rect& lhs, const UnityEngine::Rect& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Rect", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Rect.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Rect& lhs, const UnityEngine::Rect& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Rect::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Rect", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Writing MetadataGetter for method: Rect::Rect
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float, float, float, float)>(&Rect::Rect<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float, float, float, float)>(&Rect::Rect<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::Rect
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Vector2, UnityEngine::Vector2)>(&Rect::Rect<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Vector2, UnityEngine::Vector2)>(&Rect::Rect<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Rect::Rect
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Rect)>(&Rect::Rect<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Rect)>(&Rect::Rect<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Rect::get_zero
// Il2CppName: get_zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (*)()>(&Rect::get_zero)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::MinMaxRect
// Il2CppName: MinMaxRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (*)(float, float, float, float)>(&Rect::MinMaxRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "MinMaxRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_x
// Il2CppName: get_x
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_x)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_x", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_x
// Il2CppName: set_x
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_x)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_x", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_y
// Il2CppName: get_y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_y)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_y
// Il2CppName: set_y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_y)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Rect::*)()>(&Rect::get_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Vector2)>(&Rect::set_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Rect::get_center
// Il2CppName: get_center
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Rect::*)()>(&Rect::get_center)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_center", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_center
// Il2CppName: set_center
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Vector2)>(&Rect::set_center)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_center", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Rect::get_min
// Il2CppName: get_min
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Rect::*)()>(&Rect::get_min)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_min", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::get_max
// Il2CppName: get_max
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Rect::*)()>(&Rect::get_max)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_max", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Rect::*)()>(&Rect::get_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(UnityEngine::Vector2)>(&Rect::set_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Rect::get_xMin
// Il2CppName: get_xMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_xMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_xMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_xMin
// Il2CppName: set_xMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_xMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_xMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_yMin
// Il2CppName: get_yMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_yMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_yMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_yMin
// Il2CppName: set_yMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_yMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_yMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_xMax
// Il2CppName: get_xMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_xMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_xMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_xMax
// Il2CppName: set_xMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_xMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_xMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::get_yMax
// Il2CppName: get_yMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Rect::*)()>(&Rect::get_yMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "get_yMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::set_yMax
// Il2CppName: set_yMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Rect::*)(float)>(&Rect::set_yMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "set_yMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Rect::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(UnityEngine::Vector2)>(&Rect::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Rect::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(UnityEngine::Vector3)>(&Rect::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Rect::OrderMinMax
// Il2CppName: OrderMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (*)(UnityEngine::Rect)>(&Rect::OrderMinMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "OrderMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Rect::Overlaps
// Il2CppName: Overlaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(UnityEngine::Rect)>(&Rect::Overlaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Overlaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Rect::Overlaps
// Il2CppName: Overlaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(UnityEngine::Rect, bool)>(&Rect::Overlaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Overlaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Rect::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(UnityEngine::Rect)>(&Rect::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Rect::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Rect::*)()>(&Rect::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Rect::*)(::Il2CppObject*)>(&Rect::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Rect::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Rect::*)()>(&Rect::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Rect::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Rect&, const UnityEngine::Rect&)>(&Rect::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Rect::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Rect&, const UnityEngine::Rect&)>(&Rect::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Rect), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Rect&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RectOffset.Destroy
void UnityEngine::RectOffset::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.InternalCreate
System::IntPtr UnityEngine::RectOffset::InternalCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::InternalCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectOffset", "InternalCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.InternalDestroy
void UnityEngine::RectOffset::InternalDestroy(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectOffset", "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.RectOffset.get_left
int UnityEngine::RectOffset::get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.set_left
void UnityEngine::RectOffset::set_left(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::set_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectOffset.get_right
int UnityEngine::RectOffset::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.set_right
void UnityEngine::RectOffset::set_right(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectOffset.get_top
int UnityEngine::RectOffset::get_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.set_top
void UnityEngine::RectOffset::set_top(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::set_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectOffset.get_bottom
int UnityEngine::RectOffset::get_bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.set_bottom
void UnityEngine::RectOffset::set_bottom(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::set_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectOffset.get_horizontal
int UnityEngine::RectOffset::get_horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.get_vertical
int UnityEngine::RectOffset::get_vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::get_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.Remove
UnityEngine::Rect UnityEngine::RectOffset::Remove(UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method, rect);
}
// Autogenerated method: UnityEngine.RectOffset.Remove_Injected
void UnityEngine::RectOffset::Remove_Injected(UnityEngine::Rect& rect, UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::Remove_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, ret);
}
// Autogenerated method: UnityEngine.RectOffset.Finalize
void UnityEngine::RectOffset::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectOffset.ToString
::Il2CppString* UnityEngine::RectOffset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectOffset::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RectOffset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(::Il2CppObject*, System::IntPtr)>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(::Il2CppObject*, System::IntPtr)>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RectOffset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int, int, int, int)>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int, int, int, int)>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RectOffset::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)()>(&RectOffset::Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::InternalCreate
// Il2CppName: InternalCreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&RectOffset::InternalCreate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "InternalCreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::InternalDestroy
// Il2CppName: InternalDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&RectOffset::InternalDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "InternalDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RectOffset::get_left
// Il2CppName: get_left
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_left)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_left", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::set_left
// Il2CppName: set_left
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int)>(&RectOffset::set_left)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "set_left", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RectOffset::get_right
// Il2CppName: get_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_right)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::set_right
// Il2CppName: set_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int)>(&RectOffset::set_right)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "set_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RectOffset::get_top
// Il2CppName: get_top
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_top)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_top", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::set_top
// Il2CppName: set_top
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int)>(&RectOffset::set_top)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "set_top", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RectOffset::get_bottom
// Il2CppName: get_bottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_bottom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_bottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::set_bottom
// Il2CppName: set_bottom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(int)>(&RectOffset::set_bottom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "set_bottom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RectOffset::get_horizontal
// Il2CppName: get_horizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_horizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::get_vertical
// Il2CppName: get_vertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RectOffset::*)()>(&RectOffset::get_vertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "get_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RectOffset::*)(UnityEngine::Rect)>(&RectOffset::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: RectOffset::Remove_Injected
// Il2CppName: Remove_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)(UnityEngine::Rect&, UnityEngine::Rect&)>(&RectOffset::Remove_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "Remove_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: RectOffset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)()>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)()>(&RectOffset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectOffset::*)()>(&RectOffset::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectOffset::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RectOffset::*)()>(&RectOffset::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectOffset*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Gizmos
#include "UnityEngine/Gizmos.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Gizmos.DrawLine
void UnityEngine::Gizmos::DrawLine(UnityEngine::Vector3 from, UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Gizmos.DrawWireSphere
void UnityEngine::Gizmos::DrawWireSphere(UnityEngine::Vector3 center, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawWireSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawWireSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, radius);
}
// Autogenerated method: UnityEngine.Gizmos.DrawSphere
void UnityEngine::Gizmos::DrawSphere(UnityEngine::Vector3 center, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, radius);
}
// Autogenerated method: UnityEngine.Gizmos.DrawWireCube
void UnityEngine::Gizmos::DrawWireCube(UnityEngine::Vector3 center, UnityEngine::Vector3 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawWireCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawWireCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, size);
}
// Autogenerated method: UnityEngine.Gizmos.DrawCube
void UnityEngine::Gizmos::DrawCube(UnityEngine::Vector3 center, UnityEngine::Vector3 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawCube");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawCube", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, size);
}
// Autogenerated method: UnityEngine.Gizmos.set_color
void UnityEngine::Gizmos::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gizmos.set_matrix
void UnityEngine::Gizmos::set_matrix(UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::set_matrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "set_matrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gizmos.DrawRay
void UnityEngine::Gizmos::DrawRay(UnityEngine::Vector3 from, UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, direction);
}
// Autogenerated method: UnityEngine.Gizmos.DrawLine_Injected
void UnityEngine::Gizmos::DrawLine_Injected(UnityEngine::Vector3& from, UnityEngine::Vector3& to) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawLine_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawLine_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Gizmos.DrawWireSphere_Injected
void UnityEngine::Gizmos::DrawWireSphere_Injected(UnityEngine::Vector3& center, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawWireSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawWireSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, radius);
}
// Autogenerated method: UnityEngine.Gizmos.DrawSphere_Injected
void UnityEngine::Gizmos::DrawSphere_Injected(UnityEngine::Vector3& center, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, radius);
}
// Autogenerated method: UnityEngine.Gizmos.DrawWireCube_Injected
void UnityEngine::Gizmos::DrawWireCube_Injected(UnityEngine::Vector3& center, UnityEngine::Vector3& size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawWireCube_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawWireCube_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, size);
}
// Autogenerated method: UnityEngine.Gizmos.DrawCube_Injected
void UnityEngine::Gizmos::DrawCube_Injected(UnityEngine::Vector3& center, UnityEngine::Vector3& size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::DrawCube_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "DrawCube_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, center, size);
}
// Autogenerated method: UnityEngine.Gizmos.set_color_Injected
void UnityEngine::Gizmos::set_color_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "set_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gizmos.set_matrix_Injected
void UnityEngine::Gizmos::set_matrix_Injected(UnityEngine::Matrix4x4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Gizmos::set_matrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gizmos", "set_matrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: Gizmos::DrawLine
// Il2CppName: DrawLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Gizmos::DrawLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawWireSphere
// Il2CppName: DrawWireSphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, float)>(&Gizmos::DrawWireSphere)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawWireSphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawSphere
// Il2CppName: DrawSphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, float)>(&Gizmos::DrawSphere)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawSphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawWireCube
// Il2CppName: DrawWireCube
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Gizmos::DrawWireCube)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawWireCube", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawCube
// Il2CppName: DrawCube
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Gizmos::DrawCube)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawCube", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Gizmos::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Color)>(&Gizmos::set_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Gizmos::set_matrix
// Il2CppName: set_matrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Matrix4x4)>(&Gizmos::set_matrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "set_matrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawRay
// Il2CppName: DrawRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Gizmos::DrawRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawLine_Injected
// Il2CppName: DrawLine_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Gizmos::DrawLine_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawLine_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawWireSphere_Injected
// Il2CppName: DrawWireSphere_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, float)>(&Gizmos::DrawWireSphere_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawWireSphere_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawSphere_Injected
// Il2CppName: DrawSphere_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, float)>(&Gizmos::DrawSphere_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawSphere_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawWireCube_Injected
// Il2CppName: DrawWireCube_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Gizmos::DrawWireCube_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawWireCube_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Gizmos::DrawCube_Injected
// Il2CppName: DrawCube_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Gizmos::DrawCube_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "DrawCube_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Gizmos::set_color_Injected
// Il2CppName: set_color_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Color&)>(&Gizmos::set_color_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "set_color_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Gizmos::set_matrix_Injected
// Il2CppName: set_matrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Matrix4x4&)>(&Gizmos::set_matrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gizmos*), "set_matrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BeforeRenderOrderAttribute
#include "UnityEngine/BeforeRenderOrderAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BeforeRenderOrderAttribute.get_order
int UnityEngine::BeforeRenderOrderAttribute::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderOrderAttribute::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BeforeRenderOrderAttribute::get_order
// Il2CppName: get_order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeforeRenderOrderAttribute::*)()>(&BeforeRenderOrderAttribute::get_order)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderOrderAttribute*), "get_order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BeforeRenderHelper
#include "UnityEngine/BeforeRenderHelper.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.BeforeRenderHelper/OrderBlock> s_OrderBlocks
System::Collections::Generic::List_1<UnityEngine::BeforeRenderHelper::OrderBlock>* UnityEngine::BeforeRenderHelper::_get_s_OrderBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::_get_s_OrderBlocks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::BeforeRenderHelper::OrderBlock>*>("UnityEngine", "BeforeRenderHelper", "s_OrderBlocks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.BeforeRenderHelper/OrderBlock> s_OrderBlocks
void UnityEngine::BeforeRenderHelper::_set_s_OrderBlocks(System::Collections::Generic::List_1<UnityEngine::BeforeRenderHelper::OrderBlock>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::_set_s_OrderBlocks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "BeforeRenderHelper", "s_OrderBlocks", value));
}
// Autogenerated method: UnityEngine.BeforeRenderHelper.GetUpdateOrder
int UnityEngine::BeforeRenderHelper::GetUpdateOrder(UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::GetUpdateOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BeforeRenderHelper", "GetUpdateOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: UnityEngine.BeforeRenderHelper.RegisterCallback
void UnityEngine::BeforeRenderHelper::RegisterCallback(UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::RegisterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BeforeRenderHelper", "RegisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: UnityEngine.BeforeRenderHelper.UnregisterCallback
void UnityEngine::BeforeRenderHelper::UnregisterCallback(UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::UnregisterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BeforeRenderHelper", "UnregisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: UnityEngine.BeforeRenderHelper.Invoke
void UnityEngine::BeforeRenderHelper::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BeforeRenderHelper", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.BeforeRenderHelper..cctor
void UnityEngine::BeforeRenderHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BeforeRenderHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BeforeRenderHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: BeforeRenderHelper::GetUpdateOrder
// Il2CppName: GetUpdateOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Events::UnityAction*)>(&BeforeRenderHelper::GetUpdateOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderHelper*), "GetUpdateOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: BeforeRenderHelper::RegisterCallback
// Il2CppName: RegisterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction*)>(&BeforeRenderHelper::RegisterCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderHelper*), "RegisterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: BeforeRenderHelper::UnregisterCallback
// Il2CppName: UnregisterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction*)>(&BeforeRenderHelper::UnregisterCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderHelper*), "UnregisterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: BeforeRenderHelper::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BeforeRenderHelper::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderHelper*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeforeRenderHelper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BeforeRenderHelper::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeforeRenderHelper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Display
#include "UnityEngine/Display.hpp"
// Including type: UnityEngine.Display/DisplaysUpdatedDelegate
#include "UnityEngine/Display_DisplaysUpdatedDelegate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Display[] displays
::Array<UnityEngine::Display*>* UnityEngine::Display::_get_displays() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_get_displays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Display*>*>("UnityEngine", "Display", "displays"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Display[] displays
void UnityEngine::Display::_set_displays(::Array<UnityEngine::Display*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_set_displays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Display", "displays", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Display _mainDisplay
UnityEngine::Display* UnityEngine::Display::_get__mainDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_get__mainDisplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Display*>("UnityEngine", "Display", "_mainDisplay"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Display _mainDisplay
void UnityEngine::Display::_set__mainDisplay(UnityEngine::Display* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_set__mainDisplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Display", "_mainDisplay", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xD930F8
// [CompilerGeneratedAttribute] Offset: 0xD930F8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Display/DisplaysUpdatedDelegate onDisplaysUpdated
UnityEngine::Display::DisplaysUpdatedDelegate* UnityEngine::Display::_get_onDisplaysUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_get_onDisplaysUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Display::DisplaysUpdatedDelegate*>("UnityEngine", "Display", "onDisplaysUpdated"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Display/DisplaysUpdatedDelegate onDisplaysUpdated
void UnityEngine::Display::_set_onDisplaysUpdated(UnityEngine::Display::DisplaysUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::_set_onDisplaysUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Display", "onDisplaysUpdated", value));
}
// Autogenerated method: UnityEngine.Display.get_renderingWidth
int UnityEngine::Display::get_renderingWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::get_renderingWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Display.get_renderingHeight
int UnityEngine::Display::get_renderingHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::get_renderingHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Display.get_systemWidth
int UnityEngine::Display::get_systemWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::get_systemWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_systemWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Display.get_systemHeight
int UnityEngine::Display::get_systemHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::get_systemHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_systemHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Display.RelativeMouseAt
UnityEngine::Vector3 UnityEngine::Display::RelativeMouseAt(UnityEngine::Vector3 inputMouseCoordinates) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::RelativeMouseAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "RelativeMouseAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputMouseCoordinates)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputMouseCoordinates);
}
// Autogenerated method: UnityEngine.Display.get_main
UnityEngine::Display* UnityEngine::Display::get_main() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::get_main");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "get_main", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Display*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Display.RecreateDisplayList
void UnityEngine::Display::RecreateDisplayList(::Array<System::IntPtr>* nativeDisplay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::RecreateDisplayList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "RecreateDisplayList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeDisplay)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeDisplay);
}
// Autogenerated method: UnityEngine.Display.FireDisplaysUpdated
void UnityEngine::Display::FireDisplaysUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::FireDisplaysUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "FireDisplaysUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Display.GetSystemExtImpl
void UnityEngine::Display::GetSystemExtImpl(System::IntPtr nativeDisplay, int& w, int& h) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::GetSystemExtImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "GetSystemExtImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeDisplay), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeDisplay, w, h);
}
// Autogenerated method: UnityEngine.Display.GetRenderingExtImpl
void UnityEngine::Display::GetRenderingExtImpl(System::IntPtr nativeDisplay, int& w, int& h) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::GetRenderingExtImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "GetRenderingExtImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeDisplay), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nativeDisplay, w, h);
}
// Autogenerated method: UnityEngine.Display.RelativeMouseAtImpl
int UnityEngine::Display::RelativeMouseAtImpl(int x, int y, int& rx, int& ry) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::RelativeMouseAtImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", "RelativeMouseAtImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, rx, ry);
}
// Autogenerated method: UnityEngine.Display..cctor
void UnityEngine::Display::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Display", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Display::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::*)(System::IntPtr)>(&Display::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::*)(System::IntPtr)>(&Display::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Display::get_renderingWidth
// Il2CppName: get_renderingWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Display::*)()>(&Display::get_renderingWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "get_renderingWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::get_renderingHeight
// Il2CppName: get_renderingHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Display::*)()>(&Display::get_renderingHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "get_renderingHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::get_systemWidth
// Il2CppName: get_systemWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Display::*)()>(&Display::get_systemWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "get_systemWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::get_systemHeight
// Il2CppName: get_systemHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Display::*)()>(&Display::get_systemHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "get_systemHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::RelativeMouseAt
// Il2CppName: RelativeMouseAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)(UnityEngine::Vector3)>(&Display::RelativeMouseAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "RelativeMouseAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Display::get_main
// Il2CppName: get_main
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Display* (*)()>(&Display::get_main)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "get_main", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::RecreateDisplayList
// Il2CppName: RecreateDisplayList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<System::IntPtr>*)>(&Display::RecreateDisplayList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "RecreateDisplayList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::IntPtr>*>()});
  }
};
// Writing MetadataGetter for method: Display::FireDisplaysUpdated
// Il2CppName: FireDisplaysUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Display::FireDisplaysUpdated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "FireDisplaysUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::GetSystemExtImpl
// Il2CppName: GetSystemExtImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, int&, int&)>(&Display::GetSystemExtImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "GetSystemExtImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Display::GetRenderingExtImpl
// Il2CppName: GetRenderingExtImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, int&, int&)>(&Display::GetRenderingExtImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "GetRenderingExtImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Display::RelativeMouseAtImpl
// Il2CppName: RelativeMouseAtImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int, int&, int&)>(&Display::RelativeMouseAtImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), "RelativeMouseAtImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Display::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Display::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::*)()>(&Display::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::*)()>(&Display::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Display/DisplaysUpdatedDelegate
#include "UnityEngine/Display_DisplaysUpdatedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Display/DisplaysUpdatedDelegate.Invoke
void UnityEngine::Display::DisplaysUpdatedDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::DisplaysUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Display/DisplaysUpdatedDelegate.BeginInvoke
System::IAsyncResult* UnityEngine::Display::DisplaysUpdatedDelegate::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::DisplaysUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Display/DisplaysUpdatedDelegate.EndInvoke
void UnityEngine::Display::DisplaysUpdatedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Display::DisplaysUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Display::DisplaysUpdatedDelegate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::DisplaysUpdatedDelegate::*)(::Il2CppObject*, System::IntPtr)>(&Display::DisplaysUpdatedDelegate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display::DisplaysUpdatedDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::DisplaysUpdatedDelegate::*)(::Il2CppObject*, System::IntPtr)>(&Display::DisplaysUpdatedDelegate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display::DisplaysUpdatedDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Display::DisplaysUpdatedDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::DisplaysUpdatedDelegate::*)()>(&Display::DisplaysUpdatedDelegate::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display::DisplaysUpdatedDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Display::DisplaysUpdatedDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Display::DisplaysUpdatedDelegate::*)(System::AsyncCallback*, ::Il2CppObject*)>(&Display::DisplaysUpdatedDelegate::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display::DisplaysUpdatedDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Display::DisplaysUpdatedDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Display::DisplaysUpdatedDelegate::*)(System::IAsyncResult*)>(&Display::DisplaysUpdatedDelegate::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Display::DisplaysUpdatedDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.FullScreenMode
#include "UnityEngine/FullScreenMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FullScreenMode ExclusiveFullScreen
UnityEngine::FullScreenMode UnityEngine::FullScreenMode::_get_ExclusiveFullScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_get_ExclusiveFullScreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FullScreenMode>("UnityEngine", "FullScreenMode", "ExclusiveFullScreen"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FullScreenMode ExclusiveFullScreen
void UnityEngine::FullScreenMode::_set_ExclusiveFullScreen(UnityEngine::FullScreenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_set_ExclusiveFullScreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FullScreenMode", "ExclusiveFullScreen", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FullScreenMode FullScreenWindow
UnityEngine::FullScreenMode UnityEngine::FullScreenMode::_get_FullScreenWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_get_FullScreenWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FullScreenMode>("UnityEngine", "FullScreenMode", "FullScreenWindow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FullScreenMode FullScreenWindow
void UnityEngine::FullScreenMode::_set_FullScreenWindow(UnityEngine::FullScreenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_set_FullScreenWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FullScreenMode", "FullScreenWindow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FullScreenMode MaximizedWindow
UnityEngine::FullScreenMode UnityEngine::FullScreenMode::_get_MaximizedWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_get_MaximizedWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FullScreenMode>("UnityEngine", "FullScreenMode", "MaximizedWindow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FullScreenMode MaximizedWindow
void UnityEngine::FullScreenMode::_set_MaximizedWindow(UnityEngine::FullScreenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_set_MaximizedWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FullScreenMode", "MaximizedWindow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FullScreenMode Windowed
UnityEngine::FullScreenMode UnityEngine::FullScreenMode::_get_Windowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_get_Windowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FullScreenMode>("UnityEngine", "FullScreenMode", "Windowed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FullScreenMode Windowed
void UnityEngine::FullScreenMode::_set_Windowed(UnityEngine::FullScreenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FullScreenMode::_set_Windowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FullScreenMode", "Windowed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Screen
#include "UnityEngine/Screen.hpp"
// Including type: UnityEngine.FullScreenMode
#include "UnityEngine/FullScreenMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Screen.get_width
int UnityEngine::Screen::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Screen.get_height
int UnityEngine::Screen::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Screen.get_dpi
float UnityEngine::Screen::get_dpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_dpi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_dpi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Screen.get_fullScreen
bool UnityEngine::Screen::get_fullScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_fullScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_fullScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Screen.set_fullScreen
void UnityEngine::Screen::set_fullScreen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::set_fullScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "set_fullScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Screen.get_fullScreenMode
UnityEngine::FullScreenMode UnityEngine::Screen::get_fullScreenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_fullScreenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_fullScreenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::FullScreenMode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Screen.SetResolution
void UnityEngine::Screen::SetResolution(int width, int height, UnityEngine::FullScreenMode fullscreenMode, int preferredRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::SetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "SetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(fullscreenMode), ::il2cpp_utils::ExtractType(preferredRefreshRate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, fullscreenMode, preferredRefreshRate);
}
// Autogenerated method: UnityEngine.Screen.SetResolution
void UnityEngine::Screen::SetResolution(int width, int height, bool fullscreen, int preferredRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::SetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "SetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(fullscreen), ::il2cpp_utils::ExtractType(preferredRefreshRate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, fullscreen, preferredRefreshRate);
}
// Autogenerated method: UnityEngine.Screen.SetResolution
void UnityEngine::Screen::SetResolution(int width, int height, bool fullscreen) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::SetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "SetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(fullscreen)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, fullscreen);
}
// Autogenerated method: UnityEngine.Screen.get_resolutions
::Array<UnityEngine::Resolution>* UnityEngine::Screen::get_resolutions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Screen::get_resolutions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Screen", "get_resolutions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Resolution>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Screen::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Screen::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Screen::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Screen::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Screen::get_dpi
// Il2CppName: get_dpi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&Screen::get_dpi)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_dpi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Screen::get_fullScreen
// Il2CppName: get_fullScreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Screen::get_fullScreen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_fullScreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Screen::set_fullScreen
// Il2CppName: set_fullScreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Screen::set_fullScreen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "set_fullScreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Screen::get_fullScreenMode
// Il2CppName: get_fullScreenMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::FullScreenMode (*)()>(&Screen::get_fullScreenMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_fullScreenMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Screen::SetResolution
// Il2CppName: SetResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int, UnityEngine::FullScreenMode, int)>(&Screen::SetResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "SetResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::FullScreenMode>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Screen::SetResolution
// Il2CppName: SetResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int, bool, int)>(&Screen::SetResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "SetResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Screen::SetResolution
// Il2CppName: SetResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int, bool)>(&Screen::SetResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "SetResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Screen::get_resolutions
// Il2CppName: get_resolutions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Resolution>* (*)()>(&Screen::get_resolutions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Screen*), "get_resolutions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Graphics
#include "UnityEngine/Graphics.hpp"
// Including type: UnityEngine.Rendering.GraphicsTier
#include "UnityEngine/Rendering/GraphicsTier.hpp"
// Including type: UnityEngine.RenderBuffer
#include "UnityEngine/RenderBuffer.hpp"
// Including type: UnityEngine.CubemapFace
#include "UnityEngine/CubemapFace.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Internal_DrawTextureArguments
#include "UnityEngine/Internal_DrawTextureArguments.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.ShadowCastingMode
#include "UnityEngine/Rendering/ShadowCastingMode.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Rendering.LightProbeUsage
#include "UnityEngine/Rendering/LightProbeUsage.hpp"
// Including type: UnityEngine.LightProbeProxyVolume
#include "UnityEngine/LightProbeProxyVolume.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 kMaxDrawMeshInstanceCount
int UnityEngine::Graphics::_get_kMaxDrawMeshInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::_get_kMaxDrawMeshInstanceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Graphics", "kMaxDrawMeshInstanceCount"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 kMaxDrawMeshInstanceCount
void UnityEngine::Graphics::_set_kMaxDrawMeshInstanceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::_set_kMaxDrawMeshInstanceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Graphics", "kMaxDrawMeshInstanceCount", value));
}
// Autogenerated method: UnityEngine.Graphics.Internal_GetMaxDrawMeshInstanceCount
int UnityEngine::Graphics::Internal_GetMaxDrawMeshInstanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_GetMaxDrawMeshInstanceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_GetMaxDrawMeshInstanceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.get_activeTier
UnityEngine::Rendering::GraphicsTier UnityEngine::Graphics::get_activeTier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::get_activeTier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "get_activeTier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::GraphicsTier, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.set_activeTier
void UnityEngine::Graphics::set_activeTier(UnityEngine::Rendering::GraphicsTier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::set_activeTier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "set_activeTier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Graphics.GetActiveColorBuffer
UnityEngine::RenderBuffer UnityEngine::Graphics::GetActiveColorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::GetActiveColorBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "GetActiveColorBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.GetActiveDepthBuffer
UnityEngine::RenderBuffer UnityEngine::Graphics::GetActiveDepthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::GetActiveDepthBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "GetActiveDepthBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.Internal_SetNullRT
void UnityEngine::Graphics::Internal_SetNullRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_SetNullRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_SetNullRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.Internal_SetRTSimple
void UnityEngine::Graphics::Internal_SetRTSimple(UnityEngine::RenderBuffer color, UnityEngine::RenderBuffer depth, int mip, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_SetRTSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_SetRTSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(mip), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, color, depth, mip, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.CopyTexture_Slice
void UnityEngine::Graphics::CopyTexture_Slice(UnityEngine::Texture* src, int srcElement, int srcMip, UnityEngine::Texture* dst, int dstElement, int dstMip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::CopyTexture_Slice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "CopyTexture_Slice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcElement), ::il2cpp_utils::ExtractType(srcMip), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstElement), ::il2cpp_utils::ExtractType(dstMip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, srcElement, srcMip, dst, dstElement, dstMip);
}
// Autogenerated method: UnityEngine.Graphics.Internal_DrawMeshNow2
void UnityEngine::Graphics::Internal_DrawMeshNow2(UnityEngine::Mesh* mesh, int subsetIndex, UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_DrawMeshNow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_DrawMeshNow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(subsetIndex), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, subsetIndex, matrix);
}
// Autogenerated method: UnityEngine.Graphics.Internal_DrawTexture
void UnityEngine::Graphics::Internal_DrawTexture(UnityEngine::Internal_DrawTextureArguments& args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine.Graphics.Internal_DrawMeshInstanced
void UnityEngine::Graphics::Internal_DrawMeshInstanced(UnityEngine::Mesh* mesh, int submeshIndex, UnityEngine::Material* material, ::Array<UnityEngine::Matrix4x4>* matrices, int count, UnityEngine::MaterialPropertyBlock* properties, UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, int layer, UnityEngine::Camera* camera, UnityEngine::Rendering::LightProbeUsage lightProbeUsage, UnityEngine::LightProbeProxyVolume* lightProbeProxyVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_DrawMeshInstanced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_DrawMeshInstanced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(matrices), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(castShadows), ::il2cpp_utils::ExtractType(receiveShadows), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(lightProbeUsage), ::il2cpp_utils::ExtractType(lightProbeProxyVolume)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, submeshIndex, material, matrices, count, properties, castShadows, receiveShadows, layer, camera, lightProbeUsage, lightProbeProxyVolume);
}
// Autogenerated method: UnityEngine.Graphics.Internal_BlitMaterial5
void UnityEngine::Graphics::Internal_BlitMaterial5(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Material* mat, int pass, bool setRT) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_BlitMaterial5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_BlitMaterial5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(setRT)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, mat, pass, setRT);
}
// Autogenerated method: UnityEngine.Graphics.Blit2
void UnityEngine::Graphics::Blit2(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest);
}
// Autogenerated method: UnityEngine.Graphics.Blit4
void UnityEngine::Graphics::Blit4(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Vector2 scale, UnityEngine::Vector2 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, scale, offset);
}
// Autogenerated method: UnityEngine.Graphics.ExecuteCommandBuffer
void UnityEngine::Graphics::ExecuteCommandBuffer(UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::ExecuteCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "ExecuteCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTargetImpl
void UnityEngine::Graphics::SetRenderTargetImpl(UnityEngine::RenderBuffer colorBuffer, UnityEngine::RenderBuffer depthBuffer, int mipLevel, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTargetImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTargetImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBuffer), ::il2cpp_utils::ExtractType(depthBuffer), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorBuffer, depthBuffer, mipLevel, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTargetImpl
void UnityEngine::Graphics::SetRenderTargetImpl(UnityEngine::RenderTexture* rt, int mipLevel, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTargetImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTargetImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt, mipLevel, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTarget
void UnityEngine::Graphics::SetRenderTarget(UnityEngine::RenderTexture* rt, int mipLevel, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt, mipLevel, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTarget
void UnityEngine::Graphics::SetRenderTarget(UnityEngine::RenderBuffer colorBuffer, UnityEngine::RenderBuffer depthBuffer, int mipLevel, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBuffer), ::il2cpp_utils::ExtractType(depthBuffer), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorBuffer, depthBuffer, mipLevel, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.get_activeColorBuffer
UnityEngine::RenderBuffer UnityEngine::Graphics::get_activeColorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::get_activeColorBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "get_activeColorBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.get_activeDepthBuffer
UnityEngine::RenderBuffer UnityEngine::Graphics::get_activeDepthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::get_activeDepthBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "get_activeDepthBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.CopyTexture
void UnityEngine::Graphics::CopyTexture(UnityEngine::Texture* src, int srcElement, int srcMip, UnityEngine::Texture* dst, int dstElement, int dstMip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::CopyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "CopyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcElement), ::il2cpp_utils::ExtractType(srcMip), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstElement), ::il2cpp_utils::ExtractType(dstMip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, srcElement, srcMip, dst, dstElement, dstMip);
}
// Autogenerated method: UnityEngine.Graphics.DrawTextureImpl
void UnityEngine::Graphics::DrawTextureImpl(UnityEngine::Rect screenRect, UnityEngine::Texture* texture, UnityEngine::Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine::Color color, UnityEngine::Material* mat, int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(sourceRect), ::il2cpp_utils::ExtractType(leftBorder), ::il2cpp_utils::ExtractType(rightBorder), ::il2cpp_utils::ExtractType(topBorder), ::il2cpp_utils::ExtractType(bottomBorder), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenRect, texture, sourceRect, leftBorder, rightBorder, topBorder, bottomBorder, color, mat, pass);
}
// Autogenerated method: UnityEngine.Graphics.DrawTexture
void UnityEngine::Graphics::DrawTexture(UnityEngine::Rect screenRect, UnityEngine::Texture* texture, UnityEngine::Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine::Material* mat, int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(sourceRect), ::il2cpp_utils::ExtractType(leftBorder), ::il2cpp_utils::ExtractType(rightBorder), ::il2cpp_utils::ExtractType(topBorder), ::il2cpp_utils::ExtractType(bottomBorder), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenRect, texture, sourceRect, leftBorder, rightBorder, topBorder, bottomBorder, mat, pass);
}
// Autogenerated method: UnityEngine.Graphics.DrawTexture
void UnityEngine::Graphics::DrawTexture(UnityEngine::Rect screenRect, UnityEngine::Texture* texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine::Material* mat, int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(leftBorder), ::il2cpp_utils::ExtractType(rightBorder), ::il2cpp_utils::ExtractType(topBorder), ::il2cpp_utils::ExtractType(bottomBorder), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenRect, texture, leftBorder, rightBorder, topBorder, bottomBorder, mat, pass);
}
// Autogenerated method: UnityEngine.Graphics.DrawTexture
void UnityEngine::Graphics::DrawTexture(UnityEngine::Rect screenRect, UnityEngine::Texture* texture, UnityEngine::Material* mat, int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenRect, texture, mat, pass);
}
// Autogenerated method: UnityEngine.Graphics.DrawMeshNow
void UnityEngine::Graphics::DrawMeshNow(UnityEngine::Mesh* mesh, UnityEngine::Matrix4x4 matrix, int materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawMeshNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawMeshNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(materialIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, matrix, materialIndex);
}
// Autogenerated method: UnityEngine.Graphics.DrawMeshInstanced
void UnityEngine::Graphics::DrawMeshInstanced(UnityEngine::Mesh* mesh, int submeshIndex, UnityEngine::Material* material, ::Array<UnityEngine::Matrix4x4>* matrices, int count, UnityEngine::MaterialPropertyBlock* properties, UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, int layer, UnityEngine::Camera* camera, UnityEngine::Rendering::LightProbeUsage lightProbeUsage, UnityEngine::LightProbeProxyVolume* lightProbeProxyVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawMeshInstanced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawMeshInstanced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(matrices), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(castShadows), ::il2cpp_utils::ExtractType(receiveShadows), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(lightProbeUsage), ::il2cpp_utils::ExtractType(lightProbeProxyVolume)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, submeshIndex, material, matrices, count, properties, castShadows, receiveShadows, layer, camera, lightProbeUsage, lightProbeProxyVolume);
}
// Autogenerated method: UnityEngine.Graphics.Blit
void UnityEngine::Graphics::Blit(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest);
}
// Autogenerated method: UnityEngine.Graphics.Blit
void UnityEngine::Graphics::Blit(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Vector2 scale, UnityEngine::Vector2 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, scale, offset);
}
// Autogenerated method: UnityEngine.Graphics.Blit
void UnityEngine::Graphics::Blit(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Material* mat, int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, mat, pass);
}
// Autogenerated method: UnityEngine.Graphics.Blit
void UnityEngine::Graphics::Blit(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, mat);
}
// Autogenerated method: UnityEngine.Graphics.DrawMeshInstanced
void UnityEngine::Graphics::DrawMeshInstanced(UnityEngine::Mesh* mesh, int submeshIndex, UnityEngine::Material* material, ::Array<UnityEngine::Matrix4x4>* matrices, int count, UnityEngine::MaterialPropertyBlock* properties, UnityEngine::Rendering::ShadowCastingMode castShadows, bool receiveShadows, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawMeshInstanced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawMeshInstanced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(matrices), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(castShadows), ::il2cpp_utils::ExtractType(receiveShadows), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, submeshIndex, material, matrices, count, properties, castShadows, receiveShadows, layer);
}
// Autogenerated method: UnityEngine.Graphics.DrawTexture
void UnityEngine::Graphics::DrawTexture(UnityEngine::Rect screenRect, UnityEngine::Texture* texture, UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenRect, texture, mat);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTarget
void UnityEngine::Graphics::SetRenderTarget(UnityEngine::RenderTexture* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTarget
void UnityEngine::Graphics::SetRenderTarget(UnityEngine::RenderTexture* rt, int mipLevel, UnityEngine::CubemapFace face) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(face)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt, mipLevel, face);
}
// Autogenerated method: UnityEngine.Graphics.SetRenderTarget
void UnityEngine::Graphics::SetRenderTarget(UnityEngine::RenderBuffer colorBuffer, UnityEngine::RenderBuffer depthBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::SetRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "SetRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBuffer), ::il2cpp_utils::ExtractType(depthBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorBuffer, depthBuffer);
}
// Autogenerated method: UnityEngine.Graphics..cctor
void UnityEngine::Graphics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Graphics.GetActiveColorBuffer_Injected
void UnityEngine::Graphics::GetActiveColorBuffer_Injected(UnityEngine::RenderBuffer& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::GetActiveColorBuffer_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "GetActiveColorBuffer_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Graphics.GetActiveDepthBuffer_Injected
void UnityEngine::Graphics::GetActiveDepthBuffer_Injected(UnityEngine::RenderBuffer& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::GetActiveDepthBuffer_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "GetActiveDepthBuffer_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Graphics.Internal_SetRTSimple_Injected
void UnityEngine::Graphics::Internal_SetRTSimple_Injected(UnityEngine::RenderBuffer& color, UnityEngine::RenderBuffer& depth, int mip, UnityEngine::CubemapFace face, int depthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_SetRTSimple_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_SetRTSimple_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(mip), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(depthSlice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, color, depth, mip, face, depthSlice);
}
// Autogenerated method: UnityEngine.Graphics.Internal_DrawMeshNow2_Injected
void UnityEngine::Graphics::Internal_DrawMeshNow2_Injected(UnityEngine::Mesh* mesh, int subsetIndex, UnityEngine::Matrix4x4& matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Internal_DrawMeshNow2_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Internal_DrawMeshNow2_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(subsetIndex), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, subsetIndex, matrix);
}
// Autogenerated method: UnityEngine.Graphics.Blit4_Injected
void UnityEngine::Graphics::Blit4_Injected(UnityEngine::Texture* source, UnityEngine::RenderTexture* dest, UnityEngine::Vector2& scale, UnityEngine::Vector2& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Graphics::Blit4_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Graphics", "Blit4_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, dest, scale, offset);
}
// Writing MetadataGetter for method: Graphics::Internal_GetMaxDrawMeshInstanceCount
// Il2CppName: Internal_GetMaxDrawMeshInstanceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Graphics::Internal_GetMaxDrawMeshInstanceCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_GetMaxDrawMeshInstanceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::get_activeTier
// Il2CppName: get_activeTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::GraphicsTier (*)()>(&Graphics::get_activeTier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "get_activeTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::set_activeTier
// Il2CppName: set_activeTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rendering::GraphicsTier)>(&Graphics::set_activeTier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "set_activeTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::GraphicsTier>()});
  }
};
// Writing MetadataGetter for method: Graphics::GetActiveColorBuffer
// Il2CppName: GetActiveColorBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (*)()>(&Graphics::GetActiveColorBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "GetActiveColorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::GetActiveDepthBuffer
// Il2CppName: GetActiveDepthBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (*)()>(&Graphics::GetActiveDepthBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "GetActiveDepthBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_SetNullRT
// Il2CppName: Internal_SetNullRT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Graphics::Internal_SetNullRT)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_SetNullRT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_SetRTSimple
// Il2CppName: Internal_SetRTSimple
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer, UnityEngine::RenderBuffer, int, UnityEngine::CubemapFace, int)>(&Graphics::Internal_SetRTSimple)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_SetRTSimple", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::CopyTexture_Slice
// Il2CppName: CopyTexture_Slice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, int, int, UnityEngine::Texture*, int, int)>(&Graphics::CopyTexture_Slice)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "CopyTexture_Slice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_DrawMeshNow2
// Il2CppName: Internal_DrawMeshNow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, int, UnityEngine::Matrix4x4)>(&Graphics::Internal_DrawMeshNow2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_DrawMeshNow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_DrawTexture
// Il2CppName: Internal_DrawTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Internal_DrawTextureArguments&)>(&Graphics::Internal_DrawTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_DrawTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Internal_DrawTextureArguments&>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_DrawMeshInstanced
// Il2CppName: Internal_DrawMeshInstanced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, int, UnityEngine::Material*, ::Array<UnityEngine::Matrix4x4>*, int, UnityEngine::MaterialPropertyBlock*, UnityEngine::Rendering::ShadowCastingMode, bool, int, UnityEngine::Camera*, UnityEngine::Rendering::LightProbeUsage, UnityEngine::LightProbeProxyVolume*)>(&Graphics::Internal_DrawMeshInstanced)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_DrawMeshInstanced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowCastingMode>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightProbeUsage>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LightProbeProxyVolume*>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_BlitMaterial5
// Il2CppName: Internal_BlitMaterial5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Material*, int, bool)>(&Graphics::Internal_BlitMaterial5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_BlitMaterial5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit2
// Il2CppName: Blit2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*)>(&Graphics::Blit2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit4
// Il2CppName: Blit4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Vector2, UnityEngine::Vector2)>(&Graphics::Blit4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Graphics::ExecuteCommandBuffer
// Il2CppName: ExecuteCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rendering::CommandBuffer*)>(&Graphics::ExecuteCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "ExecuteCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTargetImpl
// Il2CppName: SetRenderTargetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer, UnityEngine::RenderBuffer, int, UnityEngine::CubemapFace, int)>(&Graphics::SetRenderTargetImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTargetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTargetImpl
// Il2CppName: SetRenderTargetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*, int, UnityEngine::CubemapFace, int)>(&Graphics::SetRenderTargetImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTargetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*, int, UnityEngine::CubemapFace, int)>(&Graphics::SetRenderTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer, UnityEngine::RenderBuffer, int, UnityEngine::CubemapFace, int)>(&Graphics::SetRenderTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::get_activeColorBuffer
// Il2CppName: get_activeColorBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (*)()>(&Graphics::get_activeColorBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "get_activeColorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::get_activeDepthBuffer
// Il2CppName: get_activeDepthBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (*)()>(&Graphics::get_activeDepthBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "get_activeDepthBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::CopyTexture
// Il2CppName: CopyTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, int, int, UnityEngine::Texture*, int, int)>(&Graphics::CopyTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "CopyTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawTextureImpl
// Il2CppName: DrawTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect, UnityEngine::Texture*, UnityEngine::Rect, int, int, int, int, UnityEngine::Color, UnityEngine::Material*, int)>(&Graphics::DrawTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawTexture
// Il2CppName: DrawTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect, UnityEngine::Texture*, UnityEngine::Rect, int, int, int, int, UnityEngine::Material*, int)>(&Graphics::DrawTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawTexture
// Il2CppName: DrawTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect, UnityEngine::Texture*, int, int, int, int, UnityEngine::Material*, int)>(&Graphics::DrawTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawTexture
// Il2CppName: DrawTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect, UnityEngine::Texture*, UnityEngine::Material*, int)>(&Graphics::DrawTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawMeshNow
// Il2CppName: DrawMeshNow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, UnityEngine::Matrix4x4, int)>(&Graphics::DrawMeshNow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawMeshNow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawMeshInstanced
// Il2CppName: DrawMeshInstanced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, int, UnityEngine::Material*, ::Array<UnityEngine::Matrix4x4>*, int, UnityEngine::MaterialPropertyBlock*, UnityEngine::Rendering::ShadowCastingMode, bool, int, UnityEngine::Camera*, UnityEngine::Rendering::LightProbeUsage, UnityEngine::LightProbeProxyVolume*)>(&Graphics::DrawMeshInstanced)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawMeshInstanced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowCastingMode>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightProbeUsage>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LightProbeProxyVolume*>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*)>(&Graphics::Blit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Vector2, UnityEngine::Vector2)>(&Graphics::Blit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Material*, int)>(&Graphics::Blit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit
// Il2CppName: Blit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Material*)>(&Graphics::Blit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawMeshInstanced
// Il2CppName: DrawMeshInstanced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, int, UnityEngine::Material*, ::Array<UnityEngine::Matrix4x4>*, int, UnityEngine::MaterialPropertyBlock*, UnityEngine::Rendering::ShadowCastingMode, bool, int)>(&Graphics::DrawMeshInstanced)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawMeshInstanced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowCastingMode>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::DrawTexture
// Il2CppName: DrawTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect, UnityEngine::Texture*, UnityEngine::Material*)>(&Graphics::DrawTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "DrawTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*)>(&Graphics::SetRenderTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*, int, UnityEngine::CubemapFace)>(&Graphics::SetRenderTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>()});
  }
};
// Writing MetadataGetter for method: Graphics::SetRenderTarget
// Il2CppName: SetRenderTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer, UnityEngine::RenderBuffer)>(&Graphics::SetRenderTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "SetRenderTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer>()});
  }
};
// Writing MetadataGetter for method: Graphics::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Graphics::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphics::GetActiveColorBuffer_Injected
// Il2CppName: GetActiveColorBuffer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer&)>(&Graphics::GetActiveColorBuffer_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "GetActiveColorBuffer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()});
  }
};
// Writing MetadataGetter for method: Graphics::GetActiveDepthBuffer_Injected
// Il2CppName: GetActiveDepthBuffer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer&)>(&Graphics::GetActiveDepthBuffer_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "GetActiveDepthBuffer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_SetRTSimple_Injected
// Il2CppName: Internal_SetRTSimple_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderBuffer&, UnityEngine::RenderBuffer&, int, UnityEngine::CubemapFace, int)>(&Graphics::Internal_SetRTSimple_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_SetRTSimple_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Graphics::Internal_DrawMeshNow2_Injected
// Il2CppName: Internal_DrawMeshNow2_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*, int, UnityEngine::Matrix4x4&)>(&Graphics::Internal_DrawMeshNow2_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Internal_DrawMeshNow2_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Graphics::Blit4_Injected
// Il2CppName: Blit4_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture*, UnityEngine::RenderTexture*, UnityEngine::Vector2&, UnityEngine::Vector2&)>(&Graphics::Blit4_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphics*), "Blit4_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GL
#include "UnityEngine/GL.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GL.Vertex3
void UnityEngine::GL::Vertex3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Vertex3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Vertex3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.GL.TexCoord3
void UnityEngine::GL::TexCoord3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::TexCoord3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "TexCoord3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.GL.TexCoord
void UnityEngine::GL::TexCoord(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::TexCoord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "TexCoord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.GL.TexCoord2
void UnityEngine::GL::TexCoord2(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::TexCoord2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "TexCoord2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.GL.get_invertCulling
bool UnityEngine::GL::get_invertCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::get_invertCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "get_invertCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.set_invertCulling
void UnityEngine::GL::set_invertCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::set_invertCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "set_invertCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.GL.Flush
void UnityEngine::GL::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.PushMatrix
void UnityEngine::GL::PushMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::PushMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "PushMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.PopMatrix
void UnityEngine::GL::PopMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::PopMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "PopMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.LoadOrtho
void UnityEngine::GL::LoadOrtho() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::LoadOrtho");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "LoadOrtho", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.GLLoadPixelMatrixScript
void UnityEngine::GL::GLLoadPixelMatrixScript(float left, float right, float bottom, float top) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::GLLoadPixelMatrixScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "GLLoadPixelMatrixScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right, bottom, top);
}
// Autogenerated method: UnityEngine.GL.LoadPixelMatrix
void UnityEngine::GL::LoadPixelMatrix(float left, float right, float bottom, float top) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::LoadPixelMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "LoadPixelMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right, bottom, top);
}
// Autogenerated method: UnityEngine.GL.Begin
void UnityEngine::GL::Begin(int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.GL.End
void UnityEngine::GL::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.GLClear
void UnityEngine::GL::GLClear(bool clearDepth, bool clearColor, UnityEngine::Color backgroundColor, float depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::GLClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "GLClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearDepth), ::il2cpp_utils::ExtractType(clearColor), ::il2cpp_utils::ExtractType(backgroundColor), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor, depth);
}
// Autogenerated method: UnityEngine.GL.Clear
void UnityEngine::GL::Clear(bool clearDepth, bool clearColor, UnityEngine::Color backgroundColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearDepth), ::il2cpp_utils::ExtractType(clearColor), ::il2cpp_utils::ExtractType(backgroundColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor);
}
// Autogenerated method: UnityEngine.GL.Viewport
void UnityEngine::GL::Viewport(UnityEngine::Rect pixelRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Viewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Viewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixelRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pixelRect);
}
// Autogenerated method: UnityEngine.GL.GLClear_Injected
void UnityEngine::GL::GLClear_Injected(bool clearDepth, bool clearColor, UnityEngine::Color& backgroundColor, float depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::GLClear_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "GLClear_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearDepth), ::il2cpp_utils::ExtractType(clearColor), ::il2cpp_utils::ExtractType(backgroundColor), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor, depth);
}
// Autogenerated method: UnityEngine.GL.Viewport_Injected
void UnityEngine::GL::Viewport_Injected(UnityEngine::Rect& pixelRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GL::Viewport_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GL", "Viewport_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixelRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pixelRect);
}
// Writing MetadataGetter for method: GL::Vertex3
// Il2CppName: Vertex3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float, float)>(&GL::Vertex3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Vertex3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::TexCoord3
// Il2CppName: TexCoord3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float, float)>(&GL::TexCoord3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "TexCoord3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::TexCoord
// Il2CppName: TexCoord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector3)>(&GL::TexCoord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "TexCoord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: GL::TexCoord2
// Il2CppName: TexCoord2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float)>(&GL::TexCoord2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "TexCoord2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::get_invertCulling
// Il2CppName: get_invertCulling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GL::get_invertCulling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "get_invertCulling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::set_invertCulling
// Il2CppName: set_invertCulling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GL::set_invertCulling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "set_invertCulling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GL::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GL::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::PushMatrix
// Il2CppName: PushMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GL::PushMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "PushMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::PopMatrix
// Il2CppName: PopMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GL::PopMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "PopMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::LoadOrtho
// Il2CppName: LoadOrtho
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GL::LoadOrtho)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "LoadOrtho", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::GLLoadPixelMatrixScript
// Il2CppName: GLLoadPixelMatrixScript
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float, float, float)>(&GL::GLLoadPixelMatrixScript)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "GLLoadPixelMatrixScript", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::LoadPixelMatrix
// Il2CppName: LoadPixelMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float, float, float, float)>(&GL::LoadPixelMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "LoadPixelMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::Begin
// Il2CppName: Begin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&GL::Begin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Begin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GL::End
// Il2CppName: End
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GL::End)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "End", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GL::GLClear
// Il2CppName: GLClear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, UnityEngine::Color, float)>(&GL::GLClear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "GLClear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, UnityEngine::Color)>(&GL::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: GL::Viewport
// Il2CppName: Viewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect)>(&GL::Viewport)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: GL::GLClear_Injected
// Il2CppName: GLClear_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, UnityEngine::Color&, float)>(&GL::GLClear_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "GLClear_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GL::Viewport_Injected
// Il2CppName: Viewport_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rect&)>(&GL::Viewport_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GL*), "Viewport_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.FrameTimingManager
#include "UnityEngine/FrameTimingManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.FrameTimingManager.CaptureFrameTimings
void UnityEngine::FrameTimingManager::CaptureFrameTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FrameTimingManager::CaptureFrameTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "FrameTimingManager", "CaptureFrameTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.FrameTimingManager.GetLatestTimings
uint UnityEngine::FrameTimingManager::GetLatestTimings(uint numFrames, ::Array<UnityEngine::FrameTiming>* timings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FrameTimingManager::GetLatestTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "FrameTimingManager", "GetLatestTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numFrames), ::il2cpp_utils::ExtractType(timings)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, numFrames, timings);
}
// Writing MetadataGetter for method: FrameTimingManager::CaptureFrameTimings
// Il2CppName: CaptureFrameTimings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FrameTimingManager::CaptureFrameTimings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FrameTimingManager*), "CaptureFrameTimings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FrameTimingManager::GetLatestTimings
// Il2CppName: GetLatestTimings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, ::Array<UnityEngine::FrameTiming>*)>(&FrameTimingManager::GetLatestTimings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FrameTimingManager*), "GetLatestTimings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::FrameTiming>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Resolution
#include "UnityEngine/Resolution.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Resolution.get_width
int UnityEngine::Resolution::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Resolution::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Resolution.get_height
int UnityEngine::Resolution::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Resolution::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Resolution.ToString
::Il2CppString* UnityEngine::Resolution::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Resolution::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Resolution::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Resolution::*)()>(&Resolution::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Resolution), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Resolution::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Resolution::*)()>(&Resolution::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Resolution), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Resolution::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Resolution::*)()>(&Resolution::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Resolution), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.QualitySettings
#include "UnityEngine/QualitySettings.hpp"
// Including type: UnityEngine.ColorSpace
#include "UnityEngine/ColorSpace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.QualitySettings.set_vSyncCount
void UnityEngine::QualitySettings::set_vSyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::QualitySettings::set_vSyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "QualitySettings", "set_vSyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.QualitySettings.get_antiAliasing
int UnityEngine::QualitySettings::get_antiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::QualitySettings::get_antiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "QualitySettings", "get_antiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.QualitySettings.set_antiAliasing
void UnityEngine::QualitySettings::set_antiAliasing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::QualitySettings::set_antiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "QualitySettings", "set_antiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.QualitySettings.set_maxQueuedFrames
void UnityEngine::QualitySettings::set_maxQueuedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::QualitySettings::set_maxQueuedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "QualitySettings", "set_maxQueuedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.QualitySettings.get_activeColorSpace
UnityEngine::ColorSpace UnityEngine::QualitySettings::get_activeColorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::QualitySettings::get_activeColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "QualitySettings", "get_activeColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ColorSpace, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: QualitySettings::set_vSyncCount
// Il2CppName: set_vSyncCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&QualitySettings::set_vSyncCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QualitySettings*), "set_vSyncCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: QualitySettings::get_antiAliasing
// Il2CppName: get_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&QualitySettings::get_antiAliasing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QualitySettings*), "get_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QualitySettings::set_antiAliasing
// Il2CppName: set_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&QualitySettings::set_antiAliasing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QualitySettings*), "set_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: QualitySettings::set_maxQueuedFrames
// Il2CppName: set_maxQueuedFrames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&QualitySettings::set_maxQueuedFrames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QualitySettings*), "set_maxQueuedFrames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: QualitySettings::get_activeColorSpace
// Il2CppName: get_activeColorSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ColorSpace (*)()>(&QualitySettings::get_activeColorSpace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QualitySettings*), "get_activeColorSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ImageEffectAllowedInSceneView
#include "UnityEngine/ImageEffectAllowedInSceneView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ImageEffectAllowedInSceneView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImageEffectAllowedInSceneView::*)()>(&ImageEffectAllowedInSceneView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImageEffectAllowedInSceneView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImageEffectAllowedInSceneView::*)()>(&ImageEffectAllowedInSceneView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImageEffectAllowedInSceneView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ImageEffectOpaque
#include "UnityEngine/ImageEffectOpaque.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ImageEffectOpaque::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImageEffectOpaque::*)()>(&ImageEffectOpaque::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImageEffectOpaque*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImageEffectOpaque::*)()>(&ImageEffectOpaque::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImageEffectOpaque*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LineRenderer.set_startWidth
void UnityEngine::LineRenderer::set_startWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_startWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_endWidth
void UnityEngine::LineRenderer::set_endWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_endWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_useWorldSpace
void UnityEngine::LineRenderer::set_useWorldSpace(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_useWorldSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useWorldSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_startColor
void UnityEngine::LineRenderer::set_startColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_endColor
void UnityEngine::LineRenderer::set_endColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_endColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_positionCount
void UnityEngine::LineRenderer::set_positionCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_positionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_positionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.SetPosition
void UnityEngine::LineRenderer::SetPosition(int index, UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, position);
}
// Autogenerated method: UnityEngine.LineRenderer.SetPositions
void UnityEngine::LineRenderer::SetPositions(::Array<UnityEngine::Vector3>* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::SetPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions);
}
// Autogenerated method: UnityEngine.LineRenderer.set_startColor_Injected
void UnityEngine::LineRenderer::set_startColor_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_startColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.set_endColor_Injected
void UnityEngine::LineRenderer::set_endColor_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::set_endColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LineRenderer.SetPosition_Injected
void UnityEngine::LineRenderer::SetPosition_Injected(int index, UnityEngine::Vector3& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LineRenderer::SetPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, position);
}
// Writing MetadataGetter for method: LineRenderer::set_startWidth
// Il2CppName: set_startWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(float)>(&LineRenderer::set_startWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_startWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_endWidth
// Il2CppName: set_endWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(float)>(&LineRenderer::set_endWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_endWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_useWorldSpace
// Il2CppName: set_useWorldSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(bool)>(&LineRenderer::set_useWorldSpace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_useWorldSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_startColor
// Il2CppName: set_startColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(UnityEngine::Color)>(&LineRenderer::set_startColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_startColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_endColor
// Il2CppName: set_endColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(UnityEngine::Color)>(&LineRenderer::set_endColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_endColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_positionCount
// Il2CppName: set_positionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(int)>(&LineRenderer::set_positionCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_positionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(int, UnityEngine::Vector3)>(&LineRenderer::SetPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::SetPositions
// Il2CppName: SetPositions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(::Array<UnityEngine::Vector3>*)>(&LineRenderer::SetPositions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "SetPositions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_startColor_Injected
// Il2CppName: set_startColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(UnityEngine::Color&)>(&LineRenderer::set_startColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_startColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::set_endColor_Injected
// Il2CppName: set_endColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(UnityEngine::Color&)>(&LineRenderer::set_endColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "set_endColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: LineRenderer::SetPosition_Injected
// Il2CppName: SetPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LineRenderer::*)(int, UnityEngine::Vector3&)>(&LineRenderer::SetPosition_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LineRenderer*), "SetPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MaterialPropertyBlock.GetColorImpl
UnityEngine::Color UnityEngine::MaterialPropertyBlock::GetColorImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::GetColorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetFloatImpl
void UnityEngine::MaterialPropertyBlock::SetFloatImpl(int name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetFloatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVectorImpl
void UnityEngine::MaterialPropertyBlock::SetVectorImpl(int name, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVectorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetColorImpl
void UnityEngine::MaterialPropertyBlock::SetColorImpl(int name, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetColorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetFloatArrayImpl
void UnityEngine::MaterialPropertyBlock::SetFloatArrayImpl(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVectorArrayImpl
void UnityEngine::MaterialPropertyBlock::SetVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.CreateImpl
System::IntPtr UnityEngine::MaterialPropertyBlock::CreateImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MaterialPropertyBlock", "CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.DestroyImpl
void UnityEngine::MaterialPropertyBlock::DestroyImpl(System::IntPtr mpb) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::DestroyImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MaterialPropertyBlock", "DestroyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mpb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mpb);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.Clear
void UnityEngine::MaterialPropertyBlock::Clear(bool keepMemory) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keepMemory)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keepMemory);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.Clear
void UnityEngine::MaterialPropertyBlock::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetFloatArray
void UnityEngine::MaterialPropertyBlock::SetFloatArray(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVectorArray
void UnityEngine::MaterialPropertyBlock::SetVectorArray(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.Dispose
void UnityEngine::MaterialPropertyBlock::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetFloat
void UnityEngine::MaterialPropertyBlock::SetFloat(int nameID, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetInt
void UnityEngine::MaterialPropertyBlock::SetInt(int nameID, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVector
void UnityEngine::MaterialPropertyBlock::SetVector(int nameID, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetColor
void UnityEngine::MaterialPropertyBlock::SetColor(::Il2CppString* name, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetColor
void UnityEngine::MaterialPropertyBlock::SetColor(int nameID, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetFloatArray
void UnityEngine::MaterialPropertyBlock::SetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVectorArray
void UnityEngine::MaterialPropertyBlock::SetVectorArray(int nameID, ::Array<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.GetColor
UnityEngine::Color UnityEngine::MaterialPropertyBlock::GetColor(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.GetColorImpl_Injected
void UnityEngine::MaterialPropertyBlock::GetColorImpl_Injected(int name, UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::GetColorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetVectorImpl_Injected
void UnityEngine::MaterialPropertyBlock::SetVectorImpl_Injected(int name, UnityEngine::Vector4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetVectorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.SetColorImpl_Injected
void UnityEngine::MaterialPropertyBlock::SetColorImpl_Injected(int name, UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::SetColorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.MaterialPropertyBlock.Finalize
void UnityEngine::MaterialPropertyBlock::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialPropertyBlock::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MaterialPropertyBlock::GetColorImpl
// Il2CppName: GetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (MaterialPropertyBlock::*)(int)>(&MaterialPropertyBlock::GetColorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "GetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetFloatImpl
// Il2CppName: SetFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, float)>(&MaterialPropertyBlock::SetFloatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVectorImpl
// Il2CppName: SetVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Vector4)>(&MaterialPropertyBlock::SetVectorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetColorImpl
// Il2CppName: SetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Color)>(&MaterialPropertyBlock::SetColorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetFloatArrayImpl
// Il2CppName: SetFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, ::Array<float>*, int)>(&MaterialPropertyBlock::SetFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVectorArrayImpl
// Il2CppName: SetVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&MaterialPropertyBlock::SetVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::CreateImpl
// Il2CppName: CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&MaterialPropertyBlock::CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::DestroyImpl
// Il2CppName: DestroyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&MaterialPropertyBlock::DestroyImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "DestroyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(bool)>(&MaterialPropertyBlock::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)()>(&MaterialPropertyBlock::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, ::Array<float>*, int)>(&MaterialPropertyBlock::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&MaterialPropertyBlock::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)()>(&MaterialPropertyBlock::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, float)>(&MaterialPropertyBlock::SetFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, int)>(&MaterialPropertyBlock::SetInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Vector4)>(&MaterialPropertyBlock::SetVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(::Il2CppString*, UnityEngine::Color)>(&MaterialPropertyBlock::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Color)>(&MaterialPropertyBlock::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, System::Collections::Generic::List_1<float>*)>(&MaterialPropertyBlock::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, ::Array<UnityEngine::Vector4>*)>(&MaterialPropertyBlock::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (MaterialPropertyBlock::*)(int)>(&MaterialPropertyBlock::GetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::GetColorImpl_Injected
// Il2CppName: GetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Color&)>(&MaterialPropertyBlock::GetColorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "GetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetVectorImpl_Injected
// Il2CppName: SetVectorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Vector4&)>(&MaterialPropertyBlock::SetVectorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetVectorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::SetColorImpl_Injected
// Il2CppName: SetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)(int, UnityEngine::Color&)>(&MaterialPropertyBlock::SetColorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "SetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)()>(&MaterialPropertyBlock::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)()>(&MaterialPropertyBlock::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaterialPropertyBlock::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaterialPropertyBlock::*)()>(&MaterialPropertyBlock::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaterialPropertyBlock*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Rendering.ShadowCastingMode
#include "UnityEngine/Rendering/ShadowCastingMode.hpp"
// Including type: UnityEngine.MotionVectorGenerationMode
#include "UnityEngine/MotionVectorGenerationMode.hpp"
// Including type: UnityEngine.Rendering.LightProbeUsage
#include "UnityEngine/Rendering/LightProbeUsage.hpp"
// Including type: UnityEngine.Rendering.ReflectionProbeUsage
#include "UnityEngine/Rendering/ReflectionProbeUsage.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Renderer.get_bounds
UnityEngine::Bounds UnityEngine::Renderer::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.GetMaterial
UnityEngine::Material* UnityEngine::Renderer::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.GetSharedMaterial
UnityEngine::Material* UnityEngine::Renderer::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.SetMaterial
void UnityEngine::Renderer::SetMaterial(UnityEngine::Material* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: UnityEngine.Renderer.GetMaterialArray
::Array<UnityEngine::Material*>* UnityEngine::Renderer::GetMaterialArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetMaterialArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterialArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.CopySharedMaterialArray
void UnityEngine::Renderer::CopySharedMaterialArray(::Array<UnityEngine::Material*>*& m) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::CopySharedMaterialArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopySharedMaterialArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Material*>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: UnityEngine.Renderer.SetMaterialArray
void UnityEngine::Renderer::SetMaterialArray(::Array<UnityEngine::Material*>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::SetMaterialArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: UnityEngine.Renderer.Internal_SetPropertyBlock
void UnityEngine::Renderer::Internal_SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::Internal_SetPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, properties);
}
// Autogenerated method: UnityEngine.Renderer.Internal_SetPropertyBlockMaterialIndex
void UnityEngine::Renderer::Internal_SetPropertyBlockMaterialIndex(UnityEngine::MaterialPropertyBlock* properties, int materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::Internal_SetPropertyBlockMaterialIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetPropertyBlockMaterialIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(materialIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, properties, materialIndex);
}
// Autogenerated method: UnityEngine.Renderer.SetPropertyBlock
void UnityEngine::Renderer::SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::SetPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, properties);
}
// Autogenerated method: UnityEngine.Renderer.SetPropertyBlock
void UnityEngine::Renderer::SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties, int materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::SetPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(materialIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, properties, materialIndex);
}
// Autogenerated method: UnityEngine.Renderer.get_enabled
bool UnityEngine::Renderer::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_enabled
void UnityEngine::Renderer::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_isVisible
bool UnityEngine::Renderer::get_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_isVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_shadowCastingMode
void UnityEngine::Renderer::set_shadowCastingMode(UnityEngine::Rendering::ShadowCastingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_shadowCastingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shadowCastingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.set_receiveShadows
void UnityEngine::Renderer::set_receiveShadows(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_receiveShadows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_receiveShadows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.set_motionVectorGenerationMode
void UnityEngine::Renderer::set_motionVectorGenerationMode(UnityEngine::MotionVectorGenerationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_motionVectorGenerationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_motionVectorGenerationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.set_lightProbeUsage
void UnityEngine::Renderer::set_lightProbeUsage(UnityEngine::Rendering::LightProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_lightProbeUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightProbeUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.set_reflectionProbeUsage
void UnityEngine::Renderer::set_reflectionProbeUsage(UnityEngine::Rendering::ReflectionProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_reflectionProbeUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_sortingLayerID
int UnityEngine::Renderer::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_sortingLayerID
void UnityEngine::Renderer::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_sortingOrder
int UnityEngine::Renderer::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_sortingOrder
void UnityEngine::Renderer::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.set_allowOcclusionWhenDynamic
void UnityEngine::Renderer::set_allowOcclusionWhenDynamic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_allowOcclusionWhenDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowOcclusionWhenDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_isPartOfStaticBatch
bool UnityEngine::Renderer::get_isPartOfStaticBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_isPartOfStaticBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartOfStaticBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.GetMaterialCount
int UnityEngine::Renderer::GetMaterialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetMaterialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.GetSharedMaterialArray
::Array<UnityEngine::Material*>* UnityEngine::Renderer::GetSharedMaterialArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetSharedMaterialArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterialArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.get_materials
::Array<UnityEngine::Material*>* UnityEngine::Renderer::get_materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_materials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_materials
void UnityEngine::Renderer::set_materials(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_materials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_materials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_material
UnityEngine::Material* UnityEngine::Renderer::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_material
void UnityEngine::Renderer::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_sharedMaterial
UnityEngine::Material* UnityEngine::Renderer::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_sharedMaterial
void UnityEngine::Renderer::set_sharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.get_sharedMaterials
::Array<UnityEngine::Material*>* UnityEngine::Renderer::get_sharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_sharedMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Renderer.set_sharedMaterials
void UnityEngine::Renderer::set_sharedMaterials(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::set_sharedMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Renderer.GetSharedMaterials
void UnityEngine::Renderer::GetSharedMaterials(System::Collections::Generic::List_1<UnityEngine::Material*>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::GetSharedMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: UnityEngine.Renderer.get_bounds_Injected
void UnityEngine::Renderer::get_bounds_Injected(UnityEngine::Bounds& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Renderer::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Writing MetadataGetter for method: Renderer::get_bounds
// Il2CppName: get_bounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (Renderer::*)()>(&Renderer::get_bounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_bounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::GetMaterial
// Il2CppName: GetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Renderer::*)()>(&Renderer::GetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::GetSharedMaterial
// Il2CppName: GetSharedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Renderer::*)()>(&Renderer::GetSharedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetSharedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::SetMaterial
// Il2CppName: SetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Material*)>(&Renderer::SetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "SetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Renderer::GetMaterialArray
// Il2CppName: GetMaterialArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (Renderer::*)()>(&Renderer::GetMaterialArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetMaterialArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::CopySharedMaterialArray
// Il2CppName: CopySharedMaterialArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(::Array<UnityEngine::Material*>*&)>(&Renderer::CopySharedMaterialArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "CopySharedMaterialArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Material*>*&>()});
  }
};
// Writing MetadataGetter for method: Renderer::SetMaterialArray
// Il2CppName: SetMaterialArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(::Array<UnityEngine::Material*>*)>(&Renderer::SetMaterialArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "SetMaterialArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Material*>*>()});
  }
};
// Writing MetadataGetter for method: Renderer::Internal_SetPropertyBlock
// Il2CppName: Internal_SetPropertyBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::MaterialPropertyBlock*)>(&Renderer::Internal_SetPropertyBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "Internal_SetPropertyBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>()});
  }
};
// Writing MetadataGetter for method: Renderer::Internal_SetPropertyBlockMaterialIndex
// Il2CppName: Internal_SetPropertyBlockMaterialIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::MaterialPropertyBlock*, int)>(&Renderer::Internal_SetPropertyBlockMaterialIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "Internal_SetPropertyBlockMaterialIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Renderer::SetPropertyBlock
// Il2CppName: SetPropertyBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::MaterialPropertyBlock*)>(&Renderer::SetPropertyBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "SetPropertyBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>()});
  }
};
// Writing MetadataGetter for method: Renderer::SetPropertyBlock
// Il2CppName: SetPropertyBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::MaterialPropertyBlock*, int)>(&Renderer::SetPropertyBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "SetPropertyBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialPropertyBlock*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Renderer::*)()>(&Renderer::get_enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(bool)>(&Renderer::set_enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_isVisible
// Il2CppName: get_isVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Renderer::*)()>(&Renderer::get_isVisible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_isVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_shadowCastingMode
// Il2CppName: set_shadowCastingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Rendering::ShadowCastingMode)>(&Renderer::set_shadowCastingMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_shadowCastingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowCastingMode>()});
  }
};
// Writing MetadataGetter for method: Renderer::set_receiveShadows
// Il2CppName: set_receiveShadows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(bool)>(&Renderer::set_receiveShadows)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_receiveShadows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Renderer::set_motionVectorGenerationMode
// Il2CppName: set_motionVectorGenerationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::MotionVectorGenerationMode)>(&Renderer::set_motionVectorGenerationMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_motionVectorGenerationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MotionVectorGenerationMode>()});
  }
};
// Writing MetadataGetter for method: Renderer::set_lightProbeUsage
// Il2CppName: set_lightProbeUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Rendering::LightProbeUsage)>(&Renderer::set_lightProbeUsage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_lightProbeUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightProbeUsage>()});
  }
};
// Writing MetadataGetter for method: Renderer::set_reflectionProbeUsage
// Il2CppName: set_reflectionProbeUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Rendering::ReflectionProbeUsage)>(&Renderer::set_reflectionProbeUsage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_reflectionProbeUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ReflectionProbeUsage>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_sortingLayerID
// Il2CppName: get_sortingLayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Renderer::*)()>(&Renderer::get_sortingLayerID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_sortingLayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_sortingLayerID
// Il2CppName: set_sortingLayerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(int)>(&Renderer::set_sortingLayerID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_sortingLayerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_sortingOrder
// Il2CppName: get_sortingOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Renderer::*)()>(&Renderer::get_sortingOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_sortingOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_sortingOrder
// Il2CppName: set_sortingOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(int)>(&Renderer::set_sortingOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_sortingOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Renderer::set_allowOcclusionWhenDynamic
// Il2CppName: set_allowOcclusionWhenDynamic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(bool)>(&Renderer::set_allowOcclusionWhenDynamic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_allowOcclusionWhenDynamic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_isPartOfStaticBatch
// Il2CppName: get_isPartOfStaticBatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Renderer::*)()>(&Renderer::get_isPartOfStaticBatch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_isPartOfStaticBatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::GetMaterialCount
// Il2CppName: GetMaterialCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Renderer::*)()>(&Renderer::GetMaterialCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetMaterialCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::GetSharedMaterialArray
// Il2CppName: GetSharedMaterialArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (Renderer::*)()>(&Renderer::GetSharedMaterialArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetSharedMaterialArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::get_materials
// Il2CppName: get_materials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (Renderer::*)()>(&Renderer::get_materials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_materials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_materials
// Il2CppName: set_materials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(::Array<UnityEngine::Material*>*)>(&Renderer::set_materials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_materials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Material*>*>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Renderer::*)()>(&Renderer::get_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_material
// Il2CppName: set_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Material*)>(&Renderer::set_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_sharedMaterial
// Il2CppName: get_sharedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Renderer::*)()>(&Renderer::get_sharedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_sharedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_sharedMaterial
// Il2CppName: set_sharedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Material*)>(&Renderer::set_sharedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_sharedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_sharedMaterials
// Il2CppName: get_sharedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Material*>* (Renderer::*)()>(&Renderer::get_sharedMaterials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_sharedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Renderer::set_sharedMaterials
// Il2CppName: set_sharedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(::Array<UnityEngine::Material*>*)>(&Renderer::set_sharedMaterials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "set_sharedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Material*>*>()});
  }
};
// Writing MetadataGetter for method: Renderer::GetSharedMaterials
// Il2CppName: GetSharedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(System::Collections::Generic::List_1<UnityEngine::Material*>*)>(&Renderer::GetSharedMaterials)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "GetSharedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Material*>*>()});
  }
};
// Writing MetadataGetter for method: Renderer::get_bounds_Injected
// Il2CppName: get_bounds_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)(UnityEngine::Bounds&)>(&Renderer::get_bounds_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), "get_bounds_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: Renderer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)()>(&Renderer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Renderer::*)()>(&Renderer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Renderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Rendering.ShaderHardwareTier
#include "UnityEngine/Rendering/ShaderHardwareTier.hpp"
// Including type: UnityEngine.DisableBatchingType
#include "UnityEngine/DisableBatchingType.hpp"
// Including type: UnityEngine.Rendering.ShaderTagId
#include "UnityEngine/Rendering/ShaderTagId.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.RenderTextureSubElement
#include "UnityEngine/Rendering/RenderTextureSubElement.hpp"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
// Including type: UnityEngine.Rendering.ShaderPropertyType
#include "UnityEngine/Rendering/ShaderPropertyType.hpp"
// Including type: UnityEngine.Rendering.ShaderPropertyFlags
#include "UnityEngine/Rendering/ShaderPropertyFlags.hpp"
// Including type: UnityEngine.Rendering.TextureDimension
#include "UnityEngine/Rendering/TextureDimension.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Shader.get_globalShaderHardwareTier
UnityEngine::Rendering::ShaderHardwareTier UnityEngine::Shader::get_globalShaderHardwareTier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_globalShaderHardwareTier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "get_globalShaderHardwareTier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderHardwareTier, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.set_globalShaderHardwareTier
void UnityEngine::Shader::set_globalShaderHardwareTier(UnityEngine::Rendering::ShaderHardwareTier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::set_globalShaderHardwareTier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "set_globalShaderHardwareTier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Shader.Find
UnityEngine::Shader* UnityEngine::Shader::Find(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.FindBuiltin
UnityEngine::Shader* UnityEngine::Shader::FindBuiltin(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::FindBuiltin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "FindBuiltin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.get_maximumLOD
int UnityEngine::Shader::get_maximumLOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_maximumLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maximumLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.set_maximumLOD
void UnityEngine::Shader::set_maximumLOD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::set_maximumLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maximumLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Shader.get_globalMaximumLOD
int UnityEngine::Shader::get_globalMaximumLOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_globalMaximumLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "get_globalMaximumLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.set_globalMaximumLOD
void UnityEngine::Shader::set_globalMaximumLOD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::set_globalMaximumLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "set_globalMaximumLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Shader.get_isSupported
bool UnityEngine::Shader::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_isSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.get_globalRenderPipeline
::Il2CppString* UnityEngine::Shader::get_globalRenderPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_globalRenderPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "get_globalRenderPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.set_globalRenderPipeline
void UnityEngine::Shader::set_globalRenderPipeline(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::set_globalRenderPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "set_globalRenderPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Shader.EnableKeyword
void UnityEngine::Shader::EnableKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::EnableKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "EnableKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Shader.DisableKeyword
void UnityEngine::Shader::DisableKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::DisableKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "DisableKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Shader.IsKeywordEnabled
bool UnityEngine::Shader::IsKeywordEnabled(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::IsKeywordEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "IsKeywordEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Shader.get_renderQueue
int UnityEngine::Shader::get_renderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_renderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.get_disableBatching
UnityEngine::DisableBatchingType UnityEngine::Shader::get_disableBatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_disableBatching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableBatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::DisableBatchingType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.WarmupAllShaders
void UnityEngine::Shader::WarmupAllShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::WarmupAllShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "WarmupAllShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.TagToID
int UnityEngine::Shader::TagToID(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::TagToID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "TagToID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.IDToTag
::Il2CppString* UnityEngine::Shader::IDToTag(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::IDToTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "IDToTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.PropertyToID
int UnityEngine::Shader::PropertyToID(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::PropertyToID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "PropertyToID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetDependency
UnityEngine::Shader* UnityEngine::Shader::GetDependency(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.get_passCount
int UnityEngine::Shader::get_passCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::get_passCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_passCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.FindPassTagValue
UnityEngine::Rendering::ShaderTagId UnityEngine::Shader::FindPassTagValue(int passIndex, UnityEngine::Rendering::ShaderTagId tagName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::FindPassTagValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPassTagValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passIndex), ::il2cpp_utils::ExtractType(tagName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderTagId, false>(this, ___internal__method, passIndex, tagName);
}
// Autogenerated method: UnityEngine.Shader.Internal_FindPassTagValue
int UnityEngine::Shader::Internal_FindPassTagValue(int passIndex, int tagName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::Internal_FindPassTagValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_FindPassTagValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passIndex), ::il2cpp_utils::ExtractType(tagName)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, passIndex, tagName);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatImpl
void UnityEngine::Shader::SetGlobalFloatImpl(int name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorImpl
void UnityEngine::Shader::SetGlobalVectorImpl(int name, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixImpl
void UnityEngine::Shader::SetGlobalMatrixImpl(int name, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalTextureImpl
void UnityEngine::Shader::SetGlobalTextureImpl(int name, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalRenderTextureImpl
void UnityEngine::Shader::SetGlobalRenderTextureImpl(int name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalRenderTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalRenderTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value, element);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalBufferImpl
void UnityEngine::Shader::SetGlobalBufferImpl(int name, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalConstantBufferImpl
void UnityEngine::Shader::SetGlobalConstantBufferImpl(int name, UnityEngine::ComputeBuffer* value, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalConstantBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalConstantBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value, offset, size);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatImpl
float UnityEngine::Shader::GetGlobalFloatImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorImpl
UnityEngine::Vector4 UnityEngine::Shader::GetGlobalVectorImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixImpl
UnityEngine::Matrix4x4 UnityEngine::Shader::GetGlobalMatrixImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalTextureImpl
UnityEngine::Texture* UnityEngine::Shader::GetGlobalTextureImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArrayImpl
void UnityEngine::Shader::SetGlobalFloatArrayImpl(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArrayImpl
void UnityEngine::Shader::SetGlobalVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArrayImpl
void UnityEngine::Shader::SetGlobalMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArrayImpl
::Array<float>* UnityEngine::Shader::GetGlobalFloatArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArrayImpl
::Array<UnityEngine::Vector4>* UnityEngine::Shader::GetGlobalVectorArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArrayImpl
::Array<UnityEngine::Matrix4x4>* UnityEngine::Shader::GetGlobalMatrixArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArrayCountImpl
int UnityEngine::Shader::GetGlobalFloatArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArrayCountImpl
int UnityEngine::Shader::GetGlobalVectorArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArrayCountImpl
int UnityEngine::Shader::GetGlobalMatrixArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalFloatArrayImpl
void UnityEngine::Shader::ExtractGlobalFloatArrayImpl(int name, ::Array<float>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalVectorArrayImpl
void UnityEngine::Shader::ExtractGlobalVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalMatrixArrayImpl
void UnityEngine::Shader::ExtractGlobalMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArray
void UnityEngine::Shader::SetGlobalFloatArray(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArray
void UnityEngine::Shader::SetGlobalVectorArray(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArray
void UnityEngine::Shader::SetGlobalMatrixArray(int name, ::Array<UnityEngine::Matrix4x4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalFloatArray
void UnityEngine::Shader::ExtractGlobalFloatArray(int name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalVectorArray
void UnityEngine::Shader::ExtractGlobalVectorArray(int name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.ExtractGlobalMatrixArray
void UnityEngine::Shader::ExtractGlobalMatrixArray(int name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::ExtractGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "ExtractGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloat
void UnityEngine::Shader::SetGlobalFloat(::Il2CppString* name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloat
void UnityEngine::Shader::SetGlobalFloat(int nameID, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalInt
void UnityEngine::Shader::SetGlobalInt(::Il2CppString* name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalInt
void UnityEngine::Shader::SetGlobalInt(int nameID, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVector
void UnityEngine::Shader::SetGlobalVector(::Il2CppString* name, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVector
void UnityEngine::Shader::SetGlobalVector(int nameID, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalColor
void UnityEngine::Shader::SetGlobalColor(::Il2CppString* name, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalColor
void UnityEngine::Shader::SetGlobalColor(int nameID, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrix
void UnityEngine::Shader::SetGlobalMatrix(::Il2CppString* name, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrix
void UnityEngine::Shader::SetGlobalMatrix(int nameID, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalTexture
void UnityEngine::Shader::SetGlobalTexture(::Il2CppString* name, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalTexture
void UnityEngine::Shader::SetGlobalTexture(int nameID, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalTexture
void UnityEngine::Shader::SetGlobalTexture(::Il2CppString* name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value, element);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalTexture
void UnityEngine::Shader::SetGlobalTexture(int nameID, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value, element);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalBuffer
void UnityEngine::Shader::SetGlobalBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalBuffer
void UnityEngine::Shader::SetGlobalBuffer(int nameID, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalConstantBuffer
void UnityEngine::Shader::SetGlobalConstantBuffer(int nameID, UnityEngine::ComputeBuffer* value, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalConstantBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalConstantBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, value, offset, size);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArray
void UnityEngine::Shader::SetGlobalFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArray
void UnityEngine::Shader::SetGlobalFloatArray(int nameID, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArray
void UnityEngine::Shader::SetGlobalFloatArray(::Il2CppString* name, ::Array<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalFloatArray
void UnityEngine::Shader::SetGlobalFloatArray(int nameID, ::Array<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArray
void UnityEngine::Shader::SetGlobalVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArray
void UnityEngine::Shader::SetGlobalVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArray
void UnityEngine::Shader::SetGlobalVectorArray(::Il2CppString* name, ::Array<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorArray
void UnityEngine::Shader::SetGlobalVectorArray(int nameID, ::Array<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArray
void UnityEngine::Shader::SetGlobalMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArray
void UnityEngine::Shader::SetGlobalMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArray
void UnityEngine::Shader::SetGlobalMatrixArray(::Il2CppString* name, ::Array<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixArray
void UnityEngine::Shader::SetGlobalMatrixArray(int nameID, ::Array<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloat
float UnityEngine::Shader::GetGlobalFloat(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloat
float UnityEngine::Shader::GetGlobalFloat(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalInt
int UnityEngine::Shader::GetGlobalInt(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalInt
int UnityEngine::Shader::GetGlobalInt(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVector
UnityEngine::Vector4 UnityEngine::Shader::GetGlobalVector(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVector
UnityEngine::Vector4 UnityEngine::Shader::GetGlobalVector(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalColor
UnityEngine::Color UnityEngine::Shader::GetGlobalColor(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalColor
UnityEngine::Color UnityEngine::Shader::GetGlobalColor(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrix
UnityEngine::Matrix4x4 UnityEngine::Shader::GetGlobalMatrix(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrix
UnityEngine::Matrix4x4 UnityEngine::Shader::GetGlobalMatrix(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalTexture
UnityEngine::Texture* UnityEngine::Shader::GetGlobalTexture(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalTexture
UnityEngine::Texture* UnityEngine::Shader::GetGlobalTexture(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArray
::Array<float>* UnityEngine::Shader::GetGlobalFloatArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArray
::Array<float>* UnityEngine::Shader::GetGlobalFloatArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArray
::Array<UnityEngine::Vector4>* UnityEngine::Shader::GetGlobalVectorArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArray
::Array<UnityEngine::Vector4>* UnityEngine::Shader::GetGlobalVectorArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArray
::Array<UnityEngine::Matrix4x4>* UnityEngine::Shader::GetGlobalMatrixArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArray
::Array<UnityEngine::Matrix4x4>* UnityEngine::Shader::GetGlobalMatrixArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArray
void UnityEngine::Shader::GetGlobalFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalFloatArray
void UnityEngine::Shader::GetGlobalFloatArray(int nameID, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArray
void UnityEngine::Shader::GetGlobalVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorArray
void UnityEngine::Shader::GetGlobalVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArray
void UnityEngine::Shader::GetGlobalMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixArray
void UnityEngine::Shader::GetGlobalMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyName
::Il2CppString* UnityEngine::Shader::GetPropertyName(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyNameId
int UnityEngine::Shader::GetPropertyNameId(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyNameId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyNameId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyType
UnityEngine::Rendering::ShaderPropertyType UnityEngine::Shader::GetPropertyType(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderPropertyType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDescription
::Il2CppString* UnityEngine::Shader::GetPropertyDescription(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyFlags
UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Shader::GetPropertyFlags(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderPropertyFlags, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyAttributes
::Array<::Il2CppString*>* UnityEngine::Shader::GetPropertyAttributes(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDefaultValue
UnityEngine::Vector4 UnityEngine::Shader::GetPropertyDefaultValue(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyTextureDimension
UnityEngine::Rendering::TextureDimension UnityEngine::Shader::GetPropertyTextureDimension(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyTextureDimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyTextureDimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::TextureDimension, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyTextureDefaultName
::Il2CppString* UnityEngine::Shader::GetPropertyTextureDefaultName(UnityEngine::Shader* shader, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyTextureDefaultName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.CheckPropertyIndex
void UnityEngine::Shader::CheckPropertyIndex(UnityEngine::Shader* s, int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::CheckPropertyIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "CheckPropertyIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(propertyIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyCount
int UnityEngine::Shader::GetPropertyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Shader.FindPropertyIndex
int UnityEngine::Shader::FindPropertyIndex(::Il2CppString* propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::FindPropertyIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPropertyIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyName
::Il2CppString* UnityEngine::Shader::GetPropertyName(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyNameId
int UnityEngine::Shader::GetPropertyNameId(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyNameId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyNameId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyType
UnityEngine::Rendering::ShaderPropertyType UnityEngine::Shader::GetPropertyType(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderPropertyType, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDescription
::Il2CppString* UnityEngine::Shader::GetPropertyDescription(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyFlags
UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Shader::GetPropertyFlags(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::ShaderPropertyFlags, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyAttributes
::Array<::Il2CppString*>* UnityEngine::Shader::GetPropertyAttributes(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDefaultFloatValue
float UnityEngine::Shader::GetPropertyDefaultFloatValue(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDefaultFloatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyDefaultFloatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDefaultVectorValue
UnityEngine::Vector4 UnityEngine::Shader::GetPropertyDefaultVectorValue(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDefaultVectorValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyDefaultVectorValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyRangeLimits
UnityEngine::Vector2 UnityEngine::Shader::GetPropertyRangeLimits(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyRangeLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyRangeLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyTextureDimension
UnityEngine::Rendering::TextureDimension UnityEngine::Shader::GetPropertyTextureDimension(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyTextureDimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyTextureDimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::TextureDimension, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyTextureDefaultName
::Il2CppString* UnityEngine::Shader::GetPropertyTextureDefaultName(int propertyIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyTextureDefaultName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, propertyIndex);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalVectorImpl_Injected
void UnityEngine::Shader::SetGlobalVectorImpl_Injected(int name, UnityEngine::Vector4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalVectorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.SetGlobalMatrixImpl_Injected
void UnityEngine::Shader::SetGlobalMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::SetGlobalMatrixImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "SetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalVectorImpl_Injected
void UnityEngine::Shader::GetGlobalVectorImpl_Injected(int name, UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalVectorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.Shader.GetGlobalMatrixImpl_Injected
void UnityEngine::Shader::GetGlobalMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetGlobalMatrixImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.Shader.GetPropertyDefaultValue_Injected
void UnityEngine::Shader::GetPropertyDefaultValue_Injected(UnityEngine::Shader* shader, int propertyIndex, UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Shader::GetPropertyDefaultValue_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Shader", "GetPropertyDefaultValue_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(propertyIndex), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shader, propertyIndex, ret);
}
// Writing MetadataGetter for method: Shader::get_globalShaderHardwareTier
// Il2CppName: get_globalShaderHardwareTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderHardwareTier (*)()>(&Shader::get_globalShaderHardwareTier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_globalShaderHardwareTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::set_globalShaderHardwareTier
// Il2CppName: set_globalShaderHardwareTier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Rendering::ShaderHardwareTier)>(&Shader::set_globalShaderHardwareTier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "set_globalShaderHardwareTier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShaderHardwareTier>()});
  }
};
// Writing MetadataGetter for method: Shader::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Shader* (*)(::Il2CppString*)>(&Shader::Find)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::FindBuiltin
// Il2CppName: FindBuiltin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Shader* (*)(::Il2CppString*)>(&Shader::FindBuiltin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "FindBuiltin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::get_maximumLOD
// Il2CppName: get_maximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)()>(&Shader::get_maximumLOD)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_maximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::set_maximumLOD
// Il2CppName: set_maximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shader::*)(int)>(&Shader::set_maximumLOD)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "set_maximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::get_globalMaximumLOD
// Il2CppName: get_globalMaximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Shader::get_globalMaximumLOD)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_globalMaximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::set_globalMaximumLOD
// Il2CppName: set_globalMaximumLOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Shader::set_globalMaximumLOD)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "set_globalMaximumLOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::get_isSupported
// Il2CppName: get_isSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Shader::*)()>(&Shader::get_isSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_isSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::get_globalRenderPipeline
// Il2CppName: get_globalRenderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Shader::get_globalRenderPipeline)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_globalRenderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::set_globalRenderPipeline
// Il2CppName: set_globalRenderPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&Shader::set_globalRenderPipeline)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "set_globalRenderPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&Shader::EnableKeyword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&Shader::DisableKeyword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&Shader::IsKeywordEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::get_renderQueue
// Il2CppName: get_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)()>(&Shader::get_renderQueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::get_disableBatching
// Il2CppName: get_disableBatching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::DisableBatchingType (Shader::*)()>(&Shader::get_disableBatching)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_disableBatching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::WarmupAllShaders
// Il2CppName: WarmupAllShaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Shader::WarmupAllShaders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "WarmupAllShaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::TagToID
// Il2CppName: TagToID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*)>(&Shader::TagToID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "TagToID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::IDToTag
// Il2CppName: IDToTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&Shader::IDToTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "IDToTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::PropertyToID
// Il2CppName: PropertyToID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*)>(&Shader::PropertyToID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "PropertyToID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetDependency
// Il2CppName: GetDependency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Shader* (Shader::*)(::Il2CppString*)>(&Shader::GetDependency)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetDependency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::get_passCount
// Il2CppName: get_passCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)()>(&Shader::get_passCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "get_passCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::FindPassTagValue
// Il2CppName: FindPassTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderTagId (Shader::*)(int, UnityEngine::Rendering::ShaderTagId)>(&Shader::FindPassTagValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "FindPassTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShaderTagId>()});
  }
};
// Writing MetadataGetter for method: Shader::Internal_FindPassTagValue
// Il2CppName: Internal_FindPassTagValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)(int, int)>(&Shader::Internal_FindPassTagValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "Internal_FindPassTagValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatImpl
// Il2CppName: SetGlobalFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, float)>(&Shader::SetGlobalFloatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorImpl
// Il2CppName: SetGlobalVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Vector4)>(&Shader::SetGlobalVectorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixImpl
// Il2CppName: SetGlobalMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Matrix4x4)>(&Shader::SetGlobalMatrixImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalTextureImpl
// Il2CppName: SetGlobalTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Texture*)>(&Shader::SetGlobalTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalRenderTextureImpl
// Il2CppName: SetGlobalRenderTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Shader::SetGlobalRenderTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalRenderTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalBufferImpl
// Il2CppName: SetGlobalBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::ComputeBuffer*)>(&Shader::SetGlobalBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalConstantBufferImpl
// Il2CppName: SetGlobalConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Shader::SetGlobalConstantBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatImpl
// Il2CppName: GetGlobalFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&Shader::GetGlobalFloatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorImpl
// Il2CppName: GetGlobalVectorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(int)>(&Shader::GetGlobalVectorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixImpl
// Il2CppName: GetGlobalMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (*)(int)>(&Shader::GetGlobalMatrixImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalTextureImpl
// Il2CppName: GetGlobalTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (*)(int)>(&Shader::GetGlobalTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArrayImpl
// Il2CppName: SetGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<float>*, int)>(&Shader::SetGlobalFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArrayImpl
// Il2CppName: SetGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Shader::SetGlobalVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArrayImpl
// Il2CppName: SetGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Shader::SetGlobalMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArrayImpl
// Il2CppName: GetGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (*)(int)>(&Shader::GetGlobalFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArrayImpl
// Il2CppName: GetGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (*)(int)>(&Shader::GetGlobalVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArrayImpl
// Il2CppName: GetGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (*)(int)>(&Shader::GetGlobalMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArrayCountImpl
// Il2CppName: GetGlobalFloatArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Shader::GetGlobalFloatArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArrayCountImpl
// Il2CppName: GetGlobalVectorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Shader::GetGlobalVectorArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArrayCountImpl
// Il2CppName: GetGlobalMatrixArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Shader::GetGlobalMatrixArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalFloatArrayImpl
// Il2CppName: ExtractGlobalFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<float>*&)>(&Shader::ExtractGlobalFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalVectorArrayImpl
// Il2CppName: ExtractGlobalVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Vector4>*&)>(&Shader::ExtractGlobalVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*&>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalMatrixArrayImpl
// Il2CppName: ExtractGlobalMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Matrix4x4>*&)>(&Shader::ExtractGlobalMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<float>*, int)>(&Shader::SetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Shader::SetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Shader::SetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalFloatArray
// Il2CppName: ExtractGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<float>*)>(&Shader::ExtractGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalVectorArray
// Il2CppName: ExtractGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Shader::ExtractGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::ExtractGlobalMatrixArray
// Il2CppName: ExtractGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Shader::ExtractGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "ExtractGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloat
// Il2CppName: SetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, float)>(&Shader::SetGlobalFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloat
// Il2CppName: SetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, float)>(&Shader::SetGlobalFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalInt
// Il2CppName: SetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, int)>(&Shader::SetGlobalInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalInt
// Il2CppName: SetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&Shader::SetGlobalInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVector
// Il2CppName: SetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Vector4)>(&Shader::SetGlobalVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVector
// Il2CppName: SetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Vector4)>(&Shader::SetGlobalVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalColor
// Il2CppName: SetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Color)>(&Shader::SetGlobalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalColor
// Il2CppName: SetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Color)>(&Shader::SetGlobalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrix
// Il2CppName: SetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Matrix4x4)>(&Shader::SetGlobalMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrix
// Il2CppName: SetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Matrix4x4)>(&Shader::SetGlobalMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Texture*)>(&Shader::SetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Texture*)>(&Shader::SetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Shader::SetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalTexture
// Il2CppName: SetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Shader::SetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::ComputeBuffer*)>(&Shader::SetGlobalBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalBuffer
// Il2CppName: SetGlobalBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::ComputeBuffer*)>(&Shader::SetGlobalBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalConstantBuffer
// Il2CppName: SetGlobalConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Shader::SetGlobalConstantBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Shader::SetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<float>*)>(&Shader::SetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<float>*)>(&Shader::SetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalFloatArray
// Il2CppName: SetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<float>*)>(&Shader::SetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Shader::SetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Shader::SetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<UnityEngine::Vector4>*)>(&Shader::SetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorArray
// Il2CppName: SetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Vector4>*)>(&Shader::SetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Shader::SetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Shader::SetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<UnityEngine::Matrix4x4>*)>(&Shader::SetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixArray
// Il2CppName: SetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Array<UnityEngine::Matrix4x4>*)>(&Shader::SetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloat
// Il2CppName: GetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::Il2CppString*)>(&Shader::GetGlobalFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloat
// Il2CppName: GetGlobalFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&Shader::GetGlobalFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalInt
// Il2CppName: GetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppString*)>(&Shader::GetGlobalInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalInt
// Il2CppName: GetGlobalInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Shader::GetGlobalInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVector
// Il2CppName: GetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(::Il2CppString*)>(&Shader::GetGlobalVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVector
// Il2CppName: GetGlobalVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(int)>(&Shader::GetGlobalVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalColor
// Il2CppName: GetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (*)(::Il2CppString*)>(&Shader::GetGlobalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalColor
// Il2CppName: GetGlobalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (*)(int)>(&Shader::GetGlobalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrix
// Il2CppName: GetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (*)(::Il2CppString*)>(&Shader::GetGlobalMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrix
// Il2CppName: GetGlobalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (*)(int)>(&Shader::GetGlobalMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalTexture
// Il2CppName: GetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (*)(::Il2CppString*)>(&Shader::GetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalTexture
// Il2CppName: GetGlobalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (*)(int)>(&Shader::GetGlobalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (*)(::Il2CppString*)>(&Shader::GetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (*)(int)>(&Shader::GetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (*)(::Il2CppString*)>(&Shader::GetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (*)(int)>(&Shader::GetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (*)(::Il2CppString*)>(&Shader::GetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (*)(int)>(&Shader::GetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Shader::GetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalFloatArray
// Il2CppName: GetGlobalFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<float>*)>(&Shader::GetGlobalFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Shader::GetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorArray
// Il2CppName: GetGlobalVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Shader::GetGlobalVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Shader::GetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixArray
// Il2CppName: GetGlobalMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Shader::GetGlobalMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyName
// Il2CppName: GetPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyNameId
// Il2CppName: GetPropertyNameId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyNameId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyNameId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyType
// Il2CppName: GetPropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderPropertyType (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDescription
// Il2CppName: GetPropertyDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyFlags
// Il2CppName: GetPropertyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderPropertyFlags (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyAttributes
// Il2CppName: GetPropertyAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDefaultValue
// Il2CppName: GetPropertyDefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyDefaultValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyTextureDimension
// Il2CppName: GetPropertyTextureDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::TextureDimension (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyTextureDimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyTextureDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyTextureDefaultName
// Il2CppName: GetPropertyTextureDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Shader*, int)>(&Shader::GetPropertyTextureDefaultName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::CheckPropertyIndex
// Il2CppName: CheckPropertyIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Shader*, int)>(&Shader::CheckPropertyIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "CheckPropertyIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyCount
// Il2CppName: GetPropertyCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)()>(&Shader::GetPropertyCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shader::FindPropertyIndex
// Il2CppName: FindPropertyIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)(::Il2CppString*)>(&Shader::FindPropertyIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "FindPropertyIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyName
// Il2CppName: GetPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Shader::*)(int)>(&Shader::GetPropertyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyNameId
// Il2CppName: GetPropertyNameId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Shader::*)(int)>(&Shader::GetPropertyNameId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyNameId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyType
// Il2CppName: GetPropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderPropertyType (Shader::*)(int)>(&Shader::GetPropertyType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDescription
// Il2CppName: GetPropertyDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Shader::*)(int)>(&Shader::GetPropertyDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyFlags
// Il2CppName: GetPropertyFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::ShaderPropertyFlags (Shader::*)(int)>(&Shader::GetPropertyFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyAttributes
// Il2CppName: GetPropertyAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Shader::*)(int)>(&Shader::GetPropertyAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDefaultFloatValue
// Il2CppName: GetPropertyDefaultFloatValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Shader::*)(int)>(&Shader::GetPropertyDefaultFloatValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDefaultFloatValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDefaultVectorValue
// Il2CppName: GetPropertyDefaultVectorValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Shader::*)(int)>(&Shader::GetPropertyDefaultVectorValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDefaultVectorValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyRangeLimits
// Il2CppName: GetPropertyRangeLimits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Shader::*)(int)>(&Shader::GetPropertyRangeLimits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyRangeLimits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyTextureDimension
// Il2CppName: GetPropertyTextureDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::TextureDimension (Shader::*)(int)>(&Shader::GetPropertyTextureDimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyTextureDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyTextureDefaultName
// Il2CppName: GetPropertyTextureDefaultName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Shader::*)(int)>(&Shader::GetPropertyTextureDefaultName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyTextureDefaultName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalVectorImpl_Injected
// Il2CppName: SetGlobalVectorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Vector4&)>(&Shader::SetGlobalVectorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Shader::SetGlobalMatrixImpl_Injected
// Il2CppName: SetGlobalMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Matrix4x4&)>(&Shader::SetGlobalMatrixImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "SetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalVectorImpl_Injected
// Il2CppName: GetGlobalVectorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Vector4&)>(&Shader::GetGlobalVectorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalVectorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Shader::GetGlobalMatrixImpl_Injected
// Il2CppName: GetGlobalMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::Matrix4x4&)>(&Shader::GetGlobalMatrixImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetGlobalMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Shader::GetPropertyDefaultValue_Injected
// Il2CppName: GetPropertyDefaultValue_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Shader*, int, UnityEngine::Vector4&)>(&Shader::GetPropertyDefaultValue_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), "GetPropertyDefaultValue_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Shader::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shader::*)()>(&Shader::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shader::*)()>(&Shader::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shader*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rendering.ShaderPropertyFlags
#include "UnityEngine/Rendering/ShaderPropertyFlags.hpp"
// Including type: UnityEngine.MaterialGlobalIlluminationFlags
#include "UnityEngine/MaterialGlobalIlluminationFlags.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.RenderTextureSubElement
#include "UnityEngine/Rendering/RenderTextureSubElement.hpp"
// Including type: UnityEngine.ComputeBuffer
#include "UnityEngine/ComputeBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Material.Create
UnityEngine::Material* UnityEngine::Material::Create(::Il2CppString* scriptContents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scriptContents)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scriptContents);
}
// Autogenerated method: UnityEngine.Material.CreateWithShader
void UnityEngine::Material::CreateWithShader(UnityEngine::Material* self, UnityEngine::Shader* shader) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::CreateWithShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "CreateWithShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(shader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, shader);
}
// Autogenerated method: UnityEngine.Material.CreateWithMaterial
void UnityEngine::Material::CreateWithMaterial(UnityEngine::Material* self, UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::CreateWithMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "CreateWithMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, source);
}
// Autogenerated method: UnityEngine.Material.CreateWithString
void UnityEngine::Material::CreateWithString(UnityEngine::Material* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::CreateWithString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "CreateWithString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Material.GetDefaultMaterial
UnityEngine::Material* UnityEngine::Material::GetDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "GetDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Material.GetDefaultParticleMaterial
UnityEngine::Material* UnityEngine::Material::GetDefaultParticleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetDefaultParticleMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "GetDefaultParticleMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Material.GetDefaultLineMaterial
UnityEngine::Material* UnityEngine::Material::GetDefaultLineMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetDefaultLineMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Material", "GetDefaultLineMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Material.get_shader
UnityEngine::Shader* UnityEngine::Material::get_shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_shader
void UnityEngine::Material::set_shader(UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_color
UnityEngine::Color UnityEngine::Material::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_color
void UnityEngine::Material::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_mainTexture
UnityEngine::Texture* UnityEngine::Material::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_mainTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_mainTexture
void UnityEngine::Material::set_mainTexture(UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_mainTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_mainTextureOffset
UnityEngine::Vector2 UnityEngine::Material::get_mainTextureOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_mainTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_mainTextureOffset
void UnityEngine::Material::set_mainTextureOffset(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_mainTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_mainTextureScale
UnityEngine::Vector2 UnityEngine::Material::get_mainTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_mainTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_mainTextureScale
void UnityEngine::Material::set_mainTextureScale(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_mainTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.GetFirstPropertyNameIdByAttribute
int UnityEngine::Material::GetFirstPropertyNameIdByAttribute(UnityEngine::Rendering::ShaderPropertyFlags attributeFlag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFirstPropertyNameIdByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstPropertyNameIdByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeFlag)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attributeFlag);
}
// Autogenerated method: UnityEngine.Material.HasProperty
bool UnityEngine::Material::HasProperty(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::HasProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.HasProperty
bool UnityEngine::Material::HasProperty(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::HasProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.get_renderQueue
int UnityEngine::Material::get_renderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_renderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_renderQueue
void UnityEngine::Material::set_renderQueue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_renderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_rawRenderQueue
int UnityEngine::Material::get_rawRenderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_rawRenderQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawRenderQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.EnableKeyword
void UnityEngine::Material::EnableKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::EnableKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Material.DisableKeyword
void UnityEngine::Material::DisableKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::DisableKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Material.IsKeywordEnabled
bool UnityEngine::Material::IsKeywordEnabled(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::IsKeywordEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsKeywordEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, keyword);
}
// Autogenerated method: UnityEngine.Material.get_globalIlluminationFlags
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::Material::get_globalIlluminationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_globalIlluminationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_globalIlluminationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MaterialGlobalIlluminationFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_globalIlluminationFlags
void UnityEngine::Material::set_globalIlluminationFlags(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_globalIlluminationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_globalIlluminationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_doubleSidedGI
bool UnityEngine::Material::get_doubleSidedGI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_doubleSidedGI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_doubleSidedGI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_doubleSidedGI
void UnityEngine::Material::set_doubleSidedGI(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_doubleSidedGI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_doubleSidedGI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_enableInstancing
bool UnityEngine::Material::get_enableInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_enableInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_enableInstancing
void UnityEngine::Material::set_enableInstancing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_enableInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.get_passCount
int UnityEngine::Material::get_passCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_passCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_passCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.SetShaderPassEnabled
void UnityEngine::Material::SetShaderPassEnabled(::Il2CppString* passName, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetShaderPassEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderPassEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passName), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, passName, enabled);
}
// Autogenerated method: UnityEngine.Material.GetShaderPassEnabled
bool UnityEngine::Material::GetShaderPassEnabled(::Il2CppString* passName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetShaderPassEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShaderPassEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, passName);
}
// Autogenerated method: UnityEngine.Material.GetPassName
::Il2CppString* UnityEngine::Material::GetPassName(int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetPassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pass)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pass);
}
// Autogenerated method: UnityEngine.Material.FindPass
int UnityEngine::Material::FindPass(::Il2CppString* passName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::FindPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passName)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, passName);
}
// Autogenerated method: UnityEngine.Material.SetOverrideTag
void UnityEngine::Material::SetOverrideTag(::Il2CppString* tag, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetOverrideTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, val);
}
// Autogenerated method: UnityEngine.Material.GetTagImpl
::Il2CppString* UnityEngine::Material::GetTagImpl(::Il2CppString* tag, bool currentSubShaderOnly, ::Il2CppString* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTagImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(currentSubShaderOnly), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, tag, currentSubShaderOnly, defaultValue);
}
// Autogenerated method: UnityEngine.Material.GetTag
::Il2CppString* UnityEngine::Material::GetTag(::Il2CppString* tag, bool searchFallbacks, ::Il2CppString* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, tag, searchFallbacks, defaultValue);
}
// Autogenerated method: UnityEngine.Material.GetTag
::Il2CppString* UnityEngine::Material::GetTag(::Il2CppString* tag, bool searchFallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(searchFallbacks)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, tag, searchFallbacks);
}
// Autogenerated method: UnityEngine.Material.Lerp
void UnityEngine::Material::Lerp(UnityEngine::Material* start, UnityEngine::Material* end, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, t);
}
// Autogenerated method: UnityEngine.Material.SetPass
bool UnityEngine::Material::SetPass(int pass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pass)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pass);
}
// Autogenerated method: UnityEngine.Material.CopyPropertiesFromMaterial
void UnityEngine::Material::CopyPropertiesFromMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::CopyPropertiesFromMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyPropertiesFromMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: UnityEngine.Material.GetShaderKeywords
::Array<::Il2CppString*>* UnityEngine::Material::GetShaderKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetShaderKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShaderKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.SetShaderKeywords
void UnityEngine::Material::SetShaderKeywords(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetShaderKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: UnityEngine.Material.get_shaderKeywords
::Array<::Il2CppString*>* UnityEngine::Material::get_shaderKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::get_shaderKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shaderKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.set_shaderKeywords
void UnityEngine::Material::set_shaderKeywords(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::set_shaderKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shaderKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Material.ComputeCRC
int UnityEngine::Material::ComputeCRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ComputeCRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNames
::Array<::Il2CppString*>* UnityEngine::Material::GetTexturePropertyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNameIDs
::Array<int>* UnityEngine::Material::GetTexturePropertyNameIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNameIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNamesInternal
void UnityEngine::Material::GetTexturePropertyNamesInternal(::Il2CppObject* outNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNamesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNamesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outNames)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outNames);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNameIDsInternal
void UnityEngine::Material::GetTexturePropertyNameIDsInternal(::Il2CppObject* outNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNameIDsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNameIDsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outNames)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outNames);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNames
void UnityEngine::Material::GetTexturePropertyNames(System::Collections::Generic::List_1<::Il2CppString*>* outNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outNames)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outNames);
}
// Autogenerated method: UnityEngine.Material.GetTexturePropertyNameIDs
void UnityEngine::Material::GetTexturePropertyNameIDs(System::Collections::Generic::List_1<int>* outNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexturePropertyNameIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outNames)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outNames);
}
// Autogenerated method: UnityEngine.Material.SetFloatImpl
void UnityEngine::Material::SetFloatImpl(int name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetColorImpl
void UnityEngine::Material::SetColorImpl(int name, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetMatrixImpl
void UnityEngine::Material::SetMatrixImpl(int name, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetTextureImpl
void UnityEngine::Material::SetTextureImpl(int name, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetRenderTextureImpl
void UnityEngine::Material::SetRenderTextureImpl(int name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetRenderTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRenderTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, element);
}
// Autogenerated method: UnityEngine.Material.SetBufferImpl
void UnityEngine::Material::SetBufferImpl(int name, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetConstantBufferImpl
void UnityEngine::Material::SetConstantBufferImpl(int name, UnityEngine::ComputeBuffer* value, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetConstantBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConstantBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, offset, size);
}
// Autogenerated method: UnityEngine.Material.GetFloatImpl
float UnityEngine::Material::GetFloatImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetColorImpl
UnityEngine::Color UnityEngine::Material::GetColorImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetMatrixImpl
UnityEngine::Matrix4x4 UnityEngine::Material::GetMatrixImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetTextureImpl
UnityEngine::Texture* UnityEngine::Material::GetTextureImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.SetFloatArrayImpl
void UnityEngine::Material::SetFloatArrayImpl(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetVectorArrayImpl
void UnityEngine::Material::SetVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetColorArrayImpl
void UnityEngine::Material::SetColorArrayImpl(int name, ::Array<UnityEngine::Color>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArrayImpl
void UnityEngine::Material::SetMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.GetFloatArrayImpl
::Array<float>* UnityEngine::Material::GetFloatArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetVectorArrayImpl
::Array<UnityEngine::Vector4>* UnityEngine::Material::GetVectorArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetColorArrayImpl
::Array<UnityEngine::Color>* UnityEngine::Material::GetColorArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArrayImpl
::Array<UnityEngine::Matrix4x4>* UnityEngine::Material::GetMatrixArrayImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetFloatArrayCountImpl
int UnityEngine::Material::GetFloatArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetVectorArrayCountImpl
int UnityEngine::Material::GetVectorArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetColorArrayCountImpl
int UnityEngine::Material::GetColorArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArrayCountImpl
int UnityEngine::Material::GetMatrixArrayCountImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArrayCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArrayCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.ExtractFloatArrayImpl
void UnityEngine::Material::ExtractFloatArrayImpl(int name, ::Array<float>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractFloatArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractFloatArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Material.ExtractVectorArrayImpl
void UnityEngine::Material::ExtractVectorArrayImpl(int name, ::Array<UnityEngine::Vector4>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractVectorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractVectorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Material.ExtractColorArrayImpl
void UnityEngine::Material::ExtractColorArrayImpl(int name, ::Array<UnityEngine::Color>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractColorArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractColorArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Material.ExtractMatrixArrayImpl
void UnityEngine::Material::ExtractMatrixArrayImpl(int name, ::Array<UnityEngine::Matrix4x4>*& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractMatrixArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractMatrixArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, val);
}
// Autogenerated method: UnityEngine.Material.GetTextureScaleAndOffsetImpl
UnityEngine::Vector4 UnityEngine::Material::GetTextureScaleAndOffsetImpl(int name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureScaleAndOffsetImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureScaleAndOffsetImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.SetTextureOffsetImpl
void UnityEngine::Material::SetTextureOffsetImpl(int name, UnityEngine::Vector2 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureOffsetImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureOffsetImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, offset);
}
// Autogenerated method: UnityEngine.Material.SetTextureScaleImpl
void UnityEngine::Material::SetTextureScaleImpl(int name, UnityEngine::Vector2 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureScaleImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureScaleImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, scale);
}
// Autogenerated method: UnityEngine.Material.SetFloatArray
void UnityEngine::Material::SetFloatArray(int name, ::Array<float>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetVectorArray
void UnityEngine::Material::SetVectorArray(int name, ::Array<UnityEngine::Vector4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetColorArray
void UnityEngine::Material::SetColorArray(int name, ::Array<UnityEngine::Color>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArray
void UnityEngine::Material::SetMatrixArray(int name, ::Array<UnityEngine::Matrix4x4>* values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values, count);
}
// Autogenerated method: UnityEngine.Material.ExtractFloatArray
void UnityEngine::Material::ExtractFloatArray(int name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.ExtractVectorArray
void UnityEngine::Material::ExtractVectorArray(int name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.ExtractColorArray
void UnityEngine::Material::ExtractColorArray(int name, System::Collections::Generic::List_1<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.ExtractMatrixArray
void UnityEngine::Material::ExtractMatrixArray(int name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::ExtractMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExtractMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetFloat
void UnityEngine::Material::SetFloat(::Il2CppString* name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetFloat
void UnityEngine::Material::SetFloat(int nameID, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetInt
void UnityEngine::Material::SetInt(::Il2CppString* name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetInt
void UnityEngine::Material::SetInt(int nameID, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetColor
void UnityEngine::Material::SetColor(::Il2CppString* name, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetColor
void UnityEngine::Material::SetColor(int nameID, UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetVector
void UnityEngine::Material::SetVector(::Il2CppString* name, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetVector
void UnityEngine::Material::SetVector(int nameID, UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetMatrix
void UnityEngine::Material::SetMatrix(::Il2CppString* name, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetMatrix
void UnityEngine::Material::SetMatrix(int nameID, UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetTexture
void UnityEngine::Material::SetTexture(::Il2CppString* name, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetTexture
void UnityEngine::Material::SetTexture(int nameID, UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetTexture
void UnityEngine::Material::SetTexture(::Il2CppString* name, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, element);
}
// Autogenerated method: UnityEngine.Material.SetTexture
void UnityEngine::Material::SetTexture(int nameID, UnityEngine::RenderTexture* value, UnityEngine::Rendering::RenderTextureSubElement element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value, element);
}
// Autogenerated method: UnityEngine.Material.SetBuffer
void UnityEngine::Material::SetBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetBuffer
void UnityEngine::Material::SetBuffer(int nameID, UnityEngine::ComputeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetConstantBuffer
void UnityEngine::Material::SetConstantBuffer(::Il2CppString* name, UnityEngine::ComputeBuffer* value, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetConstantBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConstantBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, offset, size);
}
// Autogenerated method: UnityEngine.Material.SetConstantBuffer
void UnityEngine::Material::SetConstantBuffer(int nameID, UnityEngine::ComputeBuffer* value, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetConstantBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConstantBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value, offset, size);
}
// Autogenerated method: UnityEngine.Material.SetFloatArray
void UnityEngine::Material::SetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetFloatArray
void UnityEngine::Material::SetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetFloatArray
void UnityEngine::Material::SetFloatArray(::Il2CppString* name, ::Array<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetFloatArray
void UnityEngine::Material::SetFloatArray(int nameID, ::Array<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetColorArray
void UnityEngine::Material::SetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetColorArray
void UnityEngine::Material::SetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetColorArray
void UnityEngine::Material::SetColorArray(::Il2CppString* name, ::Array<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetColorArray
void UnityEngine::Material::SetColorArray(int nameID, ::Array<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetVectorArray
void UnityEngine::Material::SetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetVectorArray
void UnityEngine::Material::SetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetVectorArray
void UnityEngine::Material::SetVectorArray(::Il2CppString* name, ::Array<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetVectorArray
void UnityEngine::Material::SetVectorArray(int nameID, ::Array<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArray
void UnityEngine::Material::SetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArray
void UnityEngine::Material::SetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArray
void UnityEngine::Material::SetMatrixArray(::Il2CppString* name, ::Array<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.SetMatrixArray
void UnityEngine::Material::SetMatrixArray(int nameID, ::Array<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.GetFloat
float UnityEngine::Material::GetFloat(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetFloat
float UnityEngine::Material::GetFloat(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetInt
int UnityEngine::Material::GetInt(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetInt
int UnityEngine::Material::GetInt(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetColor
UnityEngine::Color UnityEngine::Material::GetColor(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetColor
UnityEngine::Color UnityEngine::Material::GetColor(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetVector
UnityEngine::Vector4 UnityEngine::Material::GetVector(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetVector
UnityEngine::Vector4 UnityEngine::Material::GetVector(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetMatrix
UnityEngine::Matrix4x4 UnityEngine::Material::GetMatrix(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetMatrix
UnityEngine::Matrix4x4 UnityEngine::Material::GetMatrix(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetTexture
UnityEngine::Texture* UnityEngine::Material::GetTexture(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetTexture
UnityEngine::Texture* UnityEngine::Material::GetTexture(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetFloatArray
::Array<float>* UnityEngine::Material::GetFloatArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetFloatArray
::Array<float>* UnityEngine::Material::GetFloatArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetColorArray
::Array<UnityEngine::Color>* UnityEngine::Material::GetColorArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetColorArray
::Array<UnityEngine::Color>* UnityEngine::Material::GetColorArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetVectorArray
::Array<UnityEngine::Vector4>* UnityEngine::Material::GetVectorArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetVectorArray
::Array<UnityEngine::Vector4>* UnityEngine::Material::GetVectorArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArray
::Array<UnityEngine::Matrix4x4>* UnityEngine::Material::GetMatrixArray(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArray
::Array<UnityEngine::Matrix4x4>* UnityEngine::Material::GetMatrixArray(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetFloatArray
void UnityEngine::Material::GetFloatArray(::Il2CppString* name, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.GetFloatArray
void UnityEngine::Material::GetFloatArray(int nameID, System::Collections::Generic::List_1<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.GetColorArray
void UnityEngine::Material::GetColorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.GetColorArray
void UnityEngine::Material::GetColorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Color>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.GetVectorArray
void UnityEngine::Material::GetVectorArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.GetVectorArray
void UnityEngine::Material::GetVectorArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Vector4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetVectorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVectorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArray
void UnityEngine::Material::GetMatrixArray(::Il2CppString* name, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, values);
}
// Autogenerated method: UnityEngine.Material.GetMatrixArray
void UnityEngine::Material::GetMatrixArray(int nameID, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, values);
}
// Autogenerated method: UnityEngine.Material.SetTextureOffset
void UnityEngine::Material::SetTextureOffset(::Il2CppString* name, UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetTextureOffset
void UnityEngine::Material::SetTextureOffset(int nameID, UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.SetTextureScale
void UnityEngine::Material::SetTextureScale(::Il2CppString* name, UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetTextureScale
void UnityEngine::Material::SetTextureScale(int nameID, UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nameID, value);
}
// Autogenerated method: UnityEngine.Material.GetTextureOffset
UnityEngine::Vector2 UnityEngine::Material::GetTextureOffset(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetTextureOffset
UnityEngine::Vector2 UnityEngine::Material::GetTextureOffset(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.GetTextureScale
UnityEngine::Vector2 UnityEngine::Material::GetTextureScale(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Material.GetTextureScale
UnityEngine::Vector2 UnityEngine::Material::GetTextureScale(int nameID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, nameID);
}
// Autogenerated method: UnityEngine.Material.SetColorImpl_Injected
void UnityEngine::Material::SetColorImpl_Injected(int name, UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetColorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.SetMatrixImpl_Injected
void UnityEngine::Material::SetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetMatrixImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrixImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Material.GetColorImpl_Injected
void UnityEngine::Material::GetColorImpl_Injected(int name, UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetColorImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.Material.GetMatrixImpl_Injected
void UnityEngine::Material::GetMatrixImpl_Injected(int name, UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetMatrixImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrixImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.Material.GetTextureScaleAndOffsetImpl_Injected
void UnityEngine::Material::GetTextureScaleAndOffsetImpl_Injected(int name, UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::GetTextureScaleAndOffsetImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureScaleAndOffsetImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.Material.SetTextureOffsetImpl_Injected
void UnityEngine::Material::SetTextureOffsetImpl_Injected(int name, UnityEngine::Vector2& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureOffsetImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureOffsetImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, offset);
}
// Autogenerated method: UnityEngine.Material.SetTextureScaleImpl_Injected
void UnityEngine::Material::SetTextureScaleImpl_Injected(int name, UnityEngine::Vector2& scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Material::SetTextureScaleImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureScaleImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, scale);
}
// Writing MetadataGetter for method: Material::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)(::Il2CppString*)>(&Material::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::CreateWithShader
// Il2CppName: CreateWithShader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*, UnityEngine::Shader*)>(&Material::CreateWithShader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithShader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
  }
};
// Writing MetadataGetter for method: Material::CreateWithMaterial
// Il2CppName: CreateWithMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*, UnityEngine::Material*)>(&Material::CreateWithMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Material::CreateWithString
// Il2CppName: CreateWithString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*)>(&Material::CreateWithString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "CreateWithString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Material::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
  }
};
// Writing MetadataGetter for method: Material::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Material::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetDefaultMaterial
// Il2CppName: GetDefaultMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::GetDefaultParticleMaterial
// Il2CppName: GetDefaultParticleMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultParticleMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultParticleMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::GetDefaultLineMaterial
// Il2CppName: GetDefaultLineMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Material::GetDefaultLineMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetDefaultLineMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::get_shader
// Il2CppName: get_shader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Shader* (Material::*)()>(&Material::get_shader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_shader
// Il2CppName: set_shader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Shader*)>(&Material::set_shader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_shader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Shader*>()});
  }
};
// Writing MetadataGetter for method: Material::get_color
// Il2CppName: get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)()>(&Material::get_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Color)>(&Material::set_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Material::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)()>(&Material::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_mainTexture
// Il2CppName: set_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Texture*)>(&Material::set_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Material::get_mainTextureOffset
// Il2CppName: get_mainTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)()>(&Material::get_mainTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_mainTextureOffset
// Il2CppName: set_mainTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Vector2)>(&Material::set_mainTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::get_mainTextureScale
// Il2CppName: get_mainTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)()>(&Material::get_mainTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_mainTextureScale
// Il2CppName: set_mainTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Vector2)>(&Material::set_mainTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_mainTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::GetFirstPropertyNameIdByAttribute
// Il2CppName: GetFirstPropertyNameIdByAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(UnityEngine::Rendering::ShaderPropertyFlags)>(&Material::GetFirstPropertyNameIdByAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFirstPropertyNameIdByAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShaderPropertyFlags>()});
  }
};
// Writing MetadataGetter for method: Material::HasProperty
// Il2CppName: HasProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(int)>(&Material::HasProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::HasProperty
// Il2CppName: HasProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::HasProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "HasProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::get_renderQueue
// Il2CppName: get_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_renderQueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_renderQueue
// Il2CppName: set_renderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int)>(&Material::set_renderQueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_renderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::get_rawRenderQueue
// Il2CppName: get_rawRenderQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_rawRenderQueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_rawRenderQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::EnableKeyword
// Il2CppName: EnableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::EnableKeyword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "EnableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::DisableKeyword
// Il2CppName: DisableKeyword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*)>(&Material::DisableKeyword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "DisableKeyword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::IsKeywordEnabled
// Il2CppName: IsKeywordEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::IsKeywordEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "IsKeywordEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::get_globalIlluminationFlags
// Il2CppName: get_globalIlluminationFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MaterialGlobalIlluminationFlags (Material::*)()>(&Material::get_globalIlluminationFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_globalIlluminationFlags
// Il2CppName: set_globalIlluminationFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::MaterialGlobalIlluminationFlags)>(&Material::set_globalIlluminationFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_globalIlluminationFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MaterialGlobalIlluminationFlags>()});
  }
};
// Writing MetadataGetter for method: Material::get_doubleSidedGI
// Il2CppName: get_doubleSidedGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)()>(&Material::get_doubleSidedGI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_doubleSidedGI
// Il2CppName: set_doubleSidedGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(bool)>(&Material::set_doubleSidedGI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_doubleSidedGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Material::get_enableInstancing
// Il2CppName: get_enableInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)()>(&Material::get_enableInstancing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_enableInstancing
// Il2CppName: set_enableInstancing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(bool)>(&Material::set_enableInstancing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_enableInstancing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Material::get_passCount
// Il2CppName: get_passCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::get_passCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_passCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::SetShaderPassEnabled
// Il2CppName: SetShaderPassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, bool)>(&Material::SetShaderPassEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Material::GetShaderPassEnabled
// Il2CppName: GetShaderPassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(::Il2CppString*)>(&Material::GetShaderPassEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetShaderPassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetPassName
// Il2CppName: GetPassName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(int)>(&Material::GetPassName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetPassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::FindPass
// Il2CppName: FindPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(::Il2CppString*)>(&Material::FindPass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "FindPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::SetOverrideTag
// Il2CppName: SetOverrideTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Il2CppString*)>(&Material::SetOverrideTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetOverrideTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTagImpl
// Il2CppName: GetTagImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool, ::Il2CppString*)>(&Material::GetTagImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTagImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTag
// Il2CppName: GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool, ::Il2CppString*)>(&Material::GetTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTag
// Il2CppName: GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Material::*)(::Il2CppString*, bool)>(&Material::GetTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Material::Lerp
// Il2CppName: Lerp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*, UnityEngine::Material*, float)>(&Material::Lerp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "Lerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Material::SetPass
// Il2CppName: SetPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Material::*)(int)>(&Material::SetPass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::CopyPropertiesFromMaterial
// Il2CppName: CopyPropertiesFromMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(UnityEngine::Material*)>(&Material::CopyPropertiesFromMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "CopyPropertiesFromMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Material::GetShaderKeywords
// Il2CppName: GetShaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::GetShaderKeywords)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::SetShaderKeywords
// Il2CppName: SetShaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Array<::Il2CppString*>*)>(&Material::SetShaderKeywords)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetShaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Material::get_shaderKeywords
// Il2CppName: get_shaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::get_shaderKeywords)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "get_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::set_shaderKeywords
// Il2CppName: set_shaderKeywords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Array<::Il2CppString*>*)>(&Material::set_shaderKeywords)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "set_shaderKeywords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Material::ComputeCRC
// Il2CppName: ComputeCRC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)()>(&Material::ComputeCRC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ComputeCRC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (Material::*)()>(&Material::GetTexturePropertyNames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Material::*)()>(&Material::GetTexturePropertyNameIDs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNamesInternal
// Il2CppName: GetTexturePropertyNamesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppObject*)>(&Material::GetTexturePropertyNamesInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNamesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNameIDsInternal
// Il2CppName: GetTexturePropertyNameIDsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppObject*)>(&Material::GetTexturePropertyNameIDsInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNames
// Il2CppName: GetTexturePropertyNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&Material::GetTexturePropertyNames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTexturePropertyNameIDs
// Il2CppName: GetTexturePropertyNameIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(System::Collections::Generic::List_1<int>*)>(&Material::GetTexturePropertyNameIDs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexturePropertyNameIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatImpl
// Il2CppName: SetFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, float)>(&Material::SetFloatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorImpl
// Il2CppName: SetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color)>(&Material::SetColorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixImpl
// Il2CppName: SetMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4)>(&Material::SetMatrixImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureImpl
// Il2CppName: SetTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Texture*)>(&Material::SetTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Material::SetRenderTextureImpl
// Il2CppName: SetRenderTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetRenderTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetRenderTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Material::SetBufferImpl
// Il2CppName: SetBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*)>(&Material::SetBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Material::SetConstantBufferImpl
// Il2CppName: SetConstantBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatImpl
// Il2CppName: GetFloatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(int)>(&Material::GetFloatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorImpl
// Il2CppName: GetColorImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(int)>(&Material::GetColorImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixImpl
// Il2CppName: GetMatrixImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(int)>(&Material::GetMatrixImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureImpl
// Il2CppName: GetTextureImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(int)>(&Material::GetTextureImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArrayImpl
// Il2CppName: SetFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*, int)>(&Material::SetFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArrayImpl
// Il2CppName: SetVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Material::SetVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArrayImpl
// Il2CppName: SetColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*, int)>(&Material::SetColorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArrayImpl
// Il2CppName: SetMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Material::SetMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArrayImpl
// Il2CppName: GetFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(int)>(&Material::GetFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArrayImpl
// Il2CppName: GetVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(int)>(&Material::GetVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArrayImpl
// Il2CppName: GetColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(int)>(&Material::GetColorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArrayImpl
// Il2CppName: GetMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(int)>(&Material::GetMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArrayCountImpl
// Il2CppName: GetFloatArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetFloatArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArrayCountImpl
// Il2CppName: GetVectorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetVectorArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArrayCountImpl
// Il2CppName: GetColorArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetColorArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArrayCountImpl
// Il2CppName: GetMatrixArrayCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetMatrixArrayCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArrayCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractFloatArrayImpl
// Il2CppName: ExtractFloatArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*&)>(&Material::ExtractFloatArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractFloatArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractVectorArrayImpl
// Il2CppName: ExtractVectorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*&)>(&Material::ExtractVectorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractVectorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*&>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractColorArrayImpl
// Il2CppName: ExtractColorArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*&)>(&Material::ExtractColorArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractColorArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*&>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractMatrixArrayImpl
// Il2CppName: ExtractMatrixArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*&)>(&Material::ExtractMatrixArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractMatrixArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureScaleAndOffsetImpl
// Il2CppName: GetTextureScaleAndOffsetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(int)>(&Material::GetTextureScaleAndOffsetImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScaleAndOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureOffsetImpl
// Il2CppName: SetTextureOffsetImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureOffsetImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffsetImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureScaleImpl
// Il2CppName: SetTextureScaleImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureScaleImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScaleImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*, int)>(&Material::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*, int)>(&Material::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*, int)>(&Material::SetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*, int)>(&Material::SetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractFloatArray
// Il2CppName: ExtractFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::ExtractFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractVectorArray
// Il2CppName: ExtractVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::ExtractVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractColorArray
// Il2CppName: ExtractColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::ExtractColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::ExtractMatrixArray
// Il2CppName: ExtractMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::ExtractMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "ExtractMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, float)>(&Material::SetFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, float)>(&Material::SetFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Material::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, int)>(&Material::SetInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, int)>(&Material::SetInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Color)>(&Material::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Material::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color)>(&Material::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Material::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector4)>(&Material::SetVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Material::SetVector
// Il2CppName: SetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector4)>(&Material::SetVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrix
// Il2CppName: SetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Matrix4x4)>(&Material::SetMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrix
// Il2CppName: SetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4)>(&Material::SetMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4>()});
  }
};
// Writing MetadataGetter for method: Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Texture*)>(&Material::SetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Texture*)>(&Material::SetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Material::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::RenderTexture*, UnityEngine::Rendering::RenderTextureSubElement)>(&Material::SetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::RenderTextureSubElement>()});
  }
};
// Writing MetadataGetter for method: Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::ComputeBuffer*)>(&Material::SetBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Material::SetBuffer
// Il2CppName: SetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*)>(&Material::SetBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>()});
  }
};
// Writing MetadataGetter for method: Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetConstantBuffer
// Il2CppName: SetConstantBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::ComputeBuffer*, int, int)>(&Material::SetConstantBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetConstantBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::ComputeBuffer*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Material::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<float>*)>(&Material::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetFloatArray
// Il2CppName: SetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<float>*)>(&Material::SetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::SetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::SetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Color>*)>(&Material::SetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorArray
// Il2CppName: SetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Color>*)>(&Material::SetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetVectorArray
// Il2CppName: SetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Vector4>*)>(&Material::SetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, ::Array<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixArray
// Il2CppName: SetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, ::Array<UnityEngine::Matrix4x4>*)>(&Material::SetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(::Il2CppString*)>(&Material::GetFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Material::*)(int)>(&Material::GetFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(::Il2CppString*)>(&Material::GetInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Material::*)(int)>(&Material::GetInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(::Il2CppString*)>(&Material::GetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Material::*)(int)>(&Material::GetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(::Il2CppString*)>(&Material::GetVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetVector
// Il2CppName: GetVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Material::*)(int)>(&Material::GetVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrix
// Il2CppName: GetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(::Il2CppString*)>(&Material::GetMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrix
// Il2CppName: GetMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Material::*)(int)>(&Material::GetMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetTexture
// Il2CppName: GetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(::Il2CppString*)>(&Material::GetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTexture
// Il2CppName: GetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Material::*)(int)>(&Material::GetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(::Il2CppString*)>(&Material::GetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (Material::*)(int)>(&Material::GetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(::Il2CppString*)>(&Material::GetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Material::*)(int)>(&Material::GetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(::Il2CppString*)>(&Material::GetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Material::*)(int)>(&Material::GetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(::Il2CppString*)>(&Material::GetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Material::*)(int)>(&Material::GetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<float>*)>(&Material::GetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetFloatArray
// Il2CppName: GetFloatArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<float>*)>(&Material::GetFloatArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetFloatArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<float>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::GetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorArray
// Il2CppName: GetColorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Material::GetColorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::GetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetVectorArray
// Il2CppName: GetVectorArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Material::GetVectorArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetVectorArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::GetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixArray
// Il2CppName: GetMatrixArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Material::GetMatrixArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureOffset
// Il2CppName: SetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector2)>(&Material::SetTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureOffset
// Il2CppName: SetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureScale
// Il2CppName: SetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(::Il2CppString*, UnityEngine::Vector2)>(&Material::SetTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureScale
// Il2CppName: SetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2)>(&Material::SetTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureOffset
// Il2CppName: GetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(::Il2CppString*)>(&Material::GetTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureOffset
// Il2CppName: GetTextureOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(int)>(&Material::GetTextureOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureScale
// Il2CppName: GetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(::Il2CppString*)>(&Material::GetTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureScale
// Il2CppName: GetTextureScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Material::*)(int)>(&Material::GetTextureScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Material::SetColorImpl_Injected
// Il2CppName: SetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color&)>(&Material::SetColorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Material::SetMatrixImpl_Injected
// Il2CppName: SetMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4&)>(&Material::SetMatrixImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Material::GetColorImpl_Injected
// Il2CppName: GetColorImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Color&)>(&Material::GetColorImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetColorImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Material::GetMatrixImpl_Injected
// Il2CppName: GetMatrixImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Matrix4x4&)>(&Material::GetMatrixImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetMatrixImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Material::GetTextureScaleAndOffsetImpl_Injected
// Il2CppName: GetTextureScaleAndOffsetImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector4&)>(&Material::GetTextureScaleAndOffsetImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "GetTextureScaleAndOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureOffsetImpl_Injected
// Il2CppName: SetTextureOffsetImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2&)>(&Material::SetTextureOffsetImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureOffsetImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: Material::SetTextureScaleImpl_Injected
// Il2CppName: SetTextureScaleImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Material::*)(int, UnityEngine::Vector2&)>(&Material::SetTextureScaleImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Material*), "SetTextureScaleImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
// Including type: UnityEngine.LightType
#include "UnityEngine/LightType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.LightShadows
#include "UnityEngine/LightShadows.hpp"
// Including type: UnityEngine.Rendering.LightEvent
#include "UnityEngine/Rendering/LightEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Rendering.ShadowMapPass
#include "UnityEngine/Rendering/ShadowMapPass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Light.get_type
UnityEngine::LightType UnityEngine::Light::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_spotAngle
float UnityEngine::Light::get_spotAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_spotAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spotAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_color
UnityEngine::Color UnityEngine::Light::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.set_color
void UnityEngine::Light::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Light.get_intensity
float UnityEngine::Light::get_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_intensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.set_intensity
void UnityEngine::Light::set_intensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::set_intensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Light.get_bounceIntensity
float UnityEngine::Light::get_bounceIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_bounceIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounceIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_range
float UnityEngine::Light::get_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_shadows
UnityEngine::LightShadows UnityEngine::Light::get_shadows() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_shadows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shadows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightShadows, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer, UnityEngine::Rendering::ShadowMapPass shadowPassMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(shadowPassMask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer, shadowPassMask);
}
// Autogenerated method: UnityEngine.Light.RemoveCommandBuffer
void UnityEngine::Light::RemoveCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::RemoveCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Light.get_color_Injected
void UnityEngine::Light::get_color_Injected(UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::get_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Light.set_color_Injected
void UnityEngine::Light::set_color_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Light::set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Light::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LightType (Light::*)()>(&Light::get_type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::get_spotAngle
// Il2CppName: get_spotAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Light::*)()>(&Light::get_spotAngle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_spotAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::get_color
// Il2CppName: get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Light::*)()>(&Light::get_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Color)>(&Light::set_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Light::get_intensity
// Il2CppName: get_intensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Light::*)()>(&Light::get_intensity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_intensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::set_intensity
// Il2CppName: set_intensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(float)>(&Light::set_intensity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "set_intensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Light::get_bounceIntensity
// Il2CppName: get_bounceIntensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Light::*)()>(&Light::get_bounceIntensity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_bounceIntensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::get_range
// Il2CppName: get_range
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Light::*)()>(&Light::get_range)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_range", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::get_shadows
// Il2CppName: get_shadows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LightShadows (Light::*)()>(&Light::get_shadows)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_shadows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Light::AddCommandBuffer
// Il2CppName: AddCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Rendering::LightEvent, UnityEngine::Rendering::CommandBuffer*)>(&Light::AddCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "AddCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Light::AddCommandBuffer
// Il2CppName: AddCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Rendering::LightEvent, UnityEngine::Rendering::CommandBuffer*, UnityEngine::Rendering::ShadowMapPass)>(&Light::AddCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "AddCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowMapPass>()});
  }
};
// Writing MetadataGetter for method: Light::RemoveCommandBuffer
// Il2CppName: RemoveCommandBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Rendering::LightEvent, UnityEngine::Rendering::CommandBuffer*)>(&Light::RemoveCommandBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "RemoveCommandBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::LightEvent>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CommandBuffer*>()});
  }
};
// Writing MetadataGetter for method: Light::get_color_Injected
// Il2CppName: get_color_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Color&)>(&Light::get_color_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "get_color_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Light::set_color_Injected
// Il2CppName: set_color_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Light::*)(UnityEngine::Color&)>(&Light::set_color_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Light*), "set_color_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshFilter.DontStripMeshFilter
void UnityEngine::MeshFilter::DontStripMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshFilter::DontStripMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DontStripMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshFilter.get_sharedMesh
UnityEngine::Mesh* UnityEngine::MeshFilter::get_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshFilter::get_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshFilter.set_sharedMesh
void UnityEngine::MeshFilter::set_sharedMesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshFilter::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshFilter.get_mesh
UnityEngine::Mesh* UnityEngine::MeshFilter::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshFilter::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshFilter.set_mesh
void UnityEngine::MeshFilter::set_mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshFilter::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: MeshFilter::DontStripMeshFilter
// Il2CppName: DontStripMeshFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MeshFilter::*)()>(&MeshFilter::DontStripMeshFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshFilter*), "DontStripMeshFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MeshFilter::get_sharedMesh
// Il2CppName: get_sharedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (MeshFilter::*)()>(&MeshFilter::get_sharedMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshFilter*), "get_sharedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MeshFilter::set_sharedMesh
// Il2CppName: set_sharedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MeshFilter::*)(UnityEngine::Mesh*)>(&MeshFilter::set_sharedMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshFilter*), "set_sharedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: MeshFilter::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (MeshFilter::*)()>(&MeshFilter::get_mesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshFilter*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MeshFilter::set_mesh
// Il2CppName: set_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MeshFilter::*)(UnityEngine::Mesh*)>(&MeshFilter::set_mesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshFilter*), "set_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderingPath UsePlayerSettings
UnityEngine::RenderingPath UnityEngine::RenderingPath::_get_UsePlayerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_get_UsePlayerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderingPath>("UnityEngine", "RenderingPath", "UsePlayerSettings"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderingPath UsePlayerSettings
void UnityEngine::RenderingPath::_set_UsePlayerSettings(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_set_UsePlayerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderingPath", "UsePlayerSettings", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderingPath VertexLit
UnityEngine::RenderingPath UnityEngine::RenderingPath::_get_VertexLit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_get_VertexLit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderingPath>("UnityEngine", "RenderingPath", "VertexLit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderingPath VertexLit
void UnityEngine::RenderingPath::_set_VertexLit(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_set_VertexLit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderingPath", "VertexLit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderingPath Forward
UnityEngine::RenderingPath UnityEngine::RenderingPath::_get_Forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_get_Forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderingPath>("UnityEngine", "RenderingPath", "Forward"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderingPath Forward
void UnityEngine::RenderingPath::_set_Forward(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_set_Forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderingPath", "Forward", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderingPath DeferredLighting
UnityEngine::RenderingPath UnityEngine::RenderingPath::_get_DeferredLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_get_DeferredLighting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderingPath>("UnityEngine", "RenderingPath", "DeferredLighting"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderingPath DeferredLighting
void UnityEngine::RenderingPath::_set_DeferredLighting(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_set_DeferredLighting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderingPath", "DeferredLighting", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderingPath DeferredShading
UnityEngine::RenderingPath UnityEngine::RenderingPath::_get_DeferredShading() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_get_DeferredShading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderingPath>("UnityEngine", "RenderingPath", "DeferredShading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderingPath DeferredShading
void UnityEngine::RenderingPath::_set_DeferredShading(UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderingPath::_set_DeferredShading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderingPath", "DeferredShading", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StereoTargetEyeMask
#include "UnityEngine/StereoTargetEyeMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.StereoTargetEyeMask None
UnityEngine::StereoTargetEyeMask UnityEngine::StereoTargetEyeMask::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StereoTargetEyeMask>("UnityEngine", "StereoTargetEyeMask", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StereoTargetEyeMask None
void UnityEngine::StereoTargetEyeMask::_set_None(UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StereoTargetEyeMask", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StereoTargetEyeMask Left
UnityEngine::StereoTargetEyeMask UnityEngine::StereoTargetEyeMask::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StereoTargetEyeMask>("UnityEngine", "StereoTargetEyeMask", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StereoTargetEyeMask Left
void UnityEngine::StereoTargetEyeMask::_set_Left(UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StereoTargetEyeMask", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StereoTargetEyeMask Right
UnityEngine::StereoTargetEyeMask UnityEngine::StereoTargetEyeMask::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StereoTargetEyeMask>("UnityEngine", "StereoTargetEyeMask", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StereoTargetEyeMask Right
void UnityEngine::StereoTargetEyeMask::_set_Right(UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StereoTargetEyeMask", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StereoTargetEyeMask Both
UnityEngine::StereoTargetEyeMask UnityEngine::StereoTargetEyeMask::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StereoTargetEyeMask>("UnityEngine", "StereoTargetEyeMask", "Both"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StereoTargetEyeMask Both
void UnityEngine::StereoTargetEyeMask::_set_Both(UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StereoTargetEyeMask::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StereoTargetEyeMask", "Both", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LightType
#include "UnityEngine/LightType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Spot
UnityEngine::LightType UnityEngine::LightType::_get_Spot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Spot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Spot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Spot
void UnityEngine::LightType::_set_Spot(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Spot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Spot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Directional
UnityEngine::LightType UnityEngine::LightType::_get_Directional() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Directional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Directional"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Directional
void UnityEngine::LightType::_set_Directional(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Directional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Directional", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Point
UnityEngine::LightType UnityEngine::LightType::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Point"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Point
void UnityEngine::LightType::_set_Point(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Area
UnityEngine::LightType UnityEngine::LightType::_get_Area() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Area");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Area"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Area
void UnityEngine::LightType::_set_Area(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Area");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Area", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Rectangle
UnityEngine::LightType UnityEngine::LightType::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Rectangle
void UnityEngine::LightType::_set_Rectangle(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightType Disc
UnityEngine::LightType UnityEngine::LightType::_get_Disc() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_get_Disc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightType>("UnityEngine", "LightType", "Disc"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightType Disc
void UnityEngine::LightType::_set_Disc(UnityEngine::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightType::_set_Disc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightType", "Disc", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LightShadows
#include "UnityEngine/LightShadows.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightShadows None
UnityEngine::LightShadows UnityEngine::LightShadows::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightShadows>("UnityEngine", "LightShadows", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightShadows None
void UnityEngine::LightShadows::_set_None(UnityEngine::LightShadows value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightShadows", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightShadows Hard
UnityEngine::LightShadows UnityEngine::LightShadows::_get_Hard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_get_Hard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightShadows>("UnityEngine", "LightShadows", "Hard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightShadows Hard
void UnityEngine::LightShadows::_set_Hard(UnityEngine::LightShadows value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_set_Hard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightShadows", "Hard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightShadows Soft
UnityEngine::LightShadows UnityEngine::LightShadows::_get_Soft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_get_Soft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightShadows>("UnityEngine", "LightShadows", "Soft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightShadows Soft
void UnityEngine::LightShadows::_set_Soft(UnityEngine::LightShadows value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightShadows::_set_Soft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightShadows", "Soft", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LightmapBakeType
#include "UnityEngine/LightmapBakeType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightmapBakeType Realtime
UnityEngine::LightmapBakeType UnityEngine::LightmapBakeType::_get_Realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_get_Realtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightmapBakeType>("UnityEngine", "LightmapBakeType", "Realtime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightmapBakeType Realtime
void UnityEngine::LightmapBakeType::_set_Realtime(UnityEngine::LightmapBakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_set_Realtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightmapBakeType", "Realtime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightmapBakeType Baked
UnityEngine::LightmapBakeType UnityEngine::LightmapBakeType::_get_Baked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_get_Baked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightmapBakeType>("UnityEngine", "LightmapBakeType", "Baked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightmapBakeType Baked
void UnityEngine::LightmapBakeType::_set_Baked(UnityEngine::LightmapBakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_set_Baked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightmapBakeType", "Baked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightmapBakeType Mixed
UnityEngine::LightmapBakeType UnityEngine::LightmapBakeType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightmapBakeType>("UnityEngine", "LightmapBakeType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightmapBakeType Mixed
void UnityEngine::LightmapBakeType::_set_Mixed(UnityEngine::LightmapBakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapBakeType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightmapBakeType", "Mixed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MixedLightingMode
#include "UnityEngine/MixedLightingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MixedLightingMode IndirectOnly
UnityEngine::MixedLightingMode UnityEngine::MixedLightingMode::_get_IndirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_get_IndirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MixedLightingMode>("UnityEngine", "MixedLightingMode", "IndirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MixedLightingMode IndirectOnly
void UnityEngine::MixedLightingMode::_set_IndirectOnly(UnityEngine::MixedLightingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_set_IndirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MixedLightingMode", "IndirectOnly", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MixedLightingMode Shadowmask
UnityEngine::MixedLightingMode UnityEngine::MixedLightingMode::_get_Shadowmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_get_Shadowmask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MixedLightingMode>("UnityEngine", "MixedLightingMode", "Shadowmask"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MixedLightingMode Shadowmask
void UnityEngine::MixedLightingMode::_set_Shadowmask(UnityEngine::MixedLightingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_set_Shadowmask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MixedLightingMode", "Shadowmask", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MixedLightingMode Subtractive
UnityEngine::MixedLightingMode UnityEngine::MixedLightingMode::_get_Subtractive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_get_Subtractive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MixedLightingMode>("UnityEngine", "MixedLightingMode", "Subtractive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MixedLightingMode Subtractive
void UnityEngine::MixedLightingMode::_set_Subtractive(UnityEngine::MixedLightingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MixedLightingMode::_set_Subtractive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MixedLightingMode", "Subtractive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CameraClearFlags
#include "UnityEngine/CameraClearFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CameraClearFlags Skybox
UnityEngine::CameraClearFlags UnityEngine::CameraClearFlags::_get_Skybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_get_Skybox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CameraClearFlags>("UnityEngine", "CameraClearFlags", "Skybox"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CameraClearFlags Skybox
void UnityEngine::CameraClearFlags::_set_Skybox(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_set_Skybox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CameraClearFlags", "Skybox", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CameraClearFlags Color
UnityEngine::CameraClearFlags UnityEngine::CameraClearFlags::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CameraClearFlags>("UnityEngine", "CameraClearFlags", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CameraClearFlags Color
void UnityEngine::CameraClearFlags::_set_Color(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CameraClearFlags", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CameraClearFlags SolidColor
UnityEngine::CameraClearFlags UnityEngine::CameraClearFlags::_get_SolidColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_get_SolidColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CameraClearFlags>("UnityEngine", "CameraClearFlags", "SolidColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CameraClearFlags SolidColor
void UnityEngine::CameraClearFlags::_set_SolidColor(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_set_SolidColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CameraClearFlags", "SolidColor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CameraClearFlags Depth
UnityEngine::CameraClearFlags UnityEngine::CameraClearFlags::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CameraClearFlags>("UnityEngine", "CameraClearFlags", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CameraClearFlags Depth
void UnityEngine::CameraClearFlags::_set_Depth(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CameraClearFlags", "Depth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CameraClearFlags Nothing
UnityEngine::CameraClearFlags UnityEngine::CameraClearFlags::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CameraClearFlags>("UnityEngine", "CameraClearFlags", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CameraClearFlags Nothing
void UnityEngine::CameraClearFlags::_set_Nothing(UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CameraClearFlags::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CameraClearFlags", "Nothing", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DepthTextureMode
#include "UnityEngine/DepthTextureMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DepthTextureMode None
UnityEngine::DepthTextureMode UnityEngine::DepthTextureMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DepthTextureMode>("UnityEngine", "DepthTextureMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DepthTextureMode None
void UnityEngine::DepthTextureMode::_set_None(UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DepthTextureMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DepthTextureMode Depth
UnityEngine::DepthTextureMode UnityEngine::DepthTextureMode::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DepthTextureMode>("UnityEngine", "DepthTextureMode", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DepthTextureMode Depth
void UnityEngine::DepthTextureMode::_set_Depth(UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DepthTextureMode", "Depth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DepthTextureMode DepthNormals
UnityEngine::DepthTextureMode UnityEngine::DepthTextureMode::_get_DepthNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_get_DepthNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DepthTextureMode>("UnityEngine", "DepthTextureMode", "DepthNormals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DepthTextureMode DepthNormals
void UnityEngine::DepthTextureMode::_set_DepthNormals(UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_set_DepthNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DepthTextureMode", "DepthNormals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DepthTextureMode MotionVectors
UnityEngine::DepthTextureMode UnityEngine::DepthTextureMode::_get_MotionVectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_get_MotionVectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DepthTextureMode>("UnityEngine", "DepthTextureMode", "MotionVectors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DepthTextureMode MotionVectors
void UnityEngine::DepthTextureMode::_set_MotionVectors(UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DepthTextureMode::_set_MotionVectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DepthTextureMode", "MotionVectors", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshTopology
#include "UnityEngine/MeshTopology.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshTopology Triangles
UnityEngine::MeshTopology UnityEngine::MeshTopology::_get_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_get_Triangles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshTopology>("UnityEngine", "MeshTopology", "Triangles"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshTopology Triangles
void UnityEngine::MeshTopology::_set_Triangles(UnityEngine::MeshTopology value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_set_Triangles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshTopology", "Triangles", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshTopology Quads
UnityEngine::MeshTopology UnityEngine::MeshTopology::_get_Quads() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_get_Quads");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshTopology>("UnityEngine", "MeshTopology", "Quads"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshTopology Quads
void UnityEngine::MeshTopology::_set_Quads(UnityEngine::MeshTopology value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_set_Quads");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshTopology", "Quads", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshTopology Lines
UnityEngine::MeshTopology UnityEngine::MeshTopology::_get_Lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_get_Lines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshTopology>("UnityEngine", "MeshTopology", "Lines"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshTopology Lines
void UnityEngine::MeshTopology::_set_Lines(UnityEngine::MeshTopology value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_set_Lines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshTopology", "Lines", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshTopology LineStrip
UnityEngine::MeshTopology UnityEngine::MeshTopology::_get_LineStrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_get_LineStrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshTopology>("UnityEngine", "MeshTopology", "LineStrip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshTopology LineStrip
void UnityEngine::MeshTopology::_set_LineStrip(UnityEngine::MeshTopology value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_set_LineStrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshTopology", "LineStrip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MeshTopology Points
UnityEngine::MeshTopology UnityEngine::MeshTopology::_get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_get_Points");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MeshTopology>("UnityEngine", "MeshTopology", "Points"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MeshTopology Points
void UnityEngine::MeshTopology::_set_Points(UnityEngine::MeshTopology value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshTopology::_set_Points");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MeshTopology", "Points", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SkinQuality
#include "UnityEngine/SkinQuality.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SkinQuality Auto
UnityEngine::SkinQuality UnityEngine::SkinQuality::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SkinQuality>("UnityEngine", "SkinQuality", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SkinQuality Auto
void UnityEngine::SkinQuality::_set_Auto(UnityEngine::SkinQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SkinQuality", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SkinQuality Bone1
UnityEngine::SkinQuality UnityEngine::SkinQuality::_get_Bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_get_Bone1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SkinQuality>("UnityEngine", "SkinQuality", "Bone1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SkinQuality Bone1
void UnityEngine::SkinQuality::_set_Bone1(UnityEngine::SkinQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_set_Bone1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SkinQuality", "Bone1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SkinQuality Bone2
UnityEngine::SkinQuality UnityEngine::SkinQuality::_get_Bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_get_Bone2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SkinQuality>("UnityEngine", "SkinQuality", "Bone2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SkinQuality Bone2
void UnityEngine::SkinQuality::_set_Bone2(UnityEngine::SkinQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_set_Bone2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SkinQuality", "Bone2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SkinQuality Bone4
UnityEngine::SkinQuality UnityEngine::SkinQuality::_get_Bone4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_get_Bone4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SkinQuality>("UnityEngine", "SkinQuality", "Bone4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SkinQuality Bone4
void UnityEngine::SkinQuality::_set_Bone4(UnityEngine::SkinQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinQuality::_set_Bone4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SkinQuality", "Bone4", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ColorSpace
#include "UnityEngine/ColorSpace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ColorSpace Uninitialized
UnityEngine::ColorSpace UnityEngine::ColorSpace::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ColorSpace>("UnityEngine", "ColorSpace", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ColorSpace Uninitialized
void UnityEngine::ColorSpace::_set_Uninitialized(UnityEngine::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ColorSpace", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ColorSpace Gamma
UnityEngine::ColorSpace UnityEngine::ColorSpace::_get_Gamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_get_Gamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ColorSpace>("UnityEngine", "ColorSpace", "Gamma"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ColorSpace Gamma
void UnityEngine::ColorSpace::_set_Gamma(UnityEngine::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_set_Gamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ColorSpace", "Gamma", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ColorSpace Linear
UnityEngine::ColorSpace UnityEngine::ColorSpace::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ColorSpace>("UnityEngine", "ColorSpace", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ColorSpace Linear
void UnityEngine::ColorSpace::_set_Linear(UnityEngine::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ColorSpace::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ColorSpace", "Linear", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FilterMode Point
UnityEngine::FilterMode UnityEngine::FilterMode::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FilterMode>("UnityEngine", "FilterMode", "Point"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FilterMode Point
void UnityEngine::FilterMode::_set_Point(UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FilterMode", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FilterMode Bilinear
UnityEngine::FilterMode UnityEngine::FilterMode::_get_Bilinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_get_Bilinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FilterMode>("UnityEngine", "FilterMode", "Bilinear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FilterMode Bilinear
void UnityEngine::FilterMode::_set_Bilinear(UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_set_Bilinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FilterMode", "Bilinear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FilterMode Trilinear
UnityEngine::FilterMode UnityEngine::FilterMode::_get_Trilinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_get_Trilinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FilterMode>("UnityEngine", "FilterMode", "Trilinear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FilterMode Trilinear
void UnityEngine::FilterMode::_set_Trilinear(UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FilterMode::_set_Trilinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FilterMode", "Trilinear", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextureWrapMode
#include "UnityEngine/TextureWrapMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureWrapMode Repeat
UnityEngine::TextureWrapMode UnityEngine::TextureWrapMode::_get_Repeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_get_Repeat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureWrapMode>("UnityEngine", "TextureWrapMode", "Repeat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureWrapMode Repeat
void UnityEngine::TextureWrapMode::_set_Repeat(UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_set_Repeat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureWrapMode", "Repeat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureWrapMode Clamp
UnityEngine::TextureWrapMode UnityEngine::TextureWrapMode::_get_Clamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_get_Clamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureWrapMode>("UnityEngine", "TextureWrapMode", "Clamp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureWrapMode Clamp
void UnityEngine::TextureWrapMode::_set_Clamp(UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_set_Clamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureWrapMode", "Clamp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureWrapMode Mirror
UnityEngine::TextureWrapMode UnityEngine::TextureWrapMode::_get_Mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_get_Mirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureWrapMode>("UnityEngine", "TextureWrapMode", "Mirror"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureWrapMode Mirror
void UnityEngine::TextureWrapMode::_set_Mirror(UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_set_Mirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureWrapMode", "Mirror", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureWrapMode MirrorOnce
UnityEngine::TextureWrapMode UnityEngine::TextureWrapMode::_get_MirrorOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_get_MirrorOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureWrapMode>("UnityEngine", "TextureWrapMode", "MirrorOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureWrapMode MirrorOnce
void UnityEngine::TextureWrapMode::_set_MirrorOnce(UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureWrapMode::_set_MirrorOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureWrapMode", "MirrorOnce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat Alpha8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_Alpha8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_Alpha8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "Alpha8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat Alpha8
void UnityEngine::TextureFormat::_set_Alpha8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_Alpha8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "Alpha8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ARGB4444
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ARGB4444() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ARGB4444");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ARGB4444"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ARGB4444
void UnityEngine::TextureFormat::_set_ARGB4444(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ARGB4444");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ARGB4444", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGB24
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGB24() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGB24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGB24"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGB24
void UnityEngine::TextureFormat::_set_RGB24(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGB24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGB24", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGBA32
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGBA32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGBA32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGBA32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGBA32
void UnityEngine::TextureFormat::_set_RGBA32(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGBA32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGBA32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ARGB32
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ARGB32
void UnityEngine::TextureFormat::_set_ARGB32(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ARGB32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGB565
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGB565() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGB565");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGB565"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGB565
void UnityEngine::TextureFormat::_set_RGB565(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGB565");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGB565", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat R16
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_R16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_R16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "R16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat R16
void UnityEngine::TextureFormat::_set_R16(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_R16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "R16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat DXT1
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_DXT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_DXT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "DXT1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat DXT1
void UnityEngine::TextureFormat::_set_DXT1(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_DXT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "DXT1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat DXT5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_DXT5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_DXT5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "DXT5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat DXT5
void UnityEngine::TextureFormat::_set_DXT5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_DXT5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "DXT5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGBA4444
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGBA4444() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGBA4444");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGBA4444"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGBA4444
void UnityEngine::TextureFormat::_set_RGBA4444(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGBA4444");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGBA4444", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat BGRA32
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_BGRA32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_BGRA32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "BGRA32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat BGRA32
void UnityEngine::TextureFormat::_set_BGRA32(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_BGRA32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "BGRA32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RHalf
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RHalf
void UnityEngine::TextureFormat::_set_RHalf(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGHalf
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGHalf
void UnityEngine::TextureFormat::_set_RGHalf(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGBAHalf
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGBAHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGBAHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGBAHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGBAHalf
void UnityEngine::TextureFormat::_set_RGBAHalf(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGBAHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGBAHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RFloat
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RFloat
void UnityEngine::TextureFormat::_set_RFloat(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGFloat
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGFloat
void UnityEngine::TextureFormat::_set_RGFloat(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGBAFloat
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGBAFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGBAFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGBAFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGBAFloat
void UnityEngine::TextureFormat::_set_RGBAFloat(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGBAFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGBAFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat YUY2
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_YUY2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_YUY2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "YUY2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat YUY2
void UnityEngine::TextureFormat::_set_YUY2(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_YUY2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "YUY2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RGB9e5Float
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RGB9e5Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RGB9e5Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RGB9e5Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RGB9e5Float
void UnityEngine::TextureFormat::_set_RGB9e5Float(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RGB9e5Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RGB9e5Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat BC4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_BC4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_BC4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "BC4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat BC4
void UnityEngine::TextureFormat::_set_BC4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_BC4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "BC4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat BC5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_BC5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_BC5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "BC5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat BC5
void UnityEngine::TextureFormat::_set_BC5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_BC5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "BC5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat BC6H
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_BC6H() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_BC6H");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "BC6H"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat BC6H
void UnityEngine::TextureFormat::_set_BC6H(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_BC6H");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "BC6H", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat BC7
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_BC7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_BC7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "BC7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat BC7
void UnityEngine::TextureFormat::_set_BC7(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_BC7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "BC7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat DXT1Crunched
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_DXT1Crunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_DXT1Crunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "DXT1Crunched"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat DXT1Crunched
void UnityEngine::TextureFormat::_set_DXT1Crunched(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_DXT1Crunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "DXT1Crunched", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat DXT5Crunched
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_DXT5Crunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_DXT5Crunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "DXT5Crunched"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat DXT5Crunched
void UnityEngine::TextureFormat::_set_DXT5Crunched(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_DXT5Crunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "DXT5Crunched", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat PVRTC_RGB2
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_PVRTC_RGB2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_PVRTC_RGB2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "PVRTC_RGB2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat PVRTC_RGB2
void UnityEngine::TextureFormat::_set_PVRTC_RGB2(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_PVRTC_RGB2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "PVRTC_RGB2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat PVRTC_RGBA2
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_PVRTC_RGBA2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_PVRTC_RGBA2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "PVRTC_RGBA2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat PVRTC_RGBA2
void UnityEngine::TextureFormat::_set_PVRTC_RGBA2(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_PVRTC_RGBA2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "PVRTC_RGBA2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat PVRTC_RGB4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_PVRTC_RGB4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_PVRTC_RGB4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "PVRTC_RGB4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat PVRTC_RGB4
void UnityEngine::TextureFormat::_set_PVRTC_RGB4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_PVRTC_RGB4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "PVRTC_RGB4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat PVRTC_RGBA4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_PVRTC_RGBA4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_PVRTC_RGBA4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "PVRTC_RGBA4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat PVRTC_RGBA4
void UnityEngine::TextureFormat::_set_PVRTC_RGBA4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_PVRTC_RGBA4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "PVRTC_RGBA4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC_RGB4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC_RGB4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC_RGB4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC_RGB4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC_RGB4
void UnityEngine::TextureFormat::_set_ETC_RGB4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC_RGB4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC_RGB4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat EAC_R
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_EAC_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_EAC_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "EAC_R"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat EAC_R
void UnityEngine::TextureFormat::_set_EAC_R(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_EAC_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "EAC_R", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat EAC_R_SIGNED
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_EAC_R_SIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_EAC_R_SIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "EAC_R_SIGNED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat EAC_R_SIGNED
void UnityEngine::TextureFormat::_set_EAC_R_SIGNED(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_EAC_R_SIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "EAC_R_SIGNED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat EAC_RG
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_EAC_RG() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_EAC_RG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "EAC_RG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat EAC_RG
void UnityEngine::TextureFormat::_set_EAC_RG(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_EAC_RG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "EAC_RG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat EAC_RG_SIGNED
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_EAC_RG_SIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_EAC_RG_SIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "EAC_RG_SIGNED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat EAC_RG_SIGNED
void UnityEngine::TextureFormat::_set_EAC_RG_SIGNED(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_EAC_RG_SIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "EAC_RG_SIGNED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC2_RGB
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC2_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC2_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC2_RGB"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC2_RGB
void UnityEngine::TextureFormat::_set_ETC2_RGB(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC2_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC2_RGB", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC2_RGBA1
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC2_RGBA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC2_RGBA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC2_RGBA1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC2_RGBA1
void UnityEngine::TextureFormat::_set_ETC2_RGBA1(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC2_RGBA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC2_RGBA1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC2_RGBA8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC2_RGBA8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC2_RGBA8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC2_RGBA8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC2_RGBA8
void UnityEngine::TextureFormat::_set_ETC2_RGBA8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC2_RGBA8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC2_RGBA8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_4x4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_4x4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_4x4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_4x4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_4x4
void UnityEngine::TextureFormat::_set_ASTC_4x4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_4x4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_4x4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_5x5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_5x5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_5x5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_5x5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_5x5
void UnityEngine::TextureFormat::_set_ASTC_5x5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_5x5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_5x5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_6x6
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_6x6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_6x6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_6x6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_6x6
void UnityEngine::TextureFormat::_set_ASTC_6x6(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_6x6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_6x6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_8x8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_8x8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_8x8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_8x8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_8x8
void UnityEngine::TextureFormat::_set_ASTC_8x8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_8x8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_8x8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_10x10
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_10x10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_10x10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_10x10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_10x10
void UnityEngine::TextureFormat::_set_ASTC_10x10(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_10x10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_10x10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_12x12
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_12x12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_12x12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_12x12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_12x12
void UnityEngine::TextureFormat::_set_ASTC_12x12(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_12x12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_12x12", value));
}
// [ObsoleteAttribute] Offset: 0xD932BC
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC_RGB4_3DS
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC_RGB4_3DS() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC_RGB4_3DS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC_RGB4_3DS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC_RGB4_3DS
void UnityEngine::TextureFormat::_set_ETC_RGB4_3DS(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC_RGB4_3DS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC_RGB4_3DS", value));
}
// [ObsoleteAttribute] Offset: 0xD932F4
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC_RGBA8_3DS
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC_RGBA8_3DS() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC_RGBA8_3DS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC_RGBA8_3DS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC_RGBA8_3DS
void UnityEngine::TextureFormat::_set_ETC_RGBA8_3DS(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC_RGBA8_3DS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC_RGBA8_3DS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat RG16
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_RG16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_RG16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "RG16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat RG16
void UnityEngine::TextureFormat::_set_RG16(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_RG16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "RG16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat R8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_R8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_R8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "R8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat R8
void UnityEngine::TextureFormat::_set_R8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_R8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "R8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC_RGB4Crunched
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC_RGB4Crunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC_RGB4Crunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC_RGB4Crunched"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC_RGB4Crunched
void UnityEngine::TextureFormat::_set_ETC_RGB4Crunched(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC_RGB4Crunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC_RGB4Crunched", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ETC2_RGBA8Crunched
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ETC2_RGBA8Crunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ETC2_RGBA8Crunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ETC2_RGBA8Crunched"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ETC2_RGBA8Crunched
void UnityEngine::TextureFormat::_set_ETC2_RGBA8Crunched(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ETC2_RGBA8Crunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ETC2_RGBA8Crunched", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_4x4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_4x4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_4x4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_4x4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_4x4
void UnityEngine::TextureFormat::_set_ASTC_HDR_4x4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_4x4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_4x4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_5x5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_5x5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_5x5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_5x5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_5x5
void UnityEngine::TextureFormat::_set_ASTC_HDR_5x5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_5x5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_5x5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_6x6
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_6x6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_6x6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_6x6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_6x6
void UnityEngine::TextureFormat::_set_ASTC_HDR_6x6(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_6x6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_6x6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_8x8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_8x8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_8x8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_8x8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_8x8
void UnityEngine::TextureFormat::_set_ASTC_HDR_8x8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_8x8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_8x8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_10x10
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_10x10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_10x10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_10x10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_10x10
void UnityEngine::TextureFormat::_set_ASTC_HDR_10x10(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_10x10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_10x10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_HDR_12x12
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_HDR_12x12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_HDR_12x12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_HDR_12x12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_HDR_12x12
void UnityEngine::TextureFormat::_set_ASTC_HDR_12x12(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_HDR_12x12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_HDR_12x12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_4x4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_4x4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_4x4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_4x4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_4x4
void UnityEngine::TextureFormat::_set_ASTC_RGB_4x4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_4x4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_4x4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_5x5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_5x5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_5x5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_5x5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_5x5
void UnityEngine::TextureFormat::_set_ASTC_RGB_5x5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_5x5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_5x5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_6x6
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_6x6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_6x6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_6x6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_6x6
void UnityEngine::TextureFormat::_set_ASTC_RGB_6x6(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_6x6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_6x6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_8x8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_8x8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_8x8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_8x8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_8x8
void UnityEngine::TextureFormat::_set_ASTC_RGB_8x8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_8x8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_8x8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_10x10
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_10x10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_10x10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_10x10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_10x10
void UnityEngine::TextureFormat::_set_ASTC_RGB_10x10(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_10x10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_10x10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGB_12x12
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGB_12x12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGB_12x12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGB_12x12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGB_12x12
void UnityEngine::TextureFormat::_set_ASTC_RGB_12x12(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGB_12x12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGB_12x12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_4x4
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_4x4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_4x4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_4x4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_4x4
void UnityEngine::TextureFormat::_set_ASTC_RGBA_4x4(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_4x4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_4x4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_5x5
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_5x5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_5x5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_5x5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_5x5
void UnityEngine::TextureFormat::_set_ASTC_RGBA_5x5(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_5x5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_5x5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_6x6
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_6x6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_6x6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_6x6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_6x6
void UnityEngine::TextureFormat::_set_ASTC_RGBA_6x6(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_6x6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_6x6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_8x8
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_8x8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_8x8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_8x8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_8x8
void UnityEngine::TextureFormat::_set_ASTC_RGBA_8x8(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_8x8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_8x8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_10x10
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_10x10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_10x10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_10x10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_10x10
void UnityEngine::TextureFormat::_set_ASTC_RGBA_10x10(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_10x10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_10x10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureFormat ASTC_RGBA_12x12
UnityEngine::TextureFormat UnityEngine::TextureFormat::_get_ASTC_RGBA_12x12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_get_ASTC_RGBA_12x12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextureFormat>("UnityEngine", "TextureFormat", "ASTC_RGBA_12x12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureFormat ASTC_RGBA_12x12
void UnityEngine::TextureFormat::_set_ASTC_RGBA_12x12(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextureFormat::_set_ASTC_RGBA_12x12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextureFormat", "ASTC_RGBA_12x12", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CubemapFace
#include "UnityEngine/CubemapFace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace Unknown
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace Unknown
void UnityEngine::CubemapFace::_set_Unknown(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace PositiveX
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_PositiveX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_PositiveX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "PositiveX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace PositiveX
void UnityEngine::CubemapFace::_set_PositiveX(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_PositiveX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "PositiveX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace NegativeX
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_NegativeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_NegativeX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "NegativeX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace NegativeX
void UnityEngine::CubemapFace::_set_NegativeX(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_NegativeX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "NegativeX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace PositiveY
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_PositiveY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_PositiveY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "PositiveY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace PositiveY
void UnityEngine::CubemapFace::_set_PositiveY(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_PositiveY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "PositiveY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace NegativeY
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_NegativeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_NegativeY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "NegativeY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace NegativeY
void UnityEngine::CubemapFace::_set_NegativeY(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_NegativeY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "NegativeY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace PositiveZ
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_PositiveZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_PositiveZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "PositiveZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace PositiveZ
void UnityEngine::CubemapFace::_set_PositiveZ(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_PositiveZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "PositiveZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CubemapFace NegativeZ
UnityEngine::CubemapFace UnityEngine::CubemapFace::_get_NegativeZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_get_NegativeZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CubemapFace>("UnityEngine", "CubemapFace", "NegativeZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CubemapFace NegativeZ
void UnityEngine::CubemapFace::_set_NegativeZ(UnityEngine::CubemapFace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapFace::_set_NegativeZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CubemapFace", "NegativeZ", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGB32
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGB32
void UnityEngine::RenderTextureFormat::_set_ARGB32(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGB32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat Depth
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat Depth
void UnityEngine::RenderTextureFormat::_set_Depth(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "Depth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGBHalf
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGBHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGBHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGBHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGBHalf
void UnityEngine::RenderTextureFormat::_set_ARGBHalf(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGBHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGBHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat Shadowmap
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_Shadowmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_Shadowmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "Shadowmap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat Shadowmap
void UnityEngine::RenderTextureFormat::_set_Shadowmap(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_Shadowmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "Shadowmap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGB565
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGB565() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGB565");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGB565"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGB565
void UnityEngine::RenderTextureFormat::_set_RGB565(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGB565");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGB565", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGB4444
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGB4444() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGB4444");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGB4444"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGB4444
void UnityEngine::RenderTextureFormat::_set_ARGB4444(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGB4444");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGB4444", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGB1555
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGB1555() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGB1555");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGB1555"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGB1555
void UnityEngine::RenderTextureFormat::_set_ARGB1555(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGB1555");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGB1555", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat Default
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat Default
void UnityEngine::RenderTextureFormat::_set_Default(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGB2101010
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGB2101010() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGB2101010");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGB2101010"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGB2101010
void UnityEngine::RenderTextureFormat::_set_ARGB2101010(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGB2101010");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGB2101010", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat DefaultHDR
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_DefaultHDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_DefaultHDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "DefaultHDR"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat DefaultHDR
void UnityEngine::RenderTextureFormat::_set_DefaultHDR(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_DefaultHDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "DefaultHDR", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGB64
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGB64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGB64"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGB64
void UnityEngine::RenderTextureFormat::_set_ARGB64(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGB64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGB64", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGBFloat
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGBFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGBFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGBFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGBFloat
void UnityEngine::RenderTextureFormat::_set_ARGBFloat(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGBFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGBFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGFloat
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGFloat
void UnityEngine::RenderTextureFormat::_set_RGFloat(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGHalf
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGHalf
void UnityEngine::RenderTextureFormat::_set_RGHalf(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RFloat
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RFloat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RFloat
void UnityEngine::RenderTextureFormat::_set_RFloat(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RFloat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RHalf
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RHalf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RHalf"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RHalf
void UnityEngine::RenderTextureFormat::_set_RHalf(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RHalf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RHalf", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat R8
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_R8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_R8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "R8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat R8
void UnityEngine::RenderTextureFormat::_set_R8(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_R8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "R8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat ARGBInt
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_ARGBInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_ARGBInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "ARGBInt"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat ARGBInt
void UnityEngine::RenderTextureFormat::_set_ARGBInt(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_ARGBInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "ARGBInt", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGInt
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGInt"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGInt
void UnityEngine::RenderTextureFormat::_set_RGInt(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGInt", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RInt
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RInt"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RInt
void UnityEngine::RenderTextureFormat::_set_RInt(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RInt", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat BGRA32
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_BGRA32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_BGRA32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "BGRA32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat BGRA32
void UnityEngine::RenderTextureFormat::_set_BGRA32(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_BGRA32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "BGRA32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGB111110Float
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGB111110Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGB111110Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGB111110Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGB111110Float
void UnityEngine::RenderTextureFormat::_set_RGB111110Float(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGB111110Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGB111110Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RG32
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RG32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RG32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RG32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RG32
void UnityEngine::RenderTextureFormat::_set_RG32(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RG32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RG32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RGBAUShort
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RGBAUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RGBAUShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RGBAUShort"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RGBAUShort
void UnityEngine::RenderTextureFormat::_set_RGBAUShort(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RGBAUShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RGBAUShort", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat RG16
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_RG16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_RG16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "RG16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat RG16
void UnityEngine::RenderTextureFormat::_set_RG16(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_RG16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "RG16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat BGRA10101010_XR
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_BGRA10101010_XR() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_BGRA10101010_XR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "BGRA10101010_XR"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat BGRA10101010_XR
void UnityEngine::RenderTextureFormat::_set_BGRA10101010_XR(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_BGRA10101010_XR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "BGRA10101010_XR", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat BGR101010_XR
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_BGR101010_XR() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_BGR101010_XR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "BGR101010_XR"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat BGR101010_XR
void UnityEngine::RenderTextureFormat::_set_BGR101010_XR(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_BGR101010_XR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "BGR101010_XR", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat R16
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureFormat::_get_R16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_get_R16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureFormat>("UnityEngine", "RenderTextureFormat", "R16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat R16
void UnityEngine::RenderTextureFormat::_set_R16(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureFormat::_set_R16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureFormat", "R16", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.VRTextureUsage
#include "UnityEngine/VRTextureUsage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.VRTextureUsage None
UnityEngine::VRTextureUsage UnityEngine::VRTextureUsage::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VRTextureUsage>("UnityEngine", "VRTextureUsage", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VRTextureUsage None
void UnityEngine::VRTextureUsage::_set_None(UnityEngine::VRTextureUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VRTextureUsage", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.VRTextureUsage OneEye
UnityEngine::VRTextureUsage UnityEngine::VRTextureUsage::_get_OneEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_get_OneEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VRTextureUsage>("UnityEngine", "VRTextureUsage", "OneEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VRTextureUsage OneEye
void UnityEngine::VRTextureUsage::_set_OneEye(UnityEngine::VRTextureUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_set_OneEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VRTextureUsage", "OneEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.VRTextureUsage TwoEyes
UnityEngine::VRTextureUsage UnityEngine::VRTextureUsage::_get_TwoEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_get_TwoEyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VRTextureUsage>("UnityEngine", "VRTextureUsage", "TwoEyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VRTextureUsage TwoEyes
void UnityEngine::VRTextureUsage::_set_TwoEyes(UnityEngine::VRTextureUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_set_TwoEyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VRTextureUsage", "TwoEyes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.VRTextureUsage DeviceSpecific
UnityEngine::VRTextureUsage UnityEngine::VRTextureUsage::_get_DeviceSpecific() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_get_DeviceSpecific");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VRTextureUsage>("UnityEngine", "VRTextureUsage", "DeviceSpecific"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VRTextureUsage DeviceSpecific
void UnityEngine::VRTextureUsage::_set_DeviceSpecific(UnityEngine::VRTextureUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VRTextureUsage::_set_DeviceSpecific");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VRTextureUsage", "DeviceSpecific", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureCreationFlags
#include "UnityEngine/RenderTextureCreationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags MipMap
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_MipMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_MipMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "MipMap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags MipMap
void UnityEngine::RenderTextureCreationFlags::_set_MipMap(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_MipMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "MipMap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags AutoGenerateMips
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_AutoGenerateMips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_AutoGenerateMips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "AutoGenerateMips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags AutoGenerateMips
void UnityEngine::RenderTextureCreationFlags::_set_AutoGenerateMips(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_AutoGenerateMips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "AutoGenerateMips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags SRGB
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_SRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_SRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "SRGB"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags SRGB
void UnityEngine::RenderTextureCreationFlags::_set_SRGB(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_SRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "SRGB", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags EyeTexture
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_EyeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_EyeTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "EyeTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags EyeTexture
void UnityEngine::RenderTextureCreationFlags::_set_EyeTexture(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_EyeTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "EyeTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags EnableRandomWrite
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_EnableRandomWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_EnableRandomWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "EnableRandomWrite"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags EnableRandomWrite
void UnityEngine::RenderTextureCreationFlags::_set_EnableRandomWrite(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_EnableRandomWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "EnableRandomWrite", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags CreatedFromScript
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_CreatedFromScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_CreatedFromScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "CreatedFromScript"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags CreatedFromScript
void UnityEngine::RenderTextureCreationFlags::_set_CreatedFromScript(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_CreatedFromScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "CreatedFromScript", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags AllowVerticalFlip
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_AllowVerticalFlip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_AllowVerticalFlip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "AllowVerticalFlip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags AllowVerticalFlip
void UnityEngine::RenderTextureCreationFlags::_set_AllowVerticalFlip(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_AllowVerticalFlip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "AllowVerticalFlip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags NoResolvedColorSurface
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_NoResolvedColorSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_NoResolvedColorSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "NoResolvedColorSurface"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags NoResolvedColorSurface
void UnityEngine::RenderTextureCreationFlags::_set_NoResolvedColorSurface(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_NoResolvedColorSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "NoResolvedColorSurface", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags DynamicallyScalable
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_DynamicallyScalable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_DynamicallyScalable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "DynamicallyScalable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags DynamicallyScalable
void UnityEngine::RenderTextureCreationFlags::_set_DynamicallyScalable(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_DynamicallyScalable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "DynamicallyScalable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureCreationFlags BindMS
UnityEngine::RenderTextureCreationFlags UnityEngine::RenderTextureCreationFlags::_get_BindMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_get_BindMS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureCreationFlags>("UnityEngine", "RenderTextureCreationFlags", "BindMS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureCreationFlags BindMS
void UnityEngine::RenderTextureCreationFlags::_set_BindMS(UnityEngine::RenderTextureCreationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureCreationFlags::_set_BindMS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureCreationFlags", "BindMS", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureReadWrite
#include "UnityEngine/RenderTextureReadWrite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureReadWrite Default
UnityEngine::RenderTextureReadWrite UnityEngine::RenderTextureReadWrite::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureReadWrite>("UnityEngine", "RenderTextureReadWrite", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureReadWrite Default
void UnityEngine::RenderTextureReadWrite::_set_Default(UnityEngine::RenderTextureReadWrite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureReadWrite", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureReadWrite Linear
UnityEngine::RenderTextureReadWrite UnityEngine::RenderTextureReadWrite::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureReadWrite>("UnityEngine", "RenderTextureReadWrite", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureReadWrite Linear
void UnityEngine::RenderTextureReadWrite::_set_Linear(UnityEngine::RenderTextureReadWrite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureReadWrite", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureReadWrite sRGB
UnityEngine::RenderTextureReadWrite UnityEngine::RenderTextureReadWrite::_get_sRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_get_sRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureReadWrite>("UnityEngine", "RenderTextureReadWrite", "sRGB"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureReadWrite sRGB
void UnityEngine::RenderTextureReadWrite::_set_sRGB(UnityEngine::RenderTextureReadWrite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureReadWrite::_set_sRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureReadWrite", "sRGB", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureMemoryless
#include "UnityEngine/RenderTextureMemoryless.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureMemoryless None
UnityEngine::RenderTextureMemoryless UnityEngine::RenderTextureMemoryless::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureMemoryless>("UnityEngine", "RenderTextureMemoryless", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureMemoryless None
void UnityEngine::RenderTextureMemoryless::_set_None(UnityEngine::RenderTextureMemoryless value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureMemoryless", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureMemoryless Color
UnityEngine::RenderTextureMemoryless UnityEngine::RenderTextureMemoryless::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureMemoryless>("UnityEngine", "RenderTextureMemoryless", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureMemoryless Color
void UnityEngine::RenderTextureMemoryless::_set_Color(UnityEngine::RenderTextureMemoryless value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureMemoryless", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureMemoryless Depth
UnityEngine::RenderTextureMemoryless UnityEngine::RenderTextureMemoryless::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureMemoryless>("UnityEngine", "RenderTextureMemoryless", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureMemoryless Depth
void UnityEngine::RenderTextureMemoryless::_set_Depth(UnityEngine::RenderTextureMemoryless value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureMemoryless", "Depth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureMemoryless MSAA
UnityEngine::RenderTextureMemoryless UnityEngine::RenderTextureMemoryless::_get_MSAA() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_get_MSAA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderTextureMemoryless>("UnityEngine", "RenderTextureMemoryless", "MSAA"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureMemoryless MSAA
void UnityEngine::RenderTextureMemoryless::_set_MSAA(UnityEngine::RenderTextureMemoryless value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureMemoryless::_set_MSAA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureMemoryless", "MSAA", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LightmapsMode
#include "UnityEngine/LightmapsMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightmapsMode NonDirectional
UnityEngine::LightmapsMode UnityEngine::LightmapsMode::_get_NonDirectional() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapsMode::_get_NonDirectional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightmapsMode>("UnityEngine", "LightmapsMode", "NonDirectional"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightmapsMode NonDirectional
void UnityEngine::LightmapsMode::_set_NonDirectional(UnityEngine::LightmapsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapsMode::_set_NonDirectional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightmapsMode", "NonDirectional", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LightmapsMode CombinedDirectional
UnityEngine::LightmapsMode UnityEngine::LightmapsMode::_get_CombinedDirectional() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapsMode::_get_CombinedDirectional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::LightmapsMode>("UnityEngine", "LightmapsMode", "CombinedDirectional"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LightmapsMode CombinedDirectional
void UnityEngine::LightmapsMode::_set_CombinedDirectional(UnityEngine::LightmapsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LightmapsMode::_set_CombinedDirectional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LightmapsMode", "CombinedDirectional", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MaterialGlobalIlluminationFlags
#include "UnityEngine/MaterialGlobalIlluminationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialGlobalIlluminationFlags None
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::MaterialGlobalIlluminationFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialGlobalIlluminationFlags>("UnityEngine", "MaterialGlobalIlluminationFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialGlobalIlluminationFlags None
void UnityEngine::MaterialGlobalIlluminationFlags::_set_None(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialGlobalIlluminationFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialGlobalIlluminationFlags RealtimeEmissive
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::MaterialGlobalIlluminationFlags::_get_RealtimeEmissive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_get_RealtimeEmissive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialGlobalIlluminationFlags>("UnityEngine", "MaterialGlobalIlluminationFlags", "RealtimeEmissive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialGlobalIlluminationFlags RealtimeEmissive
void UnityEngine::MaterialGlobalIlluminationFlags::_set_RealtimeEmissive(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_set_RealtimeEmissive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialGlobalIlluminationFlags", "RealtimeEmissive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialGlobalIlluminationFlags BakedEmissive
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::MaterialGlobalIlluminationFlags::_get_BakedEmissive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_get_BakedEmissive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialGlobalIlluminationFlags>("UnityEngine", "MaterialGlobalIlluminationFlags", "BakedEmissive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialGlobalIlluminationFlags BakedEmissive
void UnityEngine::MaterialGlobalIlluminationFlags::_set_BakedEmissive(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_set_BakedEmissive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialGlobalIlluminationFlags", "BakedEmissive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialGlobalIlluminationFlags EmissiveIsBlack
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::MaterialGlobalIlluminationFlags::_get_EmissiveIsBlack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_get_EmissiveIsBlack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialGlobalIlluminationFlags>("UnityEngine", "MaterialGlobalIlluminationFlags", "EmissiveIsBlack"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialGlobalIlluminationFlags EmissiveIsBlack
void UnityEngine::MaterialGlobalIlluminationFlags::_set_EmissiveIsBlack(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_set_EmissiveIsBlack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialGlobalIlluminationFlags", "EmissiveIsBlack", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MaterialGlobalIlluminationFlags AnyEmissive
UnityEngine::MaterialGlobalIlluminationFlags UnityEngine::MaterialGlobalIlluminationFlags::_get_AnyEmissive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_get_AnyEmissive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialGlobalIlluminationFlags>("UnityEngine", "MaterialGlobalIlluminationFlags", "AnyEmissive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MaterialGlobalIlluminationFlags AnyEmissive
void UnityEngine::MaterialGlobalIlluminationFlags::_set_AnyEmissive(UnityEngine::MaterialGlobalIlluminationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MaterialGlobalIlluminationFlags::_set_AnyEmissive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MaterialGlobalIlluminationFlags", "AnyEmissive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MotionVectorGenerationMode
#include "UnityEngine/MotionVectorGenerationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.MotionVectorGenerationMode Camera
UnityEngine::MotionVectorGenerationMode UnityEngine::MotionVectorGenerationMode::_get_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_get_Camera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MotionVectorGenerationMode>("UnityEngine", "MotionVectorGenerationMode", "Camera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MotionVectorGenerationMode Camera
void UnityEngine::MotionVectorGenerationMode::_set_Camera(UnityEngine::MotionVectorGenerationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_set_Camera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MotionVectorGenerationMode", "Camera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MotionVectorGenerationMode Object
UnityEngine::MotionVectorGenerationMode UnityEngine::MotionVectorGenerationMode::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MotionVectorGenerationMode>("UnityEngine", "MotionVectorGenerationMode", "Object"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MotionVectorGenerationMode Object
void UnityEngine::MotionVectorGenerationMode::_set_Object(UnityEngine::MotionVectorGenerationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MotionVectorGenerationMode", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.MotionVectorGenerationMode ForceNoMotion
UnityEngine::MotionVectorGenerationMode UnityEngine::MotionVectorGenerationMode::_get_ForceNoMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_get_ForceNoMotion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MotionVectorGenerationMode>("UnityEngine", "MotionVectorGenerationMode", "ForceNoMotion"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.MotionVectorGenerationMode ForceNoMotion
void UnityEngine::MotionVectorGenerationMode::_set_ForceNoMotion(UnityEngine::MotionVectorGenerationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MotionVectorGenerationMode::_set_ForceNoMotion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "MotionVectorGenerationMode", "ForceNoMotion", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.SkinQuality
#include "UnityEngine/SkinQuality.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_quality
UnityEngine::SkinQuality UnityEngine::SkinnedMeshRenderer::get_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SkinQuality, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_quality
void UnityEngine::SkinnedMeshRenderer::set_quality(UnityEngine::SkinQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_updateWhenOffscreen
bool UnityEngine::SkinnedMeshRenderer::get_updateWhenOffscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_updateWhenOffscreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateWhenOffscreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_updateWhenOffscreen
void UnityEngine::SkinnedMeshRenderer::set_updateWhenOffscreen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_updateWhenOffscreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateWhenOffscreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_forceMatrixRecalculationPerRender
bool UnityEngine::SkinnedMeshRenderer::get_forceMatrixRecalculationPerRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_forceMatrixRecalculationPerRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceMatrixRecalculationPerRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_forceMatrixRecalculationPerRender
void UnityEngine::SkinnedMeshRenderer::set_forceMatrixRecalculationPerRender(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_forceMatrixRecalculationPerRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceMatrixRecalculationPerRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_rootBone
UnityEngine::Transform* UnityEngine::SkinnedMeshRenderer::get_rootBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_rootBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_rootBone
void UnityEngine::SkinnedMeshRenderer::set_rootBone(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_rootBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_bones
::Array<UnityEngine::Transform*>* UnityEngine::SkinnedMeshRenderer::get_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_bones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_bones
void UnityEngine::SkinnedMeshRenderer::set_bones(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_bones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_sharedMesh
UnityEngine::Mesh* UnityEngine::SkinnedMeshRenderer::get_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_sharedMesh
void UnityEngine::SkinnedMeshRenderer::set_sharedMesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_skinnedMotionVectors
bool UnityEngine::SkinnedMeshRenderer::get_skinnedMotionVectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_skinnedMotionVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinnedMotionVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_skinnedMotionVectors
void UnityEngine::SkinnedMeshRenderer::set_skinnedMotionVectors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_skinnedMotionVectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skinnedMotionVectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.GetBlendShapeWeight
float UnityEngine::SkinnedMeshRenderer::GetBlendShapeWeight(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::GetBlendShapeWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.SetBlendShapeWeight
void UnityEngine::SkinnedMeshRenderer::SetBlendShapeWeight(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::SetBlendShapeWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlendShapeWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.BakeMesh
void UnityEngine::SkinnedMeshRenderer::BakeMesh(UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::BakeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.GetLocalAABB
UnityEngine::Bounds UnityEngine::SkinnedMeshRenderer::GetLocalAABB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::GetLocalAABB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalAABB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.SetLocalAABB
void UnityEngine::SkinnedMeshRenderer::SetLocalAABB(UnityEngine::Bounds b) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::SetLocalAABB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalAABB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.get_localBounds
UnityEngine::Bounds UnityEngine::SkinnedMeshRenderer::get_localBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::get_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.set_localBounds
void UnityEngine::SkinnedMeshRenderer::set_localBounds(UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::set_localBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.GetLocalAABB_Injected
void UnityEngine::SkinnedMeshRenderer::GetLocalAABB_Injected(UnityEngine::Bounds& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::GetLocalAABB_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalAABB_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.SkinnedMeshRenderer.SetLocalAABB_Injected
void UnityEngine::SkinnedMeshRenderer::SetLocalAABB_Injected(UnityEngine::Bounds& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SkinnedMeshRenderer::SetLocalAABB_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalAABB_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b);
}
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_quality
// Il2CppName: get_quality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SkinQuality (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_quality)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_quality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_quality
// Il2CppName: set_quality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::SkinQuality)>(&SkinnedMeshRenderer::set_quality)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_quality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SkinQuality>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_updateWhenOffscreen
// Il2CppName: get_updateWhenOffscreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_updateWhenOffscreen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_updateWhenOffscreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_updateWhenOffscreen
// Il2CppName: set_updateWhenOffscreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(bool)>(&SkinnedMeshRenderer::set_updateWhenOffscreen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_updateWhenOffscreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_forceMatrixRecalculationPerRender
// Il2CppName: get_forceMatrixRecalculationPerRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_forceMatrixRecalculationPerRender)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_forceMatrixRecalculationPerRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_forceMatrixRecalculationPerRender
// Il2CppName: set_forceMatrixRecalculationPerRender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(bool)>(&SkinnedMeshRenderer::set_forceMatrixRecalculationPerRender)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_forceMatrixRecalculationPerRender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_rootBone
// Il2CppName: get_rootBone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_rootBone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_rootBone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_rootBone
// Il2CppName: set_rootBone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Transform*)>(&SkinnedMeshRenderer::set_rootBone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_rootBone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_bones
// Il2CppName: get_bones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Transform*>* (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_bones)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_bones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_bones
// Il2CppName: set_bones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(::Array<UnityEngine::Transform*>*)>(&SkinnedMeshRenderer::set_bones)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_bones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Transform*>*>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_sharedMesh
// Il2CppName: get_sharedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_sharedMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_sharedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_sharedMesh
// Il2CppName: set_sharedMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Mesh*)>(&SkinnedMeshRenderer::set_sharedMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_sharedMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_skinnedMotionVectors
// Il2CppName: get_skinnedMotionVectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_skinnedMotionVectors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_skinnedMotionVectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_skinnedMotionVectors
// Il2CppName: set_skinnedMotionVectors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(bool)>(&SkinnedMeshRenderer::set_skinnedMotionVectors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_skinnedMotionVectors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::GetBlendShapeWeight
// Il2CppName: GetBlendShapeWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (SkinnedMeshRenderer::*)(int)>(&SkinnedMeshRenderer::GetBlendShapeWeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "GetBlendShapeWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::SetBlendShapeWeight
// Il2CppName: SetBlendShapeWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(int, float)>(&SkinnedMeshRenderer::SetBlendShapeWeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "SetBlendShapeWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::BakeMesh
// Il2CppName: BakeMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Mesh*)>(&SkinnedMeshRenderer::BakeMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "BakeMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::GetLocalAABB
// Il2CppName: GetLocalAABB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::GetLocalAABB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "GetLocalAABB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::SetLocalAABB
// Il2CppName: SetLocalAABB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Bounds)>(&SkinnedMeshRenderer::SetLocalAABB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "SetLocalAABB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::get_localBounds
// Il2CppName: get_localBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::get_localBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "get_localBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::set_localBounds
// Il2CppName: set_localBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Bounds)>(&SkinnedMeshRenderer::set_localBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "set_localBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::GetLocalAABB_Injected
// Il2CppName: GetLocalAABB_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Bounds&)>(&SkinnedMeshRenderer::GetLocalAABB_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "GetLocalAABB_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::SetLocalAABB_Injected
// Il2CppName: SetLocalAABB_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)(UnityEngine::Bounds&)>(&SkinnedMeshRenderer::SetLocalAABB_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), "SetLocalAABB_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: SkinnedMeshRenderer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SkinnedMeshRenderer::*)()>(&SkinnedMeshRenderer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SkinnedMeshRenderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshRenderer.DontStripMeshRenderer
void UnityEngine::MeshRenderer::DontStripMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshRenderer::DontStripMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DontStripMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshRenderer.get_additionalVertexStreams
UnityEngine::Mesh* UnityEngine::MeshRenderer::get_additionalVertexStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::MeshRenderer::get_additionalVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MeshRenderer::DontStripMeshRenderer
// Il2CppName: DontStripMeshRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MeshRenderer::*)()>(&MeshRenderer::DontStripMeshRenderer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshRenderer*), "DontStripMeshRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MeshRenderer::get_additionalVertexStreams
// Il2CppName: get_additionalVertexStreams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (MeshRenderer::*)()>(&MeshRenderer::get_additionalVertexStreams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MeshRenderer*), "get_additionalVertexStreams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.SubMeshDescriptor
#include "UnityEngine/Rendering/SubMeshDescriptor.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Rendering.IndexFormat
#include "UnityEngine/Rendering/IndexFormat.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Mesh.Internal_Create
void UnityEngine::Mesh::Internal_Create(UnityEngine::Mesh* mono) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mesh", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono);
}
// Autogenerated method: UnityEngine.Mesh.FromInstanceID
UnityEngine::Mesh* UnityEngine::Mesh::FromInstanceID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::FromInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mesh", "FromInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.Mesh.get_indexFormat
UnityEngine::Rendering::IndexFormat UnityEngine::Mesh::get_indexFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_indexFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_indexFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::IndexFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_indexFormat
void UnityEngine::Mesh::set_indexFormat(UnityEngine::Rendering::IndexFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_indexFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_indexFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.SetIndexBufferParams
void UnityEngine::Mesh::SetIndexBufferParams(int indexCount, UnityEngine::Rendering::IndexFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndexBufferParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndexBufferParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indexCount, format);
}
// Autogenerated method: UnityEngine.Mesh.InternalSetIndexBufferData
void UnityEngine::Mesh::InternalSetIndexBufferData(System::IntPtr data, int dataStart, int meshBufferStart, int count, int elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::InternalSetIndexBufferData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetIndexBufferData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataStart), ::il2cpp_utils::ExtractType(meshBufferStart), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, dataStart, meshBufferStart, count, elemSize, flags);
}
// Autogenerated method: UnityEngine.Mesh.InternalSetIndexBufferDataFromArray
void UnityEngine::Mesh::InternalSetIndexBufferDataFromArray(System::Array* data, int dataStart, int meshBufferStart, int count, int elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::InternalSetIndexBufferDataFromArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetIndexBufferDataFromArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataStart), ::il2cpp_utils::ExtractType(meshBufferStart), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, dataStart, meshBufferStart, count, elemSize, flags);
}
// Autogenerated method: UnityEngine.Mesh.SetVertexBufferParams
void UnityEngine::Mesh::SetVertexBufferParams(int vertexCount, ::Array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetVertexBufferParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexBufferParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertexCount, attributes);
}
// Creating initializer_list -> params proxy for: System.Void SetVertexBufferParams(System.Int32 vertexCount, params UnityEngine.Rendering.VertexAttributeDescriptor[] attributes)
void UnityEngine::Mesh::SetVertexBufferParams(int vertexCount, std::initializer_list<UnityEngine::Rendering::VertexAttributeDescriptor> attributes) {
  UnityEngine::Mesh::SetVertexBufferParams(vertexCount, ::Array<UnityEngine::Rendering::VertexAttributeDescriptor>::New(attributes));
}
// Autogenerated method: UnityEngine.Mesh.InternalSetVertexBufferData
void UnityEngine::Mesh::InternalSetVertexBufferData(int stream, System::IntPtr data, int dataStart, int meshBufferStart, int count, int elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::InternalSetVertexBufferData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetVertexBufferData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataStart), ::il2cpp_utils::ExtractType(meshBufferStart), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream, data, dataStart, meshBufferStart, count, elemSize, flags);
}
// Autogenerated method: UnityEngine.Mesh.InternalSetVertexBufferDataFromArray
void UnityEngine::Mesh::InternalSetVertexBufferDataFromArray(int stream, System::Array* data, int dataStart, int meshBufferStart, int count, int elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::InternalSetVertexBufferDataFromArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetVertexBufferDataFromArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataStart), ::il2cpp_utils::ExtractType(meshBufferStart), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(elemSize), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream, data, dataStart, meshBufferStart, count, elemSize, flags);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributesAlloc
System::Array* UnityEngine::Mesh::GetVertexAttributesAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributesAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributesAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributesArray
int UnityEngine::Mesh::GetVertexAttributesArray(::Array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributesArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributesArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attributes);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributesList
int UnityEngine::Mesh::GetVertexAttributesList(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributesList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributesList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attributes);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributeCountImpl
int UnityEngine::Mesh::GetVertexAttributeCountImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributeCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributeCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttribute
UnityEngine::Rendering::VertexAttributeDescriptor UnityEngine::Mesh::GetVertexAttribute(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::VertexAttributeDescriptor, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Mesh.GetIndexStartImpl
uint UnityEngine::Mesh::GetIndexStartImpl(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndexStartImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexStartImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetIndexCountImpl
uint UnityEngine::Mesh::GetIndexCountImpl(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndexCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetTrianglesCountImpl
uint UnityEngine::Mesh::GetTrianglesCountImpl(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTrianglesCountImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrianglesCountImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetBaseVertexImpl
uint UnityEngine::Mesh::GetBaseVertexImpl(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBaseVertexImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseVertexImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetTrianglesImpl
::Array<int>* UnityEngine::Mesh::GetTrianglesImpl(int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTrianglesImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrianglesImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndicesImpl
::Array<int>* UnityEngine::Mesh::GetIndicesImpl(int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndicesImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndicesImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndicesImpl
void UnityEngine::Mesh::SetIndicesImpl(int submesh, UnityEngine::MeshTopology topology, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* indices, int arrayStart, int arraySize, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndicesImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndicesImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(indicesFormat), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(arrayStart), ::il2cpp_utils::ExtractType(arraySize), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, submesh, topology, indicesFormat, indices, arrayStart, arraySize, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndicesNativeArrayImpl
void UnityEngine::Mesh::SetIndicesNativeArrayImpl(int submesh, UnityEngine::MeshTopology topology, UnityEngine::Rendering::IndexFormat indicesFormat, System::IntPtr indices, int arrayStart, int arraySize, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndicesNativeArrayImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndicesNativeArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(indicesFormat), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(arrayStart), ::il2cpp_utils::ExtractType(arraySize), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, submesh, topology, indicesFormat, indices, arrayStart, arraySize, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetTrianglesNonAllocImpl
void UnityEngine::Mesh::GetTrianglesNonAllocImpl(::Array<int>*& values, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTrianglesNonAllocImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrianglesNonAllocImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*&>(), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetTrianglesNonAllocImpl16
void UnityEngine::Mesh::GetTrianglesNonAllocImpl16(::Array<uint16_t>*& values, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTrianglesNonAllocImpl16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrianglesNonAllocImpl16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*&>(), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndicesNonAllocImpl
void UnityEngine::Mesh::GetIndicesNonAllocImpl(::Array<int>*& values, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndicesNonAllocImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndicesNonAllocImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*&>(), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndicesNonAllocImpl16
void UnityEngine::Mesh::GetIndicesNonAllocImpl16(::Array<uint16_t>*& values, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndicesNonAllocImpl16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndicesNonAllocImpl16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*&>(), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.PrintErrorCantAccessChannel
void UnityEngine::Mesh::PrintErrorCantAccessChannel(UnityEngine::Rendering::VertexAttribute ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::PrintErrorCantAccessChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintErrorCantAccessChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: UnityEngine.Mesh.HasVertexAttribute
bool UnityEngine::Mesh::HasVertexAttribute(UnityEngine::Rendering::VertexAttribute attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::HasVertexAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasVertexAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attr);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributeDimension
int UnityEngine::Mesh::GetVertexAttributeDimension(UnityEngine::Rendering::VertexAttribute attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributeDimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributeDimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attr);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributeFormat
UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Mesh::GetVertexAttributeFormat(UnityEngine::Rendering::VertexAttribute attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::VertexAttributeFormat, false>(this, ___internal__method, attr);
}
// Autogenerated method: UnityEngine.Mesh.SetArrayForChannelImpl
void UnityEngine::Mesh::SetArrayForChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values, int arraySize, int valuesStart, int valuesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetArrayForChannelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArrayForChannelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(arraySize), ::il2cpp_utils::ExtractType(valuesStart), ::il2cpp_utils::ExtractType(valuesCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, format, dim, values, arraySize, valuesStart, valuesCount);
}
// Autogenerated method: UnityEngine.Mesh.SetNativeArrayForChannelImpl
void UnityEngine::Mesh::SetNativeArrayForChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::IntPtr values, int arraySize, int valuesStart, int valuesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetNativeArrayForChannelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNativeArrayForChannelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(arraySize), ::il2cpp_utils::ExtractType(valuesStart), ::il2cpp_utils::ExtractType(valuesCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, format, dim, values, arraySize, valuesStart, valuesCount);
}
// Autogenerated method: UnityEngine.Mesh.GetAllocArrayFromChannelImpl
System::Array* UnityEngine::Mesh::GetAllocArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetAllocArrayFromChannelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllocArrayFromChannelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method, channel, format, dim);
}
// Autogenerated method: UnityEngine.Mesh.GetArrayFromChannelImpl
void UnityEngine::Mesh::GetArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetArrayFromChannelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayFromChannelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, format, dim, values);
}
// Autogenerated method: UnityEngine.Mesh.get_vertexBufferCount
int UnityEngine::Mesh::get_vertexBufferCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_vertexBufferCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexBufferCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetNativeVertexBufferPtr
System::IntPtr UnityEngine::Mesh::GetNativeVertexBufferPtr(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetNativeVertexBufferPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeVertexBufferPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Mesh.GetNativeIndexBufferPtr
System::IntPtr UnityEngine::Mesh::GetNativeIndexBufferPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetNativeIndexBufferPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeIndexBufferPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.get_blendShapeCount
int UnityEngine::Mesh::get_blendShapeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_blendShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.ClearBlendShapes
void UnityEngine::Mesh::ClearBlendShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::ClearBlendShapes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBlendShapes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetBlendShapeName
::Il2CppString* UnityEngine::Mesh::GetBlendShapeName(int shapeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBlendShapeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, shapeIndex);
}
// Autogenerated method: UnityEngine.Mesh.GetBlendShapeIndex
int UnityEngine::Mesh::GetBlendShapeIndex(::Il2CppString* blendShapeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBlendShapeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendShapeName)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, blendShapeName);
}
// Autogenerated method: UnityEngine.Mesh.GetBlendShapeFrameCount
int UnityEngine::Mesh::GetBlendShapeFrameCount(int shapeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBlendShapeFrameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeFrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, shapeIndex);
}
// Autogenerated method: UnityEngine.Mesh.GetBlendShapeFrameWeight
float UnityEngine::Mesh::GetBlendShapeFrameWeight(int shapeIndex, int frameIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBlendShapeFrameWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeFrameWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIndex), ::il2cpp_utils::ExtractType(frameIndex)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, shapeIndex, frameIndex);
}
// Autogenerated method: UnityEngine.Mesh.GetBlendShapeFrameVertices
void UnityEngine::Mesh::GetBlendShapeFrameVertices(int shapeIndex, int frameIndex, ::Array<UnityEngine::Vector3>* deltaVertices, ::Array<UnityEngine::Vector3>* deltaNormals, ::Array<UnityEngine::Vector3>* deltaTangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBlendShapeFrameVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlendShapeFrameVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeIndex), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(deltaVertices), ::il2cpp_utils::ExtractType(deltaNormals), ::il2cpp_utils::ExtractType(deltaTangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shapeIndex, frameIndex, deltaVertices, deltaNormals, deltaTangents);
}
// Autogenerated method: UnityEngine.Mesh.AddBlendShapeFrame
void UnityEngine::Mesh::AddBlendShapeFrame(::Il2CppString* shapeName, float frameWeight, ::Array<UnityEngine::Vector3>* deltaVertices, ::Array<UnityEngine::Vector3>* deltaNormals, ::Array<UnityEngine::Vector3>* deltaTangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::AddBlendShapeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBlendShapeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shapeName), ::il2cpp_utils::ExtractType(frameWeight), ::il2cpp_utils::ExtractType(deltaVertices), ::il2cpp_utils::ExtractType(deltaNormals), ::il2cpp_utils::ExtractType(deltaTangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shapeName, frameWeight, deltaVertices, deltaNormals, deltaTangents);
}
// Autogenerated method: UnityEngine.Mesh.HasBoneWeights
bool UnityEngine::Mesh::HasBoneWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::HasBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetBoneWeightsImpl
::Array<UnityEngine::BoneWeight>* UnityEngine::Mesh::GetBoneWeightsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBoneWeightsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneWeightsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::BoneWeight>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.SetBoneWeightsImpl
void UnityEngine::Mesh::SetBoneWeightsImpl(::Array<UnityEngine::BoneWeight>* weights) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetBoneWeightsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoneWeightsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weights)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weights);
}
// Autogenerated method: UnityEngine.Mesh.SetBoneWeights
void UnityEngine::Mesh::SetBoneWeights(Unity::Collections::NativeArray_1<uint8_t> bonesPerVertex, Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1> weights) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bonesPerVertex), ::il2cpp_utils::ExtractType(weights)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bonesPerVertex, weights);
}
// Autogenerated method: UnityEngine.Mesh.InternalSetBoneWeights
void UnityEngine::Mesh::InternalSetBoneWeights(System::IntPtr bonesPerVertex, int bonesPerVertexSize, System::IntPtr weights, int weightsSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::InternalSetBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bonesPerVertex), ::il2cpp_utils::ExtractType(bonesPerVertexSize), ::il2cpp_utils::ExtractType(weights), ::il2cpp_utils::ExtractType(weightsSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bonesPerVertex, bonesPerVertexSize, weights, weightsSize);
}
// Autogenerated method: UnityEngine.Mesh.GetAllBoneWeights
Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1> UnityEngine::Mesh::GetAllBoneWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetAllBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetBonesPerVertex
Unity::Collections::NativeArray_1<uint8_t> UnityEngine::Mesh::GetBonesPerVertex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBonesPerVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBonesPerVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Unity::Collections::NativeArray_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetAllBoneWeightsArraySize
int UnityEngine::Mesh::GetAllBoneWeightsArraySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetAllBoneWeightsArraySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllBoneWeightsArraySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetAllBoneWeightsArray
System::IntPtr UnityEngine::Mesh::GetAllBoneWeightsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetAllBoneWeightsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllBoneWeightsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetBonesPerVertexArray
System::IntPtr UnityEngine::Mesh::GetBonesPerVertexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBonesPerVertexArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBonesPerVertexArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetBindposeCount
int UnityEngine::Mesh::GetBindposeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBindposeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBindposeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.get_bindposes
::Array<UnityEngine::Matrix4x4>* UnityEngine::Mesh::get_bindposes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_bindposes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bindposes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Matrix4x4>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_bindposes
void UnityEngine::Mesh::set_bindposes(::Array<UnityEngine::Matrix4x4>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_bindposes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bindposes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.GetBoneWeightsNonAllocImpl
void UnityEngine::Mesh::GetBoneWeightsNonAllocImpl(::Array<UnityEngine::BoneWeight>*& values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBoneWeightsNonAllocImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneWeightsNonAllocImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::BoneWeight>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: UnityEngine.Mesh.GetBindposesNonAllocImpl
void UnityEngine::Mesh::GetBindposesNonAllocImpl(::Array<UnityEngine::Matrix4x4>*& values) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBindposesNonAllocImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBindposesNonAllocImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: UnityEngine.Mesh.get_isReadable
bool UnityEngine::Mesh::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_isReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.get_canAccess
bool UnityEngine::Mesh::get_canAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_canAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.get_vertexCount
int UnityEngine::Mesh::get_vertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_vertexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.get_subMeshCount
int UnityEngine::Mesh::get_subMeshCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_subMeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subMeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_subMeshCount
void UnityEngine::Mesh::set_subMeshCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_subMeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_subMeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.SetSubMesh
void UnityEngine::Mesh::SetSubMesh(int index, UnityEngine::Rendering::SubMeshDescriptor desc, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetSubMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSubMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, desc, flags);
}
// Autogenerated method: UnityEngine.Mesh.GetSubMesh
UnityEngine::Rendering::SubMeshDescriptor UnityEngine::Mesh::GetSubMesh(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetSubMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::SubMeshDescriptor, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Mesh.get_bounds
UnityEngine::Bounds UnityEngine::Mesh::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_bounds
void UnityEngine::Mesh::set_bounds(UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.ClearImpl
void UnityEngine::Mesh::ClearImpl(bool keepVertexLayout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::ClearImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keepVertexLayout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keepVertexLayout);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateBoundsImpl
void UnityEngine::Mesh::RecalculateBoundsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateBoundsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateBoundsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateNormalsImpl
void UnityEngine::Mesh::RecalculateNormalsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateNormalsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateNormalsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateTangentsImpl
void UnityEngine::Mesh::RecalculateTangentsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateTangentsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateTangentsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.MarkDynamicImpl
void UnityEngine::Mesh::MarkDynamicImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::MarkDynamicImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDynamicImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.MarkModified
void UnityEngine::Mesh::MarkModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::MarkModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.UploadMeshDataImpl
void UnityEngine::Mesh::UploadMeshDataImpl(bool markNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::UploadMeshDataImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMeshDataImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, markNoLongerReadable);
}
// Autogenerated method: UnityEngine.Mesh.GetTopologyImpl
UnityEngine::MeshTopology UnityEngine::Mesh::GetTopologyImpl(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTopologyImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopologyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshTopology, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetUVDistributionMetric
float UnityEngine::Mesh::GetUVDistributionMetric(int uvSetIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetUVDistributionMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUVDistributionMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uvSetIndex)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, uvSetIndex);
}
// Autogenerated method: UnityEngine.Mesh.CombineMeshesImpl
void UnityEngine::Mesh::CombineMeshesImpl(::Array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CombineMeshesImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineMeshesImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combine), ::il2cpp_utils::ExtractType(mergeSubMeshes), ::il2cpp_utils::ExtractType(useMatrices), ::il2cpp_utils::ExtractType(hasLightmapData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combine, mergeSubMeshes, useMatrices, hasLightmapData);
}
// Autogenerated method: UnityEngine.Mesh.OptimizeImpl
void UnityEngine::Mesh::OptimizeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::OptimizeImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimizeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.OptimizeIndexBuffersImpl
void UnityEngine::Mesh::OptimizeIndexBuffersImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::OptimizeIndexBuffersImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimizeIndexBuffersImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.OptimizeReorderVertexBufferImpl
void UnityEngine::Mesh::OptimizeReorderVertexBufferImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::OptimizeReorderVertexBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimizeReorderVertexBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetUVChannel
UnityEngine::Rendering::VertexAttribute UnityEngine::Mesh::GetUVChannel(int uvIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetUVChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUVChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uvIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::VertexAttribute, false>(this, ___internal__method, uvIndex);
}
// Autogenerated method: UnityEngine.Mesh.DefaultDimensionForChannel
int UnityEngine::Mesh::DefaultDimensionForChannel(UnityEngine::Rendering::VertexAttribute channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::DefaultDimensionForChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mesh", "DefaultDimensionForChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, channel);
}
// Autogenerated method: UnityEngine.Mesh.SetSizedArrayForChannel
void UnityEngine::Mesh::SetSizedArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values, int valuesArrayLength, int valuesStart, int valuesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetSizedArrayForChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizedArrayForChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(valuesArrayLength), ::il2cpp_utils::ExtractType(valuesStart), ::il2cpp_utils::ExtractType(valuesCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, format, dim, values, valuesArrayLength, valuesStart, valuesCount);
}
// Autogenerated method: UnityEngine.Mesh.SetSizedNativeArrayForChannel
void UnityEngine::Mesh::SetSizedNativeArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::IntPtr values, int valuesArrayLength, int valuesStart, int valuesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetSizedNativeArrayForChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizedNativeArrayForChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(valuesArrayLength), ::il2cpp_utils::ExtractType(valuesStart), ::il2cpp_utils::ExtractType(valuesCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, format, dim, values, valuesArrayLength, valuesStart, valuesCount);
}
// Autogenerated method: UnityEngine.Mesh.get_vertices
::Array<UnityEngine::Vector3>* UnityEngine::Mesh::get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_vertices
void UnityEngine::Mesh::set_vertices(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_normals
::Array<UnityEngine::Vector3>* UnityEngine::Mesh::get_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_normals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_normals
void UnityEngine::Mesh::set_normals(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_normals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_tangents
::Array<UnityEngine::Vector4>* UnityEngine::Mesh::get_tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_tangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector4>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_tangents
void UnityEngine::Mesh::set_tangents(::Array<UnityEngine::Vector4>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_tangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv
void UnityEngine::Mesh::set_uv(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv2
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv2
void UnityEngine::Mesh::set_uv2(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv3
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv3
void UnityEngine::Mesh::set_uv3(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv4
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv4
void UnityEngine::Mesh::set_uv4(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv5
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv5
void UnityEngine::Mesh::set_uv5(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv6
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv6
void UnityEngine::Mesh::set_uv6(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv7
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv7
void UnityEngine::Mesh::set_uv7(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_uv8
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_uv8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_uv8
void UnityEngine::Mesh::set_uv8(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_uv8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uv8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_colors
::Array<UnityEngine::Color>* UnityEngine::Mesh::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_colors
void UnityEngine::Mesh::set_colors(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.get_colors32
::Array<UnityEngine::Color32>* UnityEngine::Mesh::get_colors32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_colors32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color32>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_colors32
void UnityEngine::Mesh::set_colors32(::Array<UnityEngine::Color32>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_colors32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colors32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.GetVertices
void UnityEngine::Mesh::GetVertices(System::Collections::Generic::List_1<UnityEngine::Vector3>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(System::Collections::Generic::List_1<UnityEngine::Vector3>* inVertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inVertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inVertices);
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(System::Collections::Generic::List_1<UnityEngine::Vector3>* inVertices, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inVertices), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inVertices, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(::Array<UnityEngine::Vector3>* inVertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inVertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inVertices);
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(::Array<UnityEngine::Vector3>* inVertices, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inVertices), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inVertices, start, length);
}
// Autogenerated method: UnityEngine.Mesh.GetNormals
void UnityEngine::Mesh::GetNormals(System::Collections::Generic::List_1<UnityEngine::Vector3>* normals) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normals)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, normals);
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(System::Collections::Generic::List_1<UnityEngine::Vector3>* inNormals) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormals)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inNormals);
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(System::Collections::Generic::List_1<UnityEngine::Vector3>* inNormals, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormals), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inNormals, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(::Array<UnityEngine::Vector3>* inNormals) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormals)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inNormals);
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(::Array<UnityEngine::Vector3>* inNormals, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormals), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inNormals, start, length);
}
// Autogenerated method: UnityEngine.Mesh.GetTangents
void UnityEngine::Mesh::GetTangents(System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tangents);
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(System::Collections::Generic::List_1<UnityEngine::Vector4>* inTangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inTangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inTangents);
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(System::Collections::Generic::List_1<UnityEngine::Vector4>* inTangents, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inTangents), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inTangents, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(::Array<UnityEngine::Vector4>* inTangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inTangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inTangents);
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(::Array<UnityEngine::Vector4>* inTangents, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inTangents), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inTangents, start, length);
}
// Autogenerated method: UnityEngine.Mesh.GetColors
void UnityEngine::Mesh::GetColors(System::Collections::Generic::List_1<UnityEngine::Color>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color>* inColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color>* inColors, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(::Array<UnityEngine::Color>* inColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(::Array<UnityEngine::Color>* inColors, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors, start, length);
}
// Autogenerated method: UnityEngine.Mesh.GetColors
void UnityEngine::Mesh::GetColors(System::Collections::Generic::List_1<UnityEngine::Color32>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color32>* inColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color32>* inColors, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(::Array<UnityEngine::Color32>* inColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors);
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(::Array<UnityEngine::Color32>* inColors, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inColors), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inColors, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector2>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector3>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector2>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector3>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUvsImpl
void UnityEngine::Mesh::SetUvsImpl(int uvIndex, int dim, System::Array* uvs, int arrayStart, int arraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUvsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUvsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uvIndex), ::il2cpp_utils::ExtractType(dim), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(arrayStart), ::il2cpp_utils::ExtractType(arraySize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uvIndex, dim, uvs, arrayStart, arraySize);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector2>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector3>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector4>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector2>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector3>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, ::Array<UnityEngine::Vector4>* uvs, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs, start, length);
}
// Autogenerated method: UnityEngine.Mesh.GetUVs
void UnityEngine::Mesh::GetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector2>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.GetUVs
void UnityEngine::Mesh::GetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector3>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.GetUVs
void UnityEngine::Mesh::GetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(uvs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, channel, uvs);
}
// Autogenerated method: UnityEngine.Mesh.get_vertexAttributeCount
int UnityEngine::Mesh::get_vertexAttributeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_vertexAttributeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexAttributeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributes
::Array<UnityEngine::Rendering::VertexAttributeDescriptor>* UnityEngine::Mesh::GetVertexAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributes
int UnityEngine::Mesh::GetVertexAttributes(::Array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attributes);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttributes
int UnityEngine::Mesh::GetVertexAttributes(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, attributes);
}
// Autogenerated method: UnityEngine.Mesh.PrintErrorCantAccessIndices
void UnityEngine::Mesh::PrintErrorCantAccessIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::PrintErrorCantAccessIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintErrorCantAccessIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmesh
bool UnityEngine::Mesh::CheckCanAccessSubmesh(int submesh, bool errorAboutTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CheckCanAccessSubmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanAccessSubmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(errorAboutTriangles)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, submesh, errorAboutTriangles);
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmeshTriangles
bool UnityEngine::Mesh::CheckCanAccessSubmeshTriangles(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CheckCanAccessSubmeshTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanAccessSubmeshTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmeshIndices
bool UnityEngine::Mesh::CheckCanAccessSubmeshIndices(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CheckCanAccessSubmeshIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanAccessSubmeshIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.get_triangles
::Array<int>* UnityEngine::Mesh::get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_triangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_triangles
void UnityEngine::Mesh::set_triangles(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_triangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
::Array<int>* UnityEngine::Mesh::GetTriangles(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
::Array<int>* UnityEngine::Mesh::GetTriangles(int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
void UnityEngine::Mesh::GetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
void UnityEngine::Mesh::GetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
void UnityEngine::Mesh::GetTriangles(System::Collections::Generic::List_1<uint16_t>* triangles, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
::Array<int>* UnityEngine::Mesh::GetIndices(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
::Array<int>* UnityEngine::Mesh::GetIndices(int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
void UnityEngine::Mesh::GetIndices(System::Collections::Generic::List_1<int>* indices, int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(submesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
void UnityEngine::Mesh::GetIndices(System::Collections::Generic::List_1<int>* indices, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
void UnityEngine::Mesh::GetIndices(System::Collections::Generic::List_1<uint16_t>* indices, int submesh, bool applyBaseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(applyBaseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, submesh, applyBaseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetIndexStart
uint UnityEngine::Mesh::GetIndexStart(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndexStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetIndexCount
uint UnityEngine::Mesh::GetIndexCount(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetIndexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.GetBaseVertex
uint UnityEngine::Mesh::GetBaseVertex(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBaseVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.CheckIndicesArrayRange
void UnityEngine::Mesh::CheckIndicesArrayRange(int valuesLength, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CheckIndicesArrayRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIndicesArrayRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valuesLength), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, valuesLength, start, length);
}
// Autogenerated method: UnityEngine.Mesh.SetTrianglesImpl
void UnityEngine::Mesh::SetTrianglesImpl(int submesh, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* triangles, int trianglesArrayLength, int start, int length, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTrianglesImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrianglesImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(indicesFormat), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(trianglesArrayLength), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, submesh, indicesFormat, triangles, trianglesArrayLength, start, length, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int submesh, bool calculateBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(trianglesStart), ::il2cpp_utils::ExtractType(trianglesLength), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<uint16_t>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<uint16_t>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(trianglesStart), ::il2cpp_utils::ExtractType(trianglesLength), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh, bool calculateBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(trianglesStart), ::il2cpp_utils::ExtractType(trianglesLength), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<uint16_t>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<uint16_t>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(trianglesStart), ::il2cpp_utils::ExtractType(trianglesLength), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh, calculateBounds);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesStart), ::il2cpp_utils::ExtractType(indicesLength), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<uint16_t>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<uint16_t>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesStart), ::il2cpp_utils::ExtractType(indicesLength), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<int>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesStart), ::il2cpp_utils::ExtractType(indicesLength), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<uint16_t>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<uint16_t>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesStart), ::il2cpp_utils::ExtractType(indicesLength), ::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(submesh), ::il2cpp_utils::ExtractType(calculateBounds), ::il2cpp_utils::ExtractType(baseVertex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex);
}
// Autogenerated method: UnityEngine.Mesh.GetBindposes
void UnityEngine::Mesh::GetBindposes(System::Collections::Generic::List_1<UnityEngine::Matrix4x4>* bindposes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBindposes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBindposes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindposes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindposes);
}
// Autogenerated method: UnityEngine.Mesh.GetBoneWeights
void UnityEngine::Mesh::GetBoneWeights(System::Collections::Generic::List_1<UnityEngine::BoneWeight>* boneWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneWeights)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, boneWeights);
}
// Autogenerated method: UnityEngine.Mesh.get_boneWeights
::Array<UnityEngine::BoneWeight>* UnityEngine::Mesh::get_boneWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_boneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::BoneWeight>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.set_boneWeights
void UnityEngine::Mesh::set_boneWeights(::Array<UnityEngine::BoneWeight>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_boneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_boneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mesh.Clear
void UnityEngine::Mesh::Clear(bool keepVertexLayout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keepVertexLayout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keepVertexLayout);
}
// Autogenerated method: UnityEngine.Mesh.Clear
void UnityEngine::Mesh::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateBounds
void UnityEngine::Mesh::RecalculateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateNormals
void UnityEngine::Mesh::RecalculateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.RecalculateTangents
void UnityEngine::Mesh::RecalculateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::RecalculateTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.MarkDynamic
void UnityEngine::Mesh::MarkDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::MarkDynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.UploadMeshData
void UnityEngine::Mesh::UploadMeshData(bool markNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::UploadMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, markNoLongerReadable);
}
// Autogenerated method: UnityEngine.Mesh.Optimize
void UnityEngine::Mesh::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::Optimize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Optimize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.OptimizeIndexBuffers
void UnityEngine::Mesh::OptimizeIndexBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::OptimizeIndexBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimizeIndexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.OptimizeReorderVertexBuffer
void UnityEngine::Mesh::OptimizeReorderVertexBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::OptimizeReorderVertexBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimizeReorderVertexBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Mesh.GetTopology
UnityEngine::MeshTopology UnityEngine::Mesh::GetTopology(int submesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetTopology");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopology", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(submesh)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshTopology, false>(this, ___internal__method, submesh);
}
// Autogenerated method: UnityEngine.Mesh.CombineMeshes
void UnityEngine::Mesh::CombineMeshes(::Array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combine), ::il2cpp_utils::ExtractType(mergeSubMeshes), ::il2cpp_utils::ExtractType(useMatrices), ::il2cpp_utils::ExtractType(hasLightmapData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combine, mergeSubMeshes, useMatrices, hasLightmapData);
}
// Autogenerated method: UnityEngine.Mesh.CombineMeshes
void UnityEngine::Mesh::CombineMeshes(::Array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combine), ::il2cpp_utils::ExtractType(mergeSubMeshes), ::il2cpp_utils::ExtractType(useMatrices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combine, mergeSubMeshes, useMatrices);
}
// Autogenerated method: UnityEngine.Mesh.CombineMeshes
void UnityEngine::Mesh::CombineMeshes(::Array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combine), ::il2cpp_utils::ExtractType(mergeSubMeshes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combine, mergeSubMeshes);
}
// Autogenerated method: UnityEngine.Mesh.CombineMeshes
void UnityEngine::Mesh::CombineMeshes(::Array<UnityEngine::CombineInstance>* combine) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::CombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combine);
}
// Autogenerated method: UnityEngine.Mesh.GetVertexAttribute_Injected
void UnityEngine::Mesh::GetVertexAttribute_Injected(int index, UnityEngine::Rendering::VertexAttributeDescriptor& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetVertexAttribute_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAttribute_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeDescriptor&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, ret);
}
// Autogenerated method: UnityEngine.Mesh.SetSubMesh_Injected
void UnityEngine::Mesh::SetSubMesh_Injected(int index, UnityEngine::Rendering::SubMeshDescriptor& desc, UnityEngine::Rendering::MeshUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::SetSubMesh_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSubMesh_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, desc, flags);
}
// Autogenerated method: UnityEngine.Mesh.GetSubMesh_Injected
void UnityEngine::Mesh::GetSubMesh_Injected(int index, UnityEngine::Rendering::SubMeshDescriptor& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::GetSubMesh_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubMesh_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::SubMeshDescriptor&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, ret);
}
// Autogenerated method: UnityEngine.Mesh.get_bounds_Injected
void UnityEngine::Mesh::get_bounds_Injected(UnityEngine::Bounds& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Mesh.set_bounds_Injected
void UnityEngine::Mesh::set_bounds_Injected(UnityEngine::Bounds& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Mesh::set_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Mesh::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Mesh*)>(&Mesh::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: Mesh::FromInstanceID
// Il2CppName: FromInstanceID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (*)(int)>(&Mesh::FromInstanceID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "FromInstanceID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_indexFormat
// Il2CppName: get_indexFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::IndexFormat (Mesh::*)()>(&Mesh::get_indexFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_indexFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_indexFormat
// Il2CppName: set_indexFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::IndexFormat)>(&Mesh::set_indexFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_indexFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::IndexFormat>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndexBufferParams
// Il2CppName: SetIndexBufferParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::IndexFormat)>(&Mesh::SetIndexBufferParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndexBufferParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::IndexFormat>()});
  }
};
// Writing MetadataGetter for method: Mesh::InternalSetIndexBufferData
// Il2CppName: InternalSetIndexBufferData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::IntPtr, int, int, int, int, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::InternalSetIndexBufferData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "InternalSetIndexBufferData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::InternalSetIndexBufferDataFromArray
// Il2CppName: InternalSetIndexBufferDataFromArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Array*, int, int, int, int, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::InternalSetIndexBufferDataFromArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "InternalSetIndexBufferDataFromArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertexBufferParams
// Il2CppName: SetVertexBufferParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(&Mesh::SetVertexBufferParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetVertexBufferParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::InternalSetVertexBufferData
// Il2CppName: InternalSetVertexBufferData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::IntPtr, int, int, int, int, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::InternalSetVertexBufferData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "InternalSetVertexBufferData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::InternalSetVertexBufferDataFromArray
// Il2CppName: InternalSetVertexBufferDataFromArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Array*, int, int, int, int, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::InternalSetVertexBufferDataFromArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "InternalSetVertexBufferDataFromArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributesAlloc
// Il2CppName: GetVertexAttributesAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Array* (Mesh::*)()>(&Mesh::GetVertexAttributesAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributesAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributesArray
// Il2CppName: GetVertexAttributesArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(&Mesh::GetVertexAttributesArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributesArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributesList
// Il2CppName: GetVertexAttributesList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(&Mesh::GetVertexAttributesList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributesList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributeCountImpl
// Il2CppName: GetVertexAttributeCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::GetVertexAttributeCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributeCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttribute
// Il2CppName: GetVertexAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::VertexAttributeDescriptor (Mesh::*)(int)>(&Mesh::GetVertexAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndexStartImpl
// Il2CppName: GetIndexStartImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetIndexStartImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndexStartImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndexCountImpl
// Il2CppName: GetIndexCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetIndexCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndexCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTrianglesCountImpl
// Il2CppName: GetTrianglesCountImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetTrianglesCountImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTrianglesCountImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBaseVertexImpl
// Il2CppName: GetBaseVertexImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetBaseVertexImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBaseVertexImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTrianglesImpl
// Il2CppName: GetTrianglesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int, bool)>(&Mesh::GetTrianglesImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTrianglesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndicesImpl
// Il2CppName: GetIndicesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int, bool)>(&Mesh::GetIndicesImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndicesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndicesImpl
// Il2CppName: SetIndicesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::MeshTopology, UnityEngine::Rendering::IndexFormat, System::Array*, int, int, bool, int)>(&Mesh::SetIndicesImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndicesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::IndexFormat>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndicesNativeArrayImpl
// Il2CppName: SetIndicesNativeArrayImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::MeshTopology, UnityEngine::Rendering::IndexFormat, System::IntPtr, int, int, bool, int)>(&Mesh::SetIndicesNativeArrayImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndicesNativeArrayImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::IndexFormat>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTrianglesNonAllocImpl
// Il2CppName: GetTrianglesNonAllocImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*&, int, bool)>(&Mesh::GetTrianglesNonAllocImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTrianglesNonAllocImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTrianglesNonAllocImpl16
// Il2CppName: GetTrianglesNonAllocImpl16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*&, int, bool)>(&Mesh::GetTrianglesNonAllocImpl16)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTrianglesNonAllocImpl16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndicesNonAllocImpl
// Il2CppName: GetIndicesNonAllocImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*&, int, bool)>(&Mesh::GetIndicesNonAllocImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndicesNonAllocImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndicesNonAllocImpl16
// Il2CppName: GetIndicesNonAllocImpl16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*&, int, bool)>(&Mesh::GetIndicesNonAllocImpl16)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndicesNonAllocImpl16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::PrintErrorCantAccessChannel
// Il2CppName: PrintErrorCantAccessChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute)>(&Mesh::PrintErrorCantAccessChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "PrintErrorCantAccessChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>()});
  }
};
// Writing MetadataGetter for method: Mesh::HasVertexAttribute
// Il2CppName: HasVertexAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)(UnityEngine::Rendering::VertexAttribute)>(&Mesh::HasVertexAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "HasVertexAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributeDimension
// Il2CppName: GetVertexAttributeDimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(UnityEngine::Rendering::VertexAttribute)>(&Mesh::GetVertexAttributeDimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributeDimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributeFormat
// Il2CppName: GetVertexAttributeFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::VertexAttributeFormat (Mesh::*)(UnityEngine::Rendering::VertexAttribute)>(&Mesh::GetVertexAttributeFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributeFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetArrayForChannelImpl
// Il2CppName: SetArrayForChannelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int, System::Array*, int, int, int)>(&Mesh::SetArrayForChannelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetArrayForChannelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNativeArrayForChannelImpl
// Il2CppName: SetNativeArrayForChannelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int, System::IntPtr, int, int, int)>(&Mesh::SetNativeArrayForChannelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetNativeArrayForChannelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetAllocArrayFromChannelImpl
// Il2CppName: GetAllocArrayFromChannelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Array* (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int)>(&Mesh::GetAllocArrayFromChannelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetAllocArrayFromChannelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetArrayFromChannelImpl
// Il2CppName: GetArrayFromChannelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int, System::Array*)>(&Mesh::GetArrayFromChannelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetArrayFromChannelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_vertexBufferCount
// Il2CppName: get_vertexBufferCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::get_vertexBufferCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_vertexBufferCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetNativeVertexBufferPtr
// Il2CppName: GetNativeVertexBufferPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Mesh::*)(int)>(&Mesh::GetNativeVertexBufferPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetNativeVertexBufferPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetNativeIndexBufferPtr
// Il2CppName: GetNativeIndexBufferPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Mesh::*)()>(&Mesh::GetNativeIndexBufferPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetNativeIndexBufferPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::get_blendShapeCount
// Il2CppName: get_blendShapeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::get_blendShapeCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_blendShapeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::ClearBlendShapes
// Il2CppName: ClearBlendShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::ClearBlendShapes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "ClearBlendShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetBlendShapeName
// Il2CppName: GetBlendShapeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Mesh::*)(int)>(&Mesh::GetBlendShapeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBlendShapeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBlendShapeIndex
// Il2CppName: GetBlendShapeIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(::Il2CppString*)>(&Mesh::GetBlendShapeIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBlendShapeIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBlendShapeFrameCount
// Il2CppName: GetBlendShapeFrameCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(int)>(&Mesh::GetBlendShapeFrameCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBlendShapeFrameCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBlendShapeFrameWeight
// Il2CppName: GetBlendShapeFrameWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Mesh::*)(int, int)>(&Mesh::GetBlendShapeFrameWeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBlendShapeFrameWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBlendShapeFrameVertices
// Il2CppName: GetBlendShapeFrameVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, int, ::Array<UnityEngine::Vector3>*, ::Array<UnityEngine::Vector3>*, ::Array<UnityEngine::Vector3>*)>(&Mesh::GetBlendShapeFrameVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBlendShapeFrameVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::AddBlendShapeFrame
// Il2CppName: AddBlendShapeFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Il2CppString*, float, ::Array<UnityEngine::Vector3>*, ::Array<UnityEngine::Vector3>*, ::Array<UnityEngine::Vector3>*)>(&Mesh::AddBlendShapeFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "AddBlendShapeFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::HasBoneWeights
// Il2CppName: HasBoneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)()>(&Mesh::HasBoneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "HasBoneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetBoneWeightsImpl
// Il2CppName: GetBoneWeightsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::BoneWeight>* (Mesh::*)()>(&Mesh::GetBoneWeightsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBoneWeightsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::SetBoneWeightsImpl
// Il2CppName: SetBoneWeightsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::BoneWeight>*)>(&Mesh::SetBoneWeightsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetBoneWeightsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::BoneWeight>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetBoneWeights
// Il2CppName: SetBoneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(Unity::Collections::NativeArray_1<uint8_t>, Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1>)>(&Mesh::SetBoneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetBoneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Unity::Collections::NativeArray_1<uint8_t>>(), ::il2cpp_utils::ExtractIndependentType<Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1>>()});
  }
};
// Writing MetadataGetter for method: Mesh::InternalSetBoneWeights
// Il2CppName: InternalSetBoneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::IntPtr, int, System::IntPtr, int)>(&Mesh::InternalSetBoneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "InternalSetBoneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetAllBoneWeights
// Il2CppName: GetAllBoneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Unity::Collections::NativeArray_1<UnityEngine::BoneWeight1> (Mesh::*)()>(&Mesh::GetAllBoneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetAllBoneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetBonesPerVertex
// Il2CppName: GetBonesPerVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Unity::Collections::NativeArray_1<uint8_t> (Mesh::*)()>(&Mesh::GetBonesPerVertex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBonesPerVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetAllBoneWeightsArraySize
// Il2CppName: GetAllBoneWeightsArraySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::GetAllBoneWeightsArraySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetAllBoneWeightsArraySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetAllBoneWeightsArray
// Il2CppName: GetAllBoneWeightsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Mesh::*)()>(&Mesh::GetAllBoneWeightsArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetAllBoneWeightsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetBonesPerVertexArray
// Il2CppName: GetBonesPerVertexArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Mesh::*)()>(&Mesh::GetBonesPerVertexArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBonesPerVertexArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetBindposeCount
// Il2CppName: GetBindposeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::GetBindposeCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBindposeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::get_bindposes
// Il2CppName: get_bindposes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Matrix4x4>* (Mesh::*)()>(&Mesh::get_bindposes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_bindposes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_bindposes
// Il2CppName: set_bindposes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Matrix4x4>*)>(&Mesh::set_bindposes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_bindposes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBoneWeightsNonAllocImpl
// Il2CppName: GetBoneWeightsNonAllocImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::BoneWeight>*&)>(&Mesh::GetBoneWeightsNonAllocImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBoneWeightsNonAllocImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::BoneWeight>*&>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBindposesNonAllocImpl
// Il2CppName: GetBindposesNonAllocImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Matrix4x4>*&)>(&Mesh::GetBindposesNonAllocImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBindposesNonAllocImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Matrix4x4>*&>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)()>(&Mesh::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::get_canAccess
// Il2CppName: get_canAccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)()>(&Mesh::get_canAccess)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_canAccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::get_vertexCount
// Il2CppName: get_vertexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::get_vertexCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_vertexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::get_subMeshCount
// Il2CppName: get_subMeshCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::get_subMeshCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_subMeshCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_subMeshCount
// Il2CppName: set_subMeshCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int)>(&Mesh::set_subMeshCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_subMeshCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetSubMesh
// Il2CppName: SetSubMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::SubMeshDescriptor, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::SetSubMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetSubMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::SubMeshDescriptor>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetSubMesh
// Il2CppName: GetSubMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::SubMeshDescriptor (Mesh::*)(int)>(&Mesh::GetSubMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetSubMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_bounds
// Il2CppName: get_bounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (Mesh::*)()>(&Mesh::get_bounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_bounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_bounds
// Il2CppName: set_bounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Bounds)>(&Mesh::set_bounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_bounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds>()});
  }
};
// Writing MetadataGetter for method: Mesh::ClearImpl
// Il2CppName: ClearImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(bool)>(&Mesh::ClearImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "ClearImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateBoundsImpl
// Il2CppName: RecalculateBoundsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateBoundsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateBoundsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateNormalsImpl
// Il2CppName: RecalculateNormalsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateNormalsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateNormalsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateTangentsImpl
// Il2CppName: RecalculateTangentsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateTangentsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateTangentsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::MarkDynamicImpl
// Il2CppName: MarkDynamicImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::MarkDynamicImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "MarkDynamicImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::MarkModified
// Il2CppName: MarkModified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::MarkModified)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "MarkModified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::UploadMeshDataImpl
// Il2CppName: UploadMeshDataImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(bool)>(&Mesh::UploadMeshDataImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "UploadMeshDataImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTopologyImpl
// Il2CppName: GetTopologyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MeshTopology (Mesh::*)(int)>(&Mesh::GetTopologyImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTopologyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetUVDistributionMetric
// Il2CppName: GetUVDistributionMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Mesh::*)(int)>(&Mesh::GetUVDistributionMetric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetUVDistributionMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::CombineMeshesImpl
// Il2CppName: CombineMeshesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::CombineInstance>*, bool, bool, bool)>(&Mesh::CombineMeshesImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CombineMeshesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::CombineInstance>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::OptimizeImpl
// Il2CppName: OptimizeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::OptimizeImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "OptimizeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::OptimizeIndexBuffersImpl
// Il2CppName: OptimizeIndexBuffersImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::OptimizeIndexBuffersImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "OptimizeIndexBuffersImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::OptimizeReorderVertexBufferImpl
// Il2CppName: OptimizeReorderVertexBufferImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::OptimizeReorderVertexBufferImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "OptimizeReorderVertexBufferImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetUVChannel
// Il2CppName: GetUVChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rendering::VertexAttribute (Mesh::*)(int)>(&Mesh::GetUVChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetUVChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::DefaultDimensionForChannel
// Il2CppName: DefaultDimensionForChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Rendering::VertexAttribute)>(&Mesh::DefaultDimensionForChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "DefaultDimensionForChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetAllocArrayFromChannel
// Il2CppName: GetAllocArrayFromChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetAllocArrayFromChannel
// Il2CppName: GetAllocArrayFromChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetSizedArrayForChannel
// Il2CppName: SetSizedArrayForChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int, System::Array*, int, int, int)>(&Mesh::SetSizedArrayForChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetSizedArrayForChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetSizedNativeArrayForChannel
// Il2CppName: SetSizedNativeArrayForChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int, System::IntPtr, int, int, int)>(&Mesh::SetSizedNativeArrayForChannel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetSizedNativeArrayForChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttribute>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetArrayForChannel
// Il2CppName: SetArrayForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetArrayForChannel
// Il2CppName: SetArrayForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetListForChannel
// Il2CppName: SetListForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetListForChannel
// Il2CppName: SetListForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetListForChannel
// Il2CppName: GetListForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetListForChannel
// Il2CppName: GetListForChannel
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::get_vertices
// Il2CppName: get_vertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector3>* (Mesh::*)()>(&Mesh::get_vertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_vertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_vertices
// Il2CppName: set_vertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*)>(&Mesh::set_vertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_vertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_normals
// Il2CppName: get_normals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector3>* (Mesh::*)()>(&Mesh::get_normals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_normals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_normals
// Il2CppName: set_normals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*)>(&Mesh::set_normals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_normals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_tangents
// Il2CppName: get_tangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector4>* (Mesh::*)()>(&Mesh::get_tangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_tangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_tangents
// Il2CppName: set_tangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector4>*)>(&Mesh::set_tangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_tangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv
// Il2CppName: get_uv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv
// Il2CppName: set_uv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv2
// Il2CppName: get_uv2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv2
// Il2CppName: set_uv2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv3
// Il2CppName: get_uv3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv3
// Il2CppName: set_uv3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv4
// Il2CppName: get_uv4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv4
// Il2CppName: set_uv4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv5
// Il2CppName: get_uv5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv5
// Il2CppName: set_uv5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv6
// Il2CppName: get_uv6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv6
// Il2CppName: set_uv6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv7
// Il2CppName: get_uv7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv7
// Il2CppName: set_uv7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_uv8
// Il2CppName: get_uv8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Mesh::*)()>(&Mesh::get_uv8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_uv8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_uv8
// Il2CppName: set_uv8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector2>*)>(&Mesh::set_uv8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_uv8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_colors
// Il2CppName: get_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Mesh::*)()>(&Mesh::get_colors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_colors
// Il2CppName: set_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color>*)>(&Mesh::set_colors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_colors32
// Il2CppName: get_colors32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color32>* (Mesh::*)()>(&Mesh::get_colors32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_colors32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_colors32
// Il2CppName: set_colors32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color32>*)>(&Mesh::set_colors32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_colors32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertices
// Il2CppName: GetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::GetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::SetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*, int, int)>(&Mesh::SetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*)>(&Mesh::SetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*, int, int)>(&Mesh::SetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetVertices
// Il2CppName: SetVertices
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetNormals
// Il2CppName: GetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::GetNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::SetNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*, int, int)>(&Mesh::SetNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*)>(&Mesh::SetNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector3>*, int, int)>(&Mesh::SetNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetNormals
// Il2CppName: SetNormals
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetTangents
// Il2CppName: GetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Mesh::GetTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Mesh::SetTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Vector4>*, int, int)>(&Mesh::SetTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector4>*)>(&Mesh::SetTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Vector4>*, int, int)>(&Mesh::SetTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetTangents
// Il2CppName: SetTangents
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetColors
// Il2CppName: GetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Mesh::GetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color>*)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color>*, int, int)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color>*)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color>*, int, int)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetColors
// Il2CppName: GetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color32>*)>(&Mesh::GetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color32>*)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Color32>*, int, int)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color32>*)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::Color32>*, int, int)>(&Mesh::SetColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetColors
// Il2CppName: SetColors
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetUvsImpl
// Il2CppName: SetUvsImpl
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector2>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector2>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector3>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUvsImpl
// Il2CppName: SetUvsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, int, System::Array*, int, int)>(&Mesh::SetUvsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUvsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector2>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector3>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector4>*)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector2>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector3>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, ::Array<UnityEngine::Vector4>*, int, int)>(&Mesh::SetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetUVs
// Il2CppName: SetUVs
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetUVsImpl
// Il2CppName: GetUVsImpl
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetUVs
// Il2CppName: GetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector2>*)>(&Mesh::GetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetUVs
// Il2CppName: GetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&Mesh::GetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetUVs
// Il2CppName: GetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&Mesh::GetUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_vertexAttributeCount
// Il2CppName: get_vertexAttributeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)()>(&Mesh::get_vertexAttributeCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_vertexAttributeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributes
// Il2CppName: GetVertexAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rendering::VertexAttributeDescriptor>* (Mesh::*)()>(&Mesh::GetVertexAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributes
// Il2CppName: GetVertexAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(&Mesh::GetVertexAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rendering::VertexAttributeDescriptor>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttributes
// Il2CppName: GetVertexAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(&Mesh::GetVertexAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Rendering::VertexAttributeDescriptor>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetVertexBufferData
// Il2CppName: SetVertexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetVertexBufferData
// Il2CppName: SetVertexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetVertexBufferData
// Il2CppName: SetVertexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::PrintErrorCantAccessIndices
// Il2CppName: PrintErrorCantAccessIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::PrintErrorCantAccessIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "PrintErrorCantAccessIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::CheckCanAccessSubmesh
// Il2CppName: CheckCanAccessSubmesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)(int, bool)>(&Mesh::CheckCanAccessSubmesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CheckCanAccessSubmesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::CheckCanAccessSubmeshTriangles
// Il2CppName: CheckCanAccessSubmeshTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)(int)>(&Mesh::CheckCanAccessSubmeshTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CheckCanAccessSubmeshTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::CheckCanAccessSubmeshIndices
// Il2CppName: CheckCanAccessSubmeshIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mesh::*)(int)>(&Mesh::CheckCanAccessSubmeshIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CheckCanAccessSubmeshIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_triangles
// Il2CppName: get_triangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)()>(&Mesh::get_triangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_triangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_triangles
// Il2CppName: set_triangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*)>(&Mesh::set_triangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_triangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTriangles
// Il2CppName: GetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int)>(&Mesh::GetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTriangles
// Il2CppName: GetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int, bool)>(&Mesh::GetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTriangles
// Il2CppName: GetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int)>(&Mesh::GetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTriangles
// Il2CppName: GetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, bool)>(&Mesh::GetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetTriangles
// Il2CppName: GetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, int, bool)>(&Mesh::GetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndices
// Il2CppName: GetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int)>(&Mesh::GetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndices
// Il2CppName: GetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (Mesh::*)(int, bool)>(&Mesh::GetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndices
// Il2CppName: GetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int)>(&Mesh::GetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndices
// Il2CppName: GetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, bool)>(&Mesh::GetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndices
// Il2CppName: GetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, int, bool)>(&Mesh::GetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndexBufferData
// Il2CppName: SetIndexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetIndexBufferData
// Il2CppName: SetIndexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetIndexBufferData
// Il2CppName: SetIndexBufferData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::GetIndexStart
// Il2CppName: GetIndexStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetIndexStart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndexStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetIndexCount
// Il2CppName: GetIndexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetIndexCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetIndexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBaseVertex
// Il2CppName: GetBaseVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Mesh::*)(int)>(&Mesh::GetBaseVertex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBaseVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::CheckIndicesArrayRange
// Il2CppName: CheckIndicesArrayRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, int, int)>(&Mesh::CheckIndicesArrayRange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CheckIndicesArrayRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTrianglesImpl
// Il2CppName: SetTrianglesImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::IndexFormat, System::Array*, int, int, int, bool, int)>(&Mesh::SetTrianglesImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTrianglesImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::IndexFormat>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, int, bool)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, int, int, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*, int, int, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, bool)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, int, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetTriangles
// Il2CppName: SetTriangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, int, int, int, bool, int)>(&Mesh::SetTriangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetTriangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, UnityEngine::MeshTopology, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, UnityEngine::MeshTopology, int, bool)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<int>*, int, int, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<uint16_t>*, int, int, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<int>*, int, int, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetIndices
// Il2CppName: SetIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<uint16_t>*, int, int, UnityEngine::MeshTopology, int, bool, int)>(&Mesh::SetIndices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint16_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::MeshTopology>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBindposes
// Il2CppName: GetBindposes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*)>(&Mesh::GetBindposes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBindposes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Matrix4x4>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetBoneWeights
// Il2CppName: GetBoneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(System::Collections::Generic::List_1<UnityEngine::BoneWeight>*)>(&Mesh::GetBoneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetBoneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::BoneWeight>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_boneWeights
// Il2CppName: get_boneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::BoneWeight>* (Mesh::*)()>(&Mesh::get_boneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_boneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::set_boneWeights
// Il2CppName: set_boneWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::BoneWeight>*)>(&Mesh::set_boneWeights)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_boneWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::BoneWeight>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(bool)>(&Mesh::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateBounds
// Il2CppName: RecalculateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateNormals
// Il2CppName: RecalculateNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateNormals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::RecalculateTangents
// Il2CppName: RecalculateTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::RecalculateTangents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "RecalculateTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::MarkDynamic
// Il2CppName: MarkDynamic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::MarkDynamic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "MarkDynamic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::UploadMeshData
// Il2CppName: UploadMeshData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(bool)>(&Mesh::UploadMeshData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "UploadMeshData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::Optimize
// Il2CppName: Optimize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::Optimize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "Optimize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::OptimizeIndexBuffers
// Il2CppName: OptimizeIndexBuffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::OptimizeIndexBuffers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "OptimizeIndexBuffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::OptimizeReorderVertexBuffer
// Il2CppName: OptimizeReorderVertexBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::OptimizeReorderVertexBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "OptimizeReorderVertexBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mesh::GetTopology
// Il2CppName: GetTopology
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MeshTopology (Mesh::*)(int)>(&Mesh::GetTopology)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetTopology", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Mesh::CombineMeshes
// Il2CppName: CombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::CombineInstance>*, bool, bool, bool)>(&Mesh::CombineMeshes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::CombineInstance>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::CombineMeshes
// Il2CppName: CombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::CombineInstance>*, bool, bool)>(&Mesh::CombineMeshes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::CombineInstance>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::CombineMeshes
// Il2CppName: CombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::CombineInstance>*, bool)>(&Mesh::CombineMeshes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::CombineInstance>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mesh::CombineMeshes
// Il2CppName: CombineMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(::Array<UnityEngine::CombineInstance>*)>(&Mesh::CombineMeshes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "CombineMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::CombineInstance>*>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetVertexAttribute_Injected
// Il2CppName: GetVertexAttribute_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::VertexAttributeDescriptor&)>(&Mesh::GetVertexAttribute_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetVertexAttribute_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::VertexAttributeDescriptor&>()});
  }
};
// Writing MetadataGetter for method: Mesh::SetSubMesh_Injected
// Il2CppName: SetSubMesh_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::SubMeshDescriptor&, UnityEngine::Rendering::MeshUpdateFlags)>(&Mesh::SetSubMesh_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "SetSubMesh_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::SubMeshDescriptor&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::MeshUpdateFlags>()});
  }
};
// Writing MetadataGetter for method: Mesh::GetSubMesh_Injected
// Il2CppName: GetSubMesh_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(int, UnityEngine::Rendering::SubMeshDescriptor&)>(&Mesh::GetSubMesh_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "GetSubMesh_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::SubMeshDescriptor&>()});
  }
};
// Writing MetadataGetter for method: Mesh::get_bounds_Injected
// Il2CppName: get_bounds_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Bounds&)>(&Mesh::get_bounds_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "get_bounds_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: Mesh::set_bounds_Injected
// Il2CppName: set_bounds_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)(UnityEngine::Bounds&)>(&Mesh::set_bounds_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), "set_bounds_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: Mesh::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mesh::*)()>(&Mesh::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mesh*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.BoneWeight
#include "UnityEngine/BoneWeight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoneWeight.get_weight0
float UnityEngine::BoneWeight::get_weight0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_weight0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_weight0
void UnityEngine::BoneWeight::set_weight0(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_weight0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_weight0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_weight1
float UnityEngine::BoneWeight::get_weight1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_weight1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_weight1
void UnityEngine::BoneWeight::set_weight1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_weight1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_weight1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_weight2
float UnityEngine::BoneWeight::get_weight2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_weight2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_weight2
void UnityEngine::BoneWeight::set_weight2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_weight2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_weight2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_weight3
float UnityEngine::BoneWeight::get_weight3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_weight3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_weight3
void UnityEngine::BoneWeight::set_weight3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_weight3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_weight3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_boneIndex0
int UnityEngine::BoneWeight::get_boneIndex0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_boneIndex0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_boneIndex0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_boneIndex0
void UnityEngine::BoneWeight::set_boneIndex0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_boneIndex0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_boneIndex0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_boneIndex1
int UnityEngine::BoneWeight::get_boneIndex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_boneIndex1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_boneIndex1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_boneIndex1
void UnityEngine::BoneWeight::set_boneIndex1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_boneIndex1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_boneIndex1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_boneIndex2
int UnityEngine::BoneWeight::get_boneIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_boneIndex2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_boneIndex2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_boneIndex2
void UnityEngine::BoneWeight::set_boneIndex2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_boneIndex2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_boneIndex2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.get_boneIndex3
int UnityEngine::BoneWeight::get_boneIndex3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::get_boneIndex3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_boneIndex3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.set_boneIndex3
void UnityEngine::BoneWeight::set_boneIndex3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::set_boneIndex3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_boneIndex3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoneWeight.Equals
bool UnityEngine::BoneWeight::Equals(UnityEngine::BoneWeight other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.BoneWeight.GetHashCode
int UnityEngine::BoneWeight::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight.Equals
bool UnityEngine::BoneWeight::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: BoneWeight::get_weight0
// Il2CppName: get_weight0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BoneWeight::*)()>(&BoneWeight::get_weight0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_weight0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_weight0
// Il2CppName: set_weight0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(float)>(&BoneWeight::set_weight0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_weight0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_weight1
// Il2CppName: get_weight1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BoneWeight::*)()>(&BoneWeight::get_weight1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_weight1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_weight1
// Il2CppName: set_weight1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(float)>(&BoneWeight::set_weight1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_weight1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_weight2
// Il2CppName: get_weight2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BoneWeight::*)()>(&BoneWeight::get_weight2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_weight2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_weight2
// Il2CppName: set_weight2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(float)>(&BoneWeight::set_weight2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_weight2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_weight3
// Il2CppName: get_weight3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BoneWeight::*)()>(&BoneWeight::get_weight3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_weight3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_weight3
// Il2CppName: set_weight3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(float)>(&BoneWeight::set_weight3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_weight3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_boneIndex0
// Il2CppName: get_boneIndex0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight::*)()>(&BoneWeight::get_boneIndex0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_boneIndex0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_boneIndex0
// Il2CppName: set_boneIndex0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(int)>(&BoneWeight::set_boneIndex0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_boneIndex0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_boneIndex1
// Il2CppName: get_boneIndex1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight::*)()>(&BoneWeight::get_boneIndex1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_boneIndex1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_boneIndex1
// Il2CppName: set_boneIndex1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(int)>(&BoneWeight::set_boneIndex1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_boneIndex1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_boneIndex2
// Il2CppName: get_boneIndex2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight::*)()>(&BoneWeight::get_boneIndex2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_boneIndex2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_boneIndex2
// Il2CppName: set_boneIndex2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(int)>(&BoneWeight::set_boneIndex2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_boneIndex2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::get_boneIndex3
// Il2CppName: get_boneIndex3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight::*)()>(&BoneWeight::get_boneIndex3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "get_boneIndex3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::set_boneIndex3
// Il2CppName: set_boneIndex3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BoneWeight::*)(int)>(&BoneWeight::set_boneIndex3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "set_boneIndex3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BoneWeight::*)(UnityEngine::BoneWeight)>(&BoneWeight::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::BoneWeight>()});
  }
};
// Writing MetadataGetter for method: BoneWeight::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight::*)()>(&BoneWeight::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BoneWeight::*)(::Il2CppObject*)>(&BoneWeight::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.BoneWeight1
#include "UnityEngine/BoneWeight1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoneWeight1.get_weight
float UnityEngine::BoneWeight1::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight1::get_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight1.get_boneIndex
int UnityEngine::BoneWeight1::get_boneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight1::get_boneIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_boneIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoneWeight1.Equals
bool UnityEngine::BoneWeight1::Equals(UnityEngine::BoneWeight1 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight1::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.BoneWeight1.Equals
bool UnityEngine::BoneWeight1::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight1::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.BoneWeight1.GetHashCode
int UnityEngine::BoneWeight1::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::BoneWeight1::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: BoneWeight1::get_weight
// Il2CppName: get_weight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BoneWeight1::*)()>(&BoneWeight1::get_weight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight1), "get_weight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight1::get_boneIndex
// Il2CppName: get_boneIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight1::*)()>(&BoneWeight1::get_boneIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight1), "get_boneIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BoneWeight1::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BoneWeight1::*)(UnityEngine::BoneWeight1)>(&BoneWeight1::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight1), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::BoneWeight1>()});
  }
};
// Writing MetadataGetter for method: BoneWeight1::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BoneWeight1::*)(::Il2CppObject*)>(&BoneWeight1::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight1), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: BoneWeight1::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BoneWeight1::*)()>(&BoneWeight1::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BoneWeight1), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rendering.TextureDimension
#include "UnityEngine/Rendering/TextureDimension.hpp"
// Including type: UnityEngine.TextureWrapMode
#include "UnityEngine/TextureWrapMode.hpp"
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.FormatUsage
#include "UnityEngine/Experimental/Rendering/FormatUsage.hpp"
// Including type: UnityEngine.UnityException
#include "UnityEngine/UnityException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 GenerateAllMips
int UnityEngine::Texture::_get_GenerateAllMips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::_get_GenerateAllMips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Texture", "GenerateAllMips"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 GenerateAllMips
void UnityEngine::Texture::_set_GenerateAllMips(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::_set_GenerateAllMips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Texture", "GenerateAllMips", value));
}
// Autogenerated method: UnityEngine.Texture.get_mipmapCount
int UnityEngine::Texture::get_mipmapCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_mipmapCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mipmapCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.GetDataWidth
int UnityEngine::Texture::GetDataWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::GetDataWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.GetDataHeight
int UnityEngine::Texture::GetDataHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::GetDataHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.get_width
int UnityEngine::Texture::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_width");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.set_width
void UnityEngine::Texture::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_width");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.get_height
int UnityEngine::Texture::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_height");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.set_height
void UnityEngine::Texture::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_height");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.set_dimension
void UnityEngine::Texture::set_dimension(UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_dimension");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.get_isReadable
bool UnityEngine::Texture::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.get_wrapMode
UnityEngine::TextureWrapMode UnityEngine::Texture::get_wrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextureWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.set_wrapMode
void UnityEngine::Texture::set_wrapMode(UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.set_filterMode
void UnityEngine::Texture::set_filterMode(UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_filterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.set_mipMapBias
void UnityEngine::Texture::set_mipMapBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::set_mipMapBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mipMapBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture.get_texelSize
UnityEngine::Vector2 UnityEngine::Texture::get_texelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_texelSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.GetNativeTexturePtr
System::IntPtr UnityEngine::Texture::GetNativeTexturePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::GetNativeTexturePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeTexturePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture.ValidateFormat
bool UnityEngine::Texture::ValidateFormat(UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::ValidateFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Texture.ValidateFormat
bool UnityEngine::Texture::ValidateFormat(UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::ValidateFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.Texture.CreateNonReadableException
UnityEngine::UnityException* UnityEngine::Texture::CreateNonReadableException(UnityEngine::Texture* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::CreateNonReadableException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNonReadableException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UnityException*, false>(this, ___internal__method, t);
}
// Autogenerated method: UnityEngine.Texture.get_texelSize_Injected
void UnityEngine::Texture::get_texelSize_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::get_texelSize_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texelSize_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Texture..cctor
void UnityEngine::Texture::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Texture::get_mipmapCount
// Il2CppName: get_mipmapCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture::*)()>(&Texture::get_mipmapCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_mipmapCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::GetDataWidth
// Il2CppName: GetDataWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture::*)()>(&Texture::GetDataWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "GetDataWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::GetDataHeight
// Il2CppName: GetDataHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture::*)()>(&Texture::GetDataHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "GetDataHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture::*)()>(&Texture::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(int)>(&Texture::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture::*)()>(&Texture::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(int)>(&Texture::set_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture::set_dimension
// Il2CppName: set_dimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(UnityEngine::Rendering::TextureDimension)>(&Texture::set_dimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_dimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::TextureDimension>()});
  }
};
// Writing MetadataGetter for method: Texture::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture::*)()>(&Texture::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::get_wrapMode
// Il2CppName: get_wrapMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextureWrapMode (Texture::*)()>(&Texture::get_wrapMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_wrapMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::set_wrapMode
// Il2CppName: set_wrapMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(UnityEngine::TextureWrapMode)>(&Texture::set_wrapMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_wrapMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureWrapMode>()});
  }
};
// Writing MetadataGetter for method: Texture::set_filterMode
// Il2CppName: set_filterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(UnityEngine::FilterMode)>(&Texture::set_filterMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_filterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::FilterMode>()});
  }
};
// Writing MetadataGetter for method: Texture::set_mipMapBias
// Il2CppName: set_mipMapBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(float)>(&Texture::set_mipMapBias)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "set_mipMapBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Texture::get_texelSize
// Il2CppName: get_texelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Texture::*)()>(&Texture::get_texelSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_texelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::GetNativeTexturePtr
// Il2CppName: GetNativeTexturePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Texture::*)()>(&Texture::GetNativeTexturePtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "GetNativeTexturePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::ValidateFormat
// Il2CppName: ValidateFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture::*)(UnityEngine::TextureFormat)>(&Texture::ValidateFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "ValidateFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>()});
  }
};
// Writing MetadataGetter for method: Texture::ValidateFormat
// Il2CppName: ValidateFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture::*)(UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::FormatUsage)>(&Texture::ValidateFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "ValidateFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::FormatUsage>()});
  }
};
// Writing MetadataGetter for method: Texture::CreateNonReadableException
// Il2CppName: CreateNonReadableException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UnityException* (Texture::*)(UnityEngine::Texture*)>(&Texture::CreateNonReadableException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "CreateNonReadableException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: Texture::get_texelSize_Injected
// Il2CppName: get_texelSize_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)(UnityEngine::Vector2&)>(&Texture::get_texelSize_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), "get_texelSize_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: Texture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)()>(&Texture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture::*)()>(&Texture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Texture::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Texture2D.get_format
UnityEngine::TextureFormat UnityEngine::Texture2D::get_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextureFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_whiteTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_whiteTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_whiteTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_whiteTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_blackTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_blackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_blackTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_blackTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_redTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_redTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_redTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_redTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_grayTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_grayTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_grayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_grayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_linearGrayTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_linearGrayTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_linearGrayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_linearGrayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_normalTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::get_normalTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_normalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "get_normalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.Compress
void UnityEngine::Texture2D::Compress(bool highQuality) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highQuality)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, highQuality);
}
// Autogenerated method: UnityEngine.Texture2D.Internal_CreateImpl
bool UnityEngine::Texture2D::Internal_CreateImpl(UnityEngine::Texture2D* mono, int w, int h, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(nativeTex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, mipCount, format, flags, nativeTex);
}
// Autogenerated method: UnityEngine.Texture2D.Internal_Create
void UnityEngine::Texture2D::Internal_Create(UnityEngine::Texture2D* mono, int w, int h, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(nativeTex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, mipCount, format, flags, nativeTex);
}
// Autogenerated method: UnityEngine.Texture2D.ApplyImpl
void UnityEngine::Texture2D::ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ApplyImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMipmaps), ::il2cpp_utils::ExtractType(makeNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture2D.ResizeImpl
bool UnityEngine::Texture2D::ResizeImpl(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ResizeImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, width, height);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixelImpl
void UnityEngine::Texture2D::SetPixelImpl(int image, int x, int y, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, image, x, y, color);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelImpl
UnityEngine::Color UnityEngine::Texture2D::GetPixelImpl(int image, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, image, x, y);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelBilinearImpl
UnityEngine::Color UnityEngine::Texture2D::GetPixelBilinearImpl(int image, float u, float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelBilinearImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelBilinearImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, image, u, v);
}
// Autogenerated method: UnityEngine.Texture2D.ResizeWithFormatImpl
bool UnityEngine::Texture2D::ResizeWithFormatImpl(int width, int height, UnityEngine::TextureFormat format, bool hasMipMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ResizeWithFormatImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeWithFormatImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(hasMipMap)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, width, height, format, hasMipMap);
}
// Autogenerated method: UnityEngine.Texture2D.ReadPixelsImpl
void UnityEngine::Texture2D::ReadPixelsImpl(UnityEngine::Rect source, int destX, int destY, bool recalculateMipMaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ReadPixelsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPixelsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destX), ::il2cpp_utils::ExtractType(destY), ::il2cpp_utils::ExtractType(recalculateMipMaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, destX, destY, recalculateMipMaps);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixelsImpl
void UnityEngine::Texture2D::SetPixelsImpl(int x, int y, int w, int h, ::Array<UnityEngine::Color>* pixel, int miplevel, int frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelsImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(pixel), ::il2cpp_utils::ExtractType(miplevel), ::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, w, h, pixel, miplevel, frame);
}
// Autogenerated method: UnityEngine.Texture2D.LoadRawTextureDataImpl
bool UnityEngine::Texture2D::LoadRawTextureDataImpl(System::IntPtr data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::LoadRawTextureDataImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRawTextureDataImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, size);
}
// Autogenerated method: UnityEngine.Texture2D.LoadRawTextureDataImplArray
bool UnityEngine::Texture2D::LoadRawTextureDataImplArray(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::LoadRawTextureDataImplArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRawTextureDataImplArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixelDataImplArray
bool UnityEngine::Texture2D::SetPixelDataImplArray(System::Array* data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelDataImplArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelDataImplArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(elementSize), ::il2cpp_utils::ExtractType(dataArraySize), ::il2cpp_utils::ExtractType(sourceDataStartIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, mipLevel, elementSize, dataArraySize, sourceDataStartIndex);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixelDataImpl
bool UnityEngine::Texture2D::SetPixelDataImpl(System::IntPtr data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelDataImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelDataImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(elementSize), ::il2cpp_utils::ExtractType(dataArraySize), ::il2cpp_utils::ExtractType(sourceDataStartIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, mipLevel, elementSize, dataArraySize, sourceDataStartIndex);
}
// Autogenerated method: UnityEngine.Texture2D.GetWritableImageData
System::IntPtr UnityEngine::Texture2D::GetWritableImageData(int frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetWritableImageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWritableImageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, frame);
}
// Autogenerated method: UnityEngine.Texture2D.GetRawImageDataSize
int64_t UnityEngine::Texture2D::GetRawImageDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetRawImageDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawImageDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.GenerateAtlasImpl
void UnityEngine::Texture2D::GenerateAtlasImpl(::Array<UnityEngine::Vector2>* sizes, int padding, int atlasSize, ::Array<UnityEngine::Rect>*& rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GenerateAtlasImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "GenerateAtlasImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizes), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(atlasSize), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rect>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sizes, padding, atlasSize, rect);
}
// Autogenerated method: UnityEngine.Texture2D.get_isPreProcessed
bool UnityEngine::Texture2D::get_isPreProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_isPreProcessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPreProcessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_streamingMipmaps
bool UnityEngine::Texture2D::get_streamingMipmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_streamingMipmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_streamingMipmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_streamingMipmapsPriority
int UnityEngine::Texture2D::get_streamingMipmapsPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_streamingMipmapsPriority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_streamingMipmapsPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_requestedMipmapLevel
int UnityEngine::Texture2D::get_requestedMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_requestedMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestedMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.set_requestedMipmapLevel
void UnityEngine::Texture2D::set_requestedMipmapLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::set_requestedMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requestedMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture2D.get_minimumMipmapLevel
int UnityEngine::Texture2D::get_minimumMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_minimumMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minimumMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.set_minimumMipmapLevel
void UnityEngine::Texture2D::set_minimumMipmapLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::set_minimumMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minimumMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture2D.get_loadAllMips
bool UnityEngine::Texture2D::get_loadAllMips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_loadAllMips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadAllMips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.set_loadAllMips
void UnityEngine::Texture2D::set_loadAllMips(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::set_loadAllMips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loadAllMips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Texture2D.get_calculatedMipmapLevel
int UnityEngine::Texture2D::get_calculatedMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_calculatedMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_calculatedMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_desiredMipmapLevel
int UnityEngine::Texture2D::get_desiredMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_desiredMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_desiredMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_loadingMipmapLevel
int UnityEngine::Texture2D::get_loadingMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_loadingMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadingMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.get_loadedMipmapLevel
int UnityEngine::Texture2D::get_loadedMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_loadedMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadedMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.ClearRequestedMipmapLevel
void UnityEngine::Texture2D::ClearRequestedMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ClearRequestedMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRequestedMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.IsRequestedMipmapLevelLoaded
bool UnityEngine::Texture2D::IsRequestedMipmapLevelLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::IsRequestedMipmapLevelLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRequestedMipmapLevelLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.ClearMinimumMipmapLevel
void UnityEngine::Texture2D::ClearMinimumMipmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ClearMinimumMipmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMinimumMipmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.UpdateExternalTexture
void UnityEngine::Texture2D::UpdateExternalTexture(System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::UpdateExternalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateExternalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeTex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nativeTex);
}
// Autogenerated method: UnityEngine.Texture2D.SetAllPixels32
void UnityEngine::Texture2D::SetAllPixels32(::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetAllPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetBlockOfPixels32
void UnityEngine::Texture2D::SetBlockOfPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetBlockOfPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlockOfPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, blockWidth, blockHeight, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.GetRawTextureData
::Array<uint8_t>* UnityEngine::Texture2D::GetRawTextureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetRawTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Texture2D::GetPixels(int x, int y, int blockWidth, int blockHeight, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(miplevel)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, x, y, blockWidth, blockHeight, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Texture2D::GetPixels(int x, int y, int blockWidth, int blockHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, x, y, blockWidth, blockHeight);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels32
::Array<UnityEngine::Color32>* UnityEngine::Texture2D::GetPixels32(int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(miplevel)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color32>*, false>(this, ___internal__method, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels32
::Array<UnityEngine::Color32>* UnityEngine::Texture2D::GetPixels32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color32>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.PackTextures
::Array<UnityEngine::Rect>* UnityEngine::Texture2D::PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding, int maximumAtlasSize, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(maximumAtlasSize), ::il2cpp_utils::ExtractType(makeNoLongerReadable)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Rect>*, false>(this, ___internal__method, textures, padding, maximumAtlasSize, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture2D.PackTextures
::Array<UnityEngine::Rect>* UnityEngine::Texture2D::PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding, int maximumAtlasSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(maximumAtlasSize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Rect>*, false>(this, ___internal__method, textures, padding, maximumAtlasSize);
}
// Autogenerated method: UnityEngine.Texture2D.PackTextures
::Array<UnityEngine::Rect>* UnityEngine::Texture2D::PackTextures(::Array<UnityEngine::Texture2D*>* textures, int padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(padding)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Rect>*, false>(this, ___internal__method, textures, padding);
}
// Autogenerated method: UnityEngine.Texture2D.CreateExternalTexture
UnityEngine::Texture2D* UnityEngine::Texture2D::CreateExternalTexture(int width, int height, UnityEngine::TextureFormat format, bool mipChain, bool linear, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::CreateExternalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "CreateExternalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(mipChain), ::il2cpp_utils::ExtractType(linear), ::il2cpp_utils::ExtractType(nativeTex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, format, mipChain, linear, nativeTex);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixel
void UnityEngine::Texture2D::SetPixel(int x, int y, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, color);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixel
void UnityEngine::Texture2D::SetPixel(int x, int y, UnityEngine::Color color, int mipLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(mipLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, color, mipLevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels
void UnityEngine::Texture2D::SetPixels(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, blockWidth, blockHeight, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels
void UnityEngine::Texture2D::SetPixels(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, blockWidth, blockHeight, colors);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels
void UnityEngine::Texture2D::SetPixels(::Array<UnityEngine::Color>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels
void UnityEngine::Texture2D::SetPixels(::Array<UnityEngine::Color>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixel
UnityEngine::Color UnityEngine::Texture2D::GetPixel(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixel
UnityEngine::Color UnityEngine::Texture2D::GetPixel(int x, int y, int mipLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(mipLevel)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, x, y, mipLevel);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelBilinear
UnityEngine::Color UnityEngine::Texture2D::GetPixelBilinear(float u, float v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelBilinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelBilinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, u, v);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelBilinear
UnityEngine::Color UnityEngine::Texture2D::GetPixelBilinear(float u, float v, int mipLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelBilinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelBilinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(mipLevel)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, u, v, mipLevel);
}
// Autogenerated method: UnityEngine.Texture2D.LoadRawTextureData
void UnityEngine::Texture2D::LoadRawTextureData(System::IntPtr data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::LoadRawTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRawTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, size);
}
// Autogenerated method: UnityEngine.Texture2D.LoadRawTextureData
void UnityEngine::Texture2D::LoadRawTextureData(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::LoadRawTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRawTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.Texture2D.Apply
void UnityEngine::Texture2D::Apply(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMipmaps), ::il2cpp_utils::ExtractType(makeNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture2D.Apply
void UnityEngine::Texture2D::Apply(bool updateMipmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMipmaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps);
}
// Autogenerated method: UnityEngine.Texture2D.Apply
void UnityEngine::Texture2D::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.Resize
bool UnityEngine::Texture2D::Resize(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, width, height);
}
// Autogenerated method: UnityEngine.Texture2D.Resize
bool UnityEngine::Texture2D::Resize(int width, int height, UnityEngine::TextureFormat format, bool hasMipMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(hasMipMap)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, width, height, format, hasMipMap);
}
// Autogenerated method: UnityEngine.Texture2D.ReadPixels
void UnityEngine::Texture2D::ReadPixels(UnityEngine::Rect source, int destX, int destY, bool recalculateMipMaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ReadPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destX), ::il2cpp_utils::ExtractType(destY), ::il2cpp_utils::ExtractType(recalculateMipMaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, destX, destY, recalculateMipMaps);
}
// Autogenerated method: UnityEngine.Texture2D.ReadPixels
void UnityEngine::Texture2D::ReadPixels(UnityEngine::Rect source, int destX, int destY) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ReadPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destX), ::il2cpp_utils::ExtractType(destY)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, destX, destY);
}
// Autogenerated method: UnityEngine.Texture2D.GenerateAtlas
bool UnityEngine::Texture2D::GenerateAtlas(::Array<UnityEngine::Vector2>* sizes, int padding, int atlasSize, System::Collections::Generic::List_1<UnityEngine::Rect>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GenerateAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2D", "GenerateAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizes), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(atlasSize), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sizes, padding, atlasSize, results);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels32
void UnityEngine::Texture2D::SetPixels32(::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels32
void UnityEngine::Texture2D::SetPixels32(::Array<UnityEngine::Color32>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels32
void UnityEngine::Texture2D::SetPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, blockWidth, blockHeight, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixels32
void UnityEngine::Texture2D::SetPixels32(int x, int y, int blockWidth, int blockHeight, ::Array<UnityEngine::Color32>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(blockWidth), ::il2cpp_utils::ExtractType(blockHeight), ::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, blockWidth, blockHeight, colors);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Texture2D::GetPixels(int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(miplevel)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, miplevel);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Texture2D::GetPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2D.SetPixelImpl_Injected
void UnityEngine::Texture2D::SetPixelImpl_Injected(int image, int x, int y, UnityEngine::Color& color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::SetPixelImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, image, x, y, color);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelImpl_Injected
void UnityEngine::Texture2D::GetPixelImpl_Injected(int image, int x, int y, UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, image, x, y, ret);
}
// Autogenerated method: UnityEngine.Texture2D.GetPixelBilinearImpl_Injected
void UnityEngine::Texture2D::GetPixelBilinearImpl_Injected(int image, float u, float v, UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::GetPixelBilinearImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelBilinearImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image), ::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, image, u, v, ret);
}
// Autogenerated method: UnityEngine.Texture2D.ReadPixelsImpl_Injected
void UnityEngine::Texture2D::ReadPixelsImpl_Injected(UnityEngine::Rect& source, int destX, int destY, bool recalculateMipMaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::ReadPixelsImpl_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPixelsImpl_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destX), ::il2cpp_utils::ExtractType(destY), ::il2cpp_utils::ExtractType(recalculateMipMaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, destX, destY, recalculateMipMaps);
}
// Autogenerated method: UnityEngine.Texture2D.get_isReadable
bool UnityEngine::Texture2D::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2D::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Texture2D::get_format
// Il2CppName: get_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextureFormat (Texture2D::*)()>(&Texture2D::get_format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_whiteTexture
// Il2CppName: get_whiteTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_whiteTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_whiteTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_blackTexture
// Il2CppName: get_blackTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_blackTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_blackTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_redTexture
// Il2CppName: get_redTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_redTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_redTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_grayTexture
// Il2CppName: get_grayTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_grayTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_grayTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_linearGrayTexture
// Il2CppName: get_linearGrayTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_linearGrayTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_linearGrayTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_normalTexture
// Il2CppName: get_normalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)()>(&Texture2D::get_normalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_normalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::Compress
// Il2CppName: Compress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(bool)>(&Texture2D::Compress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Compress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Texture2D*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&Texture2D::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture2D*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&Texture2D::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ApplyImpl
// Il2CppName: ApplyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(bool, bool)>(&Texture2D::ApplyImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ApplyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ResizeImpl
// Il2CppName: ResizeImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(int, int)>(&Texture2D::ResizeImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ResizeImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixelImpl
// Il2CppName: SetPixelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, UnityEngine::Color)>(&Texture2D::SetPixelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelImpl
// Il2CppName: GetPixelImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(int, int, int)>(&Texture2D::GetPixelImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelBilinearImpl
// Il2CppName: GetPixelBilinearImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(int, float, float)>(&Texture2D::GetPixelBilinearImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelBilinearImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ResizeWithFormatImpl
// Il2CppName: ResizeWithFormatImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&Texture2D::ResizeWithFormatImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ResizeWithFormatImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ReadPixelsImpl
// Il2CppName: ReadPixelsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(UnityEngine::Rect, int, int, bool)>(&Texture2D::ReadPixelsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ReadPixelsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixelsImpl
// Il2CppName: SetPixelsImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*, int, int)>(&Texture2D::SetPixelsImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixelsImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::LoadRawTextureDataImpl
// Il2CppName: LoadRawTextureDataImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(System::IntPtr, int)>(&Texture2D::LoadRawTextureDataImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "LoadRawTextureDataImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::LoadRawTextureDataImplArray
// Il2CppName: LoadRawTextureDataImplArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(::Array<uint8_t>*)>(&Texture2D::LoadRawTextureDataImplArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "LoadRawTextureDataImplArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixelDataImplArray
// Il2CppName: SetPixelDataImplArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(System::Array*, int, int, int, int)>(&Texture2D::SetPixelDataImplArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixelDataImplArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixelDataImpl
// Il2CppName: SetPixelDataImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(System::IntPtr, int, int, int, int)>(&Texture2D::SetPixelDataImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixelDataImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetWritableImageData
// Il2CppName: GetWritableImageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Texture2D::*)(int)>(&Texture2D::GetWritableImageData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetWritableImageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetRawImageDataSize
// Il2CppName: GetRawImageDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (Texture2D::*)()>(&Texture2D::GetRawImageDataSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetRawImageDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::GenerateAtlasImpl
// Il2CppName: GenerateAtlasImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<UnityEngine::Vector2>*, int, int, ::Array<UnityEngine::Rect>*&)>(&Texture2D::GenerateAtlasImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GenerateAtlasImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Rect>*&>()});
  }
};
// Writing MetadataGetter for method: Texture2D::get_isPreProcessed
// Il2CppName: get_isPreProcessed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)()>(&Texture2D::get_isPreProcessed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_isPreProcessed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_streamingMipmaps
// Il2CppName: get_streamingMipmaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)()>(&Texture2D::get_streamingMipmaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_streamingMipmaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_streamingMipmapsPriority
// Il2CppName: get_streamingMipmapsPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_streamingMipmapsPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_streamingMipmapsPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_requestedMipmapLevel
// Il2CppName: get_requestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_requestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_requestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::set_requestedMipmapLevel
// Il2CppName: set_requestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int)>(&Texture2D::set_requestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "set_requestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::get_minimumMipmapLevel
// Il2CppName: get_minimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_minimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_minimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::set_minimumMipmapLevel
// Il2CppName: set_minimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int)>(&Texture2D::set_minimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "set_minimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::get_loadAllMips
// Il2CppName: get_loadAllMips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)()>(&Texture2D::get_loadAllMips)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_loadAllMips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::set_loadAllMips
// Il2CppName: set_loadAllMips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(bool)>(&Texture2D::set_loadAllMips)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "set_loadAllMips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::get_calculatedMipmapLevel
// Il2CppName: get_calculatedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_calculatedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_calculatedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_desiredMipmapLevel
// Il2CppName: get_desiredMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_desiredMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_desiredMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_loadingMipmapLevel
// Il2CppName: get_loadingMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_loadingMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_loadingMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::get_loadedMipmapLevel
// Il2CppName: get_loadedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Texture2D::*)()>(&Texture2D::get_loadedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_loadedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::ClearRequestedMipmapLevel
// Il2CppName: ClearRequestedMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)()>(&Texture2D::ClearRequestedMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ClearRequestedMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::IsRequestedMipmapLevelLoaded
// Il2CppName: IsRequestedMipmapLevelLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)()>(&Texture2D::IsRequestedMipmapLevelLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "IsRequestedMipmapLevelLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::ClearMinimumMipmapLevel
// Il2CppName: ClearMinimumMipmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)()>(&Texture2D::ClearMinimumMipmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ClearMinimumMipmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::UpdateExternalTexture
// Il2CppName: UpdateExternalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(System::IntPtr)>(&Texture2D::UpdateExternalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "UpdateExternalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetAllPixels32
// Il2CppName: SetAllPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<UnityEngine::Color32>*, int)>(&Texture2D::SetAllPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetAllPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetBlockOfPixels32
// Il2CppName: SetBlockOfPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*, int)>(&Texture2D::SetBlockOfPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetBlockOfPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetRawTextureData
// Il2CppName: GetRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Texture2D::*)()>(&Texture2D::GetRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Texture2D::*)(int, int, int, int, int)>(&Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Texture2D::*)(int, int, int, int)>(&Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color32>* (Texture2D::*)(int)>(&Texture2D::GetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels32
// Il2CppName: GetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color32>* (Texture2D::*)()>(&Texture2D::GetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int, int, bool)>(&Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int, int)>(&Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::PackTextures
// Il2CppName: PackTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Rect>* (Texture2D::*)(::Array<UnityEngine::Texture2D*>*, int)>(&Texture2D::PackTextures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "PackTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Texture2D*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int, System::IntPtr)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int, System::IntPtr)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, int, bool, System::IntPtr)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, int, bool, System::IntPtr)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, int, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, int, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int)>(&Texture2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::CreateExternalTexture
// Il2CppName: CreateExternalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (*)(int, int, UnityEngine::TextureFormat, bool, bool, System::IntPtr)>(&Texture2D::CreateExternalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "CreateExternalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixel
// Il2CppName: SetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Color)>(&Texture2D::SetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixel
// Il2CppName: SetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, UnityEngine::Color, int)>(&Texture2D::SetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*, int)>(&Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color>*)>(&Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<UnityEngine::Color>*, int)>(&Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<UnityEngine::Color>*)>(&Texture2D::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixel
// Il2CppName: GetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(int, int)>(&Texture2D::GetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixel
// Il2CppName: GetPixel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(int, int, int)>(&Texture2D::GetPixel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelBilinear
// Il2CppName: GetPixelBilinear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(float, float)>(&Texture2D::GetPixelBilinear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelBilinear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelBilinear
// Il2CppName: GetPixelBilinear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Texture2D::*)(float, float, int)>(&Texture2D::GetPixelBilinear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelBilinear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(System::IntPtr, int)>(&Texture2D::LoadRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "LoadRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<uint8_t>*)>(&Texture2D::LoadRawTextureData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "LoadRawTextureData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::LoadRawTextureData
// Il2CppName: LoadRawTextureData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Texture2D::SetPixelData
// Il2CppName: SetPixelData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Texture2D::SetPixelData
// Il2CppName: SetPixelData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Texture2D::GetRawTextureData
// Il2CppName: GetRawTextureData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(bool, bool)>(&Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(bool)>(&Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)()>(&Texture2D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(int, int)>(&Texture2D::Resize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::Resize
// Il2CppName: Resize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)(int, int, UnityEngine::TextureFormat, bool)>(&Texture2D::Resize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "Resize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ReadPixels
// Il2CppName: ReadPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(UnityEngine::Rect, int, int, bool)>(&Texture2D::ReadPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ReadPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ReadPixels
// Il2CppName: ReadPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(UnityEngine::Rect, int, int)>(&Texture2D::ReadPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ReadPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GenerateAtlas
// Il2CppName: GenerateAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<UnityEngine::Vector2>*, int, int, System::Collections::Generic::List_1<UnityEngine::Rect>*)>(&Texture2D::GenerateAtlas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GenerateAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Rect>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<UnityEngine::Color32>*, int)>(&Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(::Array<UnityEngine::Color32>*)>(&Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*, int)>(&Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, int, ::Array<UnityEngine::Color32>*)>(&Texture2D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Texture2D::*)(int)>(&Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Texture2D::*)()>(&Texture2D::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2D::SetPixelImpl_Injected
// Il2CppName: SetPixelImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, UnityEngine::Color&)>(&Texture2D::SetPixelImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "SetPixelImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelImpl_Injected
// Il2CppName: GetPixelImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, int, int, UnityEngine::Color&)>(&Texture2D::GetPixelImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Texture2D::GetPixelBilinearImpl_Injected
// Il2CppName: GetPixelBilinearImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(int, float, float, UnityEngine::Color&)>(&Texture2D::GetPixelBilinearImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "GetPixelBilinearImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: Texture2D::ReadPixelsImpl_Injected
// Il2CppName: ReadPixelsImpl_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2D::*)(UnityEngine::Rect&, int, int, bool)>(&Texture2D::ReadPixelsImpl_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "ReadPixelsImpl_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2D::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2D::*)()>(&Texture2D::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2D*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
// Including type: UnityEngine.CubemapFace
#include "UnityEngine/CubemapFace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Cubemap.get_format
UnityEngine::TextureFormat UnityEngine::Cubemap::get_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::get_format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextureFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cubemap.Internal_CreateImpl
bool UnityEngine::Cubemap::Internal_CreateImpl(UnityEngine::Cubemap* mono, int ext, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cubemap", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(nativeTex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, ext, mipCount, format, flags, nativeTex);
}
// Autogenerated method: UnityEngine.Cubemap.Internal_Create
void UnityEngine::Cubemap::Internal_Create(UnityEngine::Cubemap* mono, int ext, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cubemap", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(nativeTex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, ext, mipCount, format, flags, nativeTex);
}
// Autogenerated method: UnityEngine.Cubemap.SmoothEdges
void UnityEngine::Cubemap::SmoothEdges(int smoothRegionWidthInPixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::SmoothEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(smoothRegionWidthInPixels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, smoothRegionWidthInPixels);
}
// Autogenerated method: UnityEngine.Cubemap.SmoothEdges
void UnityEngine::Cubemap::SmoothEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::SmoothEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cubemap.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Cubemap::GetPixels(UnityEngine::CubemapFace face, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(miplevel)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, face, miplevel);
}
// Autogenerated method: UnityEngine.Cubemap.GetPixels
::Array<UnityEngine::Color>* UnityEngine::Cubemap::GetPixels(UnityEngine::CubemapFace face) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::GetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(this, ___internal__method, face);
}
// Autogenerated method: UnityEngine.Cubemap.SetPixels
void UnityEngine::Cubemap::SetPixels(::Array<UnityEngine::Color>* colors, UnityEngine::CubemapFace face, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(face), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, face, miplevel);
}
// Autogenerated method: UnityEngine.Cubemap.SetPixels
void UnityEngine::Cubemap::SetPixels(::Array<UnityEngine::Color>* colors, UnityEngine::CubemapFace face) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::SetPixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(face)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, face);
}
// Autogenerated method: UnityEngine.Cubemap.CreateExternalTexture
UnityEngine::Cubemap* UnityEngine::Cubemap::CreateExternalTexture(int width, UnityEngine::TextureFormat format, bool mipmap, System::IntPtr nativeTex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::CreateExternalTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cubemap", "CreateExternalTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(mipmap), ::il2cpp_utils::ExtractType(nativeTex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cubemap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, format, mipmap, nativeTex);
}
// Autogenerated method: UnityEngine.Cubemap.get_isReadable
bool UnityEngine::Cubemap::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cubemap::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Cubemap::get_format
// Il2CppName: get_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextureFormat (Cubemap::*)()>(&Cubemap::get_format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "get_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cubemap::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Cubemap*, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&Cubemap::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cubemap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Cubemap::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Cubemap*, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, System::IntPtr)>(&Cubemap::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Cubemap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Cubemap::SmoothEdges
// Il2CppName: SmoothEdges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int)>(&Cubemap::SmoothEdges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "SmoothEdges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cubemap::SmoothEdges
// Il2CppName: SmoothEdges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)()>(&Cubemap::SmoothEdges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "SmoothEdges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cubemap::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Cubemap::*)(UnityEngine::CubemapFace, int)>(&Cubemap::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cubemap::GetPixels
// Il2CppName: GetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Color>* (Cubemap::*)(UnityEngine::CubemapFace)>(&Cubemap::GetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "GetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>()});
  }
};
// Writing MetadataGetter for method: Cubemap::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(::Array<UnityEngine::Color>*, UnityEngine::CubemapFace, int)>(&Cubemap::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cubemap::SetPixels
// Il2CppName: SetPixels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(::Array<UnityEngine::Color>*, UnityEngine::CubemapFace)>(&Cubemap::SetPixels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "SetPixels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapFace>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, int)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, int)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, int, System::IntPtr)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, int, System::IntPtr)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, bool, System::IntPtr)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, bool, System::IntPtr)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Cubemap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, bool)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cubemap::*)(int, UnityEngine::TextureFormat, bool)>(&Cubemap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Cubemap::CreateExternalTexture
// Il2CppName: CreateExternalTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Cubemap* (*)(int, UnityEngine::TextureFormat, bool, System::IntPtr)>(&Cubemap::CreateExternalTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "CreateExternalTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Cubemap::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cubemap::*)()>(&Cubemap::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cubemap*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Texture3D
#include "UnityEngine/Texture3D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Texture3D.Internal_CreateImpl
bool UnityEngine::Texture3D::Internal_CreateImpl(UnityEngine::Texture3D* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture3D", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture3D.Internal_Create
void UnityEngine::Texture3D::Internal_Create(UnityEngine::Texture3D* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture3D", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture3D.ApplyImpl
void UnityEngine::Texture3D::ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::ApplyImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMipmaps), ::il2cpp_utils::ExtractType(makeNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture3D.SetPixels32
void UnityEngine::Texture3D::SetPixels32(::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(miplevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture3D.SetPixels32
void UnityEngine::Texture3D::SetPixels32(::Array<UnityEngine::Color32>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::SetPixels32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Texture3D.Apply
void UnityEngine::Texture3D::Apply(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMipmaps), ::il2cpp_utils::ExtractType(makeNoLongerReadable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture3D.Apply
void UnityEngine::Texture3D::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture3D.get_isReadable
bool UnityEngine::Texture3D::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture3D::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Texture3D::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Texture3D*, int, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture3D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture3D::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture3D*, int, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture3D*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture3D::ApplyImpl
// Il2CppName: ApplyImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(bool, bool)>(&Texture3D::ApplyImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "ApplyImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture3D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(::Array<UnityEngine::Color32>*, int)>(&Texture3D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture3D::SetPixels32
// Il2CppName: SetPixels32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(::Array<UnityEngine::Color32>*)>(&Texture3D::SetPixels32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "SetPixels32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Color32>*>()});
  }
};
// Writing MetadataGetter for method: Texture3D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture3D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture3D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture3D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::TextureFormat, int)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::TextureFormat, int)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture3D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::TextureFormat, bool)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(int, int, int, UnityEngine::TextureFormat, bool)>(&Texture3D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture3D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)(bool, bool)>(&Texture3D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture3D::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture3D::*)()>(&Texture3D::Apply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture3D::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture3D::*)()>(&Texture3D::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture3D*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Texture2DArray
#include "UnityEngine/Texture2DArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Texture2DArray.get_allSlices
int UnityEngine::Texture2DArray::get_allSlices() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2DArray::get_allSlices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2DArray", "get_allSlices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Texture2DArray.Internal_CreateImpl
bool UnityEngine::Texture2DArray::Internal_CreateImpl(UnityEngine::Texture2DArray* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2DArray::Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2DArray", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture2DArray.Internal_Create
void UnityEngine::Texture2DArray::Internal_Create(UnityEngine::Texture2DArray* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2DArray::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Texture2DArray", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture2DArray.get_isReadable
bool UnityEngine::Texture2DArray::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Texture2DArray::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Texture2DArray::get_allSlices
// Il2CppName: get_allSlices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Texture2DArray::get_allSlices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), "get_allSlices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Texture2DArray::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Texture2DArray*, int, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2DArray*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture2DArray*, int, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2DArray*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, int, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, int, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, bool, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, bool, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Texture2DArray::*)(int, int, int, UnityEngine::TextureFormat, bool)>(&Texture2DArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Texture2DArray::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Texture2DArray::*)()>(&Texture2DArray::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Texture2DArray*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CubemapArray
#include "UnityEngine/CubemapArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CubemapArray.Internal_CreateImpl
bool UnityEngine::CubemapArray::Internal_CreateImpl(UnityEngine::CubemapArray* mono, int ext, int count, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapArray::Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CubemapArray", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, ext, count, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.CubemapArray.Internal_Create
void UnityEngine::CubemapArray::Internal_Create(UnityEngine::CubemapArray* mono, int ext, int count, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapArray::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CubemapArray", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mono), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(mipCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, ext, count, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.CubemapArray.get_isReadable
bool UnityEngine::CubemapArray::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CubemapArray::get_isReadable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CubemapArray::Internal_CreateImpl
// Il2CppName: Internal_CreateImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::CubemapArray*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::Internal_CreateImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), "Internal_CreateImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapArray*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::CubemapArray*, int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CubemapArray*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::DefaultFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, UnityEngine::Experimental::Rendering::TextureCreationFlags, int)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::TextureCreationFlags>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, int, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, int, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, bool, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, bool, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CubemapArray::*)(int, int, UnityEngine::TextureFormat, bool)>(&CubemapArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CubemapArray::get_isReadable
// Il2CppName: get_isReadable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CubemapArray::*)()>(&CubemapArray::get_isReadable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CubemapArray*), "get_isReadable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rendering.TextureDimension
#include "UnityEngine/Rendering/TextureDimension.hpp"
// Including type: UnityEngine.VRTextureUsage
#include "UnityEngine/VRTextureUsage.hpp"
// Including type: UnityEngine.RenderTextureMemoryless
#include "UnityEngine/RenderTextureMemoryless.hpp"
// Including type: UnityEngine.RenderBuffer
#include "UnityEngine/RenderBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RenderTexture.get_graphicsFormat
UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::RenderTexture::get_graphicsFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_graphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Experimental::Rendering::GraphicsFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_graphicsFormat
void UnityEngine::RenderTexture::set_graphicsFormat(UnityEngine::Experimental::Rendering::GraphicsFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_graphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_graphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.get_vrUsage
UnityEngine::VRTextureUsage UnityEngine::RenderTexture::get_vrUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_vrUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vrUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::VRTextureUsage, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.get_format
UnityEngine::RenderTextureFormat UnityEngine::RenderTexture::get_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTextureFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.get_antiAliasing
int UnityEngine::RenderTexture::get_antiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_antiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_antiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_antiAliasing
void UnityEngine::RenderTexture::set_antiAliasing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_antiAliasing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_antiAliasing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.GetActive
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.SetActive
void UnityEngine::RenderTexture::SetActive(UnityEngine::RenderTexture* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt);
}
// Autogenerated method: UnityEngine.RenderTexture.get_active
UnityEngine::RenderTexture* UnityEngine::RenderTexture::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_active
void UnityEngine::RenderTexture::set_active(UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.GetColorBuffer
UnityEngine::RenderBuffer UnityEngine::RenderTexture::GetColorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetColorBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.GetDepthBuffer
UnityEngine::RenderBuffer UnityEngine::RenderTexture::GetDepthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetDepthBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDepthBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.get_colorBuffer
UnityEngine::RenderBuffer UnityEngine::RenderTexture::get_colorBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_colorBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.get_depthBuffer
UnityEngine::RenderBuffer UnityEngine::RenderTexture::get_depthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_depthBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderBuffer, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.DiscardContents
void UnityEngine::RenderTexture::DiscardContents(bool discardColor, bool discardDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::DiscardContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(discardColor), ::il2cpp_utils::ExtractType(discardDepth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, discardColor, discardDepth);
}
// Autogenerated method: UnityEngine.RenderTexture.DiscardContents
void UnityEngine::RenderTexture::DiscardContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::DiscardContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.Create
bool UnityEngine::RenderTexture::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.Release
void UnityEngine::RenderTexture::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.IsCreated
bool UnityEngine::RenderTexture::IsCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::IsCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.SetSRGBReadWrite
void UnityEngine::RenderTexture::SetSRGBReadWrite(bool srgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::SetSRGBReadWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSRGBReadWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srgb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, srgb);
}
// Autogenerated method: UnityEngine.RenderTexture.Internal_Create
void UnityEngine::RenderTexture::Internal_Create(UnityEngine::RenderTexture* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rt);
}
// Autogenerated method: UnityEngine.RenderTexture.SetRenderTextureDescriptor
void UnityEngine::RenderTexture::SetRenderTextureDescriptor(UnityEngine::RenderTextureDescriptor desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::SetRenderTextureDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRenderTextureDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.GetDescriptor
UnityEngine::RenderTextureDescriptor UnityEngine::RenderTexture::GetDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTextureDescriptor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary_Internal
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary_Internal(UnityEngine::RenderTextureDescriptor desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.ReleaseTemporary
void UnityEngine::RenderTexture::ReleaseTemporary(UnityEngine::RenderTexture* temp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::ReleaseTemporary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "ReleaseTemporary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(temp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, temp);
}
// Autogenerated method: UnityEngine.RenderTexture.set_depth
void UnityEngine::RenderTexture::set_depth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.get_descriptor
UnityEngine::RenderTextureDescriptor UnityEngine::RenderTexture::get_descriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_descriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTextureDescriptor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_descriptor
void UnityEngine::RenderTexture::set_descriptor(UnityEngine::RenderTextureDescriptor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_descriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_descriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.ValidateRenderTextureDesc
void UnityEngine::RenderTexture::ValidateRenderTextureDesc(UnityEngine::RenderTextureDescriptor desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::ValidateRenderTextureDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "ValidateRenderTextureDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.GetCompatibleFormat
UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::RenderTexture::GetCompatibleFormat(UnityEngine::RenderTextureFormat renderTextureFormat, UnityEngine::RenderTextureReadWrite readWrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetCompatibleFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetCompatibleFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTextureFormat), ::il2cpp_utils::ExtractType(readWrite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, renderTextureFormat, readWrite);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary(UnityEngine::RenderTextureDescriptor desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporaryImpl
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporaryImpl(int width, int height, int depthBuffer, UnityEngine::Experimental::Rendering::GraphicsFormat format, int antiAliasing, UnityEngine::RenderTextureMemoryless memorylessMode, UnityEngine::VRTextureUsage vrUsage, bool useDynamicScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporaryImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporaryImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depthBuffer), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(antiAliasing), ::il2cpp_utils::ExtractType(memorylessMode), ::il2cpp_utils::ExtractType(vrUsage), ::il2cpp_utils::ExtractType(useDynamicScale)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, depthBuffer, format, antiAliasing, memorylessMode, vrUsage, useDynamicScale);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary(int width, int height, int depthBuffer, UnityEngine::RenderTextureFormat format, UnityEngine::RenderTextureReadWrite readWrite, int antiAliasing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depthBuffer), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(readWrite), ::il2cpp_utils::ExtractType(antiAliasing)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, depthBuffer, format, readWrite, antiAliasing);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary(int width, int height, int depthBuffer, UnityEngine::RenderTextureFormat format, UnityEngine::RenderTextureReadWrite readWrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depthBuffer), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(readWrite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height, depthBuffer, format, readWrite);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, width, height);
}
// Autogenerated method: UnityEngine.RenderTexture.GetColorBuffer_Injected
void UnityEngine::RenderTexture::GetColorBuffer_Injected(UnityEngine::RenderBuffer& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetColorBuffer_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorBuffer_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RenderTexture.GetDepthBuffer_Injected
void UnityEngine::RenderTexture::GetDepthBuffer_Injected(UnityEngine::RenderBuffer& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetDepthBuffer_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDepthBuffer_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RenderTexture.SetRenderTextureDescriptor_Injected
void UnityEngine::RenderTexture::SetRenderTextureDescriptor_Injected(UnityEngine::RenderTextureDescriptor& desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::SetRenderTextureDescriptor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRenderTextureDescriptor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.GetDescriptor_Injected
void UnityEngine::RenderTexture::GetDescriptor_Injected(UnityEngine::RenderTextureDescriptor& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetDescriptor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDescriptor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RenderTexture.GetTemporary_Internal_Injected
UnityEngine::RenderTexture* UnityEngine::RenderTexture::GetTemporary_Internal_Injected(UnityEngine::RenderTextureDescriptor& desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::GetTemporary_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTexture", "GetTemporary_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc);
}
// Autogenerated method: UnityEngine.RenderTexture.get_width
int UnityEngine::RenderTexture::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_width");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_width
void UnityEngine::RenderTexture::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_width");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.get_height
int UnityEngine::RenderTexture::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::get_height");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTexture.set_height
void UnityEngine::RenderTexture::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_height");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTexture.set_dimension
void UnityEngine::RenderTexture::set_dimension(UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTexture::set_dimension");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: RenderTexture::get_graphicsFormat
// Il2CppName: get_graphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Experimental::Rendering::GraphicsFormat (RenderTexture::*)()>(&RenderTexture::get_graphicsFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_graphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_graphicsFormat
// Il2CppName: set_graphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::Experimental::Rendering::GraphicsFormat)>(&RenderTexture::set_graphicsFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_graphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_vrUsage
// Il2CppName: get_vrUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::VRTextureUsage (RenderTexture::*)()>(&RenderTexture::get_vrUsage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_vrUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_format
// Il2CppName: get_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTextureFormat (RenderTexture::*)()>(&RenderTexture::get_format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_antiAliasing
// Il2CppName: get_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTexture::*)()>(&RenderTexture::get_antiAliasing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_antiAliasing
// Il2CppName: set_antiAliasing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int)>(&RenderTexture::set_antiAliasing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_antiAliasing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetActive
// Il2CppName: GetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)()>(&RenderTexture::GetActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::SetActive
// Il2CppName: SetActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*)>(&RenderTexture::SetActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "SetActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_active
// Il2CppName: get_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)()>(&RenderTexture::get_active)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_active
// Il2CppName: set_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*)>(&RenderTexture::set_active)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetColorBuffer
// Il2CppName: GetColorBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (RenderTexture::*)()>(&RenderTexture::GetColorBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetColorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetDepthBuffer
// Il2CppName: GetDepthBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (RenderTexture::*)()>(&RenderTexture::GetDepthBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetDepthBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_colorBuffer
// Il2CppName: get_colorBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (RenderTexture::*)()>(&RenderTexture::get_colorBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_colorBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_depthBuffer
// Il2CppName: get_depthBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderBuffer (RenderTexture::*)()>(&RenderTexture::get_depthBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_depthBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::DiscardContents
// Il2CppName: DiscardContents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(bool, bool)>(&RenderTexture::DiscardContents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "DiscardContents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::DiscardContents
// Il2CppName: DiscardContents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)()>(&RenderTexture::DiscardContents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "DiscardContents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RenderTexture::*)()>(&RenderTexture::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)()>(&RenderTexture::Release)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::IsCreated
// Il2CppName: IsCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RenderTexture::*)()>(&RenderTexture::IsCreated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "IsCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::SetSRGBReadWrite
// Il2CppName: SetSRGBReadWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(bool)>(&RenderTexture::SetSRGBReadWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "SetSRGBReadWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*)>(&RenderTexture::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::SetRenderTextureDescriptor
// Il2CppName: SetRenderTextureDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::SetRenderTextureDescriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "SetRenderTextureDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetDescriptor
// Il2CppName: GetDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTextureDescriptor (RenderTexture::*)()>(&RenderTexture::GetDescriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary_Internal
// Il2CppName: GetTemporary_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::GetTemporary_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::ReleaseTemporary
// Il2CppName: ReleaseTemporary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTexture*)>(&RenderTexture::ReleaseTemporary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "ReleaseTemporary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_depth
// Il2CppName: set_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int)>(&RenderTexture::set_depth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTexture*)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTexture*)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTexture*>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::DefaultFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::DefaultFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat, UnityEngine::RenderTextureReadWrite)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureReadWrite>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat, UnityEngine::RenderTextureReadWrite)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureReadWrite>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int, int, int, UnityEngine::RenderTextureFormat, int)>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_descriptor
// Il2CppName: get_descriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTextureDescriptor (RenderTexture::*)()>(&RenderTexture::get_descriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_descriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_descriptor
// Il2CppName: set_descriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::set_descriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_descriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::ValidateRenderTextureDesc
// Il2CppName: ValidateRenderTextureDesc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::ValidateRenderTextureDesc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "ValidateRenderTextureDesc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetCompatibleFormat
// Il2CppName: GetCompatibleFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Experimental::Rendering::GraphicsFormat (*)(UnityEngine::RenderTextureFormat, UnityEngine::RenderTextureReadWrite)>(&RenderTexture::GetCompatibleFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetCompatibleFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureReadWrite>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary
// Il2CppName: GetTemporary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(UnityEngine::RenderTextureDescriptor)>(&RenderTexture::GetTemporary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporaryImpl
// Il2CppName: GetTemporaryImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(int, int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int, UnityEngine::RenderTextureMemoryless, UnityEngine::VRTextureUsage, bool)>(&RenderTexture::GetTemporaryImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporaryImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureMemoryless>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::VRTextureUsage>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary
// Il2CppName: GetTemporary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(int, int, int, UnityEngine::RenderTextureFormat, UnityEngine::RenderTextureReadWrite, int)>(&RenderTexture::GetTemporary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureReadWrite>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary
// Il2CppName: GetTemporary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(int, int, int, UnityEngine::RenderTextureFormat, UnityEngine::RenderTextureReadWrite)>(&RenderTexture::GetTemporary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureReadWrite>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary
// Il2CppName: GetTemporary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(int, int)>(&RenderTexture::GetTemporary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetColorBuffer_Injected
// Il2CppName: GetColorBuffer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderBuffer&)>(&RenderTexture::GetColorBuffer_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetColorBuffer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetDepthBuffer_Injected
// Il2CppName: GetDepthBuffer_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderBuffer&)>(&RenderTexture::GetDepthBuffer_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetDepthBuffer_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderBuffer&>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::SetRenderTextureDescriptor_Injected
// Il2CppName: SetRenderTextureDescriptor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor&)>(&RenderTexture::SetRenderTextureDescriptor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "SetRenderTextureDescriptor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor&>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetDescriptor_Injected
// Il2CppName: GetDescriptor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::RenderTextureDescriptor&)>(&RenderTexture::GetDescriptor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetDescriptor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor&>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::GetTemporary_Internal_Injected
// Il2CppName: GetTemporary_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTexture* (*)(UnityEngine::RenderTextureDescriptor&)>(&RenderTexture::GetTemporary_Internal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "GetTemporary_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureDescriptor&>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTexture::*)()>(&RenderTexture::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int)>(&RenderTexture::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTexture::*)()>(&RenderTexture::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(int)>(&RenderTexture::set_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::set_dimension
// Il2CppName: set_dimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)(UnityEngine::Rendering::TextureDimension)>(&RenderTexture::set_dimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), "set_dimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::TextureDimension>()});
  }
};
// Writing MetadataGetter for method: RenderTexture::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)()>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTexture::*)()>(&RenderTexture::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTexture*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] depthFormatBits
::Array<int>* UnityEngine::RenderTextureDescriptor::_get_depthFormatBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::_get_depthFormatBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("UnityEngine", "RenderTextureDescriptor", "depthFormatBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] depthFormatBits
void UnityEngine::RenderTextureDescriptor::_set_depthFormatBits(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::_set_depthFormatBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderTextureDescriptor", "depthFormatBits", value));
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_width
int UnityEngine::RenderTextureDescriptor::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_width
void UnityEngine::RenderTextureDescriptor::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_height
int UnityEngine::RenderTextureDescriptor::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_height
void UnityEngine::RenderTextureDescriptor::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_msaaSamples
int UnityEngine::RenderTextureDescriptor::get_msaaSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_msaaSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_msaaSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_msaaSamples
void UnityEngine::RenderTextureDescriptor::set_msaaSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_msaaSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_msaaSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_volumeDepth
int UnityEngine::RenderTextureDescriptor::get_volumeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_volumeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_volumeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_volumeDepth
void UnityEngine::RenderTextureDescriptor::set_volumeDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_volumeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_volumeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_mipCount
void UnityEngine::RenderTextureDescriptor::set_mipCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_mipCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_mipCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_graphicsFormat
UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::RenderTextureDescriptor::get_graphicsFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_graphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_graphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Experimental::Rendering::GraphicsFormat, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_graphicsFormat
void UnityEngine::RenderTextureDescriptor::set_graphicsFormat(UnityEngine::Experimental::Rendering::GraphicsFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_graphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_graphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_colorFormat
UnityEngine::RenderTextureFormat UnityEngine::RenderTextureDescriptor::get_colorFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_colorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_colorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTextureFormat, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_colorFormat
void UnityEngine::RenderTextureDescriptor::set_colorFormat(UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_colorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_colorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_sRGB
bool UnityEngine::RenderTextureDescriptor::get_sRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_sRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_sRGB
void UnityEngine::RenderTextureDescriptor::set_sRGB(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_sRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.get_depthBufferBits
int UnityEngine::RenderTextureDescriptor::get_depthBufferBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::get_depthBufferBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_depthBufferBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_depthBufferBits
void UnityEngine::RenderTextureDescriptor::set_depthBufferBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_depthBufferBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_depthBufferBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_dimension
void UnityEngine::RenderTextureDescriptor::set_dimension(UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_dimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_dimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_shadowSamplingMode
void UnityEngine::RenderTextureDescriptor::set_shadowSamplingMode(UnityEngine::Rendering::ShadowSamplingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_shadowSamplingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_shadowSamplingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_vrUsage
void UnityEngine::RenderTextureDescriptor::set_vrUsage(UnityEngine::VRTextureUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_vrUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_vrUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_memoryless
void UnityEngine::RenderTextureDescriptor::set_memoryless(UnityEngine::RenderTextureMemoryless value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_memoryless");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_memoryless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.SetOrClearRenderTextureCreationFlag
void UnityEngine::RenderTextureDescriptor::SetOrClearRenderTextureCreationFlag(bool value, UnityEngine::RenderTextureCreationFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::SetOrClearRenderTextureCreationFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOrClearRenderTextureCreationFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, flag);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_useMipMap
void UnityEngine::RenderTextureDescriptor::set_useMipMap(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_useMipMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_useMipMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_autoGenerateMips
void UnityEngine::RenderTextureDescriptor::set_autoGenerateMips(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_autoGenerateMips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_autoGenerateMips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_enableRandomWrite
void UnityEngine::RenderTextureDescriptor::set_enableRandomWrite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_enableRandomWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_enableRandomWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_createdFromScript
void UnityEngine::RenderTextureDescriptor::set_createdFromScript(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_createdFromScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_createdFromScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor.set_useDynamicScale
void UnityEngine::RenderTextureDescriptor::set_useDynamicScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::set_useDynamicScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_useDynamicScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RenderTextureDescriptor..cctor
void UnityEngine::RenderTextureDescriptor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderTextureDescriptor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RenderTextureDescriptor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RenderTextureDescriptor::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_msaaSamples
// Il2CppName: get_msaaSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_msaaSamples)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_msaaSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_msaaSamples
// Il2CppName: set_msaaSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_msaaSamples)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_msaaSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_volumeDepth
// Il2CppName: get_volumeDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_volumeDepth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_volumeDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_volumeDepth
// Il2CppName: set_volumeDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_volumeDepth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_volumeDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_mipCount
// Il2CppName: set_mipCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_mipCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_mipCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_graphicsFormat
// Il2CppName: get_graphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Experimental::Rendering::GraphicsFormat (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_graphicsFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_graphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_graphicsFormat
// Il2CppName: set_graphicsFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::Experimental::Rendering::GraphicsFormat)>(&RenderTextureDescriptor::set_graphicsFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_graphicsFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_colorFormat
// Il2CppName: get_colorFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RenderTextureFormat (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_colorFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_colorFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_colorFormat
// Il2CppName: set_colorFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::RenderTextureFormat)>(&RenderTextureDescriptor::set_colorFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_colorFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_sRGB
// Il2CppName: get_sRGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_sRGB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_sRGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_sRGB
// Il2CppName: set_sRGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_sRGB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_sRGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::get_depthBufferBits
// Il2CppName: get_depthBufferBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RenderTextureDescriptor::*)()>(&RenderTextureDescriptor::get_depthBufferBits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "get_depthBufferBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_depthBufferBits
// Il2CppName: set_depthBufferBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int)>(&RenderTextureDescriptor::set_depthBufferBits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_depthBufferBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_dimension
// Il2CppName: set_dimension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::Rendering::TextureDimension)>(&RenderTextureDescriptor::set_dimension)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_dimension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::TextureDimension>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_shadowSamplingMode
// Il2CppName: set_shadowSamplingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::Rendering::ShadowSamplingMode)>(&RenderTextureDescriptor::set_shadowSamplingMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_shadowSamplingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ShadowSamplingMode>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_vrUsage
// Il2CppName: set_vrUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::VRTextureUsage)>(&RenderTextureDescriptor::set_vrUsage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_vrUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::VRTextureUsage>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_memoryless
// Il2CppName: set_memoryless
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(UnityEngine::RenderTextureMemoryless)>(&RenderTextureDescriptor::set_memoryless)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_memoryless", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureMemoryless>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::RenderTextureDescriptor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::RenderTextureFormat, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::RenderTextureFormat, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::RenderTextureDescriptor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::RenderTextureDescriptor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(int, int, UnityEngine::Experimental::Rendering::GraphicsFormat, int, int)>(&RenderTextureDescriptor::RenderTextureDescriptor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Experimental::Rendering::GraphicsFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::SetOrClearRenderTextureCreationFlag
// Il2CppName: SetOrClearRenderTextureCreationFlag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool, UnityEngine::RenderTextureCreationFlags)>(&RenderTextureDescriptor::SetOrClearRenderTextureCreationFlag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "SetOrClearRenderTextureCreationFlag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RenderTextureCreationFlags>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_useMipMap
// Il2CppName: set_useMipMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_useMipMap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_useMipMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_autoGenerateMips
// Il2CppName: set_autoGenerateMips
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_autoGenerateMips)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_autoGenerateMips", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_enableRandomWrite
// Il2CppName: set_enableRandomWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_enableRandomWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_enableRandomWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_createdFromScript
// Il2CppName: set_createdFromScript
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_createdFromScript)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_createdFromScript", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::set_useDynamicScale
// Il2CppName: set_useDynamicScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RenderTextureDescriptor::*)(bool)>(&RenderTextureDescriptor::set_useDynamicScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), "set_useDynamicScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RenderTextureDescriptor::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RenderTextureDescriptor::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RenderTextureDescriptor), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Hash128.get_isValid
bool UnityEngine::Hash128::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Hash128.CompareTo
int UnityEngine::Hash128::CompareTo(UnityEngine::Hash128 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, rhs);
}
// Autogenerated method: UnityEngine.Hash128.Parse
UnityEngine::Hash128 UnityEngine::Hash128::Parse(::Il2CppString* hashString) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashString)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Hash128, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashString);
}
// Autogenerated method: UnityEngine.Hash128.Internal_Hash128ToString
::Il2CppString* UnityEngine::Hash128::Internal_Hash128ToString(UnityEngine::Hash128 hash128) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Internal_Hash128ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Internal_Hash128ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash128)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hash128);
}
// Autogenerated method: UnityEngine.Hash128.Compute
UnityEngine::Hash128 UnityEngine::Hash128::Compute(::Il2CppString* hashString) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Compute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashString)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Hash128, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashString);
}
// Autogenerated method: UnityEngine.Hash128.Equals
bool UnityEngine::Hash128::Equals(UnityEngine::Hash128 obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Hash128.CompareTo
int UnityEngine::Hash128::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Hash128.Parse_Injected
void UnityEngine::Hash128::Parse_Injected(::Il2CppString* hashString, UnityEngine::Hash128& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Parse_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Parse_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashString), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashString, ret);
}
// Autogenerated method: UnityEngine.Hash128.Internal_Hash128ToString_Injected
::Il2CppString* UnityEngine::Hash128::Internal_Hash128ToString_Injected(UnityEngine::Hash128& hash128) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Internal_Hash128ToString_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Internal_Hash128ToString_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash128)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hash128);
}
// Autogenerated method: UnityEngine.Hash128.Compute_Injected
void UnityEngine::Hash128::Compute_Injected(::Il2CppString* hashString, UnityEngine::Hash128& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Compute_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "Compute_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashString), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashString, ret);
}
// Autogenerated method: UnityEngine.Hash128.ToString
::Il2CppString* UnityEngine::Hash128::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Hash128.Equals
bool UnityEngine::Hash128::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Hash128.GetHashCode
int UnityEngine::Hash128::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Hash128.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Hash128& hash1, const UnityEngine::Hash128& hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated method: UnityEngine.Hash128.op_LessThan
bool UnityEngine::operator <(const UnityEngine::Hash128& x, const UnityEngine::Hash128& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.Hash128.op_GreaterThan
bool UnityEngine::operator >(const UnityEngine::Hash128& x, const UnityEngine::Hash128& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Hash128::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Hash128", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Writing MetadataGetter for method: Hash128::get_isValid
// Il2CppName: get_isValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Hash128::*)()>(&Hash128::get_isValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "get_isValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Hash128::CompareTo
// Il2CppName: CompareTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Hash128::*)(UnityEngine::Hash128)>(&Hash128::CompareTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "CompareTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Hash128::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Hash128 (*)(::Il2CppString*)>(&Hash128::Parse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Hash128::Internal_Hash128ToString
// Il2CppName: Internal_Hash128ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Hash128)>(&Hash128::Internal_Hash128ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Internal_Hash128ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Hash128::Compute
// Il2CppName: Compute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Hash128 (*)(::Il2CppString*)>(&Hash128::Compute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Compute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Hash128::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Hash128::*)(UnityEngine::Hash128)>(&Hash128::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128>()});
  }
};
// Writing MetadataGetter for method: Hash128::CompareTo
// Il2CppName: CompareTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Hash128::*)(::Il2CppObject*)>(&Hash128::CompareTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "CompareTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Hash128::Parse_Injected
// Il2CppName: Parse_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Hash128&)>(&Hash128::Parse_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Parse_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Hash128::Internal_Hash128ToString_Injected
// Il2CppName: Internal_Hash128ToString_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::Hash128&)>(&Hash128::Internal_Hash128ToString_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Internal_Hash128ToString_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Hash128::Compute_Injected
// Il2CppName: Compute_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::Hash128&)>(&Hash128::Compute_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Compute_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Hash128::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Hash128::*)()>(&Hash128::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Hash128::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Hash128::*)(::Il2CppObject*)>(&Hash128::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Hash128::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Hash128::*)()>(&Hash128::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Hash128::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Hash128&, const UnityEngine::Hash128&)>(&Hash128::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Hash128::operator <
// Il2CppName: op_LessThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Hash128&, const UnityEngine::Hash128&)>(&Hash128::operator <)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "op_LessThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>()});
  }
};
// Writing MetadataGetter for method: Hash128::operator >
// Il2CppName: op_GreaterThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::Hash128&, const UnityEngine::Hash128&)>(&Hash128::operator >)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Hash128), "op_GreaterThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::Hash128&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CursorLockMode
#include "UnityEngine/CursorLockMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CursorLockMode None
UnityEngine::CursorLockMode UnityEngine::CursorLockMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CursorLockMode>("UnityEngine", "CursorLockMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CursorLockMode None
void UnityEngine::CursorLockMode::_set_None(UnityEngine::CursorLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CursorLockMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CursorLockMode Locked
UnityEngine::CursorLockMode UnityEngine::CursorLockMode::_get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_get_Locked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CursorLockMode>("UnityEngine", "CursorLockMode", "Locked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CursorLockMode Locked
void UnityEngine::CursorLockMode::_set_Locked(UnityEngine::CursorLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_set_Locked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CursorLockMode", "Locked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CursorLockMode Confined
UnityEngine::CursorLockMode UnityEngine::CursorLockMode::_get_Confined() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_get_Confined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::CursorLockMode>("UnityEngine", "CursorLockMode", "Confined"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CursorLockMode Confined
void UnityEngine::CursorLockMode::_set_Confined(UnityEngine::CursorLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CursorLockMode::_set_Confined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CursorLockMode", "Confined", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Cursor
#include "UnityEngine/Cursor.hpp"
// Including type: UnityEngine.CursorLockMode
#include "UnityEngine/CursorLockMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Cursor.get_visible
bool UnityEngine::Cursor::get_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cursor::get_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cursor", "get_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Cursor.set_visible
void UnityEngine::Cursor::set_visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cursor::set_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cursor", "set_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cursor.get_lockState
UnityEngine::CursorLockMode UnityEngine::Cursor::get_lockState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cursor::get_lockState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cursor", "get_lockState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CursorLockMode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Cursor.set_lockState
void UnityEngine::Cursor::set_lockState(UnityEngine::CursorLockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Cursor::set_lockState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cursor", "set_lockState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: Cursor::get_visible
// Il2CppName: get_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Cursor::get_visible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cursor*), "get_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cursor::set_visible
// Il2CppName: set_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Cursor::set_visible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cursor*), "set_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Cursor::get_lockState
// Il2CppName: get_lockState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::CursorLockMode (*)()>(&Cursor::get_lockState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cursor*), "get_lockState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cursor::set_lockState
// Il2CppName: set_lockState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::CursorLockMode)>(&Cursor::set_lockState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cursor*), "set_lockState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::CursorLockMode>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode None
UnityEngine::KeyCode UnityEngine::KeyCode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode None
void UnityEngine::KeyCode::_set_None(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Backspace
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Backspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Backspace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Backspace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Backspace
void UnityEngine::KeyCode::_set_Backspace(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Backspace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Backspace", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Delete
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Delete
void UnityEngine::KeyCode::_set_Delete(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Tab
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Tab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Tab"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Tab
void UnityEngine::KeyCode::_set_Tab(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Tab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Tab", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Clear
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Clear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Clear
void UnityEngine::KeyCode::_set_Clear(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Clear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Return
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Return() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Return");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Return"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Return
void UnityEngine::KeyCode::_set_Return(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Return");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Return", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Pause
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Pause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Pause"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Pause
void UnityEngine::KeyCode::_set_Pause(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Pause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Pause", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Escape
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Escape
void UnityEngine::KeyCode::_set_Escape(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Space
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Space"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Space
void UnityEngine::KeyCode::_set_Space(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Space", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad0
void UnityEngine::KeyCode::_set_Keypad0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad1
void UnityEngine::KeyCode::_set_Keypad1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad2
void UnityEngine::KeyCode::_set_Keypad2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad3
void UnityEngine::KeyCode::_set_Keypad3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad4
void UnityEngine::KeyCode::_set_Keypad4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad5
void UnityEngine::KeyCode::_set_Keypad5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad6
void UnityEngine::KeyCode::_set_Keypad6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad7
void UnityEngine::KeyCode::_set_Keypad7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad8
void UnityEngine::KeyCode::_set_Keypad8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Keypad9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Keypad9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Keypad9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Keypad9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Keypad9
void UnityEngine::KeyCode::_set_Keypad9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Keypad9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Keypad9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadPeriod
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadPeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadPeriod"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadPeriod
void UnityEngine::KeyCode::_set_KeypadPeriod(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadPeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadPeriod", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadDivide
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadDivide() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadDivide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadDivide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadDivide
void UnityEngine::KeyCode::_set_KeypadDivide(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadDivide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadDivide", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadMultiply
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadMultiply() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadMultiply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadMultiply"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadMultiply
void UnityEngine::KeyCode::_set_KeypadMultiply(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadMultiply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadMultiply", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadMinus
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadMinus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadMinus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadMinus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadMinus
void UnityEngine::KeyCode::_set_KeypadMinus(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadMinus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadMinus", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadPlus
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadPlus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadPlus
void UnityEngine::KeyCode::_set_KeypadPlus(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadPlus", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadEnter
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadEnter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadEnter
void UnityEngine::KeyCode::_set_KeypadEnter(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadEnter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode KeypadEquals
UnityEngine::KeyCode UnityEngine::KeyCode::_get_KeypadEquals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_KeypadEquals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "KeypadEquals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode KeypadEquals
void UnityEngine::KeyCode::_set_KeypadEquals(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_KeypadEquals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "KeypadEquals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode UpArrow
UnityEngine::KeyCode UnityEngine::KeyCode::_get_UpArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_UpArrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "UpArrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode UpArrow
void UnityEngine::KeyCode::_set_UpArrow(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_UpArrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "UpArrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode DownArrow
UnityEngine::KeyCode UnityEngine::KeyCode::_get_DownArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_DownArrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "DownArrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode DownArrow
void UnityEngine::KeyCode::_set_DownArrow(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_DownArrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "DownArrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightArrow
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightArrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightArrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightArrow
void UnityEngine::KeyCode::_set_RightArrow(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightArrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightArrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftArrow
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftArrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftArrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftArrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftArrow
void UnityEngine::KeyCode::_set_LeftArrow(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftArrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftArrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Insert
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Insert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Insert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Insert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Insert
void UnityEngine::KeyCode::_set_Insert(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Insert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Insert", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Home
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Home() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Home");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Home"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Home
void UnityEngine::KeyCode::_set_Home(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Home");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Home", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode End
UnityEngine::KeyCode UnityEngine::KeyCode::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "End"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode End
void UnityEngine::KeyCode::_set_End(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "End", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode PageUp
UnityEngine::KeyCode UnityEngine::KeyCode::_get_PageUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_PageUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "PageUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode PageUp
void UnityEngine::KeyCode::_set_PageUp(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_PageUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "PageUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode PageDown
UnityEngine::KeyCode UnityEngine::KeyCode::_get_PageDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_PageDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "PageDown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode PageDown
void UnityEngine::KeyCode::_set_PageDown(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_PageDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "PageDown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F1
void UnityEngine::KeyCode::_set_F1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F2
void UnityEngine::KeyCode::_set_F2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F3
void UnityEngine::KeyCode::_set_F3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F4
void UnityEngine::KeyCode::_set_F4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F5
void UnityEngine::KeyCode::_set_F5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F6
void UnityEngine::KeyCode::_set_F6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F7
void UnityEngine::KeyCode::_set_F7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F8
void UnityEngine::KeyCode::_set_F8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F9
void UnityEngine::KeyCode::_set_F9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F10
void UnityEngine::KeyCode::_set_F10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F11
void UnityEngine::KeyCode::_set_F11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F12
void UnityEngine::KeyCode::_set_F12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F13
void UnityEngine::KeyCode::_set_F13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F14
void UnityEngine::KeyCode::_set_F14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F15
void UnityEngine::KeyCode::_set_F15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha0
void UnityEngine::KeyCode::_set_Alpha0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha1
void UnityEngine::KeyCode::_set_Alpha1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha2
void UnityEngine::KeyCode::_set_Alpha2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha3
void UnityEngine::KeyCode::_set_Alpha3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha4
void UnityEngine::KeyCode::_set_Alpha4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha5
void UnityEngine::KeyCode::_set_Alpha5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha6
void UnityEngine::KeyCode::_set_Alpha6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha7
void UnityEngine::KeyCode::_set_Alpha7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha8
void UnityEngine::KeyCode::_set_Alpha8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Alpha9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Alpha9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Alpha9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Alpha9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Alpha9
void UnityEngine::KeyCode::_set_Alpha9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Alpha9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Alpha9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Exclaim
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Exclaim() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Exclaim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Exclaim"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Exclaim
void UnityEngine::KeyCode::_set_Exclaim(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Exclaim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Exclaim", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode DoubleQuote
UnityEngine::KeyCode UnityEngine::KeyCode::_get_DoubleQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_DoubleQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "DoubleQuote"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode DoubleQuote
void UnityEngine::KeyCode::_set_DoubleQuote(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_DoubleQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "DoubleQuote", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Hash
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Hash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Hash"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Hash
void UnityEngine::KeyCode::_set_Hash(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Hash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Hash", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Dollar
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Dollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Dollar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Dollar"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Dollar
void UnityEngine::KeyCode::_set_Dollar(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Dollar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Dollar", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Percent
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Percent
void UnityEngine::KeyCode::_set_Percent(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Ampersand
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Ampersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Ampersand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Ampersand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Ampersand
void UnityEngine::KeyCode::_set_Ampersand(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Ampersand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Ampersand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Quote
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Quote
void UnityEngine::KeyCode::_set_Quote(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftParen
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftParen"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftParen
void UnityEngine::KeyCode::_set_LeftParen(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftParen", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightParen
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightParen"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightParen
void UnityEngine::KeyCode::_set_RightParen(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightParen", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Asterisk
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Asterisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Asterisk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Asterisk"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Asterisk
void UnityEngine::KeyCode::_set_Asterisk(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Asterisk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Asterisk", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Plus
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Plus
void UnityEngine::KeyCode::_set_Plus(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Comma
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Comma
void UnityEngine::KeyCode::_set_Comma(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Minus
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Minus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Minus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Minus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Minus
void UnityEngine::KeyCode::_set_Minus(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Minus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Minus", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Period
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Period() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Period");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Period"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Period
void UnityEngine::KeyCode::_set_Period(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Period");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Period", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Slash
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Slash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Slash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Slash"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Slash
void UnityEngine::KeyCode::_set_Slash(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Slash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Slash", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Colon
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Colon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Colon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Colon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Colon
void UnityEngine::KeyCode::_set_Colon(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Colon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Colon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Semicolon
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Semicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Semicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Semicolon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Semicolon
void UnityEngine::KeyCode::_set_Semicolon(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Semicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Semicolon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Less
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Less() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Less");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Less"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Less
void UnityEngine::KeyCode::_set_Less(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Less");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Less", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Equals
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Equals
void UnityEngine::KeyCode::_set_Equals(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Greater
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Greater() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Greater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Greater"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Greater
void UnityEngine::KeyCode::_set_Greater(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Greater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Greater", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Question
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Question() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Question");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Question"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Question
void UnityEngine::KeyCode::_set_Question(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Question");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Question", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode At
UnityEngine::KeyCode UnityEngine::KeyCode::_get_At() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_At");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "At"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode At
void UnityEngine::KeyCode::_set_At(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_At");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "At", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftBracket
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftBracket"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftBracket
void UnityEngine::KeyCode::_set_LeftBracket(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftBracket", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Backslash
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Backslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Backslash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Backslash"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Backslash
void UnityEngine::KeyCode::_set_Backslash(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Backslash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Backslash", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightBracket
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightBracket"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightBracket
void UnityEngine::KeyCode::_set_RightBracket(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightBracket", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Caret
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Caret() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Caret");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Caret"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Caret
void UnityEngine::KeyCode::_set_Caret(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Caret");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Caret", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Underscore
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Underscore() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Underscore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Underscore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Underscore
void UnityEngine::KeyCode::_set_Underscore(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Underscore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Underscore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode BackQuote
UnityEngine::KeyCode UnityEngine::KeyCode::_get_BackQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_BackQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "BackQuote"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode BackQuote
void UnityEngine::KeyCode::_set_BackQuote(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_BackQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "BackQuote", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode A
UnityEngine::KeyCode UnityEngine::KeyCode::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "A"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode A
void UnityEngine::KeyCode::_set_A(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "A", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode B
UnityEngine::KeyCode UnityEngine::KeyCode::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "B"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode B
void UnityEngine::KeyCode::_set_B(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "B", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode C
UnityEngine::KeyCode UnityEngine::KeyCode::_get_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "C"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode C
void UnityEngine::KeyCode::_set_C(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "C", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode D
UnityEngine::KeyCode UnityEngine::KeyCode::_get_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode D
void UnityEngine::KeyCode::_set_D(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode E
UnityEngine::KeyCode UnityEngine::KeyCode::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "E"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode E
void UnityEngine::KeyCode::_set_E(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "E", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode F
UnityEngine::KeyCode UnityEngine::KeyCode::_get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_F");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "F"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode F
void UnityEngine::KeyCode::_set_F(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_F");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "F", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode G
UnityEngine::KeyCode UnityEngine::KeyCode::_get_G() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_G");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "G"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode G
void UnityEngine::KeyCode::_set_G(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_G");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "G", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode H
UnityEngine::KeyCode UnityEngine::KeyCode::_get_H() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_H");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "H"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode H
void UnityEngine::KeyCode::_set_H(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_H");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "H", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode I
UnityEngine::KeyCode UnityEngine::KeyCode::_get_I() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_I");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "I"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode I
void UnityEngine::KeyCode::_set_I(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_I");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "I", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode J
UnityEngine::KeyCode UnityEngine::KeyCode::_get_J() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_J");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "J"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode J
void UnityEngine::KeyCode::_set_J(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_J");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "J", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode K
UnityEngine::KeyCode UnityEngine::KeyCode::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "K"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode K
void UnityEngine::KeyCode::_set_K(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "K", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode L
UnityEngine::KeyCode UnityEngine::KeyCode::_get_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_L");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "L"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode L
void UnityEngine::KeyCode::_set_L(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_L");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "L", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode M
UnityEngine::KeyCode UnityEngine::KeyCode::_get_M() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_M");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "M"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode M
void UnityEngine::KeyCode::_set_M(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_M");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "M", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode N
UnityEngine::KeyCode UnityEngine::KeyCode::_get_N() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_N");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "N"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode N
void UnityEngine::KeyCode::_set_N(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_N");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "N", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode O
UnityEngine::KeyCode UnityEngine::KeyCode::_get_O() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_O");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "O"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode O
void UnityEngine::KeyCode::_set_O(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_O");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "O", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode P
UnityEngine::KeyCode UnityEngine::KeyCode::_get_P() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "P"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode P
void UnityEngine::KeyCode::_set_P(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "P", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Q
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Q"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Q
void UnityEngine::KeyCode::_set_Q(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Q", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode R
UnityEngine::KeyCode UnityEngine::KeyCode::_get_R() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_R");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "R"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode R
void UnityEngine::KeyCode::_set_R(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_R");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "R", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode S
UnityEngine::KeyCode UnityEngine::KeyCode::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "S"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode S
void UnityEngine::KeyCode::_set_S(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "S", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode T
UnityEngine::KeyCode UnityEngine::KeyCode::_get_T() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_T");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "T"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode T
void UnityEngine::KeyCode::_set_T(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_T");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "T", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode U
UnityEngine::KeyCode UnityEngine::KeyCode::_get_U() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_U");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "U"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode U
void UnityEngine::KeyCode::_set_U(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_U");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "U", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode V
UnityEngine::KeyCode UnityEngine::KeyCode::_get_V() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_V");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "V"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode V
void UnityEngine::KeyCode::_set_V(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_V");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "V", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode W
UnityEngine::KeyCode UnityEngine::KeyCode::_get_W() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_W");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "W"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode W
void UnityEngine::KeyCode::_set_W(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_W");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "W", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode X
UnityEngine::KeyCode UnityEngine::KeyCode::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode X
void UnityEngine::KeyCode::_set_X(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Y
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Y
void UnityEngine::KeyCode::_set_Y(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Z
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Z
void UnityEngine::KeyCode::_set_Z(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftCurlyBracket
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftCurlyBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftCurlyBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftCurlyBracket"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftCurlyBracket
void UnityEngine::KeyCode::_set_LeftCurlyBracket(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftCurlyBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftCurlyBracket", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Pipe
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Pipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Pipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Pipe
void UnityEngine::KeyCode::_set_Pipe(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Pipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightCurlyBracket
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightCurlyBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightCurlyBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightCurlyBracket"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightCurlyBracket
void UnityEngine::KeyCode::_set_RightCurlyBracket(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightCurlyBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightCurlyBracket", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Tilde
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Tilde() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Tilde");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Tilde"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Tilde
void UnityEngine::KeyCode::_set_Tilde(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Tilde");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Tilde", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Numlock
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Numlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Numlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Numlock"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Numlock
void UnityEngine::KeyCode::_set_Numlock(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Numlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Numlock", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode CapsLock
UnityEngine::KeyCode UnityEngine::KeyCode::_get_CapsLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_CapsLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "CapsLock"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode CapsLock
void UnityEngine::KeyCode::_set_CapsLock(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_CapsLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "CapsLock", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode ScrollLock
UnityEngine::KeyCode UnityEngine::KeyCode::_get_ScrollLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_ScrollLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "ScrollLock"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode ScrollLock
void UnityEngine::KeyCode::_set_ScrollLock(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_ScrollLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "ScrollLock", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightShift
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightShift"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightShift
void UnityEngine::KeyCode::_set_RightShift(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightShift", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftShift
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftShift"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftShift
void UnityEngine::KeyCode::_set_LeftShift(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftShift", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightControl
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightControl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightControl
void UnityEngine::KeyCode::_set_RightControl(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightControl", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftControl
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftControl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftControl
void UnityEngine::KeyCode::_set_LeftControl(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftControl", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightAlt
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightAlt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightAlt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightAlt"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightAlt
void UnityEngine::KeyCode::_set_RightAlt(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightAlt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightAlt", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftAlt
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftAlt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftAlt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftAlt"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftAlt
void UnityEngine::KeyCode::_set_LeftAlt(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftAlt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftAlt", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftCommand
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftCommand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftCommand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftCommand
void UnityEngine::KeyCode::_set_LeftCommand(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftCommand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftCommand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftApple
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftApple() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftApple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftApple"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftApple
void UnityEngine::KeyCode::_set_LeftApple(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftApple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftApple", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode LeftWindows
UnityEngine::KeyCode UnityEngine::KeyCode::_get_LeftWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_LeftWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "LeftWindows"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode LeftWindows
void UnityEngine::KeyCode::_set_LeftWindows(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_LeftWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "LeftWindows", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightCommand
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightCommand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightCommand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightCommand
void UnityEngine::KeyCode::_set_RightCommand(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightCommand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightCommand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightApple
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightApple() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightApple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightApple"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightApple
void UnityEngine::KeyCode::_set_RightApple(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightApple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightApple", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode RightWindows
UnityEngine::KeyCode UnityEngine::KeyCode::_get_RightWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_RightWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "RightWindows"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode RightWindows
void UnityEngine::KeyCode::_set_RightWindows(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_RightWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "RightWindows", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode AltGr
UnityEngine::KeyCode UnityEngine::KeyCode::_get_AltGr() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_AltGr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "AltGr"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode AltGr
void UnityEngine::KeyCode::_set_AltGr(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_AltGr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "AltGr", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Help
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Help() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Help");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Help"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Help
void UnityEngine::KeyCode::_set_Help(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Help");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Help", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Print
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Print() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Print");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Print"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Print
void UnityEngine::KeyCode::_set_Print(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Print");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Print", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode SysReq
UnityEngine::KeyCode UnityEngine::KeyCode::_get_SysReq() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_SysReq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "SysReq"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode SysReq
void UnityEngine::KeyCode::_set_SysReq(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_SysReq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "SysReq", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Break
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Break() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Break");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Break"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Break
void UnityEngine::KeyCode::_set_Break(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Break");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Break", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Menu
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Menu
void UnityEngine::KeyCode::_set_Menu(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Menu", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse0
void UnityEngine::KeyCode::_set_Mouse0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse1
void UnityEngine::KeyCode::_set_Mouse1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse2
void UnityEngine::KeyCode::_set_Mouse2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse3
void UnityEngine::KeyCode::_set_Mouse3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse4
void UnityEngine::KeyCode::_set_Mouse4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse5
void UnityEngine::KeyCode::_set_Mouse5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Mouse6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Mouse6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Mouse6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Mouse6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Mouse6
void UnityEngine::KeyCode::_set_Mouse6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Mouse6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Mouse6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton0
void UnityEngine::KeyCode::_set_JoystickButton0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton1
void UnityEngine::KeyCode::_set_JoystickButton1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton2
void UnityEngine::KeyCode::_set_JoystickButton2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton3
void UnityEngine::KeyCode::_set_JoystickButton3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton4
void UnityEngine::KeyCode::_set_JoystickButton4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton5
void UnityEngine::KeyCode::_set_JoystickButton5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton6
void UnityEngine::KeyCode::_set_JoystickButton6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton7
void UnityEngine::KeyCode::_set_JoystickButton7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton8
void UnityEngine::KeyCode::_set_JoystickButton8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton9
void UnityEngine::KeyCode::_set_JoystickButton9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton10
void UnityEngine::KeyCode::_set_JoystickButton10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton11
void UnityEngine::KeyCode::_set_JoystickButton11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton12
void UnityEngine::KeyCode::_set_JoystickButton12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton13
void UnityEngine::KeyCode::_set_JoystickButton13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton14
void UnityEngine::KeyCode::_set_JoystickButton14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton15
void UnityEngine::KeyCode::_set_JoystickButton15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton16
void UnityEngine::KeyCode::_set_JoystickButton16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton17
void UnityEngine::KeyCode::_set_JoystickButton17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton18
void UnityEngine::KeyCode::_set_JoystickButton18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode JoystickButton19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_JoystickButton19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_JoystickButton19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "JoystickButton19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode JoystickButton19
void UnityEngine::KeyCode::_set_JoystickButton19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_JoystickButton19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "JoystickButton19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button0
void UnityEngine::KeyCode::_set_Joystick1Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button1
void UnityEngine::KeyCode::_set_Joystick1Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button2
void UnityEngine::KeyCode::_set_Joystick1Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button3
void UnityEngine::KeyCode::_set_Joystick1Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button4
void UnityEngine::KeyCode::_set_Joystick1Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button5
void UnityEngine::KeyCode::_set_Joystick1Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button6
void UnityEngine::KeyCode::_set_Joystick1Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button7
void UnityEngine::KeyCode::_set_Joystick1Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button8
void UnityEngine::KeyCode::_set_Joystick1Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button9
void UnityEngine::KeyCode::_set_Joystick1Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button10
void UnityEngine::KeyCode::_set_Joystick1Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button11
void UnityEngine::KeyCode::_set_Joystick1Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button12
void UnityEngine::KeyCode::_set_Joystick1Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button13
void UnityEngine::KeyCode::_set_Joystick1Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button14
void UnityEngine::KeyCode::_set_Joystick1Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button15
void UnityEngine::KeyCode::_set_Joystick1Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button16
void UnityEngine::KeyCode::_set_Joystick1Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button17
void UnityEngine::KeyCode::_set_Joystick1Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button18
void UnityEngine::KeyCode::_set_Joystick1Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick1Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick1Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick1Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick1Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick1Button19
void UnityEngine::KeyCode::_set_Joystick1Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick1Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick1Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button0
void UnityEngine::KeyCode::_set_Joystick2Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button1
void UnityEngine::KeyCode::_set_Joystick2Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button2
void UnityEngine::KeyCode::_set_Joystick2Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button3
void UnityEngine::KeyCode::_set_Joystick2Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button4
void UnityEngine::KeyCode::_set_Joystick2Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button5
void UnityEngine::KeyCode::_set_Joystick2Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button6
void UnityEngine::KeyCode::_set_Joystick2Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button7
void UnityEngine::KeyCode::_set_Joystick2Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button8
void UnityEngine::KeyCode::_set_Joystick2Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button9
void UnityEngine::KeyCode::_set_Joystick2Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button10
void UnityEngine::KeyCode::_set_Joystick2Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button11
void UnityEngine::KeyCode::_set_Joystick2Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button12
void UnityEngine::KeyCode::_set_Joystick2Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button13
void UnityEngine::KeyCode::_set_Joystick2Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button14
void UnityEngine::KeyCode::_set_Joystick2Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button15
void UnityEngine::KeyCode::_set_Joystick2Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button16
void UnityEngine::KeyCode::_set_Joystick2Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button17
void UnityEngine::KeyCode::_set_Joystick2Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button18
void UnityEngine::KeyCode::_set_Joystick2Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick2Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick2Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick2Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick2Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick2Button19
void UnityEngine::KeyCode::_set_Joystick2Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick2Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick2Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button0
void UnityEngine::KeyCode::_set_Joystick3Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button1
void UnityEngine::KeyCode::_set_Joystick3Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button2
void UnityEngine::KeyCode::_set_Joystick3Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button3
void UnityEngine::KeyCode::_set_Joystick3Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button4
void UnityEngine::KeyCode::_set_Joystick3Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button5
void UnityEngine::KeyCode::_set_Joystick3Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button6
void UnityEngine::KeyCode::_set_Joystick3Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button7
void UnityEngine::KeyCode::_set_Joystick3Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button8
void UnityEngine::KeyCode::_set_Joystick3Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button9
void UnityEngine::KeyCode::_set_Joystick3Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button10
void UnityEngine::KeyCode::_set_Joystick3Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button11
void UnityEngine::KeyCode::_set_Joystick3Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button12
void UnityEngine::KeyCode::_set_Joystick3Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button13
void UnityEngine::KeyCode::_set_Joystick3Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button14
void UnityEngine::KeyCode::_set_Joystick3Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button15
void UnityEngine::KeyCode::_set_Joystick3Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button16
void UnityEngine::KeyCode::_set_Joystick3Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button17
void UnityEngine::KeyCode::_set_Joystick3Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button18
void UnityEngine::KeyCode::_set_Joystick3Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick3Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick3Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick3Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick3Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick3Button19
void UnityEngine::KeyCode::_set_Joystick3Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick3Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick3Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button0
void UnityEngine::KeyCode::_set_Joystick4Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button1
void UnityEngine::KeyCode::_set_Joystick4Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button2
void UnityEngine::KeyCode::_set_Joystick4Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button3
void UnityEngine::KeyCode::_set_Joystick4Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button4
void UnityEngine::KeyCode::_set_Joystick4Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button5
void UnityEngine::KeyCode::_set_Joystick4Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button6
void UnityEngine::KeyCode::_set_Joystick4Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button7
void UnityEngine::KeyCode::_set_Joystick4Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button8
void UnityEngine::KeyCode::_set_Joystick4Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button9
void UnityEngine::KeyCode::_set_Joystick4Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button10
void UnityEngine::KeyCode::_set_Joystick4Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button11
void UnityEngine::KeyCode::_set_Joystick4Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button12
void UnityEngine::KeyCode::_set_Joystick4Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button13
void UnityEngine::KeyCode::_set_Joystick4Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button14
void UnityEngine::KeyCode::_set_Joystick4Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button15
void UnityEngine::KeyCode::_set_Joystick4Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button16
void UnityEngine::KeyCode::_set_Joystick4Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button17
void UnityEngine::KeyCode::_set_Joystick4Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button18
void UnityEngine::KeyCode::_set_Joystick4Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick4Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick4Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick4Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick4Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick4Button19
void UnityEngine::KeyCode::_set_Joystick4Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick4Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick4Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button0
void UnityEngine::KeyCode::_set_Joystick5Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button1
void UnityEngine::KeyCode::_set_Joystick5Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button2
void UnityEngine::KeyCode::_set_Joystick5Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button3
void UnityEngine::KeyCode::_set_Joystick5Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button4
void UnityEngine::KeyCode::_set_Joystick5Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button5
void UnityEngine::KeyCode::_set_Joystick5Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button6
void UnityEngine::KeyCode::_set_Joystick5Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button7
void UnityEngine::KeyCode::_set_Joystick5Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button8
void UnityEngine::KeyCode::_set_Joystick5Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button9
void UnityEngine::KeyCode::_set_Joystick5Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button10
void UnityEngine::KeyCode::_set_Joystick5Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button11
void UnityEngine::KeyCode::_set_Joystick5Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button12
void UnityEngine::KeyCode::_set_Joystick5Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button13
void UnityEngine::KeyCode::_set_Joystick5Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button14
void UnityEngine::KeyCode::_set_Joystick5Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button15
void UnityEngine::KeyCode::_set_Joystick5Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button16
void UnityEngine::KeyCode::_set_Joystick5Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button17
void UnityEngine::KeyCode::_set_Joystick5Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button18
void UnityEngine::KeyCode::_set_Joystick5Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick5Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick5Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick5Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick5Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick5Button19
void UnityEngine::KeyCode::_set_Joystick5Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick5Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick5Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button0
void UnityEngine::KeyCode::_set_Joystick6Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button1
void UnityEngine::KeyCode::_set_Joystick6Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button2
void UnityEngine::KeyCode::_set_Joystick6Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button3
void UnityEngine::KeyCode::_set_Joystick6Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button4
void UnityEngine::KeyCode::_set_Joystick6Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button5
void UnityEngine::KeyCode::_set_Joystick6Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button6
void UnityEngine::KeyCode::_set_Joystick6Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button7
void UnityEngine::KeyCode::_set_Joystick6Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button8
void UnityEngine::KeyCode::_set_Joystick6Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button9
void UnityEngine::KeyCode::_set_Joystick6Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button10
void UnityEngine::KeyCode::_set_Joystick6Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button11
void UnityEngine::KeyCode::_set_Joystick6Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button12
void UnityEngine::KeyCode::_set_Joystick6Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button13
void UnityEngine::KeyCode::_set_Joystick6Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button14
void UnityEngine::KeyCode::_set_Joystick6Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button15
void UnityEngine::KeyCode::_set_Joystick6Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button16
void UnityEngine::KeyCode::_set_Joystick6Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button17
void UnityEngine::KeyCode::_set_Joystick6Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button18
void UnityEngine::KeyCode::_set_Joystick6Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick6Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick6Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick6Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick6Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick6Button19
void UnityEngine::KeyCode::_set_Joystick6Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick6Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick6Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button0
void UnityEngine::KeyCode::_set_Joystick7Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button1
void UnityEngine::KeyCode::_set_Joystick7Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button2
void UnityEngine::KeyCode::_set_Joystick7Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button3
void UnityEngine::KeyCode::_set_Joystick7Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button4
void UnityEngine::KeyCode::_set_Joystick7Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button5
void UnityEngine::KeyCode::_set_Joystick7Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button6
void UnityEngine::KeyCode::_set_Joystick7Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button7
void UnityEngine::KeyCode::_set_Joystick7Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button8
void UnityEngine::KeyCode::_set_Joystick7Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button9
void UnityEngine::KeyCode::_set_Joystick7Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button10
void UnityEngine::KeyCode::_set_Joystick7Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button11
void UnityEngine::KeyCode::_set_Joystick7Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button12
void UnityEngine::KeyCode::_set_Joystick7Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button13
void UnityEngine::KeyCode::_set_Joystick7Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button14
void UnityEngine::KeyCode::_set_Joystick7Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button15
void UnityEngine::KeyCode::_set_Joystick7Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button16
void UnityEngine::KeyCode::_set_Joystick7Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button17
void UnityEngine::KeyCode::_set_Joystick7Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button18
void UnityEngine::KeyCode::_set_Joystick7Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick7Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick7Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick7Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick7Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick7Button19
void UnityEngine::KeyCode::_set_Joystick7Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick7Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick7Button19", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button0
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button0
void UnityEngine::KeyCode::_set_Joystick8Button0(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button1
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button1
void UnityEngine::KeyCode::_set_Joystick8Button1(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button2
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button2
void UnityEngine::KeyCode::_set_Joystick8Button2(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button3
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button3
void UnityEngine::KeyCode::_set_Joystick8Button3(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button4
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button4() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button4
void UnityEngine::KeyCode::_set_Joystick8Button4(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button5
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button5() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button5
void UnityEngine::KeyCode::_set_Joystick8Button5(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button6
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button6() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button6
void UnityEngine::KeyCode::_set_Joystick8Button6(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button7
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button7() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button7
void UnityEngine::KeyCode::_set_Joystick8Button7(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button8
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button8
void UnityEngine::KeyCode::_set_Joystick8Button8(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button9
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button9
void UnityEngine::KeyCode::_set_Joystick8Button9(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button10
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button10() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button10"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button10
void UnityEngine::KeyCode::_set_Joystick8Button10(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button10", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button11
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button11() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button11
void UnityEngine::KeyCode::_set_Joystick8Button11(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button11", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button12
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button12() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button12
void UnityEngine::KeyCode::_set_Joystick8Button12(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button13
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button13() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button13"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button13
void UnityEngine::KeyCode::_set_Joystick8Button13(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button13", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button14
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button14() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button14"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button14
void UnityEngine::KeyCode::_set_Joystick8Button14(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button14", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button15
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button15() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button15"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button15
void UnityEngine::KeyCode::_set_Joystick8Button15(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button15", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button16
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button16
void UnityEngine::KeyCode::_set_Joystick8Button16(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button17
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button17() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button17"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button17
void UnityEngine::KeyCode::_set_Joystick8Button17(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button17", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button18
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button18() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button18"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button18
void UnityEngine::KeyCode::_set_Joystick8Button18(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button18", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.KeyCode Joystick8Button19
UnityEngine::KeyCode UnityEngine::KeyCode::_get_Joystick8Button19() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_get_Joystick8Button19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::KeyCode>("UnityEngine", "KeyCode", "Joystick8Button19"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.KeyCode Joystick8Button19
void UnityEngine::KeyCode::_set_Joystick8Button19(UnityEngine::KeyCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::KeyCode::_set_Joystick8Button19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "KeyCode", "Joystick8Button19", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ILogHandler
#include "UnityEngine/ILogHandler.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ILogHandler.LogFormat
void UnityEngine::ILogHandler::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogHandler::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::ILogHandler::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::ILogHandler::LogFormat(logType, context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.ILogHandler.LogException
void UnityEngine::ILogHandler::LogException(System::Exception* exception, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogHandler::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exception, context);
}
// Writing MetadataGetter for method: ILogHandler::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILogHandler::*)(UnityEngine::LogType, UnityEngine::Object*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&ILogHandler::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogHandler*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: ILogHandler::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILogHandler::*)(System::Exception*, UnityEngine::Object*)>(&ILogHandler::LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogHandler*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ILogger
#include "UnityEngine/ILogger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ILogger.get_logHandler
UnityEngine::ILogHandler* UnityEngine::ILogger::get_logHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogger::get_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ILogHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ILogger.Log
void UnityEngine::ILogger::Log(UnityEngine::LogType logType, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message);
}
// Autogenerated method: UnityEngine.ILogger.Log
void UnityEngine::ILogger::Log(UnityEngine::LogType logType, ::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message, context);
}
// Autogenerated method: UnityEngine.ILogger.LogFormat
void UnityEngine::ILogger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ILogger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, System.String format, params System.Object[] args)
void UnityEngine::ILogger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::ILogger::LogFormat(logType, format, ::Array<::Il2CppObject*>::New(args));
}
// Writing MetadataGetter for method: ILogger::get_logHandler
// Il2CppName: get_logHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ILogHandler* (ILogger::*)()>(&ILogger::get_logHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogger*), "get_logHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILogger::*)(UnityEngine::LogType, ::Il2CppObject*)>(&ILogger::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ILogger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILogger::*)(UnityEngine::LogType, ::Il2CppObject*, UnityEngine::Object*)>(&ILogger::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: ILogger::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILogger::*)(UnityEngine::LogType, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&ILogger::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILogger*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Logger
#include "UnityEngine/Logger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Logger.get_logHandler
UnityEngine::ILogHandler* UnityEngine::Logger::get_logHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::get_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ILogHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_logHandler
void UnityEngine::Logger::set_logHandler(UnityEngine::ILogHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::set_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_logEnabled
bool UnityEngine::Logger::get_logEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::get_logEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_logEnabled
void UnityEngine::Logger::set_logEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::set_logEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_logEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_filterLogType
UnityEngine::LogType UnityEngine::Logger::get_filterLogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::get_filterLogType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterLogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LogType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_filterLogType
void UnityEngine::Logger::set_filterLogType(UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::set_filterLogType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterLogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.IsLogTypeAllowed
bool UnityEngine::Logger::IsLogTypeAllowed(UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::IsLogTypeAllowed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLogTypeAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, logType);
}
// Autogenerated method: UnityEngine.Logger.GetString
::Il2CppString* UnityEngine::Logger::GetString(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Logger", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(UnityEngine::LogType logType, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(UnityEngine::LogType logType, ::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message, context);
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, System.String format, params System.Object[] args)
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Logger::LogFormat(logType, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Logger::LogFormat(logType, context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Logger.LogException
void UnityEngine::Logger::LogException(System::Exception* exception, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Logger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exception, context);
}
// Writing MetadataGetter for method: Logger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::ILogHandler*)>(&Logger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ILogHandler*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::ILogHandler*)>(&Logger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ILogHandler*>()});
  }
};
// Writing MetadataGetter for method: Logger::get_logHandler
// Il2CppName: get_logHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::ILogHandler* (Logger::*)()>(&Logger::get_logHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "get_logHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Logger::set_logHandler
// Il2CppName: set_logHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::ILogHandler*)>(&Logger::set_logHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "set_logHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::ILogHandler*>()});
  }
};
// Writing MetadataGetter for method: Logger::get_logEnabled
// Il2CppName: get_logEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Logger::*)()>(&Logger::get_logEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "get_logEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Logger::set_logEnabled
// Il2CppName: set_logEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(bool)>(&Logger::set_logEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "set_logEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Logger::get_filterLogType
// Il2CppName: get_filterLogType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LogType (Logger::*)()>(&Logger::get_filterLogType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "get_filterLogType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Logger::set_filterLogType
// Il2CppName: set_filterLogType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::LogType)>(&Logger::set_filterLogType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "set_filterLogType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: Logger::IsLogTypeAllowed
// Il2CppName: IsLogTypeAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Logger::*)(UnityEngine::LogType)>(&Logger::IsLogTypeAllowed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "IsLogTypeAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: Logger::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppObject*)>(&Logger::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Logger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::LogType, ::Il2CppObject*)>(&Logger::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Logger::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::LogType, ::Il2CppObject*, UnityEngine::Object*)>(&Logger::Log)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Logger::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::LogType, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Logger::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Logger::LogFormat
// Il2CppName: LogFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(UnityEngine::LogType, UnityEngine::Object*, ::Il2CppString*, ::Array<::Il2CppObject*>*)>(&Logger::LogFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "LogFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: Logger::LogException
// Il2CppName: LogException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Logger::*)(System::Exception*, UnityEngine::Object*)>(&Logger::LogException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Logger*), "LogException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnityLogWriter
#include "UnityEngine/UnityLogWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityLogWriter.WriteStringToUnityLog
void UnityEngine::UnityLogWriter::WriteStringToUnityLog(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::WriteStringToUnityLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "WriteStringToUnityLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.WriteStringToUnityLogImpl
void UnityEngine::UnityLogWriter::WriteStringToUnityLogImpl(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::WriteStringToUnityLogImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "WriteStringToUnityLogImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Init
void UnityEngine::UnityLogWriter::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnityLogWriter.get_Encoding
System::Text::Encoding* UnityEngine::UnityLogWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::Array<::Il2CppChar>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Writing MetadataGetter for method: UnityLogWriter::WriteStringToUnityLog
// Il2CppName: WriteStringToUnityLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&UnityLogWriter::WriteStringToUnityLog)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "WriteStringToUnityLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::WriteStringToUnityLogImpl
// Il2CppName: WriteStringToUnityLogImpl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&UnityLogWriter::WriteStringToUnityLogImpl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "WriteStringToUnityLogImpl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityLogWriter::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (UnityLogWriter::*)()>(&UnityLogWriter::get_Encoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogWriter::*)(::Il2CppChar)>(&UnityLogWriter::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogWriter::*)(::Il2CppString*)>(&UnityLogWriter::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogWriter::*)(::Array<::Il2CppChar>*, int, int)>(&UnityLogWriter::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityLogWriter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogWriter::*)()>(&UnityLogWriter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityLogWriter::*)()>(&UnityLogWriter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityLogWriter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
