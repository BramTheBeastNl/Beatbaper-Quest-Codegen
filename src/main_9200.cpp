// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 processId
int System::Diagnostics::TraceEventCache::_get_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_get_processId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceEventCache", "processId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 processId
void System::Diagnostics::TraceEventCache::_set_processId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_set_processId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventCache", "processId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String processName
::StringW System::Diagnostics::TraceEventCache::_get_processName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_get_processName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "TraceEventCache", "processName"));
}
// Autogenerated static field setter
// Set static field: static private System.String processName
void System::Diagnostics::TraceEventCache::_set_processName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_set_processName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventCache", "processName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 timeStamp
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::TraceEventCache::dyn_timeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_timeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeStamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime dateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Diagnostics::TraceEventCache::dyn_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_dateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stackTrace
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::TraceEventCache::dyn_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_Callstack
::StringW System::Diagnostics::TraceEventCache::get_Callstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_Callstack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Callstack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_LogicalOperationStack
::System::Collections::Stack* System::Diagnostics::TraceEventCache::get_LogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_LogicalOperationStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalOperationStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Stack*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_DateTime
::System::DateTime System::Diagnostics::TraceEventCache::get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_DateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_ProcessId
int System::Diagnostics::TraceEventCache::get_ProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_ProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_ThreadId
::StringW System::Diagnostics::TraceEventCache::get_ThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_ThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_Timestamp
int64_t System::Diagnostics::TraceEventCache::get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.InitProcessInfo
void System::Diagnostics::TraceEventCache::InitProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::InitProcessInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "InitProcessInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.GetProcessId
int System::Diagnostics::TraceEventCache::GetProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::GetProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "GetProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.GetThreadId
int System::Diagnostics::TraceEventCache::GetThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::GetThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "GetThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Critical
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Critical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Critical"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Critical
void System::Diagnostics::TraceEventType::_set_Critical(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Critical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Critical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Error
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Error
void System::Diagnostics::TraceEventType::_set_Error(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Warning
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Warning
void System::Diagnostics::TraceEventType::_set_Warning(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Information
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Information() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Information");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Information"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Information
void System::Diagnostics::TraceEventType::_set_Information(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Information");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Information", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Verbose
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Verbose
void System::Diagnostics::TraceEventType::_set_Verbose(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Verbose", value));
}
// [EditorBrowsableAttribute] Offset: 0x108A3B8
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Start
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Start
void System::Diagnostics::TraceEventType::_set_Start(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Start", value));
}
// [EditorBrowsableAttribute] Offset: 0x108A3CC
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Stop
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Stop
void System::Diagnostics::TraceEventType::_set_Stop(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Stop", value));
}
// [EditorBrowsableAttribute] Offset: 0x108A3E0
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Suspend
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Suspend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Suspend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Suspend"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Suspend
void System::Diagnostics::TraceEventType::_set_Suspend(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Suspend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Suspend", value));
}
// [EditorBrowsableAttribute] Offset: 0x108A3F4
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Resume
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Resume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Resume"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Resume
void System::Diagnostics::TraceEventType::_set_Resume(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Resume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Resume", value));
}
// [EditorBrowsableAttribute] Offset: 0x108A408
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Transfer
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Transfer"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Transfer
void System::Diagnostics::TraceEventType::_set_Transfer(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Transfer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage, ::ArrayW<::Il2CppObject*> args, ::Il2CppObject* data1, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(formatOrMessage), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage, args, data1, data);
}
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(formatOrMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceInternal
#include "System/Diagnostics/TraceInternal.hpp"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String appName
::StringW System::Diagnostics::TraceInternal::_get_appName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_appName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "TraceInternal", "appName"));
}
// Autogenerated static field setter
// Set static field: static private System.String appName
void System::Diagnostics::TraceInternal::_set_appName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_appName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "appName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.TraceListenerCollection listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::_get_listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_listeners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceListenerCollection*>("System.Diagnostics", "TraceInternal", "listeners"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.TraceListenerCollection listeners
void System::Diagnostics::TraceInternal::_set_listeners(::System::Diagnostics::TraceListenerCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_listeners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "listeners", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean autoFlush
bool System::Diagnostics::TraceInternal::_get_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_autoFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "autoFlush"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean autoFlush
void System::Diagnostics::TraceInternal::_set_autoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_autoFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "autoFlush", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useGlobalLock
bool System::Diagnostics::TraceInternal::_get_useGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_useGlobalLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "useGlobalLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useGlobalLock
void System::Diagnostics::TraceInternal::_set_useGlobalLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_useGlobalLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "useGlobalLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentLevel
int System::Diagnostics::TraceInternal::_get_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentLevel
void System::Diagnostics::TraceInternal::_set_indentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentSize
int System::Diagnostics::TraceInternal::_get_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentSize
void System::Diagnostics::TraceInternal::_set_indentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentSize", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Object critSec
::Il2CppObject* System::Diagnostics::TraceInternal::_get_critSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_critSec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Diagnostics", "TraceInternal", "critSec"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object critSec
void System::Diagnostics::TraceInternal::_set_critSec(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_critSec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "critSec", value));
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_Listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::get_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_Listeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_Listeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceListenerCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_AutoFlush
bool System::Diagnostics::TraceInternal::get_AutoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_AutoFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_UseGlobalLock
bool System::Diagnostics::TraceInternal::get_UseGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_UseGlobalLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_UseGlobalLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentLevel
int System::Diagnostics::TraceInternal::get_IndentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentSize
int System::Diagnostics::TraceInternal::get_IndentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal..cctor
void System::Diagnostics::TraceInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Assert
void System::Diagnostics::TraceInternal::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Fail
void System::Diagnostics::TraceInternal::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceInternal.InitializeSettings
void System::Diagnostics::TraceInternal::InitializeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::InitializeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "InitializeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceLevel
#include "System/Diagnostics/TraceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Off
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Off
void System::Diagnostics::TraceLevel::_set_Off(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Error
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Error
void System::Diagnostics::TraceLevel::_set_Error(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Warning
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Warning
void System::Diagnostics::TraceLevel::_set_Warning(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Info
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Info
void System::Diagnostics::TraceLevel::_set_Info(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Verbose
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Verbose
void System::Diagnostics::TraceLevel::_set_Verbose(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentSize
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceOptions traceOptions
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceOptions& System::Diagnostics::TraceListener::dyn_traceOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_traceOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traceOptions"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needIndent
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::TraceListener::dyn_needIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_needIndent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needIndent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String listenerName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::TraceListener::dyn_listenerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_listenerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listenerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceFilter filter
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceFilter*& System::Diagnostics::TraceListener::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_IsThreadSafe
bool System::Diagnostics::TraceListener::get_IsThreadSafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsThreadSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentLevel
void System::Diagnostics::TraceListener::set_IndentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentSize
void System::Diagnostics::TraceListener::set_IndentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_Filter
::System::Diagnostics::TraceFilter* System::Diagnostics::TraceListener::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_NeedIndent
bool System::Diagnostics::TraceListener::get_NeedIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_NeedIndent
void System::Diagnostics::TraceListener::set_NeedIndent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_TraceOutputOptions
::System::Diagnostics::TraceOptions System::Diagnostics::TraceListener::get_TraceOutputOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_TraceOutputOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TraceOutputOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.TraceListener.Flush
void System::Diagnostics::TraceListener::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::StringW message, ::StringW detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(detailMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.TraceListener.Write
void System::Diagnostics::TraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteIndent
void System::Diagnostics::TraceListener::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteIndent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteLine
void System::Diagnostics::TraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.TraceEvent
void System::Diagnostics::TraceListener::TraceEvent(::System::Diagnostics::TraceEventCache* eventCache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::TraceEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TraceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCache, source, eventType, id, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteHeader
void System::Diagnostics::TraceListener::WriteHeader(::StringW source, ::System::Diagnostics::TraceEventType eventType, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, eventType, id);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteFooter
void System::Diagnostics::TraceListener::WriteFooter(::System::Diagnostics::TraceEventCache* eventCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteFooter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFooter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCache)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCache);
}
// Autogenerated method: System.Diagnostics.TraceListener.IsEnabled
bool System::Diagnostics::TraceListener::IsEnabled(::System::Diagnostics::TraceOptions opts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opts);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Diagnostics::TraceListenerCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.get_Count
int System::Diagnostics::TraceListenerCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.set_Item
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsReadOnly
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsFixedSize
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Add
int System::Diagnostics::TraceListenerCollection::Add(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Clear
void System::Diagnostics::TraceListenerCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.GetEnumerator
::System::Collections::IEnumerator* System::Diagnostics::TraceListenerCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.InitializeListener
void System::Diagnostics::TraceListenerCollection::InitializeListener(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::InitializeListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.RemoveAt
void System::Diagnostics::TraceListenerCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo
void System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceOptions
#include "System/Diagnostics/TraceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions None
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions None
void System::Diagnostics::TraceOptions::_set_None(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions LogicalOperationStack
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_LogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_LogicalOperationStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "LogicalOperationStack"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions LogicalOperationStack
void System::Diagnostics::TraceOptions::_set_LogicalOperationStack(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_LogicalOperationStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "LogicalOperationStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions DateTime
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions DateTime
void System::Diagnostics::TraceOptions::_set_DateTime(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions Timestamp
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_Timestamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "Timestamp"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions Timestamp
void System::Diagnostics::TraceOptions::_set_Timestamp(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_Timestamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "Timestamp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions ProcessId
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_ProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_ProcessId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "ProcessId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions ProcessId
void System::Diagnostics::TraceOptions::_set_ProcessId(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_ProcessId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "ProcessId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions ThreadId
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_ThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_ThreadId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "ThreadId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions ThreadId
void System::Diagnostics::TraceOptions::_set_ThreadId(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_ThreadId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "ThreadId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions Callstack
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_Callstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_Callstack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "Callstack"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions Callstack
void System::Diagnostics::TraceOptions::_set_Callstack(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_Callstack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "Callstack", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Diagnostics::AsyncStreamReader::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::AsyncStreamReader::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::Diagnostics::AsyncStreamReader::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::AsyncStreamReader::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Diagnostics::AsyncStreamReader::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cancelOperation
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::AsyncStreamReader::dyn_cancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_cancelOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelOperation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent eofEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Diagnostics::AsyncStreamReader::dyn_eofEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_eofEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eofEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object syncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Diagnostics::AsyncStreamReader::dyn_syncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_syncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Close
void System::Diagnostics::AsyncStreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Dispose
void System::Diagnostics::AsyncStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.CancelOperation
void System::Diagnostics::AsyncStreamReader::CancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::CancelOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.Diagnostics.Process/System.Diagnostics.State
#include "System/Diagnostics/Process_State.hpp"
// Including type: System.Diagnostics.Process/System.Diagnostics.ProcInfo
#include "System/Diagnostics/Process_ProcInfo.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.Diagnostics.ProcessThreadCollection
#include "System/Diagnostics/ProcessThreadCollection.hpp"
// Including type: System.Diagnostics.ProcessModuleCollection
#include "System/Diagnostics/ProcessModuleCollection.hpp"
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Diagnostics.ProcessInfo
#include "System/Diagnostics/ProcessInfo.hpp"
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessId
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 processId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_processId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessHandle
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeProcessHandle m_processHandle
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeProcessHandle*& System::Diagnostics::Process::dyn_m_processHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeProcessHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRemoteMachine
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_isRemoteMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_isRemoteMachine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRemoteMachine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String machineName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_machineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_machineName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "machineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_processAccess
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_m_processAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processAccess"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessThreadCollection threads
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessThreadCollection*& System::Diagnostics::Process::dyn_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_threads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threads"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessThreadCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessModuleCollection modules
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessModuleCollection*& System::Diagnostics::Process::dyn_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_modules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modules"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessModuleCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveWorkingSetLimits
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveWorkingSetLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveWorkingSetLimits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWorkingSetLimits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean havePriorityClass
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_havePriorityClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_havePriorityClass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "havePriorityClass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessStartInfo startInfo
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessStartInfo*& System::Diagnostics::Process::dyn_startInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_startInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startInfo"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessStartInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchingForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchingForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchingForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler onExited
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::Diagnostics::Process::dyn_onExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_onExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onExited"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean exited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 exitCode
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_exitCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exitCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean signaled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_signaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_signaled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signaled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveExitTime
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveExitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveExitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveExitTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean raisedOnExited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_raisedOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_raisedOnExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raisedOnExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.RegisteredWaitHandle registeredWaitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::RegisteredWaitHandle*& System::Diagnostics::Process::dyn_registeredWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_registeredWaitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registeredWaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::RegisteredWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitHandle waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::WaitHandle*& System::Diagnostics::Process::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::WaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISynchronizeInvoke synchronizingObject
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISynchronizeInvoke*& System::Diagnostics::Process::dyn_synchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_synchronizingObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchronizingObject"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISynchronizeInvoke**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardOutput
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutput"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamWriter standardInput
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::Diagnostics::Process::dyn_standardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardInput"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardError
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardError"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode outputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_outputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_outputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode errorStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_errorStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_errorStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode inputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_inputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_inputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader output
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader error
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String process_name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_process_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_process_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "process_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Process.get_Associated
bool System::Diagnostics::Process::get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Associated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Associated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_HasExited
bool System::Diagnostics::Process::get_HasExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_HasExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Handle
::System::IntPtr System::Diagnostics::Process::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Id
int System::Diagnostics::Process::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_StartInfo
::System::Diagnostics::ProcessStartInfo* System::Diagnostics::Process::get_StartInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_StartInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::ProcessStartInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_SynchronizingObject
::System::ComponentModel::ISynchronizeInvoke* System::Diagnostics::Process::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_TotalProcessorTime
::System::TimeSpan System::Diagnostics::Process::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_ProcessName
::StringW System::Diagnostics::Process::get_ProcessName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_ProcessName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_IsWindows
bool System::Diagnostics::Process::get_IsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_IsWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "get_IsWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessTimes
::System::Diagnostics::ProcessThreadTimes* System::Diagnostics::Process::GetProcessTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::ProcessThreadTimes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ReleaseProcessHandle
void System::Diagnostics::Process::ReleaseProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ReleaseProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.CompletionCallback
void System::Diagnostics::Process::CompletionCallback(::Il2CppObject* context, bool wasSignaled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(wasSignaled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, wasSignaled);
}
// Autogenerated method: System.Diagnostics.Process.Close
void System::Diagnostics::Process::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.EnsureState
void System::Diagnostics::Process::EnsureState(::System::Diagnostics::Process::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Diagnostics.Process.EnsureWatchingForExit
void System::Diagnostics::Process::EnsureWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.GetCurrentProcess
::System::Diagnostics::Process* System::Diagnostics::Process::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.OnExited
void System::Diagnostics::Process::OnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access, bool throwIfExited) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(throwIfExited)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access, throwIfExited);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.OpenProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::OpenProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OpenProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.Refresh
void System::Diagnostics::Process::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessHandle
void System::Diagnostics::Process::SetProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processHandle);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessId
void System::Diagnostics::Process::SetProcessId(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.Start
bool System::Diagnostics::Process::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Kill
void System::Diagnostics::Process::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Kill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StopWatchingForExit
void System::Diagnostics::Process::StopWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StopWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::StringW System::Diagnostics::Process::ProcessName_internal(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::StringW System::Diagnostics::Process::ProcessName_internal(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.GetProcess_internal
::System::IntPtr System::Diagnostics::Process::GetProcess_internal(int pid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pid);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId, ::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId), ::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId, machineName);
}
// Autogenerated method: System.Diagnostics.Process.IsLocalMachine
bool System::Diagnostics::Process::IsLocalMachine(::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::IsLocalMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "IsLocalMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, machineName);
}
// Autogenerated method: System.Diagnostics.Process.ShellExecuteEx_internal
bool System::Diagnostics::Process::ShellExecuteEx_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ShellExecuteEx_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ShellExecuteEx_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.CreateProcess_internal
bool System::Diagnostics::Process::CreateProcess_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ::System::IntPtr stdin, ::System::IntPtr stdout, ::System::IntPtr stderr, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreateProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreateProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(stdin), ::il2cpp_utils::ExtractType(stdout), ::il2cpp_utils::ExtractType(stderr), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, stdin, stdout, stderr, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.StartWithShellExecuteEx
bool System::Diagnostics::Process::StartWithShellExecuteEx(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithShellExecuteEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithShellExecuteEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.CreatePipe
void System::Diagnostics::Process::CreatePipe(ByRef<::System::IntPtr> read, ByRef<::System::IntPtr> write, bool writeDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreatePipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreatePipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(writeDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(read), byref(write), writeDirection);
}
// Autogenerated method: System.Diagnostics.Process.StartWithCreateProcess
bool System::Diagnostics::Process::StartWithCreateProcess(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithCreateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithCreateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.FillUserInfo
void System::Diagnostics::Process::FillUserInfo(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::FillUserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "FillUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.RaiseOnExited
void System::Diagnostics::Process::RaiseOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::RaiseOnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Dispose
void System::Diagnostics::Process::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Process.ToString
::StringW System::Diagnostics::Process::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/System.Diagnostics.StreamReadMode
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode undefined
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "undefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode undefined
void System::Diagnostics::Process::StreamReadMode::_set_undefined(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "undefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode syncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_syncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_syncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "syncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode syncMode
void System::Diagnostics::Process::StreamReadMode::_set_syncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_syncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "syncMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode asyncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_asyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_asyncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "asyncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode asyncMode
void System::Diagnostics::Process::StreamReadMode::_set_asyncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_asyncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "asyncMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::StreamReadMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/System.Diagnostics.State
#include "System/Diagnostics/Process_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveId
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveId
void System::Diagnostics::Process::State::_set_HaveId(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsLocal
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsLocal
void System::Diagnostics::Process::State::_set_IsLocal(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsNt
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsNt"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsNt
void System::Diagnostics::Process::State::_set_IsNt(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveProcessInfo
void System::Diagnostics::Process::State::_set_HaveProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveProcessInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State Exited
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Exited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Exited"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State Exited
void System::Diagnostics::Process::State::_set_Exited(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Exited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Exited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State Associated
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Associated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Associated"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State Associated
void System::Diagnostics::Process::State::_set_Associated(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Associated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Associated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsWin2k
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsWin2k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsWin2k");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsWin2k"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsWin2k
void System::Diagnostics::Process::State::_set_IsWin2k(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsWin2k");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsWin2k", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveNtProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveNtProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveNtProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveNtProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveNtProcessInfo
void System::Diagnostics::Process::State::_set_HaveNtProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveNtProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveNtProcessInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 create
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "create"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 exit
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_exit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exit"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 kernel
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_kernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_kernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kernel"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 user
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_user");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.ProcessThreadTimes.get_TotalProcessorTime
::System::TimeSpan System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] empty
::ArrayW<::StringW> System::Diagnostics::ProcessStartInfo::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Diagnostics", "ProcessStartInfo", "empty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] empty
void System::Diagnostics::ProcessStartInfo::_set_empty(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessStartInfo", "empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String arguments
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arguments"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String directory
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String verb
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_verb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_verb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verb"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessWindowStyle windowStyle
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessWindowStyle& System::Diagnostics::ProcessStartInfo::dyn_windowStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_windowStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowStyle"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessWindowStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean errorDialog
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_errorDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr errorDialogParentHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialogParentHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useShellExecute
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_useShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_useShellExecute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useShellExecute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String domain
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecureString password
[[deprecated("Use field access instead!")]] ::System::Security::SecureString*& System::Diagnostics::ProcessStartInfo::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<::System::Security::SecureString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String passwordInClearText
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passwordInClearText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loadUserProfile
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadUserProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardInput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardOutput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardError
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardOutputEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutputEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardErrorEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardErrorEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean createNoWindow
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_createNoWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_createNoWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createNoWindow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.WeakReference weakParentProcess
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weakParentProcess"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Specialized.StringDictionary environmentVariables
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::StringDictionary*& System::Diagnostics::ProcessStartInfo::dyn_environmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environmentVariables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentVariables"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::StringDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,System.String> environment
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& System::Diagnostics::ProcessStartInfo::dyn_environment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environment"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Arguments
::StringW System::Diagnostics::ProcessStartInfo::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_Arguments
void System::Diagnostics::ProcessStartInfo::set_Arguments(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_EnvironmentVariables
::System::Collections::Specialized::StringDictionary* System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::StringDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardInput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardOutput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardError
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardErrorEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardErrorEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardOutputEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardOutputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UseShellExecute
bool System::Diagnostics::ProcessStartInfo::get_UseShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UseShellExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseShellExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UserName
::StringW System::Diagnostics::ProcessStartInfo::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Password
::System::Security::SecureString* System::Diagnostics::ProcessStartInfo::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Domain
::StringW System::Diagnostics::ProcessStartInfo::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_LoadUserProfile
bool System::Diagnostics::ProcessStartInfo::get_LoadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_LoadUserProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadUserProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_FileName
::StringW System::Diagnostics::ProcessStartInfo::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_FileName
void System::Diagnostics::ProcessStartInfo::set_FileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_WorkingDirectory
::StringW System::Diagnostics::ProcessStartInfo::get_WorkingDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_WorkingDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkingDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_HaveEnvVars
bool System::Diagnostics::ProcessStartInfo::get_HaveEnvVars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_HaveEnvVars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HaveEnvVars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo..cctor
void System::Diagnostics::ProcessStartInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "ProcessStartInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWaitHandle
#include "System/Diagnostics/ProcessWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DefaultTraceListener
#include "System/Diagnostics/DefaultTraceListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean OnWin32
bool System::Diagnostics::DefaultTraceListener::_get_OnWin32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_OnWin32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "DefaultTraceListener", "OnWin32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean OnWin32
void System::Diagnostics::DefaultTraceListener::_set_OnWin32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_OnWin32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "OnWin32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTracePrefix
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTracePrefix
void System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTraceFile
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTraceFile
void System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String logFileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DefaultTraceListener::dyn_logFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::dyn_logFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.get_LogFileName
::StringW System::Diagnostics::DefaultTraceListener::get_LogFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::get_LogFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener..cctor
void System::Diagnostics::DefaultTraceListener::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.GetPrefix
::StringW System::Diagnostics::DefaultTraceListener::GetPrefix(::StringW var, ::StringW target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(var), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, var, target);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteWindowsDebugString
void System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "WriteWindowsDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteDebugString
void System::Diagnostics::DefaultTraceListener::WriteDebugString(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteMonoTrace
void System::Diagnostics::DefaultTraceListener::WriteMonoTrace(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteMonoTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMonoTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WritePrefix
void System::Diagnostics::DefaultTraceListener::WritePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WritePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteImpl
void System::Diagnostics::DefaultTraceListener::WriteImpl(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLogFile
void System::Diagnostics::DefaultTraceListener::WriteLogFile(::StringW message, ::StringW logFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLogFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLogFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, logFile);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::StringW message, ::StringW detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(detailMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Write
void System::Diagnostics::DefaultTraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLine
void System::Diagnostics::DefaultTraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.MonitoringDescriptionAttribute
#include "System/Diagnostics/MonitoringDescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.MonitoringDescriptionAttribute.get_Description
::StringW System::Diagnostics::MonitoringDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::MonitoringDescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWindowStyle
#include "System/Diagnostics/ProcessWindowStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Hidden
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Hidden
void System::Diagnostics::ProcessWindowStyle::_set_Hidden(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Maximized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Maximized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Maximized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Maximized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Maximized
void System::Diagnostics::ProcessWindowStyle::_set_Maximized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Maximized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Maximized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Minimized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Minimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Minimized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Minimized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Minimized
void System::Diagnostics::ProcessWindowStyle::_set_Minimized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Minimized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Minimized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Normal
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Normal
void System::Diagnostics::ProcessWindowStyle::_set_Normal(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::ProcessWindowStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_IsHighResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_IsHighResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 elapsed
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_elapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elapsed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 started
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_running
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Stopwatch::dyn_is_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_is_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
::System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_IsRunning
bool System::Diagnostics::Stopwatch::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.StartNew
::System::Diagnostics::Stopwatch* System::Diagnostics::Stopwatch::StartNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::StartNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "StartNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Stopwatch*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Reset
void System::Diagnostics::Stopwatch::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Stop
void System::Diagnostics::Stopwatch::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Restart
void System::Diagnostics::Stopwatch::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArrayConverter/System.ComponentModel.ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.ComponentModel.ArrayConverter
#include "System/ComponentModel/ArrayConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ArrayConverter.ConvertTo
::Il2CppObject* System::ComponentModel::ArrayConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ArrayConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetPropertiesSupported
bool System::ComponentModel::ArrayConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ArrayConverter/System.ComponentModel.ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArraySubsetEnumerator
#include "System/ComponentModel/ArraySubsetEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array array
[[deprecated("Use field access instead!")]] ::System::Array*& System::ComponentModel::ArraySubsetEnumerator::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 total
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArraySubsetEnumerator::dyn_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 current
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArraySubsetEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.get_Current
::Il2CppObject* System::ComponentModel::ArraySubsetEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.MoveNext
bool System::ComponentModel::ArraySubsetEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.Reset
void System::ComponentModel::ArraySubsetEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.AttributeCollection Empty
::System::ComponentModel::AttributeCollection* System::ComponentModel::AttributeCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::AttributeCollection*>("System.ComponentModel", "AttributeCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.AttributeCollection Empty
void System::ComponentModel::AttributeCollection::_set_Empty(::System::ComponentModel::AttributeCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _defaultAttributes
::System::Collections::Hashtable* System::ComponentModel::AttributeCollection::_get__defaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get__defaultAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "AttributeCollection", "_defaultAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _defaultAttributes
void System::ComponentModel::AttributeCollection::_set__defaultAttributes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set__defaultAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "_defaultAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object internalSyncObject
::Il2CppObject* System::ComponentModel::AttributeCollection::_get_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "AttributeCollection", "internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object internalSyncObject
void System::ComponentModel::AttributeCollection::_set_internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "internalSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] _attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::AttributeCollection::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection/System.ComponentModel.AttributeEntry[] _foundAttributeTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>& System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundAttributeTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::AttributeCollection::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Attributes
::ArrayW<::System::Attribute*> System::ComponentModel::AttributeCollection::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Count
int System::ComponentModel::AttributeCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Item
::System::Attribute* System::ComponentModel::AttributeCollection::get_Item(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection..cctor
void System::ComponentModel::AttributeCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AttributeCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetDefaultAttribute
::System::Attribute* System::ComponentModel::AttributeCollection::GetDefaultAttribute(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.CopyTo
void System::ComponentModel::AttributeCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BooleanConverter
#include "System/ComponentModel/BooleanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::_get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverter::StandardValuesCollection*>("System.ComponentModel", "BooleanConverter", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
void System::ComponentModel::BooleanConverter::_set_values(::System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BooleanConverter", "values", value));
}
// Autogenerated method: System.ComponentModel.BooleanConverter.CanConvertFrom
bool System::ComponentModel::BooleanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::BooleanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive
bool System::ComponentModel::BooleanConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesSupported
bool System::ComponentModel::BooleanConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BrowsableAttribute
#include "System/ComponentModel/BrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
void System::ComponentModel::BrowsableAttribute::_set_Yes(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute No
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute No
void System::ComponentModel::BrowsableAttribute::_set_No(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Default
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Default
void System::ComponentModel::BrowsableAttribute::_set_Default(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean browsable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BrowsableAttribute::dyn_browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::dyn_browsable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.get_Browsable
bool System::ComponentModel::BrowsableAttribute::get_Browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::get_Browsable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Browsable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute..cctor
void System::ComponentModel::BrowsableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "BrowsableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.Equals
bool System::ComponentModel::BrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.GetHashCode
int System::ComponentModel::BrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.IsDefaultAttribute
bool System::ComponentModel::BrowsableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ByteConverter
#include "System/ComponentModel/ByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ByteConverter.get_TargetType
::System::Type* System::ComponentModel::ByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.ByteConverter.ToString
::StringW System::ComponentModel::ByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CollectionConverter
#include "System/ComponentModel/CollectionConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.CollectionConverter.ConvertTo
::Il2CppObject* System::ComponentModel::CollectionConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.CollectionConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::CollectionConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.CollectionConverter.GetPropertiesSupported
bool System::ComponentModel::CollectionConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object EventDisposed
::Il2CppObject* System::ComponentModel::Component::_get_EventDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::_get_EventDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "Component", "EventDisposed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object EventDisposed
void System::ComponentModel::Component::_set_EventDisposed(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::_set_EventDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "Component", "EventDisposed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISite site
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISite*& System::ComponentModel::Component::dyn_site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::dyn_site");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "site"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList*& System::ComponentModel::Component::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEvents
bool System::ComponentModel::Component::get_CanRaiseEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_CanRaiseEvents");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRaiseEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEventsInternal
bool System::ComponentModel::Component::get_CanRaiseEventsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_CanRaiseEventsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRaiseEventsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_Site
::System::ComponentModel::ISite* System::ComponentModel::Component::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_Site");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Site", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_DesignMode
bool System::ComponentModel::Component::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_DesignMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component..cctor
void System::ComponentModel::Component::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "Component", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.Component.GetService
::Il2CppObject* System::ComponentModel::Component::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::GetService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(service)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.Component.Finalize
void System::ComponentModel::Component::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.ToString
::StringW System::ComponentModel::Component::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CustomTypeDescriptor
#include "System/ComponentModel/CustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ICustomTypeDescriptor _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ICustomTypeDescriptor*& System::ComponentModel::CustomTypeDescriptor::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::CustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::CustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DecimalConverter.get_AllowHex
bool System::ComponentModel::DecimalConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.get_TargetType
::System::Type* System::ComponentModel::DecimalConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.CanConvertTo
bool System::ComponentModel::DecimalConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DecimalConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ToString
::StringW System::ComponentModel::DecimalConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultEventAttribute
#include "System/ComponentModel/DefaultEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
::System::ComponentModel::DefaultEventAttribute* System::ComponentModel::DefaultEventAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultEventAttribute*>("System.ComponentModel", "DefaultEventAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
void System::ComponentModel::DefaultEventAttribute::_set_Default(::System::ComponentModel::DefaultEventAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultEventAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultEventAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.get_Name
::StringW System::ComponentModel::DefaultEventAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute..cctor
void System::ComponentModel::DefaultEventAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultEventAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.Equals
bool System::ComponentModel::DefaultEventAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.GetHashCode
int System::ComponentModel::DefaultEventAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultPropertyAttribute
#include "System/ComponentModel/DefaultPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
::System::ComponentModel::DefaultPropertyAttribute* System::ComponentModel::DefaultPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultPropertyAttribute*>("System.ComponentModel", "DefaultPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
void System::ComponentModel::DefaultPropertyAttribute::_set_Default(::System::ComponentModel::DefaultPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultPropertyAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute..cctor
void System::ComponentModel::DefaultPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.Equals
bool System::ComponentModel::DefaultPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultValueAttribute
#include "System/ComponentModel/DefaultValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DefaultValueAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.Equals
bool System::ComponentModel::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.GetHashCode
int System::ComponentModel::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.DelegatingTypeDescriptionProvider
#include "System/ComponentModel/DelegatingTypeDescriptionProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.get_Provider
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
::System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(::System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DescriptionAttribute::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::StringW System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::StringW System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.IsDefaultAttribute
bool System::ComponentModel::DescriptionAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerAttribute
#include "System/ComponentModel/DesignerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerBaseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerBaseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.Equals
bool System::ComponentModel::DesignerAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.GetHashCode
int System::ComponentModel::DesignerAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerCategoryAttribute
#include "System/ComponentModel/DesignerCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Component"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
void System::ComponentModel::DesignerCategoryAttribute::_set_Component(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Component", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
void System::ComponentModel::DesignerCategoryAttribute::_set_Default(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Form");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Form"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
void System::ComponentModel::DesignerCategoryAttribute::_set_Form(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Form");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Form", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
void System::ComponentModel::DesignerCategoryAttribute::_set_Generic(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Generic", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_Category
::StringW System::ComponentModel::DesignerCategoryAttribute::get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute..cctor
void System::ComponentModel::DesignerCategoryAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerCategoryAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerCategoryAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.Equals
bool System::ComponentModel::DesignerCategoryAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.GetHashCode
int System::ComponentModel::DesignerCategoryAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
void System::ComponentModel::DesignerSerializationVisibility::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
void System::ComponentModel::DesignerSerializationVisibility::_set_Visible(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Content
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Content
void System::ComponentModel::DesignerSerializationVisibility::_set_Content(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DesignerSerializationVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerSerializationVisibilityAttribute
#include "System/ComponentModel/DesignerSerializationVisibilityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.DesignerSerializationVisibility visibility
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DesignerSerializationVisibility& System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibility"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DesignerSerializationVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.get_Visibility
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute..cctor
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerSerializationVisibilityAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode
int System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DisplayNameAttribute
#include "System/ComponentModel/DisplayNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
::System::ComponentModel::DisplayNameAttribute* System::ComponentModel::DisplayNameAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DisplayNameAttribute*>("System.ComponentModel", "DisplayNameAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
void System::ComponentModel::DisplayNameAttribute::_set_Default(::System::ComponentModel::DisplayNameAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DisplayNameAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DisplayNameAttribute::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayName
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayNameValue
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute..cctor
void System::ComponentModel::DisplayNameAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DisplayNameAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.Equals
bool System::ComponentModel::DisplayNameAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.GetHashCode
int System::ComponentModel::DisplayNameAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
bool System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DoubleConverter.get_AllowHex
bool System::ComponentModel::DoubleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.get_TargetType
::System::Type* System::ComponentModel::DoubleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.ToString
::StringW System::ComponentModel::DoubleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorAttribute
#include "System/ComponentModel/EditorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String baseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::EditorAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.Equals
bool System::ComponentModel::EditorAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.GetHashCode
int System::ComponentModel::EditorAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EditorBrowsableState browsableState
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EditorBrowsableState& System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsableState"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EditorBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EditorBrowsableState
#include "System/ComponentModel/EditorBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Always
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Always
void System::ComponentModel::EditorBrowsableState::_set_Always(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Never
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Never
void System::ComponentModel::EditorBrowsableState::_set_Never(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Advanced
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Advanced
void System::ComponentModel::EditorBrowsableState::_set_Advanced(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EditorBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EnumConverter
#include "System/ComponentModel/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::EnumConverter::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::EnumConverter::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EnumConverter.get_Comparer
::System::Collections::IComparer* System::ComponentModel::EnumConverter::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::get_Comparer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertFrom
bool System::ComponentModel::EnumConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertTo
bool System::ComponentModel::EnumConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertTo
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::EnumConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesExclusive
bool System::ComponentModel::EnumConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesSupported
bool System::ComponentModel::EnumConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.IsValid
bool System::ComponentModel::EnumConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EventDescriptorCollection*>("System.ComponentModel", "EventDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
void System::ComponentModel::EventDescriptorCollection::_set_Empty(::System::ComponentModel::EventDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EventDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptor[] events
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::EventDescriptor*>& System::ComponentModel::EventDescriptorCollection::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::EventDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::EventDescriptorCollection::dyn_namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::EventDescriptorCollection::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean eventsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 eventCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::dyn_eventCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Count
int System::ComponentModel::EventDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection..cctor
void System::ComponentModel::EventDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "EventDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Add
int System::ComponentModel::EventDescriptorCollection::Add(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Clear
void System::ComponentModel::EventDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Contains
bool System::ComponentModel::EventDescriptorCollection::Contains(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureEventsOwned
void System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureEventsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureSize
void System::ComponentModel::EventDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.IndexOf
int System::ComponentModel::EventDescriptorCollection::IndexOf(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Insert
void System::ComponentModel::EventDescriptorCollection::Insert(int index, ::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Remove
void System::ComponentModel::EventDescriptorCollection::Remove(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.RemoveAt
void System::ComponentModel::EventDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.ComponentModel.EventHandlerList/System.ComponentModel.ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList/System.ComponentModel.ListEntry head
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Component parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Component*& System::ComponentModel::EventHandlerList::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.get_Item
::System::Delegate* System::ComponentModel::EventHandlerList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Find
::System::ComponentModel::EventHandlerList::ListEntry* System::ComponentModel::EventHandlerList::Find(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList::ListEntry*, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ExtenderProvidedPropertyAttribute
#include "System/ComponentModel/ExtenderProvidedPropertyAttribute.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.IExtenderProvider provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_Provider
::System::ComponentModel::IExtenderProvider* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IExtenderProvider*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IComponent.get_Site
::System::ComponentModel::ISite* System::ComponentModel::IComponent::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::get_Site");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Site", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IContainer.Remove
void System::ComponentModel::IContainer::Remove(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ICustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ICustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISite.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ISite::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_DesignMode
bool System::ComponentModel::ISite::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Name
::StringW System::ComponentModel::ISite::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.get_InvokeRequired
bool System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvokeRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ISynchronizeInvoke::BeginInvoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int16Converter
#include "System/ComponentModel/Int16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int16Converter.get_TargetType
::System::Type* System::ComponentModel::Int16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int16Converter.ToString
::StringW System::ComponentModel::Int16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int32Converter
#include "System/ComponentModel/Int32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int32Converter.get_TargetType
::System::Type* System::ComponentModel::Int32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int32Converter.ToString
::StringW System::ComponentModel::Int32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int64Converter
#include "System/ComponentModel/Int64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int64Converter.get_TargetType
::System::Type* System::ComponentModel::Int64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int64Converter.ToString
::StringW System::ComponentModel::Int64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListChangedType listChangedType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedType& System::ComponentModel::ListChangedEventArgs::dyn_listChangedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_listChangedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listChangedType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 newIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_newIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_newIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 oldIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_oldIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_oldIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.Invoke
void System::ComponentModel::ListChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ListChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.EndInvoke
void System::ComponentModel::ListChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType Reset
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType Reset
void System::ComponentModel::ListChangedType::_set_Reset(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "Reset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemAdded
void System::ComponentModel::ListChangedType::_set_ItemAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemDeleted
void System::ComponentModel::ListChangedType::_set_ItemDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemMoved
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemMoved"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemMoved
void System::ComponentModel::ListChangedType::_set_ItemMoved(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemMoved", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemChanged
void System::ComponentModel::ListChangedType::_set_ItemChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MemberDescriptor
#include "System/ComponentModel/MemberDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nameHash
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_nameHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_nameHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection attributeCollection
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AttributeCollection*& System::ComponentModel::MemberDescriptor::dyn_attributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributeCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeCollection"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] originalAttributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_originalAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_originalAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalAttributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFiltered
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFiltered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFiltered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFiltered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFilled
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFilled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 metadataVersion
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_metadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_metadataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metadataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object lockCookie
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::MemberDescriptor::dyn_lockCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_lockCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockCookie"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_AttributeArray
::ArrayW<::System::Attribute*> System::ComponentModel::MemberDescriptor::get_AttributeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_AttributeArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Attributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Name
::StringW System::ComponentModel::MemberDescriptor::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_NameHashCode
int System::ComponentModel::MemberDescriptor::get_NameHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_NameHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CheckAttributesValid
void System::ComponentModel::MemberDescriptor::CheckAttributesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CheckAttributesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAttributesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::CreateAttributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CreateAttributeCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttributeCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FillAttributes
void System::ComponentModel::MemberDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FilterAttributesIfNeeded
void System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttributesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.Equals
bool System::ComponentModel::MemberDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetHashCode
int System::ComponentModel::MemberDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String propertyName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::PropertyChangedEventArgs::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventArgs::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.Invoke
void System::ComponentModel::PropertyChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::PropertyChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.EndInvoke
void System::ComponentModel::PropertyChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::PropertyDescriptor::dyn_converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] editors
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ComponentModel::PropertyDescriptor::dyn_editors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editors"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] editorTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::PropertyDescriptor::dyn_editorTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editorTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 editorCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptor::dyn_editorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::PropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.Equals
bool System::ComponentModel::PropertyDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.FillAttributes
void System::ComponentModel::PropertyDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetHashCode
int System::ComponentModel::PropertyDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyDescriptorCollection*>("System.ComponentModel", "PropertyDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
void System::ComponentModel::PropertyDescriptorCollection::_set_Empty(::System::ComponentModel::PropertyDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IDictionary cachedFoundProperties
[[deprecated("Use field access instead!")]] ::System::Collections::IDictionary*& System::ComponentModel::PropertyDescriptorCollection::dyn_cachedFoundProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_cachedFoundProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedFoundProperties"))->offset;
  return *reinterpret_cast<::System::Collections::IDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cachedIgnoreCase
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_cachedIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_cachedIgnoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedIgnoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor[] properties
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::PropertyDescriptor*>& System::ComponentModel::PropertyDescriptorCollection::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::PropertyDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 propCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::dyn_propCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_propCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::PropertyDescriptorCollection::dyn_namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::PropertyDescriptorCollection::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean propsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_propsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_propsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection..cctor
void System::ComponentModel::PropertyDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "PropertyDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Add
int System::ComponentModel::PropertyDescriptorCollection::Add(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Clear
void System::ComponentModel::PropertyDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Contains
bool System::ComponentModel::PropertyDescriptorCollection::Contains(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.CopyTo
void System::ComponentModel::PropertyDescriptorCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsurePropsOwned
void System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsurePropsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsureSize
void System::ComponentModel::PropertyDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Find
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::Find(::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::IndexOf(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Insert
void System::ComponentModel::PropertyDescriptorCollection::Insert(int index, ::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Remove
void System::ComponentModel::PropertyDescriptorCollection::Remove(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection owner
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Current
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Entry
::System::Collections::DictionaryEntry System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Key
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Value
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.MoveNext
bool System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.Reset
void System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ReferenceConverter
#include "System/ComponentModel/ReferenceConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String none
::StringW System::ComponentModel::ReferenceConverter::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "ReferenceConverter", "none"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String none
void System::ComponentModel::ReferenceConverter::_set_none(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReferenceConverter", "none", value));
}
// Autogenerated method: System.ComponentModel.ReferenceConverter..cctor
void System::ComponentModel::ReferenceConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReferenceConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider
#include "System/ComponentModel/ReflectTypeDescriptionProvider.hpp"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData
#include "System/ComponentModel/ReflectTypeDescriptionProvider_ReflectedTypeData.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type[] _typeConstructor
::ArrayW<::System::Type*> System::ComponentModel::ReflectTypeDescriptionProvider::_get__typeConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__typeConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_typeConstructor"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] _typeConstructor
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__typeConstructor(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__typeConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_typeConstructor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _intrinsicTypeConverters
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicTypeConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicTypeConverters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicTypeConverters"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _intrinsicTypeConverters
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicTypeConverters(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicTypeConverters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicTypeConverters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _intrinsicReferenceKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicReferenceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicReferenceKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicReferenceKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _intrinsicReferenceKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicReferenceKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicReferenceKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicReferenceKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _intrinsicNullableKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicNullableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicNullableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicNullableKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _intrinsicNullableKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicNullableKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicNullableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicNullableKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _dictionaryKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__dictionaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__dictionaryKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_dictionaryKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _dictionaryKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__dictionaryKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__dictionaryKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_dictionaryKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _attributeCache
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::_get__attributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__attributeCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_attributeCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _attributeCache
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__attributeCache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__attributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_attributeCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderProviderKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderProviderKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderPropertiesKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderPropertiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderPropertiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderPropertiesKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderPropertiesKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderPropertiesKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderPropertiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderPropertiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderProviderPropertiesKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderPropertiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderPropertiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderPropertiesKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderProviderPropertiesKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderPropertiesKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderPropertiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderPropertiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] _skipInterfaceAttributeList
::ArrayW<::System::Type*> System::ComponentModel::ReflectTypeDescriptionProvider::_get__skipInterfaceAttributeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__skipInterfaceAttributeList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_skipInterfaceAttributeList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] _skipInterfaceAttributeList
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__skipInterfaceAttributeList(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__skipInterfaceAttributeList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_skipInterfaceAttributeList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _internalSyncObject
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _internalSyncObject
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_internalSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _typeData
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::ComponentModel::ReflectTypeDescriptionProvider::dyn__typeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::dyn__typeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeData"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.get_IntrinsicTypeConverters
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::get_IntrinsicTypeConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::get_IntrinsicTypeConverters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "get_IntrinsicTypeConverters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider..cctor
void System::ComponentModel::ReflectTypeDescriptionProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.CreateInstance
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::CreateInstance(::System::Type* objectType, ::System::Type* callingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(callingType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, callingType);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::GetAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::GetConverter(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, type, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedAttributes(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedConverter(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeData
::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData* System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeData(::System::Type* type, bool createIfNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(createIfNeeded)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData*, false>(this, ___internal__method, type, createIfNeeded);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.IsPopulated
bool System::ComponentModel::ReflectTypeDescriptionProvider::IsPopulated(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::IsPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetAttributes
::ArrayW<::System::Attribute*> System::ComponentModel::ReflectTypeDescriptionProvider::ReflectGetAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectGetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "ReflectGetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.Refresh
void System::ComponentModel::ReflectTypeDescriptionProvider::Refresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.SearchIntrinsicTable
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::SearchIntrinsicTable(::System::Collections::Hashtable* table, ::System::Type* callingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::SearchIntrinsicTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "SearchIntrinsicTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(callingType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, callingType);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::ReflectTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::ReflectTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData
#include "System/ComponentModel/ReflectTypeDescriptionProvider_ReflectedTypeData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection _attributes
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AttributeCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptorCollection _events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventDescriptorCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection _properties
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter _converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _editors
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editors"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] _editorTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _editorCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.get_IsPopulated
bool System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::get_IsPopulated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::get_IsPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetConverter(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetTypeFromName
::System::Type* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetTypeFromName(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetTypeFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeName);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.Refresh
void System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type typeChanged
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::RefreshEventArgs::dyn_typeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::dyn_typeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeChanged"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RefreshEventHandler
#include "System/ComponentModel/RefreshEventHandler.hpp"
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.RefreshEventHandler.Invoke
void System::ComponentModel::RefreshEventHandler::Invoke(::System::ComponentModel::RefreshEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::RefreshEventHandler::BeginInvoke(::System::ComponentModel::RefreshEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, e, callback, object);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.EndInvoke
void System::ComponentModel::RefreshEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SByteConverter
#include "System/ComponentModel/SByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SByteConverter.get_TargetType
::System::Type* System::ComponentModel::SByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SByteConverter.ToString
::StringW System::ComponentModel::SByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SettingsBindableAttribute
#include "System/ComponentModel/SettingsBindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
void System::ComponentModel::SettingsBindableAttribute::_set_Yes(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
void System::ComponentModel::SettingsBindableAttribute::_set_No(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "No", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bindable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::SettingsBindableAttribute::dyn__bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::dyn__bindable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.get_Bindable
bool System::ComponentModel::SettingsBindableAttribute::get_Bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::get_Bindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute..cctor
void System::ComponentModel::SettingsBindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SettingsBindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.Equals
bool System::ComponentModel::SettingsBindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.GetHashCode
int System::ComponentModel::SettingsBindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SingleConverter
#include "System/ComponentModel/SingleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SingleConverter.get_AllowHex
bool System::ComponentModel::SingleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.get_TargetType
::System::Type* System::ComponentModel::SingleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SingleConverter.ToString
::StringW System::ComponentModel::SingleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.StringConverter
#include "System/ComponentModel/StringConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.StringConverter.CanConvertFrom
bool System::ComponentModel::StringConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.StringConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::StringConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TimeSpanConverter
#include "System/ComponentModel/TimeSpanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertFrom
bool System::ComponentModel::TimeSpanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertTo
bool System::ComponentModel::TimeSpanConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor
#include "System/ComponentModel/TypeConverter_SimplePropertyDescriptor.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String s_UseCompatibleTypeConverterBehavior
::StringW System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_UseCompatibleTypeConverterBehavior
void System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useCompatibleTypeConversion
void System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion", value));
}
// Autogenerated method: System.ComponentModel.TypeConverter.get_UseCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::get_UseCompatibleTypeConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::get_UseCompatibleTypeConversion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverter", "get_UseCompatibleTypeConversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter..cctor
void System::ComponentModel::TypeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertFrom
bool System::ComponentModel::TypeConverter::CanConvertFrom(::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sourceType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertFrom
bool System::ComponentModel::TypeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertTo
bool System::ComponentModel::TypeConverter::CanConvertTo(::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertTo
bool System::ComponentModel::TypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFrom(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromInvariantString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromInvariantString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromInvariantString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromInvariantString(::System::ComponentModel::ITypeDescriptorContext* context, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::System::ComponentModel::ITypeDescriptorContext* context, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertTo(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToInvariantString
::StringW System::ComponentModel::TypeConverter::ConvertToInvariantString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToInvariantString
::StringW System::ComponentModel::TypeConverter::ConvertToInvariantString(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CreateInstance
::Il2CppObject* System::ComponentModel::TypeConverter::CreateInstance(::System::Collections::IDictionary* propertyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyValues)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, propertyValues);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CreateInstance
::Il2CppObject* System::ComponentModel::TypeConverter::CreateInstance(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Collections::IDictionary* propertyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CreateInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(propertyValues)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, propertyValues);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetConvertFromException
::System::Exception* System::ComponentModel::TypeConverter::GetConvertFromException(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetConvertFromException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConvertFromException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetConvertToException
::System::Exception* System::ComponentModel::TypeConverter::GetConvertToException(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetConvertToException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConvertToException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
bool System::ComponentModel::TypeConverter::GetCreateInstanceSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetCreateInstanceSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCreateInstanceSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
bool System::ComponentModel::TypeConverter::GetCreateInstanceSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetCreateInstanceSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCreateInstanceSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetPropertiesSupported
bool System::ComponentModel::TypeConverter::GetPropertiesSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetPropertiesSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetPropertiesSupported
bool System::ComponentModel::TypeConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValues
::System::Collections::ICollection* System::ComponentModel::TypeConverter::GetStandardValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::TypeConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
bool System::ComponentModel::TypeConverter::GetStandardValuesExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesExclusive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
bool System::ComponentModel::TypeConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesSupported
bool System::ComponentModel::TypeConverter::GetStandardValuesSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesSupported
bool System::ComponentModel::TypeConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.IsValid
bool System::ComponentModel::TypeConverter::IsValid(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.IsValid
bool System::ComponentModel::TypeConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.SortProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::SortProperties(::System::ComponentModel::PropertyDescriptorCollection* props, ::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SortProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, props, names);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor
#include "System/ComponentModel/TypeConverter_SimplePropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type componentType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_componentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_componentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type propertyType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_propertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_propertyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::TypeConverter::SimplePropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection values
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Array valueArray
[[deprecated("Use field access instead!")]] ::System::Array*& System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_valueArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_valueArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueArray"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.get_Count
int System::ComponentModel::TypeConverter::StandardValuesCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.CopyTo
void System::ComponentModel::TypeConverter::StandardValuesCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::TypeConverter::StandardValuesCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverterAttribute
#include "System/ComponentModel/TypeConverterAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
::System::ComponentModel::TypeConverterAttribute* System::ComponentModel::TypeConverterAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverterAttribute*>("System.ComponentModel", "TypeConverterAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
void System::ComponentModel::TypeConverterAttribute::_set_Default(::System::ComponentModel::TypeConverterAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverterAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeConverterAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.get_ConverterTypeName
::StringW System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute..cctor
void System::ComponentModel::TypeConverterAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverterAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.Equals
bool System::ComponentModel::TypeConverterAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.GetHashCode
int System::ComponentModel::TypeConverterAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptionProvider
#include "System/ComponentModel/TypeDescriptionProvider.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptionProvider _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider*& System::ComponentModel::TypeDescriptionProvider::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor _emptyDescriptor
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor*& System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyDescriptor"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProviderAttribute
#include "System/ComponentModel/TypeDescriptionProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeDescriptionProviderAttribute::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProviderAttribute.get_TypeName
::StringW System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor
#include "System/ComponentModel/TypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MergedTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_MergedTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.MemberDescriptor
#include "System/ComponentModel/MemberDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.FilterCacheItem
#include "System/ComponentModel/TypeDescriptor_FilterCacheItem.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.IUnimplemented
#include "System/ComponentModel/TypeDescriptor_IUnimplemented.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer
#include "System/ComponentModel/TypeDescriptor_MemberDescriptorComparer.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptorComObject
#include "System/ComponentModel/TypeDescriptor_TypeDescriptorComObject.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptorInterface
#include "System/ComponentModel/TypeDescriptor_TypeDescriptorInterface.hpp"
// Including type: System.ComponentModel.WeakHashtable
#include "System/ComponentModel/WeakHashtable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Diagnostics.BooleanSwitch
#include "System/Diagnostics/BooleanSwitch.hpp"
// Including type: System.ComponentModel.RefreshEventHandler
#include "System/ComponentModel/RefreshEventHandler.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.TypeDescriptionProvider
#include "System/ComponentModel/TypeDescriptionProvider.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.WeakHashtable _providerTable
::System::ComponentModel::WeakHashtable* System::ComponentModel::TypeDescriptor::_get__providerTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__providerTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::WeakHashtable*>("System.ComponentModel", "TypeDescriptor", "_providerTable"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.WeakHashtable _providerTable
void System::ComponentModel::TypeDescriptor::_set__providerTable(::System::ComponentModel::WeakHashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__providerTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_providerTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _providerTypeTable
::System::Collections::Hashtable* System::ComponentModel::TypeDescriptor::_get__providerTypeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__providerTypeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "TypeDescriptor", "_providerTypeTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _providerTypeTable
void System::ComponentModel::TypeDescriptor::_set__providerTypeTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__providerTypeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_providerTypeTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _defaultProviders
::System::Collections::Hashtable* System::ComponentModel::TypeDescriptor::_get__defaultProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__defaultProviders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "TypeDescriptor", "_defaultProviders"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _defaultProviders
void System::ComponentModel::TypeDescriptor::_set__defaultProviders(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__defaultProviders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_defaultProviders", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _metadataVersion
int System::ComponentModel::TypeDescriptor::_get__metadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__metadataVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "TypeDescriptor", "_metadataVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _metadataVersion
void System::ComponentModel::TypeDescriptor::_set__metadataVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__metadataVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_metadataVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _collisionIndex
int System::ComponentModel::TypeDescriptor::_get__collisionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__collisionIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "TypeDescriptor", "_collisionIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _collisionIndex
void System::ComponentModel::TypeDescriptor::_set__collisionIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__collisionIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_collisionIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.BooleanSwitch TraceDescriptor
::System::Diagnostics::BooleanSwitch* System::ComponentModel::TypeDescriptor::_get_TraceDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get_TraceDescriptor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::BooleanSwitch*>("System.ComponentModel", "TypeDescriptor", "TraceDescriptor"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.BooleanSwitch TraceDescriptor
void System::ComponentModel::TypeDescriptor::_set_TraceDescriptor(::System::Diagnostics::BooleanSwitch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set_TraceDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "TraceDescriptor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineInitializeKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineInitializeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineInitializeKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineInitializeKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineInitializeKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineInitializeKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineInitializeKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineInitializeKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineMergeKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineMergeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineMergeKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineMergeKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineMergeKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineMergeKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineMergeKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineMergeKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineFilterKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineFilterKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineFilterKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineFilterKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineFilterKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineFilterKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineFilterKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineFilterKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineAttributeFilterKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineAttributeFilterKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineAttributeFilterKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineAttributeFilterKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineAttributeFilterKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineAttributeFilterKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineAttributeFilterKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineAttributeFilterKeys", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _internalSyncObject
::Il2CppObject* System::ComponentModel::TypeDescriptor::_get__internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "TypeDescriptor", "_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _internalSyncObject
void System::ComponentModel::TypeDescriptor::_set__internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_internalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.RefreshEventHandler Refreshed
::System::ComponentModel::RefreshEventHandler* System::ComponentModel::TypeDescriptor::_get_Refreshed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get_Refreshed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RefreshEventHandler*>("System.ComponentModel", "TypeDescriptor", "Refreshed"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.RefreshEventHandler Refreshed
void System::ComponentModel::TypeDescriptor::_set_Refreshed(::System::ComponentModel::RefreshEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set_Refreshed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "Refreshed", value));
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_ComObjectType
::System::Type* System::ComponentModel::TypeDescriptor::get_ComObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_ComObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_ComObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_InterfaceType
::System::Type* System::ComponentModel::TypeDescriptor::get_InterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_InterfaceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_InterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_MetadataVersion
int System::ComponentModel::TypeDescriptor::get_MetadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_MetadataVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_MetadataVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor..cctor
void System::ComponentModel::TypeDescriptor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.AddProvider
void System::ComponentModel::TypeDescriptor::AddProvider(::System::ComponentModel::TypeDescriptionProvider* provider, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::AddProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "AddProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.CheckDefaultProvider
void System::ComponentModel::TypeDescriptor::CheckDefaultProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::CheckDefaultProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "CheckDefaultProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::Il2CppObject* component, bool noCustomTypeDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(noCustomTypeDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, noCustomTypeDesc);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptor::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::TypeDescriptor::GetConverter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetDescriptor(::System::Type* type, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, typeName);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetDescriptor(::Il2CppObject* component, bool noCustomTypeDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(noCustomTypeDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, noCustomTypeDesc);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetExtendedDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetExtendedDescriptor(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetExtendedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetExtendedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetExtenderCollisionSuffix
::StringW System::ComponentModel::TypeDescriptor::GetExtenderCollisionSuffix(::System::ComponentModel::MemberDescriptor* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetExtenderCollisionSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetExtenderCollisionSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetNodeForBaseType
::System::Type* System::ComponentModel::TypeDescriptor::GetNodeForBaseType(::System::Type* searchType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetNodeForBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetNodeForBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetProviderRecursive
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::TypeDescriptor::GetProviderRecursive(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetProviderRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetProviderRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptor::GetReflectionType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::System::Type* type, bool createDelegator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(createDelegator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, createDelegator);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::Il2CppObject* instance, bool createDelegator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(createDelegator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, createDelegator);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineFilter
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineFilter(int pipelineType, ::System::Collections::ICollection* members, ::Il2CppObject* instance, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(members), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, members, instance, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineInitialize
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineInitialize(int pipelineType, ::System::Collections::ICollection* members, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(members), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, members, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineMerge
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineMerge(int pipelineType, ::System::Collections::ICollection* primary, ::System::Collections::ICollection* secondary, ::Il2CppObject* instance, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(primary), ::il2cpp_utils::ExtractType(secondary), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, primary, secondary, instance, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.RaiseRefresh
void System::ComponentModel::TypeDescriptor::RaiseRefresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::RaiseRefresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "RaiseRefresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.Refresh
void System::ComponentModel::TypeDescriptor::Refresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.SortDescriptorArray
void System::ComponentModel::TypeDescriptor::SortDescriptorArray(::System::Collections::IList* infos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::SortDescriptorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "SortDescriptorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, infos);
}
