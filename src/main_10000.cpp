// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Font/FontTextureRebuildCallback
#include "UnityEngine/Font_FontTextureRebuildCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Font/FontTextureRebuildCallback.Invoke
void UnityEngine::Font::FontTextureRebuildCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::FontTextureRebuildCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Font/FontTextureRebuildCallback.BeginInvoke
System::IAsyncResult* UnityEngine::Font::FontTextureRebuildCallback::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::FontTextureRebuildCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Font/FontTextureRebuildCallback.EndInvoke
void UnityEngine::Font::FontTextureRebuildCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::FontTextureRebuildCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Font::FontTextureRebuildCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::FontTextureRebuildCallback::*)(::Il2CppObject*, System::IntPtr)>(&Font::FontTextureRebuildCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font::FontTextureRebuildCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::FontTextureRebuildCallback::*)(::Il2CppObject*, System::IntPtr)>(&Font::FontTextureRebuildCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font::FontTextureRebuildCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Font::FontTextureRebuildCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::FontTextureRebuildCallback::*)()>(&Font::FontTextureRebuildCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font::FontTextureRebuildCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Font::FontTextureRebuildCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Font::FontTextureRebuildCallback::*)(System::AsyncCallback*, ::Il2CppObject*)>(&Font::FontTextureRebuildCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font::FontTextureRebuildCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Font::FontTextureRebuildCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::FontTextureRebuildCallback::*)(System::IAsyncResult*)>(&Font::FontTextureRebuildCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font::FontTextureRebuildCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.AnimationTriggers
#include "UnityEngine/UI/AnimationTriggers.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kDefaultNormalAnimName
::Il2CppString* UnityEngine::UI::AnimationTriggers::_get_kDefaultNormalAnimName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_get_kDefaultNormalAnimName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "AnimationTriggers", "kDefaultNormalAnimName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultNormalAnimName
void UnityEngine::UI::AnimationTriggers::_set_kDefaultNormalAnimName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_set_kDefaultNormalAnimName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AnimationTriggers", "kDefaultNormalAnimName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultHighlightedAnimName
::Il2CppString* UnityEngine::UI::AnimationTriggers::_get_kDefaultHighlightedAnimName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_get_kDefaultHighlightedAnimName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "AnimationTriggers", "kDefaultHighlightedAnimName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultHighlightedAnimName
void UnityEngine::UI::AnimationTriggers::_set_kDefaultHighlightedAnimName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_set_kDefaultHighlightedAnimName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AnimationTriggers", "kDefaultHighlightedAnimName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultPressedAnimName
::Il2CppString* UnityEngine::UI::AnimationTriggers::_get_kDefaultPressedAnimName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_get_kDefaultPressedAnimName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "AnimationTriggers", "kDefaultPressedAnimName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultPressedAnimName
void UnityEngine::UI::AnimationTriggers::_set_kDefaultPressedAnimName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_set_kDefaultPressedAnimName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AnimationTriggers", "kDefaultPressedAnimName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultSelectedAnimName
::Il2CppString* UnityEngine::UI::AnimationTriggers::_get_kDefaultSelectedAnimName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_get_kDefaultSelectedAnimName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "AnimationTriggers", "kDefaultSelectedAnimName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultSelectedAnimName
void UnityEngine::UI::AnimationTriggers::_set_kDefaultSelectedAnimName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_set_kDefaultSelectedAnimName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AnimationTriggers", "kDefaultSelectedAnimName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultDisabledAnimName
::Il2CppString* UnityEngine::UI::AnimationTriggers::_get_kDefaultDisabledAnimName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_get_kDefaultDisabledAnimName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "AnimationTriggers", "kDefaultDisabledAnimName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultDisabledAnimName
void UnityEngine::UI::AnimationTriggers::_set_kDefaultDisabledAnimName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::_set_kDefaultDisabledAnimName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AnimationTriggers", "kDefaultDisabledAnimName", value));
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.get_normalTrigger
::Il2CppString* UnityEngine::UI::AnimationTriggers::get_normalTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::get_normalTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.set_normalTrigger
void UnityEngine::UI::AnimationTriggers::set_normalTrigger(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::set_normalTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.get_highlightedTrigger
::Il2CppString* UnityEngine::UI::AnimationTriggers::get_highlightedTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::get_highlightedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.set_highlightedTrigger
void UnityEngine::UI::AnimationTriggers::set_highlightedTrigger(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::set_highlightedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highlightedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.get_pressedTrigger
::Il2CppString* UnityEngine::UI::AnimationTriggers::get_pressedTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::get_pressedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.set_pressedTrigger
void UnityEngine::UI::AnimationTriggers::set_pressedTrigger(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::set_pressedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pressedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.get_selectedTrigger
::Il2CppString* UnityEngine::UI::AnimationTriggers::get_selectedTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::get_selectedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.set_selectedTrigger
void UnityEngine::UI::AnimationTriggers::set_selectedTrigger(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::set_selectedTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.get_disabledTrigger
::Il2CppString* UnityEngine::UI::AnimationTriggers::get_disabledTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::get_disabledTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AnimationTriggers.set_disabledTrigger
void UnityEngine::UI::AnimationTriggers::set_disabledTrigger(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AnimationTriggers::set_disabledTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disabledTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: AnimationTriggers::get_normalTrigger
// Il2CppName: get_normalTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AnimationTriggers::*)()>(&AnimationTriggers::get_normalTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "get_normalTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::set_normalTrigger
// Il2CppName: set_normalTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)(::Il2CppString*)>(&AnimationTriggers::set_normalTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "set_normalTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::get_highlightedTrigger
// Il2CppName: get_highlightedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AnimationTriggers::*)()>(&AnimationTriggers::get_highlightedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "get_highlightedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::set_highlightedTrigger
// Il2CppName: set_highlightedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)(::Il2CppString*)>(&AnimationTriggers::set_highlightedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "set_highlightedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::get_pressedTrigger
// Il2CppName: get_pressedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AnimationTriggers::*)()>(&AnimationTriggers::get_pressedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "get_pressedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::set_pressedTrigger
// Il2CppName: set_pressedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)(::Il2CppString*)>(&AnimationTriggers::set_pressedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "set_pressedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::get_selectedTrigger
// Il2CppName: get_selectedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AnimationTriggers::*)()>(&AnimationTriggers::get_selectedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "get_selectedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::set_selectedTrigger
// Il2CppName: set_selectedTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)(::Il2CppString*)>(&AnimationTriggers::set_selectedTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "set_selectedTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::get_disabledTrigger
// Il2CppName: get_disabledTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AnimationTriggers::*)()>(&AnimationTriggers::get_disabledTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "get_disabledTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::set_disabledTrigger
// Il2CppName: set_disabledTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)(::Il2CppString*)>(&AnimationTriggers::set_disabledTrigger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), "set_disabledTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AnimationTriggers::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)()>(&AnimationTriggers::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnimationTriggers::*)()>(&AnimationTriggers::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnimationTriggers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Button/ButtonClickedEvent
#include "UnityEngine/UI/Button_ButtonClickedEvent.hpp"
// Including type: UnityEngine.UI.Button/<OnFinishSubmit>d__9
#include "UnityEngine/UI/Button_-OnFinishSubmit-d__9.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Button.get_onClick
UnityEngine::UI::Button::ButtonClickedEvent* UnityEngine::UI::Button::get_onClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::get_onClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button::ButtonClickedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button.set_onClick
void UnityEngine::UI::Button::set_onClick(UnityEngine::UI::Button::ButtonClickedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::set_onClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Button.Press
void UnityEngine::UI::Button::Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::Press");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Press", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button.OnPointerClick
void UnityEngine::UI::Button::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Button.OnSubmit
void UnityEngine::UI::Button::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Button.OnFinishSubmit
System::Collections::IEnumerator* UnityEngine::UI::Button::OnFinishSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::OnFinishSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinishSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Button::get_onClick
// Il2CppName: get_onClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Button::ButtonClickedEvent* (Button::*)()>(&Button::get_onClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "get_onClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::set_onClick
// Il2CppName: set_onClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)(UnityEngine::UI::Button::ButtonClickedEvent*)>(&Button::set_onClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "set_onClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Button::ButtonClickedEvent*>()});
  }
};
// Writing MetadataGetter for method: Button::Press
// Il2CppName: Press
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)()>(&Button::Press)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "Press", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)(UnityEngine::EventSystems::PointerEventData*)>(&Button::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Button::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)(UnityEngine::EventSystems::BaseEventData*)>(&Button::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Button::OnFinishSubmit
// Il2CppName: OnFinishSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Button::*)()>(&Button::OnFinishSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), "OnFinishSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)()>(&Button::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::*)()>(&Button::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Button/ButtonClickedEvent
#include "UnityEngine/UI/Button_ButtonClickedEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Button::ButtonClickedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::ButtonClickedEvent::*)()>(&Button::ButtonClickedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::ButtonClickedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::ButtonClickedEvent::*)()>(&Button::ButtonClickedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::ButtonClickedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Button/<OnFinishSubmit>d__9
#include "UnityEngine/UI/Button_-OnFinishSubmit-d__9.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Button/<OnFinishSubmit>d__9.System.IDisposable.Dispose
void UnityEngine::UI::Button::$OnFinishSubmit$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::$OnFinishSubmit$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button/<OnFinishSubmit>d__9.MoveNext
bool UnityEngine::UI::Button::$OnFinishSubmit$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::$OnFinishSubmit$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button/<OnFinishSubmit>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::Button::$OnFinishSubmit$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::$OnFinishSubmit$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button/<OnFinishSubmit>d__9.System.Collections.IEnumerator.Reset
void UnityEngine::UI::Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::$OnFinishSubmit$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Button/<OnFinishSubmit>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Button::$OnFinishSubmit$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::$OnFinishSubmit$d__9::*)(int)>(&Button::$OnFinishSubmit$d__9::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::$OnFinishSubmit$d__9::*)(int)>(&Button::$OnFinishSubmit$d__9::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::$OnFinishSubmit$d__9::*)()>(&Button::$OnFinishSubmit$d__9::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Button::$OnFinishSubmit$d__9::*)()>(&Button::$OnFinishSubmit$d__9::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Button::$OnFinishSubmit$d__9::*)()>(&Button::$OnFinishSubmit$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Button::$OnFinishSubmit$d__9::*)()>(&Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Button::$OnFinishSubmit$d__9::*)()>(&Button::$OnFinishSubmit$d__9::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Button::$OnFinishSubmit$d__9*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate Prelayout
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_Prelayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_Prelayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "Prelayout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate Prelayout
void UnityEngine::UI::CanvasUpdate::_set_Prelayout(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_Prelayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "Prelayout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate Layout
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_Layout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "Layout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate Layout
void UnityEngine::UI::CanvasUpdate::_set_Layout(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_Layout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "Layout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate PostLayout
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_PostLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_PostLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "PostLayout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate PostLayout
void UnityEngine::UI::CanvasUpdate::_set_PostLayout(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_PostLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "PostLayout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate PreRender
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_PreRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "PreRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate PreRender
void UnityEngine::UI::CanvasUpdate::_set_PreRender(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_PreRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "PreRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate LatePreRender
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_LatePreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_LatePreRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "LatePreRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate LatePreRender
void UnityEngine::UI::CanvasUpdate::_set_LatePreRender(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_LatePreRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "LatePreRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasUpdate MaxUpdateValue
UnityEngine::UI::CanvasUpdate UnityEngine::UI::CanvasUpdate::_get_MaxUpdateValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_get_MaxUpdateValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdate>("UnityEngine.UI", "CanvasUpdate", "MaxUpdateValue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasUpdate MaxUpdateValue
void UnityEngine::UI::CanvasUpdate::_set_MaxUpdateValue(UnityEngine::UI::CanvasUpdate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdate::_set_MaxUpdateValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdate", "MaxUpdateValue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ICanvasElement.Rebuild
void UnityEngine::UI::ICanvasElement::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ICanvasElement::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::ICanvasElement::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ICanvasElement::get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ICanvasElement.LayoutComplete
void UnityEngine::UI::ICanvasElement::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ICanvasElement::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ICanvasElement.GraphicUpdateComplete
void UnityEngine::UI::ICanvasElement::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ICanvasElement::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ICanvasElement.IsDestroyed
bool UnityEngine::UI::ICanvasElement::IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ICanvasElement::IsDestroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ICanvasElement::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ICanvasElement::*)(UnityEngine::UI::CanvasUpdate)>(&ICanvasElement::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasElement*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: ICanvasElement::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (ICanvasElement::*)()>(&ICanvasElement::get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasElement*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ICanvasElement::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ICanvasElement::*)()>(&ICanvasElement::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasElement*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ICanvasElement::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ICanvasElement::*)()>(&ICanvasElement::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasElement*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ICanvasElement::IsDestroyed
// Il2CppName: IsDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ICanvasElement::*)()>(&ICanvasElement::IsDestroyed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasElement*), "IsDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.CanvasUpdateRegistry
#include "UnityEngine/UI/CanvasUpdateRegistry.hpp"
// Including type: UnityEngine.UI.Collections.IndexedSet`1
#include "UnityEngine/UI/Collections/IndexedSet_1.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.CanvasUpdateRegistry s_Instance
UnityEngine::UI::CanvasUpdateRegistry* UnityEngine::UI::CanvasUpdateRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasUpdateRegistry*>("UnityEngine.UI", "CanvasUpdateRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.CanvasUpdateRegistry s_Instance
void UnityEngine::UI::CanvasUpdateRegistry::_set_s_Instance(UnityEngine::UI::CanvasUpdateRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdateRegistry", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String m_CullingUpdateProfilerString
::Il2CppString* UnityEngine::UI::CanvasUpdateRegistry::_get_m_CullingUpdateProfilerString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_get_m_CullingUpdateProfilerString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "CanvasUpdateRegistry", "m_CullingUpdateProfilerString"));
}
// Autogenerated static field setter
// Set static field: static private System.String m_CullingUpdateProfilerString
void UnityEngine::UI::CanvasUpdateRegistry::_set_m_CullingUpdateProfilerString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_set_m_CullingUpdateProfilerString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdateRegistry", "m_CullingUpdateProfilerString", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Comparison`1<UnityEngine.UI.ICanvasElement> s_SortLayoutFunction
System::Comparison_1<UnityEngine::UI::ICanvasElement*>* UnityEngine::UI::CanvasUpdateRegistry::_get_s_SortLayoutFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_get_s_SortLayoutFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::UI::ICanvasElement*>*>("UnityEngine.UI", "CanvasUpdateRegistry", "s_SortLayoutFunction"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Comparison`1<UnityEngine.UI.ICanvasElement> s_SortLayoutFunction
void UnityEngine::UI::CanvasUpdateRegistry::_set_s_SortLayoutFunction(System::Comparison_1<UnityEngine::UI::ICanvasElement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::_set_s_SortLayoutFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasUpdateRegistry", "s_SortLayoutFunction", value));
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.get_instance
UnityEngine::UI::CanvasUpdateRegistry* UnityEngine::UI::CanvasUpdateRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::CanvasUpdateRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.ObjectValidForUpdate
bool UnityEngine::UI::CanvasUpdateRegistry::ObjectValidForUpdate(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::ObjectValidForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObjectValidForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.CleanInvalidItems
void UnityEngine::UI::CanvasUpdateRegistry::CleanInvalidItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::CleanInvalidItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanInvalidItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.PerformUpdate
void UnityEngine::UI::CanvasUpdateRegistry::PerformUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::PerformUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.ParentCount
int UnityEngine::UI::CanvasUpdateRegistry::ParentCount(UnityEngine::Transform* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::ParentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "ParentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, child);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.SortLayoutList
int UnityEngine::UI::CanvasUpdateRegistry::SortLayoutList(UnityEngine::UI::ICanvasElement* x, UnityEngine::UI::ICanvasElement* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::SortLayoutList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "SortLayoutList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild
void UnityEngine::UI::CanvasUpdateRegistry::RegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::RegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.TryRegisterCanvasElementForLayoutRebuild
bool UnityEngine::UI::CanvasUpdateRegistry::TryRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::TryRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "TryRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild
bool UnityEngine::UI::CanvasUpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild
void UnityEngine::UI::CanvasUpdateRegistry::RegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::RegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.TryRegisterCanvasElementForGraphicRebuild
bool UnityEngine::UI::CanvasUpdateRegistry::TryRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::TryRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "TryRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild
bool UnityEngine::UI::CanvasUpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild
void UnityEngine::UI::CanvasUpdateRegistry::UnRegisterCanvasElementForRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::UnRegisterCanvasElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild
void UnityEngine::UI::CanvasUpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild
void UnityEngine::UI::CanvasUpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingLayout
bool UnityEngine::UI::CanvasUpdateRegistry::IsRebuildingLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::IsRebuildingLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "IsRebuildingLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry.IsRebuildingGraphics
bool UnityEngine::UI::CanvasUpdateRegistry::IsRebuildingGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::IsRebuildingGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", "IsRebuildingGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasUpdateRegistry..cctor
void UnityEngine::UI::CanvasUpdateRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasUpdateRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "CanvasUpdateRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CanvasUpdateRegistry::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::CanvasUpdateRegistry* (*)()>(&CanvasUpdateRegistry::get_instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::ObjectValidForUpdate
// Il2CppName: ObjectValidForUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasUpdateRegistry::*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::ObjectValidForUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "ObjectValidForUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::CleanInvalidItems
// Il2CppName: CleanInvalidItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)()>(&CanvasUpdateRegistry::CleanInvalidItems)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "CleanInvalidItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::PerformUpdate
// Il2CppName: PerformUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)()>(&CanvasUpdateRegistry::PerformUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "PerformUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::ParentCount
// Il2CppName: ParentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Transform*)>(&CanvasUpdateRegistry::ParentCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "ParentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::SortLayoutList
// Il2CppName: SortLayoutList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::UI::ICanvasElement*, UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::SortLayoutList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "SortLayoutList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::RegisterCanvasElementForLayoutRebuild
// Il2CppName: RegisterCanvasElementForLayoutRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::RegisterCanvasElementForLayoutRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::TryRegisterCanvasElementForLayoutRebuild
// Il2CppName: TryRegisterCanvasElementForLayoutRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::TryRegisterCanvasElementForLayoutRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "TryRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild
// Il2CppName: InternalRegisterCanvasElementForLayoutRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasUpdateRegistry::*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::RegisterCanvasElementForGraphicRebuild
// Il2CppName: RegisterCanvasElementForGraphicRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::RegisterCanvasElementForGraphicRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::TryRegisterCanvasElementForGraphicRebuild
// Il2CppName: TryRegisterCanvasElementForGraphicRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::TryRegisterCanvasElementForGraphicRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "TryRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild
// Il2CppName: InternalRegisterCanvasElementForGraphicRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasUpdateRegistry::*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::UnRegisterCanvasElementForRebuild
// Il2CppName: UnRegisterCanvasElementForRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::UnRegisterCanvasElementForRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild
// Il2CppName: InternalUnRegisterCanvasElementForLayoutRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild
// Il2CppName: InternalUnRegisterCanvasElementForGraphicRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)(UnityEngine::UI::ICanvasElement*)>(&CanvasUpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ICanvasElement*>()});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::IsRebuildingLayout
// Il2CppName: IsRebuildingLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&CanvasUpdateRegistry::IsRebuildingLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "IsRebuildingLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::IsRebuildingGraphics
// Il2CppName: IsRebuildingGraphics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&CanvasUpdateRegistry::IsRebuildingGraphics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), "IsRebuildingGraphics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CanvasUpdateRegistry::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasUpdateRegistry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)()>(&CanvasUpdateRegistry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasUpdateRegistry::*)()>(&CanvasUpdateRegistry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasUpdateRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ColorBlock
#include "UnityEngine/UI/ColorBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ColorBlock.get_normalColor
UnityEngine::Color UnityEngine::UI::ColorBlock::get_normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_normalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_normalColor
void UnityEngine::UI::ColorBlock::set_normalColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_normalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_normalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_highlightedColor
UnityEngine::Color UnityEngine::UI::ColorBlock::get_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_highlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_highlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_highlightedColor
void UnityEngine::UI::ColorBlock::set_highlightedColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_highlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_highlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_pressedColor
UnityEngine::Color UnityEngine::UI::ColorBlock::get_pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_pressedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_pressedColor
void UnityEngine::UI::ColorBlock::set_pressedColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_pressedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_selectedColor
UnityEngine::Color UnityEngine::UI::ColorBlock::get_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_selectedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_selectedColor
void UnityEngine::UI::ColorBlock::set_selectedColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_selectedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_disabledColor
UnityEngine::Color UnityEngine::UI::ColorBlock::get_disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_disabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_disabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_disabledColor
void UnityEngine::UI::ColorBlock::set_disabledColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_disabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_disabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_colorMultiplier
float UnityEngine::UI::ColorBlock::get_colorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_colorMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_colorMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_colorMultiplier
void UnityEngine::UI::ColorBlock::set_colorMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_colorMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_colorMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_fadeDuration
float UnityEngine::UI::ColorBlock::get_fadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_fadeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fadeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.set_fadeDuration
void UnityEngine::UI::ColorBlock::set_fadeDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::set_fadeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_fadeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.get_defaultColorBlock
UnityEngine::UI::ColorBlock UnityEngine::UI::ColorBlock::get_defaultColorBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::get_defaultColorBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ColorBlock", "get_defaultColorBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ColorBlock, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.Equals
bool UnityEngine::UI::ColorBlock::Equals(UnityEngine::UI::ColorBlock other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.Equals
bool UnityEngine::UI::ColorBlock::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.GetHashCode
int UnityEngine::UI::ColorBlock::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.op_Equality
bool UnityEngine::UI::operator ==(const UnityEngine::UI::ColorBlock& point1, const UnityEngine::UI::ColorBlock& point2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ColorBlock", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point1, point2);
}
// Autogenerated method: UnityEngine.UI.ColorBlock.op_Inequality
bool UnityEngine::UI::operator !=(const UnityEngine::UI::ColorBlock& point1, const UnityEngine::UI::ColorBlock& point2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ColorBlock::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ColorBlock", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point1, point2);
}
// Writing MetadataGetter for method: ColorBlock::get_normalColor
// Il2CppName: get_normalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorBlock::*)()>(&ColorBlock::get_normalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_normalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_normalColor
// Il2CppName: set_normalColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(UnityEngine::Color)>(&ColorBlock::set_normalColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_normalColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_highlightedColor
// Il2CppName: get_highlightedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorBlock::*)()>(&ColorBlock::get_highlightedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_highlightedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_highlightedColor
// Il2CppName: set_highlightedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(UnityEngine::Color)>(&ColorBlock::set_highlightedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_highlightedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_pressedColor
// Il2CppName: get_pressedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorBlock::*)()>(&ColorBlock::get_pressedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_pressedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_pressedColor
// Il2CppName: set_pressedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(UnityEngine::Color)>(&ColorBlock::set_pressedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_pressedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_selectedColor
// Il2CppName: get_selectedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorBlock::*)()>(&ColorBlock::get_selectedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_selectedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_selectedColor
// Il2CppName: set_selectedColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(UnityEngine::Color)>(&ColorBlock::set_selectedColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_selectedColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_disabledColor
// Il2CppName: get_disabledColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorBlock::*)()>(&ColorBlock::get_disabledColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_disabledColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_disabledColor
// Il2CppName: set_disabledColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(UnityEngine::Color)>(&ColorBlock::set_disabledColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_disabledColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_colorMultiplier
// Il2CppName: get_colorMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ColorBlock::*)()>(&ColorBlock::get_colorMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_colorMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_colorMultiplier
// Il2CppName: set_colorMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(float)>(&ColorBlock::set_colorMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_colorMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_fadeDuration
// Il2CppName: get_fadeDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ColorBlock::*)()>(&ColorBlock::get_fadeDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_fadeDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::set_fadeDuration
// Il2CppName: set_fadeDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorBlock::*)(float)>(&ColorBlock::set_fadeDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "set_fadeDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::get_defaultColorBlock
// Il2CppName: get_defaultColorBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ColorBlock (*)()>(&ColorBlock::get_defaultColorBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "get_defaultColorBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ColorBlock::*)(UnityEngine::UI::ColorBlock)>(&ColorBlock::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ColorBlock>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ColorBlock::*)(::Il2CppObject*)>(&ColorBlock::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ColorBlock::*)()>(&ColorBlock::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorBlock::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::UI::ColorBlock&, const UnityEngine::UI::ColorBlock&)>(&ColorBlock::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::UI::ColorBlock&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::UI::ColorBlock&>()});
  }
};
// Writing MetadataGetter for method: ColorBlock::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::UI::ColorBlock&, const UnityEngine::UI::ColorBlock&)>(&ColorBlock::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorBlock), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::UI::ColorBlock&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::UI::ColorBlock&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ClipperRegistry
#include "UnityEngine/UI/ClipperRegistry.hpp"
// Including type: UnityEngine.UI.Collections.IndexedSet`1
#include "UnityEngine/UI/Collections/IndexedSet_1.hpp"
// Including type: UnityEngine.UI.IClipper
#include "UnityEngine/UI/IClipper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ClipperRegistry s_Instance
UnityEngine::UI::ClipperRegistry* UnityEngine::UI::ClipperRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ClipperRegistry*>("UnityEngine.UI", "ClipperRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ClipperRegistry s_Instance
void UnityEngine::UI::ClipperRegistry::_set_s_Instance(UnityEngine::UI::ClipperRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ClipperRegistry", "s_Instance", value));
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.get_instance
UnityEngine::UI::ClipperRegistry* UnityEngine::UI::ClipperRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ClipperRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Cull
void UnityEngine::UI::ClipperRegistry::Cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::Cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Register
void UnityEngine::UI::ClipperRegistry::Register(UnityEngine::UI::IClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Unregister
void UnityEngine::UI::ClipperRegistry::Unregister(UnityEngine::UI::IClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ClipperRegistry::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Writing MetadataGetter for method: ClipperRegistry::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ClipperRegistry* (*)()>(&ClipperRegistry::get_instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClipperRegistry::Cull
// Il2CppName: Cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClipperRegistry::*)()>(&ClipperRegistry::Cull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), "Cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClipperRegistry::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::IClipper*)>(&ClipperRegistry::Register)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::IClipper*>()});
  }
};
// Writing MetadataGetter for method: ClipperRegistry::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::IClipper*)>(&ClipperRegistry::Unregister)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::IClipper*>()});
  }
};
// Writing MetadataGetter for method: ClipperRegistry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClipperRegistry::*)()>(&ClipperRegistry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClipperRegistry::*)()>(&ClipperRegistry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClipperRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Clipping
#include "UnityEngine/UI/Clipping.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Clipping.FindCullAndClipWorldRect
UnityEngine::Rect UnityEngine::UI::Clipping::FindCullAndClipWorldRect(System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>* rectMaskParents, bool& validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Clipping::FindCullAndClipWorldRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Clipping", "FindCullAndClipWorldRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectMaskParents), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectMaskParents, validRect);
}
// Writing MetadataGetter for method: Clipping::FindCullAndClipWorldRect
// Il2CppName: FindCullAndClipWorldRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (*)(System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>*, bool&)>(&Clipping::FindCullAndClipWorldRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Clipping*), "FindCullAndClipWorldRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IClipper
#include "UnityEngine/UI/IClipper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IClipper.PerformClipping
void UnityEngine::UI::IClipper::PerformClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClipper::PerformClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IClipper::PerformClipping
// Il2CppName: PerformClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IClipper::*)()>(&IClipper::PerformClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClipper*), "PerformClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IClippable.get_gameObject
UnityEngine::GameObject* UnityEngine::UI::IClippable::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::get_gameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.RecalculateClipping
void UnityEngine::UI::IClippable::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::IClippable::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::get_rectTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.Cull
void UnityEngine::UI::IClippable::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.IClippable.SetClipRect
void UnityEngine::UI::IClippable::SetClipRect(UnityEngine::Rect value, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::SetClipRect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, validRect);
}
// Autogenerated method: UnityEngine.UI.IClippable.SetClipSoftness
void UnityEngine::UI::IClippable::SetClipSoftness(UnityEngine::Vector2 clipSoftness) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IClippable::SetClipSoftness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipSoftness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipSoftness)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipSoftness);
}
// Writing MetadataGetter for method: IClippable::get_gameObject
// Il2CppName: get_gameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (IClippable::*)()>(&IClippable::get_gameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "get_gameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IClippable::RecalculateClipping
// Il2CppName: RecalculateClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IClippable::*)()>(&IClippable::RecalculateClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "RecalculateClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IClippable::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (IClippable::*)()>(&IClippable::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IClippable::Cull
// Il2CppName: Cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IClippable::*)(UnityEngine::Rect, bool)>(&IClippable::Cull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "Cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IClippable::SetClipRect
// Il2CppName: SetClipRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IClippable::*)(UnityEngine::Rect, bool)>(&IClippable::SetClipRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "SetClipRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IClippable::SetClipSoftness
// Il2CppName: SetClipSoftness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IClippable::*)(UnityEngine::Vector2)>(&IClippable::SetClipSoftness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IClippable*), "SetClipSoftness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.RectangularVertexClipper
#include "UnityEngine/UI/RectangularVertexClipper.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.RectangularVertexClipper.GetCanvasRect
UnityEngine::Rect UnityEngine::UI::RectangularVertexClipper::GetCanvasRect(UnityEngine::RectTransform* t, UnityEngine::Canvas* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectangularVertexClipper::GetCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method, t, c);
}
// Writing MetadataGetter for method: RectangularVertexClipper::GetCanvasRect
// Il2CppName: GetCanvasRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RectangularVertexClipper::*)(UnityEngine::RectTransform*, UnityEngine::Canvas*)>(&RectangularVertexClipper::GetCanvasRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectangularVertexClipper*), "GetCanvasRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>()});
  }
};
// Writing MetadataGetter for method: RectangularVertexClipper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectangularVertexClipper::*)()>(&RectangularVertexClipper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectangularVertexClipper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectangularVertexClipper::*)()>(&RectangularVertexClipper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectangularVertexClipper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.DefaultControls
#include "UnityEngine/UI/DefaultControls.hpp"
// Including type: UnityEngine.UI.DefaultControls/IFactoryControls
#include "UnityEngine/UI/DefaultControls_IFactoryControls.hpp"
// Including type: UnityEngine.UI.DefaultControls/DefaultRuntimeFactory
#include "UnityEngine/UI/DefaultControls_DefaultRuntimeFactory.hpp"
// Including type: UnityEngine.UI.DefaultControls/Resources
#include "UnityEngine/UI/DefaultControls_Resources.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.DefaultControls/IFactoryControls m_CurrentFactory
UnityEngine::UI::DefaultControls::IFactoryControls* UnityEngine::UI::DefaultControls::_get_m_CurrentFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_m_CurrentFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::DefaultControls::IFactoryControls*>("UnityEngine.UI", "DefaultControls", "m_CurrentFactory"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.DefaultControls/IFactoryControls m_CurrentFactory
void UnityEngine::UI::DefaultControls::_set_m_CurrentFactory(UnityEngine::UI::DefaultControls::IFactoryControls* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_m_CurrentFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "m_CurrentFactory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kWidth
float UnityEngine::UI::DefaultControls::_get_kWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_kWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "DefaultControls", "kWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWidth
void UnityEngine::UI::DefaultControls::_set_kWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_kWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "kWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThickHeight
float UnityEngine::UI::DefaultControls::_get_kThickHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_kThickHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "DefaultControls", "kThickHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThickHeight
void UnityEngine::UI::DefaultControls::_set_kThickHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_kThickHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "kThickHeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThinHeight
float UnityEngine::UI::DefaultControls::_get_kThinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_kThinHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "DefaultControls", "kThinHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThinHeight
void UnityEngine::UI::DefaultControls::_set_kThinHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_kThinHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "kThinHeight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThickElementSize
UnityEngine::Vector2 UnityEngine::UI::DefaultControls::_get_s_ThickElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_ThickElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine.UI", "DefaultControls", "s_ThickElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThickElementSize
void UnityEngine::UI::DefaultControls::_set_s_ThickElementSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_ThickElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_ThickElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThinElementSize
UnityEngine::Vector2 UnityEngine::UI::DefaultControls::_get_s_ThinElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_ThinElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine.UI", "DefaultControls", "s_ThinElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThinElementSize
void UnityEngine::UI::DefaultControls::_set_s_ThinElementSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_ThinElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_ThinElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ImageElementSize
UnityEngine::Vector2 UnityEngine::UI::DefaultControls::_get_s_ImageElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_ImageElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine.UI", "DefaultControls", "s_ImageElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ImageElementSize
void UnityEngine::UI::DefaultControls::_set_s_ImageElementSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_ImageElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_ImageElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_DefaultSelectableColor
UnityEngine::Color UnityEngine::UI::DefaultControls::_get_s_DefaultSelectableColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_DefaultSelectableColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("UnityEngine.UI", "DefaultControls", "s_DefaultSelectableColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_DefaultSelectableColor
void UnityEngine::UI::DefaultControls::_set_s_DefaultSelectableColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_DefaultSelectableColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_DefaultSelectableColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_PanelColor
UnityEngine::Color UnityEngine::UI::DefaultControls::_get_s_PanelColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_PanelColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("UnityEngine.UI", "DefaultControls", "s_PanelColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_PanelColor
void UnityEngine::UI::DefaultControls::_set_s_PanelColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_PanelColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_PanelColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_TextColor
UnityEngine::Color UnityEngine::UI::DefaultControls::_get_s_TextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_get_s_TextColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("UnityEngine.UI", "DefaultControls", "s_TextColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_TextColor
void UnityEngine::UI::DefaultControls::_set_s_TextColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::_set_s_TextColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls", "s_TextColor", value));
}
// Autogenerated method: UnityEngine.UI.DefaultControls.get_factory
UnityEngine::UI::DefaultControls::IFactoryControls* UnityEngine::UI::DefaultControls::get_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::get_factory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "get_factory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::DefaultControls::IFactoryControls*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateUIElementRoot
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateUIElementRoot(::Il2CppString* name, UnityEngine::Vector2 size, ::Array<System::Type*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateUIElementRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateUIElementRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, size, components);
}
// Creating initializer_list -> params proxy for: UnityEngine.GameObject CreateUIElementRoot(System.String name, UnityEngine.Vector2 size, params System.Type[] components)
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateUIElementRoot(::Il2CppString* name, UnityEngine::Vector2 size, std::initializer_list<System::Type*> components) {
  return UnityEngine::UI::DefaultControls::CreateUIElementRoot(name, size, ::Array<System::Type*>::New(components));
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateUIObject
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateUIObject(::Il2CppString* name, UnityEngine::GameObject* parent, ::Array<System::Type*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateUIObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateUIObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, parent, components);
}
// Creating initializer_list -> params proxy for: UnityEngine.GameObject CreateUIObject(System.String name, UnityEngine.GameObject parent, params System.Type[] components)
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateUIObject(::Il2CppString* name, UnityEngine::GameObject* parent, std::initializer_list<System::Type*> components) {
  return UnityEngine::UI::DefaultControls::CreateUIObject(name, parent, ::Array<System::Type*>::New(components));
}
// Autogenerated method: UnityEngine.UI.DefaultControls.SetDefaultTextValues
void UnityEngine::UI::DefaultControls::SetDefaultTextValues(UnityEngine::UI::Text* lbl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::SetDefaultTextValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "SetDefaultTextValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lbl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lbl);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.SetDefaultColorTransitionValues
void UnityEngine::UI::DefaultControls::SetDefaultColorTransitionValues(UnityEngine::UI::Selectable* slider) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::SetDefaultColorTransitionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "SetDefaultColorTransitionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, slider);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.SetParentAndAlign
void UnityEngine::UI::DefaultControls::SetParentAndAlign(UnityEngine::GameObject* child, UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::SetParentAndAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "SetParentAndAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, child, parent);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.SetLayerRecursively
void UnityEngine::UI::DefaultControls::SetLayerRecursively(UnityEngine::GameObject* go, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::SetLayerRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "SetLayerRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, layer);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreatePanel
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreatePanel(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreatePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreatePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateButton
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateButton(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateText
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateText(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateImage
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateImage(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateRawImage
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateRawImage(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateRawImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateRawImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateSlider
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateSlider(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateScrollbar
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateScrollbar(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateToggle
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateToggle(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateInputField
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateInputField(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateDropdown
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateDropdown(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls.CreateScrollView
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::CreateScrollView(UnityEngine::UI::DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::CreateScrollView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", "CreateScrollView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: UnityEngine.UI.DefaultControls..cctor
void UnityEngine::UI::DefaultControls::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DefaultControls::get_factory
// Il2CppName: get_factory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::DefaultControls::IFactoryControls* (*)()>(&DefaultControls::get_factory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "get_factory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateUIElementRoot
// Il2CppName: CreateUIElementRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(::Il2CppString*, UnityEngine::Vector2, ::Array<System::Type*>*)>(&DefaultControls::CreateUIElementRoot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateUIElementRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateUIObject
// Il2CppName: CreateUIObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(::Il2CppString*, UnityEngine::GameObject*, ::Array<System::Type*>*)>(&DefaultControls::CreateUIObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateUIObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::SetDefaultTextValues
// Il2CppName: SetDefaultTextValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Text*)>(&DefaultControls::SetDefaultTextValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "SetDefaultTextValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::SetDefaultColorTransitionValues
// Il2CppName: SetDefaultColorTransitionValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Selectable*)>(&DefaultControls::SetDefaultColorTransitionValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "SetDefaultColorTransitionValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::SetParentAndAlign
// Il2CppName: SetParentAndAlign
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::GameObject*)>(&DefaultControls::SetParentAndAlign)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "SetParentAndAlign", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::SetLayerRecursively
// Il2CppName: SetLayerRecursively
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, int)>(&DefaultControls::SetLayerRecursively)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "SetLayerRecursively", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreatePanel
// Il2CppName: CreatePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreatePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreatePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateButton
// Il2CppName: CreateButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateText
// Il2CppName: CreateText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateImage
// Il2CppName: CreateImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateRawImage
// Il2CppName: CreateRawImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateRawImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateRawImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateSlider
// Il2CppName: CreateSlider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateSlider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateSlider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateScrollbar
// Il2CppName: CreateScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateScrollbar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateToggle
// Il2CppName: CreateToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateToggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateInputField
// Il2CppName: CreateInputField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateInputField)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateDropdown
// Il2CppName: CreateDropdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateDropdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateDropdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::CreateScrollView
// Il2CppName: CreateScrollView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::UI::DefaultControls::Resources)>(&DefaultControls::CreateScrollView)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), "CreateScrollView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::DefaultControls::Resources>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DefaultControls::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.DefaultControls/IFactoryControls
#include "UnityEngine/UI/DefaultControls_IFactoryControls.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.DefaultControls/IFactoryControls.CreateGameObject
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::IFactoryControls::CreateGameObject(::Il2CppString* name, ::Array<System::Type*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::IFactoryControls::CreateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name, components);
}
// Creating initializer_list -> params proxy for: UnityEngine.GameObject CreateGameObject(System.String name, params System.Type[] components)
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::IFactoryControls::CreateGameObject(::Il2CppString* name, std::initializer_list<System::Type*> components) {
  return UnityEngine::UI::DefaultControls::IFactoryControls::CreateGameObject(name, ::Array<System::Type*>::New(components));
}
// Writing MetadataGetter for method: DefaultControls::IFactoryControls::CreateGameObject
// Il2CppName: CreateGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (DefaultControls::IFactoryControls::*)(::Il2CppString*, ::Array<System::Type*>*)>(&DefaultControls::IFactoryControls::CreateGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls::IFactoryControls*), "CreateGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.DefaultControls/DefaultRuntimeFactory
#include "UnityEngine/UI/DefaultControls_DefaultRuntimeFactory.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.DefaultControls/IFactoryControls Default
UnityEngine::UI::DefaultControls::IFactoryControls* UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::DefaultControls::IFactoryControls*>("UnityEngine.UI", "DefaultControls/DefaultRuntimeFactory", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.DefaultControls/IFactoryControls Default
void UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_set_Default(UnityEngine::UI::DefaultControls::IFactoryControls* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "DefaultControls/DefaultRuntimeFactory", "Default", value));
}
// Autogenerated method: UnityEngine.UI.DefaultControls/DefaultRuntimeFactory.CreateGameObject
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject(::Il2CppString* name, ::Array<System::Type*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(components)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name, components);
}
// Creating initializer_list -> params proxy for: UnityEngine.GameObject CreateGameObject(System.String name, params System.Type[] components)
UnityEngine::GameObject* UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject(::Il2CppString* name, std::initializer_list<System::Type*> components) {
  return UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject(name, ::Array<System::Type*>::New(components));
}
// Autogenerated method: UnityEngine.UI.DefaultControls/DefaultRuntimeFactory..cctor
void UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "DefaultControls/DefaultRuntimeFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DefaultControls::DefaultRuntimeFactory::CreateGameObject
// Il2CppName: CreateGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (DefaultControls::DefaultRuntimeFactory::*)(::Il2CppString*, ::Array<System::Type*>*)>(&DefaultControls::DefaultRuntimeFactory::CreateGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls::DefaultRuntimeFactory*), "CreateGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultControls::DefaultRuntimeFactory::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DefaultControls::DefaultRuntimeFactory::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls::DefaultRuntimeFactory*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultControls::DefaultRuntimeFactory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultControls::DefaultRuntimeFactory::*)()>(&DefaultControls::DefaultRuntimeFactory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls::DefaultRuntimeFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultControls::DefaultRuntimeFactory::*)()>(&DefaultControls::DefaultRuntimeFactory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultControls::DefaultRuntimeFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
// Including type: UnityEngine.UI.Dropdown/DropdownItem
#include "UnityEngine/UI/Dropdown_DropdownItem.hpp"
// Including type: UnityEngine.UI.Dropdown/OptionData
#include "UnityEngine/UI/Dropdown_OptionData.hpp"
// Including type: UnityEngine.UI.Dropdown/OptionDataList
#include "UnityEngine/UI/Dropdown_OptionDataList.hpp"
// Including type: UnityEngine.UI.Dropdown/DropdownEvent
#include "UnityEngine/UI/Dropdown_DropdownEvent.hpp"
// Including type: UnityEngine.UI.Dropdown/<>c__DisplayClass62_0
#include "UnityEngine/UI/Dropdown_--c__DisplayClass62_0.hpp"
// Including type: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74
#include "UnityEngine/UI/Dropdown_-DelayedDestroyDropdownList-d__74.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.CoroutineTween.TweenRunner`1
#include "UnityEngine/UI/CoroutineTween/TweenRunner_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.Dropdown/OptionData s_NoOptionData
UnityEngine::UI::Dropdown::OptionData* UnityEngine::UI::Dropdown::_get_s_NoOptionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::_get_s_NoOptionData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Dropdown::OptionData*>("UnityEngine.UI", "Dropdown", "s_NoOptionData"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.Dropdown/OptionData s_NoOptionData
void UnityEngine::UI::Dropdown::_set_s_NoOptionData(UnityEngine::UI::Dropdown::OptionData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::_set_s_NoOptionData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Dropdown", "s_NoOptionData", value));
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_template
UnityEngine::RectTransform* UnityEngine::UI::Dropdown::get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_template
void UnityEngine::UI::Dropdown::set_template(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_captionText
UnityEngine::UI::Text* UnityEngine::UI::Dropdown::get_captionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_captionText
void UnityEngine::UI::Dropdown::set_captionText(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_captionImage
UnityEngine::UI::Image* UnityEngine::UI::Dropdown::get_captionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_captionImage
void UnityEngine::UI::Dropdown::set_captionImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_itemText
UnityEngine::UI::Text* UnityEngine::UI::Dropdown::get_itemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_itemText
void UnityEngine::UI::Dropdown::set_itemText(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_itemImage
UnityEngine::UI::Image* UnityEngine::UI::Dropdown::get_itemImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_itemImage
void UnityEngine::UI::Dropdown::set_itemImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_options
System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* UnityEngine::UI::Dropdown::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_options
void UnityEngine::UI::Dropdown::set_options(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_onValueChanged
UnityEngine::UI::Dropdown::DropdownEvent* UnityEngine::UI::Dropdown::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Dropdown::DropdownEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_onValueChanged
void UnityEngine::UI::Dropdown::set_onValueChanged(UnityEngine::UI::Dropdown::DropdownEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_alphaFadeSpeed
float UnityEngine::UI::Dropdown::get_alphaFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_alphaFadeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphaFadeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_alphaFadeSpeed
void UnityEngine::UI::Dropdown::set_alphaFadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_alphaFadeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alphaFadeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.get_value
int UnityEngine::UI::Dropdown::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.set_value
void UnityEngine::UI::Dropdown::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown.SetValueWithoutNotify
void UnityEngine::UI::Dropdown::SetValueWithoutNotify(int input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::SetValueWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Dropdown.Set
void UnityEngine::UI::Dropdown::Set(int value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Dropdown.RefreshShownValue
void UnityEngine::UI::Dropdown::RefreshShownValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::RefreshShownValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshShownValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AddOptions
void UnityEngine::UI::Dropdown::AddOptions(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AddOptions
void UnityEngine::UI::Dropdown::AddOptions(System::Collections::Generic::List_1<::Il2CppString*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AddOptions
void UnityEngine::UI::Dropdown::AddOptions(System::Collections::Generic::List_1<UnityEngine::Sprite*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: UnityEngine.UI.Dropdown.ClearOptions
void UnityEngine::UI::Dropdown::ClearOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::ClearOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.SetupTemplate
void UnityEngine::UI::Dropdown::SetupTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::SetupTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.OnPointerClick
void UnityEngine::UI::Dropdown::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Dropdown.OnSubmit
void UnityEngine::UI::Dropdown::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Dropdown.OnCancel
void UnityEngine::UI::Dropdown::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Dropdown.Show
void UnityEngine::UI::Dropdown::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.CreateBlocker
UnityEngine::GameObject* UnityEngine::UI::Dropdown::CreateBlocker(UnityEngine::Canvas* rootCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::CreateBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootCanvas)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, rootCanvas);
}
// Autogenerated method: UnityEngine.UI.Dropdown.DestroyBlocker
void UnityEngine::UI::Dropdown::DestroyBlocker(UnityEngine::GameObject* blocker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DestroyBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocker)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, blocker);
}
// Autogenerated method: UnityEngine.UI.Dropdown.CreateDropdownList
UnityEngine::GameObject* UnityEngine::UI::Dropdown::CreateDropdownList(UnityEngine::GameObject* _template) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::CreateDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_template)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, _template);
}
// Autogenerated method: UnityEngine.UI.Dropdown.DestroyDropdownList
void UnityEngine::UI::Dropdown::DestroyDropdownList(UnityEngine::GameObject* dropdownList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DestroyDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownList);
}
// Autogenerated method: UnityEngine.UI.Dropdown.CreateItem
UnityEngine::UI::Dropdown::DropdownItem* UnityEngine::UI::Dropdown::CreateItem(UnityEngine::UI::Dropdown::DropdownItem* itemTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::CreateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemTemplate)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Dropdown::DropdownItem*, false>(this, ___internal__method, itemTemplate);
}
// Autogenerated method: UnityEngine.UI.Dropdown.DestroyItem
void UnityEngine::UI::Dropdown::DestroyItem(UnityEngine::UI::Dropdown::DropdownItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DestroyItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AddItem
UnityEngine::UI::Dropdown::DropdownItem* UnityEngine::UI::Dropdown::AddItem(UnityEngine::UI::Dropdown::OptionData* data, bool selected, UnityEngine::UI::Dropdown::DropdownItem* itemTemplate, System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::DropdownItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(selected), ::il2cpp_utils::ExtractType(itemTemplate), ::il2cpp_utils::ExtractType(items)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Dropdown::DropdownItem*, false>(this, ___internal__method, data, selected, itemTemplate, items);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AlphaFadeList
void UnityEngine::UI::Dropdown::AlphaFadeList(float duration, float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration, alpha);
}
// Autogenerated method: UnityEngine.UI.Dropdown.AlphaFadeList
void UnityEngine::UI::Dropdown::AlphaFadeList(float duration, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration, start, end);
}
// Autogenerated method: UnityEngine.UI.Dropdown.SetAlpha
void UnityEngine::UI::Dropdown::SetAlpha(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::SetAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha);
}
// Autogenerated method: UnityEngine.UI.Dropdown.Hide
void UnityEngine::UI::Dropdown::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.DelayedDestroyDropdownList
System::Collections::IEnumerator* UnityEngine::UI::Dropdown::DelayedDestroyDropdownList(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DelayedDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: UnityEngine.UI.Dropdown.ImmediateDestroyDropdownList
void UnityEngine::UI::Dropdown::ImmediateDestroyDropdownList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::ImmediateDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImmediateDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.OnSelectItem
void UnityEngine::UI::Dropdown::OnSelectItem(UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OnSelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.Dropdown.Awake
void UnityEngine::UI::Dropdown::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.Start
void UnityEngine::UI::Dropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown.OnDisable
void UnityEngine::UI::Dropdown::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown..cctor
void UnityEngine::UI::Dropdown::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Dropdown", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Dropdown::get_template
// Il2CppName: get_template
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Dropdown::*)()>(&Dropdown::get_template)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_template", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_template
// Il2CppName: set_template
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::RectTransform*)>(&Dropdown::set_template)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_template", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_captionText
// Il2CppName: get_captionText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Text* (Dropdown::*)()>(&Dropdown::get_captionText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_captionText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_captionText
// Il2CppName: set_captionText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Text*)>(&Dropdown::set_captionText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_captionText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_captionImage
// Il2CppName: get_captionImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image* (Dropdown::*)()>(&Dropdown::get_captionImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_captionImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_captionImage
// Il2CppName: set_captionImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Image*)>(&Dropdown::set_captionImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_captionImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_itemText
// Il2CppName: get_itemText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Text* (Dropdown::*)()>(&Dropdown::get_itemText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_itemText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_itemText
// Il2CppName: set_itemText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Text*)>(&Dropdown::set_itemText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_itemText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_itemImage
// Il2CppName: get_itemImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image* (Dropdown::*)()>(&Dropdown::get_itemImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_itemImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_itemImage
// Il2CppName: set_itemImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Image*)>(&Dropdown::set_itemImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_itemImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_options
// Il2CppName: get_options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* (Dropdown::*)()>(&Dropdown::get_options)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_options
// Il2CppName: set_options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*)>(&Dropdown::set_options)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Dropdown::DropdownEvent* (Dropdown::*)()>(&Dropdown::get_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Dropdown::DropdownEvent*)>(&Dropdown::set_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Dropdown::DropdownEvent*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_alphaFadeSpeed
// Il2CppName: get_alphaFadeSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Dropdown::*)()>(&Dropdown::get_alphaFadeSpeed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_alphaFadeSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_alphaFadeSpeed
// Il2CppName: set_alphaFadeSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(float)>(&Dropdown::set_alphaFadeSpeed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_alphaFadeSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Dropdown::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Dropdown::*)()>(&Dropdown::get_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(int)>(&Dropdown::set_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dropdown::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(int)>(&Dropdown::SetValueWithoutNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dropdown::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(int, bool)>(&Dropdown::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Dropdown::RefreshShownValue
// Il2CppName: RefreshShownValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::RefreshShownValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "RefreshShownValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::AddOptions
// Il2CppName: AddOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*)>(&Dropdown::AddOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AddOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::AddOptions
// Il2CppName: AddOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&Dropdown::AddOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AddOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::AddOptions
// Il2CppName: AddOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(System::Collections::Generic::List_1<UnityEngine::Sprite*>*)>(&Dropdown::AddOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AddOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Sprite*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::ClearOptions
// Il2CppName: ClearOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::ClearOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "ClearOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::SetupTemplate
// Il2CppName: SetupTemplate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::SetupTemplate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "SetupTemplate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::GetOrAddComponent
// Il2CppName: GetOrAddComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Dropdown::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::EventSystems::PointerEventData*)>(&Dropdown::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::EventSystems::BaseEventData*)>(&Dropdown::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::EventSystems::BaseEventData*)>(&Dropdown::OnCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::Show
// Il2CppName: Show
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::Show)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "Show", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::CreateBlocker
// Il2CppName: CreateBlocker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (Dropdown::*)(UnityEngine::Canvas*)>(&Dropdown::CreateBlocker)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "CreateBlocker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DestroyBlocker
// Il2CppName: DestroyBlocker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::GameObject*)>(&Dropdown::DestroyBlocker)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "DestroyBlocker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::CreateDropdownList
// Il2CppName: CreateDropdownList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (Dropdown::*)(UnityEngine::GameObject*)>(&Dropdown::CreateDropdownList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "CreateDropdownList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DestroyDropdownList
// Il2CppName: DestroyDropdownList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::GameObject*)>(&Dropdown::DestroyDropdownList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "DestroyDropdownList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::CreateItem
// Il2CppName: CreateItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Dropdown::DropdownItem* (Dropdown::*)(UnityEngine::UI::Dropdown::DropdownItem*)>(&Dropdown::CreateItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "CreateItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Dropdown::DropdownItem*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DestroyItem
// Il2CppName: DestroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Dropdown::DropdownItem*)>(&Dropdown::DestroyItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "DestroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Dropdown::DropdownItem*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::AddItem
// Il2CppName: AddItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Dropdown::DropdownItem* (Dropdown::*)(UnityEngine::UI::Dropdown::OptionData*, bool, UnityEngine::UI::Dropdown::DropdownItem*, System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::DropdownItem*>*)>(&Dropdown::AddItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AddItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Dropdown::OptionData*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Dropdown::DropdownItem*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::DropdownItem*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::AlphaFadeList
// Il2CppName: AlphaFadeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(float, float)>(&Dropdown::AlphaFadeList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AlphaFadeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Dropdown::AlphaFadeList
// Il2CppName: AlphaFadeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(float, float, float)>(&Dropdown::AlphaFadeList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "AlphaFadeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Dropdown::SetAlpha
// Il2CppName: SetAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(float)>(&Dropdown::SetAlpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "SetAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Dropdown::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::Hide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::DelayedDestroyDropdownList
// Il2CppName: DelayedDestroyDropdownList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Dropdown::*)(float)>(&Dropdown::DelayedDestroyDropdownList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "DelayedDestroyDropdownList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Dropdown::ImmediateDestroyDropdownList
// Il2CppName: ImmediateDestroyDropdownList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::ImmediateDestroyDropdownList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "ImmediateDestroyDropdownList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::OnSelectItem
// Il2CppName: OnSelectItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)(UnityEngine::UI::Toggle*)>(&Dropdown::OnSelectItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "OnSelectItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::*)()>(&Dropdown::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Dropdown::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Dropdown/DropdownItem
#include "UnityEngine/UI/Dropdown_DropdownItem.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.get_text
UnityEngine::UI::Text* UnityEngine::UI::Dropdown::DropdownItem::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.set_text
void UnityEngine::UI::Dropdown::DropdownItem::set_text(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.get_image
UnityEngine::UI::Image* UnityEngine::UI::Dropdown::DropdownItem::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.set_image
void UnityEngine::UI::Dropdown::DropdownItem::set_image(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::Dropdown::DropdownItem::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.set_rectTransform
void UnityEngine::UI::Dropdown::DropdownItem::set_rectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::set_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.get_toggle
UnityEngine::UI::Toggle* UnityEngine::UI::Dropdown::DropdownItem::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.set_toggle
void UnityEngine::UI::Dropdown::DropdownItem::set_toggle(UnityEngine::UI::Toggle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::set_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.OnPointerEnter
void UnityEngine::UI::Dropdown::DropdownItem::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Dropdown/DropdownItem.OnCancel
void UnityEngine::UI::Dropdown::DropdownItem::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::DropdownItem::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: Dropdown::DropdownItem::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Text* (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::UI::Text*)>(&Dropdown::DropdownItem::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::get_image
// Il2CppName: get_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image* (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::get_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "get_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::set_image
// Il2CppName: set_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::UI::Image*)>(&Dropdown::DropdownItem::set_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "set_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::set_rectTransform
// Il2CppName: set_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::RectTransform*)>(&Dropdown::DropdownItem::set_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "set_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::get_toggle
// Il2CppName: get_toggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Toggle* (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::get_toggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "get_toggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::set_toggle
// Il2CppName: set_toggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::UI::Toggle*)>(&Dropdown::DropdownItem::set_toggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "set_toggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::EventSystems::PointerEventData*)>(&Dropdown::DropdownItem::OnPointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)(UnityEngine::EventSystems::BaseEventData*)>(&Dropdown::DropdownItem::OnCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::DropdownItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownItem::*)()>(&Dropdown::DropdownItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Dropdown/OptionData
#include "UnityEngine/UI/Dropdown_OptionData.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Dropdown/OptionData.get_text
::Il2CppString* UnityEngine::UI::Dropdown::OptionData::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionData::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/OptionData.set_text
void UnityEngine::UI::Dropdown::OptionData::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionData::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Dropdown/OptionData.get_image
UnityEngine::Sprite* UnityEngine::UI::Dropdown::OptionData::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionData::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/OptionData.set_image
void UnityEngine::UI::Dropdown::OptionData::set_image(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionData::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Dropdown::OptionData::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Dropdown::OptionData::*)()>(&Dropdown::OptionData::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(::Il2CppString*)>(&Dropdown::OptionData::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::get_image
// Il2CppName: get_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (Dropdown::OptionData::*)()>(&Dropdown::OptionData::get_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), "get_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::set_image
// Il2CppName: set_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(UnityEngine::Sprite*)>(&Dropdown::OptionData::set_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), "set_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(::Il2CppString*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(::Il2CppString*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(UnityEngine::Sprite*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(UnityEngine::Sprite*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(::Il2CppString*, UnityEngine::Sprite*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)(::Il2CppString*, UnityEngine::Sprite*)>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)()>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionData::*)()>(&Dropdown::OptionData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Dropdown/OptionDataList
#include "UnityEngine/UI/Dropdown_OptionDataList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Dropdown/OptionData
#include "UnityEngine/UI/Dropdown_OptionData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Dropdown/OptionDataList.get_options
System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* UnityEngine::UI::Dropdown::OptionDataList::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionDataList::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/OptionDataList.set_options
void UnityEngine::UI::Dropdown::OptionDataList::set_options(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::OptionDataList::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Dropdown::OptionDataList::get_options
// Il2CppName: get_options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>* (Dropdown::OptionDataList::*)()>(&Dropdown::OptionDataList::get_options)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionDataList*), "get_options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionDataList::set_options
// Il2CppName: set_options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionDataList::*)(System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*)>(&Dropdown::OptionDataList::set_options)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionDataList*), "set_options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::Dropdown::OptionData*>*>()});
  }
};
// Writing MetadataGetter for method: Dropdown::OptionDataList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionDataList::*)()>(&Dropdown::OptionDataList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionDataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::OptionDataList::*)()>(&Dropdown::OptionDataList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::OptionDataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Dropdown/DropdownEvent
#include "UnityEngine/UI/Dropdown_DropdownEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Dropdown::DropdownEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownEvent::*)()>(&Dropdown::DropdownEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::DropdownEvent::*)()>(&Dropdown::DropdownEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::DropdownEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Dropdown/<>c__DisplayClass62_0
#include "UnityEngine/UI/Dropdown_--c__DisplayClass62_0.hpp"
// Including type: UnityEngine.UI.Dropdown/DropdownItem
#include "UnityEngine/UI/Dropdown_DropdownItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Dropdown/<>c__DisplayClass62_0.<Show>b__0
void UnityEngine::UI::Dropdown::$$c__DisplayClass62_0::$Show$b__0(bool x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$$c__DisplayClass62_0::<Show>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Show>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: Dropdown::$$c__DisplayClass62_0::$Show$b__0
// Il2CppName: <Show>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$$c__DisplayClass62_0::*)(bool)>(&Dropdown::$$c__DisplayClass62_0::$Show$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$$c__DisplayClass62_0*), "<Show>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Dropdown::$$c__DisplayClass62_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$$c__DisplayClass62_0::*)()>(&Dropdown::$$c__DisplayClass62_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$$c__DisplayClass62_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$$c__DisplayClass62_0::*)()>(&Dropdown::$$c__DisplayClass62_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$$c__DisplayClass62_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74
#include "UnityEngine/UI/Dropdown_-DelayedDestroyDropdownList-d__74.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74.System.IDisposable.Dispose
void UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74.MoveNext
bool UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74.System.Collections.IEnumerator.Reset
void UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Dropdown/<DelayedDestroyDropdownList>d__74.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Dropdown::$DelayedDestroyDropdownList$d__74::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$DelayedDestroyDropdownList$d__74::*)(int)>(&Dropdown::$DelayedDestroyDropdownList$d__74::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$DelayedDestroyDropdownList$d__74::*)(int)>(&Dropdown::$DelayedDestroyDropdownList$d__74::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$DelayedDestroyDropdownList$d__74::*)()>(&Dropdown::$DelayedDestroyDropdownList$d__74::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Dropdown::$DelayedDestroyDropdownList$d__74::*)()>(&Dropdown::$DelayedDestroyDropdownList$d__74::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Dropdown::$DelayedDestroyDropdownList$d__74::*)()>(&Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dropdown::$DelayedDestroyDropdownList$d__74::*)()>(&Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Dropdown::$DelayedDestroyDropdownList$d__74::*)()>(&Dropdown::$DelayedDestroyDropdownList$d__74::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dropdown::$DelayedDestroyDropdownList$d__74*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.FontData
#include "UnityEngine/UI/FontData.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.FontData.get_defaultFontData
UnityEngine::UI::FontData* UnityEngine::UI::FontData::get_defaultFontData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_defaultFontData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "FontData", "get_defaultFontData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::FontData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.get_font
UnityEngine::Font* UnityEngine::UI::FontData::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Font*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_font
void UnityEngine::UI::FontData::set_font(UnityEngine::Font* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_fontSize
int UnityEngine::UI::FontData::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_fontSize
void UnityEngine::UI::FontData::set_fontSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_fontStyle
UnityEngine::FontStyle UnityEngine::UI::FontData::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::FontStyle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_fontStyle
void UnityEngine::UI::FontData::set_fontStyle(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_bestFit
bool UnityEngine::UI::FontData::get_bestFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_bestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_bestFit
void UnityEngine::UI::FontData::set_bestFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_bestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_minSize
int UnityEngine::UI::FontData::get_minSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_minSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_minSize
void UnityEngine::UI::FontData::set_minSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_minSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_maxSize
int UnityEngine::UI::FontData::get_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_maxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_maxSize
void UnityEngine::UI::FontData::set_maxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_maxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_alignment
UnityEngine::TextAnchor UnityEngine::UI::FontData::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAnchor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_alignment
void UnityEngine::UI::FontData::set_alignment(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_alignByGeometry
bool UnityEngine::UI::FontData::get_alignByGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_alignByGeometry
void UnityEngine::UI::FontData::set_alignByGeometry(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_richText
bool UnityEngine::UI::FontData::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_richText
void UnityEngine::UI::FontData::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_horizontalOverflow
UnityEngine::HorizontalWrapMode UnityEngine::UI::FontData::get_horizontalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::HorizontalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_horizontalOverflow
void UnityEngine::UI::FontData::set_horizontalOverflow(UnityEngine::HorizontalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_verticalOverflow
UnityEngine::VerticalWrapMode UnityEngine::UI::FontData::get_verticalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::VerticalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_verticalOverflow
void UnityEngine::UI::FontData::set_verticalOverflow(UnityEngine::VerticalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.get_lineSpacing
float UnityEngine::UI::FontData::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.set_lineSpacing
void UnityEngine::UI::FontData::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.FontData.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::UI::FontData::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.FontData.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::UI::FontData::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontData::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: FontData::get_defaultFontData
// Il2CppName: get_defaultFontData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::FontData* (*)()>(&FontData::get_defaultFontData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_defaultFontData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::get_font
// Il2CppName: get_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Font* (FontData::*)()>(&FontData::get_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_font
// Il2CppName: set_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(UnityEngine::Font*)>(&FontData::set_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>()});
  }
};
// Writing MetadataGetter for method: FontData::get_fontSize
// Il2CppName: get_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FontData::*)()>(&FontData::get_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_fontSize
// Il2CppName: set_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(int)>(&FontData::set_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FontData::get_fontStyle
// Il2CppName: get_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::FontStyle (FontData::*)()>(&FontData::get_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_fontStyle
// Il2CppName: set_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(UnityEngine::FontStyle)>(&FontData::set_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>()});
  }
};
// Writing MetadataGetter for method: FontData::get_bestFit
// Il2CppName: get_bestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FontData::*)()>(&FontData::get_bestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_bestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_bestFit
// Il2CppName: set_bestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(bool)>(&FontData::set_bestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_bestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FontData::get_minSize
// Il2CppName: get_minSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FontData::*)()>(&FontData::get_minSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_minSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_minSize
// Il2CppName: set_minSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(int)>(&FontData::set_minSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_minSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FontData::get_maxSize
// Il2CppName: get_maxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FontData::*)()>(&FontData::get_maxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_maxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_maxSize
// Il2CppName: set_maxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(int)>(&FontData::set_maxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_maxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FontData::get_alignment
// Il2CppName: get_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextAnchor (FontData::*)()>(&FontData::get_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_alignment
// Il2CppName: set_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(UnityEngine::TextAnchor)>(&FontData::set_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: FontData::get_alignByGeometry
// Il2CppName: get_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FontData::*)()>(&FontData::get_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_alignByGeometry
// Il2CppName: set_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(bool)>(&FontData::set_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FontData::get_richText
// Il2CppName: get_richText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FontData::*)()>(&FontData::get_richText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_richText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_richText
// Il2CppName: set_richText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(bool)>(&FontData::set_richText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_richText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FontData::get_horizontalOverflow
// Il2CppName: get_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::HorizontalWrapMode (FontData::*)()>(&FontData::get_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_horizontalOverflow
// Il2CppName: set_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(UnityEngine::HorizontalWrapMode)>(&FontData::set_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::HorizontalWrapMode>()});
  }
};
// Writing MetadataGetter for method: FontData::get_verticalOverflow
// Il2CppName: get_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::VerticalWrapMode (FontData::*)()>(&FontData::get_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_verticalOverflow
// Il2CppName: set_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(UnityEngine::VerticalWrapMode)>(&FontData::set_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::VerticalWrapMode>()});
  }
};
// Writing MetadataGetter for method: FontData::get_lineSpacing
// Il2CppName: get_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FontData::*)()>(&FontData::get_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "get_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::set_lineSpacing
// Il2CppName: set_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)(float)>(&FontData::set_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "set_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FontData::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)()>(&FontData::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)()>(&FontData::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)()>(&FontData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FontData::*)()>(&FontData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.FontUpdateTracker
#include "UnityEngine/UI/FontUpdateTracker.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Font,System.Collections.Generic.HashSet`1<UnityEngine.UI.Text>> m_Tracked
System::Collections::Generic::Dictionary_2<UnityEngine::Font*, System::Collections::Generic::HashSet_1<UnityEngine::UI::Text*>*>* UnityEngine::UI::FontUpdateTracker::_get_m_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::_get_m_Tracked");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<UnityEngine::Font*, System::Collections::Generic::HashSet_1<UnityEngine::UI::Text*>*>*>("UnityEngine.UI", "FontUpdateTracker", "m_Tracked")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Font,System.Collections.Generic.HashSet`1<UnityEngine.UI.Text>> m_Tracked
void UnityEngine::UI::FontUpdateTracker::_set_m_Tracked(System::Collections::Generic::Dictionary_2<UnityEngine::Font*, System::Collections::Generic::HashSet_1<UnityEngine::UI::Text*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::_set_m_Tracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "FontUpdateTracker", "m_Tracked", value));
}
// Autogenerated method: UnityEngine.UI.FontUpdateTracker.TrackText
void UnityEngine::UI::FontUpdateTracker::TrackText(UnityEngine::UI::Text* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::TrackText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "FontUpdateTracker", "TrackText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: UnityEngine.UI.FontUpdateTracker.RebuildForFont
void UnityEngine::UI::FontUpdateTracker::RebuildForFont(UnityEngine::Font* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::RebuildForFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "FontUpdateTracker", "RebuildForFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.UI.FontUpdateTracker.UntrackText
void UnityEngine::UI::FontUpdateTracker::UntrackText(UnityEngine::UI::Text* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::UntrackText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "FontUpdateTracker", "UntrackText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: UnityEngine.UI.FontUpdateTracker..cctor
void UnityEngine::UI::FontUpdateTracker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::FontUpdateTracker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "FontUpdateTracker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: FontUpdateTracker::TrackText
// Il2CppName: TrackText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Text*)>(&FontUpdateTracker::TrackText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontUpdateTracker*), "TrackText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: FontUpdateTracker::RebuildForFont
// Il2CppName: RebuildForFont
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Font*)>(&FontUpdateTracker::RebuildForFont)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontUpdateTracker*), "RebuildForFont", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>()});
  }
};
// Writing MetadataGetter for method: FontUpdateTracker::UntrackText
// Il2CppName: UntrackText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Text*)>(&FontUpdateTracker::UntrackText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontUpdateTracker*), "UntrackText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: FontUpdateTracker::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FontUpdateTracker::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontUpdateTracker*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.CoroutineTween.TweenRunner`1
#include "UnityEngine/UI/CoroutineTween/TweenRunner_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Material s_DefaultUI
UnityEngine::Material* UnityEngine::UI::Graphic::_get_s_DefaultUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_get_s_DefaultUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("UnityEngine.UI", "Graphic", "s_DefaultUI"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Material s_DefaultUI
void UnityEngine::UI::Graphic::_set_s_DefaultUI(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_set_s_DefaultUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Graphic", "s_DefaultUI", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Texture2D s_WhiteTexture
UnityEngine::Texture2D* UnityEngine::UI::Graphic::_get_s_WhiteTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_get_s_WhiteTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Texture2D*>("UnityEngine.UI", "Graphic", "s_WhiteTexture"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Texture2D s_WhiteTexture
void UnityEngine::UI::Graphic::_set_s_WhiteTexture(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_set_s_WhiteTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Graphic", "s_WhiteTexture", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Mesh s_Mesh
UnityEngine::Mesh* UnityEngine::UI::Graphic::_get_s_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_get_s_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Mesh*>("UnityEngine.UI", "Graphic", "s_Mesh"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Mesh s_Mesh
void UnityEngine::UI::Graphic::_set_s_Mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_set_s_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Graphic", "s_Mesh", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UI.VertexHelper s_VertexHelper
UnityEngine::UI::VertexHelper* UnityEngine::UI::Graphic::_get_s_VertexHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_get_s_VertexHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::VertexHelper*>("UnityEngine.UI", "Graphic", "s_VertexHelper"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UI.VertexHelper s_VertexHelper
void UnityEngine::UI::Graphic::_set_s_VertexHelper(UnityEngine::UI::VertexHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::_set_s_VertexHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Graphic", "s_VertexHelper", value));
}
// Autogenerated method: UnityEngine.UI.Graphic.get_defaultGraphicMaterial
UnityEngine::Material* UnityEngine::UI::Graphic::get_defaultGraphicMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_defaultGraphicMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Graphic", "get_defaultGraphicMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_color
UnityEngine::Color UnityEngine::UI::Graphic::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.set_color
void UnityEngine::UI::Graphic::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::set_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_raycastTarget
bool UnityEngine::UI::Graphic::get_raycastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_raycastTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.set_raycastTarget
void UnityEngine::UI::Graphic::set_raycastTarget(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::set_raycastTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_useLegacyMeshGeneration
bool UnityEngine::UI::Graphic::get_useLegacyMeshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_useLegacyMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useLegacyMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.set_useLegacyMeshGeneration
void UnityEngine::UI::Graphic::set_useLegacyMeshGeneration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::set_useLegacyMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useLegacyMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Graphic.SetAllDirty
void UnityEngine::UI::Graphic::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.SetLayoutDirty
void UnityEngine::UI::Graphic::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.SetVerticesDirty
void UnityEngine::UI::Graphic::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.SetMaterialDirty
void UnityEngine::UI::Graphic::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_depth
int UnityEngine::UI::Graphic::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::Graphic::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_rectTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_canvas
UnityEngine::Canvas* UnityEngine::UI::Graphic::get_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.CacheCanvas
void UnityEngine::UI::Graphic::CacheCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::CacheCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_canvasRenderer
UnityEngine::CanvasRenderer* UnityEngine::UI::Graphic::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_defaultMaterial
UnityEngine::Material* UnityEngine::UI::Graphic::get_defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_defaultMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_material
UnityEngine::Material* UnityEngine::UI::Graphic::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.set_material
void UnityEngine::UI::Graphic::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_materialForRendering
UnityEngine::Material* UnityEngine::UI::Graphic::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_mainTexture
UnityEngine::Texture* UnityEngine::UI::Graphic::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnCullingChanged
void UnityEngine::UI::Graphic::OnCullingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnCullingChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCullingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.Rebuild
void UnityEngine::UI::Graphic::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: UnityEngine.UI.Graphic.LayoutComplete
void UnityEngine::UI::Graphic::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.GraphicUpdateComplete
void UnityEngine::UI::Graphic::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.UpdateMaterial
void UnityEngine::UI::Graphic::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.UpdateGeometry
void UnityEngine::UI::Graphic::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.DoMeshGeneration
void UnityEngine::UI::Graphic::DoMeshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::DoMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.DoLegacyMeshGeneration
void UnityEngine::UI::Graphic::DoLegacyMeshGeneration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::DoLegacyMeshGeneration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoLegacyMeshGeneration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.get_workerMesh
UnityEngine::Mesh* UnityEngine::UI::Graphic::get_workerMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::get_workerMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Graphic", "get_workerMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnFillVBO
void UnityEngine::UI::Graphic::OnFillVBO(System::Collections::Generic::List_1<UnityEngine::UIVertex>* vbo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnFillVBO");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFillVBO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vbo);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnPopulateMesh
void UnityEngine::UI::Graphic::OnPopulateMesh(UnityEngine::Mesh* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnPopulateMesh
void UnityEngine::UI::Graphic::OnPopulateMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated method: UnityEngine.UI.Graphic.SetNativeSize
void UnityEngine::UI::Graphic::SetNativeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::SetNativeSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNativeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.Raycast
bool UnityEngine::UI::Graphic::Raycast(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated method: UnityEngine.UI.Graphic.PixelAdjustPoint
UnityEngine::Vector2 UnityEngine::UI::Graphic::PixelAdjustPoint(UnityEngine::Vector2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::PixelAdjustPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PixelAdjustPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.UI.Graphic.GetPixelAdjustedRect
UnityEngine::Rect UnityEngine::UI::Graphic::GetPixelAdjustedRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::GetPixelAdjustedRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPixelAdjustedRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.CrossFadeColor
void UnityEngine::UI::Graphic::CrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::CrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: UnityEngine.UI.Graphic.CrossFadeColor
void UnityEngine::UI::Graphic::CrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha, bool useRGB) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::CrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha), ::il2cpp_utils::ExtractType(useRGB)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha, useRGB);
}
// Autogenerated method: UnityEngine.UI.Graphic.CreateColorFromAlpha
UnityEngine::Color UnityEngine::UI::Graphic::CreateColorFromAlpha(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::CreateColorFromAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Graphic", "CreateColorFromAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, alpha);
}
// Autogenerated method: UnityEngine.UI.Graphic.CrossFadeAlpha
void UnityEngine::UI::Graphic::CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::CrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: UnityEngine.UI.Graphic.RegisterDirtyLayoutCallback
void UnityEngine::UI::Graphic::RegisterDirtyLayoutCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::RegisterDirtyLayoutCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDirtyLayoutCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.UnregisterDirtyLayoutCallback
void UnityEngine::UI::Graphic::UnregisterDirtyLayoutCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UnregisterDirtyLayoutCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDirtyLayoutCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.RegisterDirtyVerticesCallback
void UnityEngine::UI::Graphic::RegisterDirtyVerticesCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::RegisterDirtyVerticesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDirtyVerticesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.UnregisterDirtyVerticesCallback
void UnityEngine::UI::Graphic::UnregisterDirtyVerticesCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UnregisterDirtyVerticesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDirtyVerticesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.RegisterDirtyMaterialCallback
void UnityEngine::UI::Graphic::RegisterDirtyMaterialCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::RegisterDirtyMaterialCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDirtyMaterialCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.UnregisterDirtyMaterialCallback
void UnityEngine::UI::Graphic::UnregisterDirtyMaterialCallback(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UnregisterDirtyMaterialCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDirtyMaterialCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.UI.Graphic.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::Graphic::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnRectTransformDimensionsChange
void UnityEngine::UI::Graphic::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnBeforeTransformParentChanged
void UnityEngine::UI::Graphic::OnBeforeTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnBeforeTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnTransformParentChanged
void UnityEngine::UI::Graphic::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnEnable
void UnityEngine::UI::Graphic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnDisable
void UnityEngine::UI::Graphic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnDestroy
void UnityEngine::UI::Graphic::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnCanvasHierarchyChanged
void UnityEngine::UI::Graphic::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic.OnDidApplyAnimationProperties
void UnityEngine::UI::Graphic::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Graphic..cctor
void UnityEngine::UI::Graphic::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Graphic::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Graphic", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Graphic::get_defaultGraphicMaterial
// Il2CppName: get_defaultGraphicMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Graphic::get_defaultGraphicMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_defaultGraphicMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_color
// Il2CppName: get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Graphic::*)()>(&Graphic::get_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Color)>(&Graphic::set_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Graphic::get_raycastTarget
// Il2CppName: get_raycastTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Graphic::*)()>(&Graphic::get_raycastTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_raycastTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::set_raycastTarget
// Il2CppName: set_raycastTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(bool)>(&Graphic::set_raycastTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "set_raycastTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphic::get_useLegacyMeshGeneration
// Il2CppName: get_useLegacyMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Graphic::*)()>(&Graphic::get_useLegacyMeshGeneration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_useLegacyMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::set_useLegacyMeshGeneration
// Il2CppName: set_useLegacyMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(bool)>(&Graphic::set_useLegacyMeshGeneration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "set_useLegacyMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphic::SetAllDirty
// Il2CppName: SetAllDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::SetAllDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "SetAllDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::SetLayoutDirty
// Il2CppName: SetLayoutDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::SetLayoutDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "SetLayoutDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::SetVerticesDirty
// Il2CppName: SetVerticesDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::SetVerticesDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "SetVerticesDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::SetMaterialDirty
// Il2CppName: SetMaterialDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::SetMaterialDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "SetMaterialDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_depth
// Il2CppName: get_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Graphic::*)()>(&Graphic::get_depth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Graphic::*)()>(&Graphic::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_canvas
// Il2CppName: get_canvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Canvas* (Graphic::*)()>(&Graphic::get_canvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_canvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::CacheCanvas
// Il2CppName: CacheCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::CacheCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "CacheCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_canvasRenderer
// Il2CppName: get_canvasRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::CanvasRenderer* (Graphic::*)()>(&Graphic::get_canvasRenderer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_canvasRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_defaultMaterial
// Il2CppName: get_defaultMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Graphic::*)()>(&Graphic::get_defaultMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_defaultMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Graphic::*)()>(&Graphic::get_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::set_material
// Il2CppName: set_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Material*)>(&Graphic::set_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "set_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Graphic::get_materialForRendering
// Il2CppName: get_materialForRendering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Graphic::*)()>(&Graphic::get_materialForRendering)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_materialForRendering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Graphic::*)()>(&Graphic::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnCullingChanged
// Il2CppName: OnCullingChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnCullingChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnCullingChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::UI::CanvasUpdate)>(&Graphic::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: Graphic::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::UpdateMaterial
// Il2CppName: UpdateMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::UpdateMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UpdateMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::UpdateGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::DoMeshGeneration
// Il2CppName: DoMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::DoMeshGeneration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "DoMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::DoLegacyMeshGeneration
// Il2CppName: DoLegacyMeshGeneration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::DoLegacyMeshGeneration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "DoLegacyMeshGeneration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::get_workerMesh
// Il2CppName: get_workerMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (*)()>(&Graphic::get_workerMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "get_workerMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnFillVBO
// Il2CppName: OnFillVBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&Graphic::OnFillVBO)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnFillVBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: Graphic::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Mesh*)>(&Graphic::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: Graphic::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::UI::VertexHelper*)>(&Graphic::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: Graphic::SetNativeSize
// Il2CppName: SetNativeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::SetNativeSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "SetNativeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Graphic::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&Graphic::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Graphic::PixelAdjustPoint
// Il2CppName: PixelAdjustPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Graphic::*)(UnityEngine::Vector2)>(&Graphic::PixelAdjustPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "PixelAdjustPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Graphic::GetPixelAdjustedRect
// Il2CppName: GetPixelAdjustedRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Graphic::*)()>(&Graphic::GetPixelAdjustedRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "GetPixelAdjustedRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::CrossFadeColor
// Il2CppName: CrossFadeColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Color, float, bool, bool)>(&Graphic::CrossFadeColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "CrossFadeColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphic::CrossFadeColor
// Il2CppName: CrossFadeColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Color, float, bool, bool, bool)>(&Graphic::CrossFadeColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "CrossFadeColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphic::CreateColorFromAlpha
// Il2CppName: CreateColorFromAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (*)(float)>(&Graphic::CreateColorFromAlpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "CreateColorFromAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Graphic::CrossFadeAlpha
// Il2CppName: CrossFadeAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(float, float, bool)>(&Graphic::CrossFadeAlpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "CrossFadeAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Graphic::RegisterDirtyLayoutCallback
// Il2CppName: RegisterDirtyLayoutCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::RegisterDirtyLayoutCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "RegisterDirtyLayoutCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::UnregisterDirtyLayoutCallback
// Il2CppName: UnregisterDirtyLayoutCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::UnregisterDirtyLayoutCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UnregisterDirtyLayoutCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::RegisterDirtyVerticesCallback
// Il2CppName: RegisterDirtyVerticesCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::RegisterDirtyVerticesCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "RegisterDirtyVerticesCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::UnregisterDirtyVerticesCallback
// Il2CppName: UnregisterDirtyVerticesCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::UnregisterDirtyVerticesCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UnregisterDirtyVerticesCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::RegisterDirtyMaterialCallback
// Il2CppName: RegisterDirtyMaterialCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::RegisterDirtyMaterialCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "RegisterDirtyMaterialCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::UnregisterDirtyMaterialCallback
// Il2CppName: UnregisterDirtyMaterialCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)(UnityEngine::Events::UnityAction*)>(&Graphic::UnregisterDirtyMaterialCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UnregisterDirtyMaterialCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: Graphic::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Graphic::*)()>(&Graphic::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnBeforeTransformParentChanged
// Il2CppName: OnBeforeTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnBeforeTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Graphic::*)()>(&Graphic::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Graphic::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Graphic::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Graphic*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GraphicRaycaster
#include "UnityEngine/UI/GraphicRaycaster.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.UI.GraphicRaycaster/<>c
#include "UnityEngine/UI/GraphicRaycaster_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::UI::GraphicRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UI", "GraphicRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::UI::GraphicRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UI.Graphic> s_SortedGraphics
System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>* UnityEngine::UI::GraphicRaycaster::_get_s_SortedGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::_get_s_SortedGraphics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>*>("UnityEngine.UI", "GraphicRaycaster", "s_SortedGraphics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UI.Graphic> s_SortedGraphics
void UnityEngine::UI::GraphicRaycaster::_set_s_SortedGraphics(System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::_set_s_SortedGraphics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster", "s_SortedGraphics", value));
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_ignoreReversedGraphics
bool UnityEngine::UI::GraphicRaycaster::get_ignoreReversedGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_ignoreReversedGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreReversedGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.set_ignoreReversedGraphics
void UnityEngine::UI::GraphicRaycaster::set_ignoreReversedGraphics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::set_ignoreReversedGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreReversedGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_blockingObjects
UnityEngine::UI::GraphicRaycaster::BlockingObjects UnityEngine::UI::GraphicRaycaster::get_blockingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_blockingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blockingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::GraphicRaycaster::BlockingObjects, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.set_blockingObjects
void UnityEngine::UI::GraphicRaycaster::set_blockingObjects(UnityEngine::UI::GraphicRaycaster::BlockingObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::set_blockingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blockingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_canvas
UnityEngine::Canvas* UnityEngine::UI::GraphicRaycaster::get_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.Raycast
void UnityEngine::UI::GraphicRaycaster::Raycast(UnityEngine::Canvas* canvas, UnityEngine::Camera* eventCamera, UnityEngine::Vector2 pointerPosition, System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>* foundGraphics, System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRaycaster", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(eventCamera), ::il2cpp_utils::ExtractType(pointerPosition), ::il2cpp_utils::ExtractType(foundGraphics), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, canvas, eventCamera, pointerPosition, foundGraphics, results);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_sortOrderPriority
int UnityEngine::UI::GraphicRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_renderOrderPriority
int UnityEngine::UI::GraphicRaycaster::get_renderOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_renderOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.Raycast
void UnityEngine::UI::GraphicRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster.get_eventCamera
UnityEngine::Camera* UnityEngine::UI::GraphicRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster..cctor
void UnityEngine::UI::GraphicRaycaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRaycaster", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: GraphicRaycaster::get_ignoreReversedGraphics
// Il2CppName: get_ignoreReversedGraphics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GraphicRaycaster::*)()>(&GraphicRaycaster::get_ignoreReversedGraphics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_ignoreReversedGraphics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::set_ignoreReversedGraphics
// Il2CppName: set_ignoreReversedGraphics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::*)(bool)>(&GraphicRaycaster::set_ignoreReversedGraphics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "set_ignoreReversedGraphics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::get_blockingObjects
// Il2CppName: get_blockingObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::GraphicRaycaster::BlockingObjects (GraphicRaycaster::*)()>(&GraphicRaycaster::get_blockingObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_blockingObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::set_blockingObjects
// Il2CppName: set_blockingObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::*)(UnityEngine::UI::GraphicRaycaster::BlockingObjects)>(&GraphicRaycaster::set_blockingObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "set_blockingObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::GraphicRaycaster::BlockingObjects>()});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::get_canvas
// Il2CppName: get_canvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Canvas* (GraphicRaycaster::*)()>(&GraphicRaycaster::get_canvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_canvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Canvas*, UnityEngine::Camera*, UnityEngine::Vector2, System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>*, System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>*)>(&GraphicRaycaster::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>*>()});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::get_sortOrderPriority
// Il2CppName: get_sortOrderPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GraphicRaycaster::*)()>(&GraphicRaycaster::get_sortOrderPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_sortOrderPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::get_renderOrderPriority
// Il2CppName: get_renderOrderPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GraphicRaycaster::*)()>(&GraphicRaycaster::get_renderOrderPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_renderOrderPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::*)()>(&GraphicRaycaster::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::*)()>(&GraphicRaycaster::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::*)(UnityEngine::EventSystems::PointerEventData*, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&GraphicRaycaster::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::get_eventCamera
// Il2CppName: get_eventCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (GraphicRaycaster::*)()>(&GraphicRaycaster::get_eventCamera)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), "get_eventCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GraphicRaycaster::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GraphicRaycaster/BlockingObjects
#include "UnityEngine/UI/GraphicRaycaster.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects None
UnityEngine::UI::GraphicRaycaster::BlockingObjects UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRaycaster::BlockingObjects>("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects None
void UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_None(UnityEngine::UI::GraphicRaycaster::BlockingObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects TwoD
UnityEngine::UI::GraphicRaycaster::BlockingObjects UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_TwoD() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_TwoD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRaycaster::BlockingObjects>("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "TwoD"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects TwoD
void UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_TwoD(UnityEngine::UI::GraphicRaycaster::BlockingObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_TwoD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "TwoD", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects ThreeD
UnityEngine::UI::GraphicRaycaster::BlockingObjects UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_ThreeD() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_ThreeD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRaycaster::BlockingObjects>("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "ThreeD"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects ThreeD
void UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_ThreeD(UnityEngine::UI::GraphicRaycaster::BlockingObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_ThreeD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "ThreeD", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects All
UnityEngine::UI::GraphicRaycaster::BlockingObjects UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRaycaster::BlockingObjects>("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GraphicRaycaster/BlockingObjects All
void UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_All(UnityEngine::UI::GraphicRaycaster::BlockingObjects value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::BlockingObjects::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/BlockingObjects", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GraphicRaycaster/<>c
#include "UnityEngine/UI/GraphicRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UI.GraphicRaycaster/<>c <>9
UnityEngine::UI::GraphicRaycaster::$$c* UnityEngine::UI::GraphicRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRaycaster::$$c*>("UnityEngine.UI", "GraphicRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UI.GraphicRaycaster/<>c <>9
void UnityEngine::UI::GraphicRaycaster::$$c::_set_$$9(UnityEngine::UI::GraphicRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.UI.Graphic> <>9__24_0
System::Comparison_1<UnityEngine::UI::Graphic*>* UnityEngine::UI::GraphicRaycaster::$$c::_get_$$9__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::_get_$$9__24_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::UI::Graphic*>*>("UnityEngine.UI", "GraphicRaycaster/<>c", "<>9__24_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.UI.Graphic> <>9__24_0
void UnityEngine::UI::GraphicRaycaster::$$c::_set_$$9__24_0(System::Comparison_1<UnityEngine::UI::Graphic*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::_set_$$9__24_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRaycaster/<>c", "<>9__24_0", value)));
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster/<>c..cctor
void UnityEngine::UI::GraphicRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRaycaster/<>c.<Raycast>b__24_0
int UnityEngine::UI::GraphicRaycaster::$$c::$Raycast$b__24_0(UnityEngine::UI::Graphic* g1, UnityEngine::UI::Graphic* g2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRaycaster::$$c::<Raycast>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g1), ::il2cpp_utils::ExtractType(g2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, g1, g2);
}
// Writing MetadataGetter for method: GraphicRaycaster::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GraphicRaycaster::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::$$c::$Raycast$b__24_0
// Il2CppName: <Raycast>b__24_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GraphicRaycaster::$$c::*)(UnityEngine::UI::Graphic*, UnityEngine::UI::Graphic*)>(&GraphicRaycaster::$$c::$Raycast$b__24_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster::$$c*), "<Raycast>b__24_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
  }
};
// Writing MetadataGetter for method: GraphicRaycaster::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::$$c::*)()>(&GraphicRaycaster::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRaycaster::$$c::*)()>(&GraphicRaycaster::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRaycaster::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GraphicRegistry
#include "UnityEngine/UI/GraphicRegistry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.UI.Collections.IndexedSet`1
#include "UnityEngine/UI/Collections/IndexedSet_1.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.GraphicRegistry s_Instance
UnityEngine::UI::GraphicRegistry* UnityEngine::UI::GraphicRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GraphicRegistry*>("UnityEngine.UI", "GraphicRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.GraphicRegistry s_Instance
void UnityEngine::UI::GraphicRegistry::_set_s_Instance(UnityEngine::UI::GraphicRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRegistry", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UI.Graphic> s_EmptyList
System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>* UnityEngine::UI::GraphicRegistry::_get_s_EmptyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::_get_s_EmptyList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>*>("UnityEngine.UI", "GraphicRegistry", "s_EmptyList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UI.Graphic> s_EmptyList
void UnityEngine::UI::GraphicRegistry::_set_s_EmptyList(System::Collections::Generic::List_1<UnityEngine::UI::Graphic*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::_set_s_EmptyList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GraphicRegistry", "s_EmptyList", value));
}
// Autogenerated method: UnityEngine.UI.GraphicRegistry.get_instance
UnityEngine::UI::GraphicRegistry* UnityEngine::UI::GraphicRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::GraphicRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GraphicRegistry.RegisterGraphicForCanvas
void UnityEngine::UI::GraphicRegistry::RegisterGraphicForCanvas(UnityEngine::Canvas* c, UnityEngine::UI::Graphic* graphic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::RegisterGraphicForCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRegistry", "RegisterGraphicForCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(graphic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, graphic);
}
// Autogenerated method: UnityEngine.UI.GraphicRegistry.UnregisterGraphicForCanvas
void UnityEngine::UI::GraphicRegistry::UnregisterGraphicForCanvas(UnityEngine::Canvas* c, UnityEngine::UI::Graphic* graphic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::UnregisterGraphicForCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRegistry", "UnregisterGraphicForCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(graphic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c, graphic);
}
// Autogenerated method: UnityEngine.UI.GraphicRegistry.GetGraphicsForCanvas
System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>* UnityEngine::UI::GraphicRegistry::GetGraphicsForCanvas(UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::GetGraphicsForCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRegistry", "GetGraphicsForCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, canvas);
}
// Autogenerated method: UnityEngine.UI.GraphicRegistry..cctor
void UnityEngine::UI::GraphicRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GraphicRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "GraphicRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: GraphicRegistry::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::GraphicRegistry* (*)()>(&GraphicRegistry::get_instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRegistry::RegisterGraphicForCanvas
// Il2CppName: RegisterGraphicForCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Canvas*, UnityEngine::UI::Graphic*)>(&GraphicRegistry::RegisterGraphicForCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), "RegisterGraphicForCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
  }
};
// Writing MetadataGetter for method: GraphicRegistry::UnregisterGraphicForCanvas
// Il2CppName: UnregisterGraphicForCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Canvas*, UnityEngine::UI::Graphic*)>(&GraphicRegistry::UnregisterGraphicForCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), "UnregisterGraphicForCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
  }
};
// Writing MetadataGetter for method: GraphicRegistry::GetGraphicsForCanvas
// Il2CppName: GetGraphicsForCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<UnityEngine::UI::Graphic*>* (*)(UnityEngine::Canvas*)>(&GraphicRegistry::GetGraphicsForCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), "GetGraphicsForCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>()});
  }
};
// Writing MetadataGetter for method: GraphicRegistry::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GraphicRegistry::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GraphicRegistry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRegistry::*)()>(&GraphicRegistry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GraphicRegistry::*)()>(&GraphicRegistry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GraphicRegistry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IGraphicEnabledDisabled
#include "UnityEngine/UI/IGraphicEnabledDisabled.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IGraphicEnabledDisabled.OnSiblingGraphicEnabledDisabled
void UnityEngine::UI::IGraphicEnabledDisabled::OnSiblingGraphicEnabledDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IGraphicEnabledDisabled::OnSiblingGraphicEnabledDisabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSiblingGraphicEnabledDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IGraphicEnabledDisabled::OnSiblingGraphicEnabledDisabled
// Il2CppName: OnSiblingGraphicEnabledDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IGraphicEnabledDisabled::*)()>(&IGraphicEnabledDisabled::OnSiblingGraphicEnabledDisabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IGraphicEnabledDisabled*), "OnSiblingGraphicEnabledDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMask
#include "UnityEngine/UI/IMask.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMask.Enabled
bool UnityEngine::UI::IMask::Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMask::Enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IMask.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::IMask::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMask::get_rectTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IMask::Enabled
// Il2CppName: Enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IMask::*)()>(&IMask::Enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMask*), "Enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMask::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (IMask::*)()>(&IMask::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMask*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMaskable
#include "UnityEngine/UI/IMaskable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMaskable.RecalculateMasking
void UnityEngine::UI::IMaskable::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMaskable::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IMaskable::RecalculateMasking
// Il2CppName: RecalculateMasking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMaskable::*)()>(&IMaskable::RecalculateMasking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMaskable*), "RecalculateMasking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Image/OriginHorizontal
#include "UnityEngine/UI/Image_OriginHorizontal.hpp"
// Including type: UnityEngine.UI.Image/OriginVertical
#include "UnityEngine/UI/Image_OriginVertical.hpp"
// Including type: UnityEngine.UI.Image/Origin90
#include "UnityEngine/UI/Image_Origin90.hpp"
// Including type: UnityEngine.UI.Image/Origin180
#include "UnityEngine/UI/Image_Origin180.hpp"
// Including type: UnityEngine.UI.Image/Origin360
#include "UnityEngine/UI/Image_Origin360.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Material s_ETC1DefaultUI
UnityEngine::Material* UnityEngine::UI::Image::_get_s_ETC1DefaultUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_ETC1DefaultUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("UnityEngine.UI", "Image", "s_ETC1DefaultUI"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Material s_ETC1DefaultUI
void UnityEngine::UI::Image::_set_s_ETC1DefaultUI(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_ETC1DefaultUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_ETC1DefaultUI", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::Array<UnityEngine::Vector2>* UnityEngine::UI::Image::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("UnityEngine.UI", "Image", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void UnityEngine::UI::Image::_set_s_VertScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_VertScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::Array<UnityEngine::Vector2>* UnityEngine::UI::Image::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector2>*>("UnityEngine.UI", "Image", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void UnityEngine::UI::Image::_set_s_UVScratch(::Array<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_UVScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::Array<UnityEngine::Vector3>* UnityEngine::UI::Image::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("UnityEngine.UI", "Image", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void UnityEngine::UI::Image::_set_s_Xy(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_Xy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::Array<UnityEngine::Vector3>* UnityEngine::UI::Image::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("UnityEngine.UI", "Image", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void UnityEngine::UI::Image::_set_s_Uv(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_Uv", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_TrackedTexturelessImages
System::Collections::Generic::List_1<UnityEngine::UI::Image*>* UnityEngine::UI::Image::_get_m_TrackedTexturelessImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_m_TrackedTexturelessImages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::UI::Image*>*>("UnityEngine.UI", "Image", "m_TrackedTexturelessImages"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_TrackedTexturelessImages
void UnityEngine::UI::Image::_set_m_TrackedTexturelessImages(System::Collections::Generic::List_1<UnityEngine::UI::Image*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_m_TrackedTexturelessImages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "m_TrackedTexturelessImages", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_Initialized
bool UnityEngine::UI::Image::_get_s_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_get_s_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.UI", "Image", "s_Initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_Initialized
void UnityEngine::UI::Image::_set_s_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::_set_s_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image", "s_Initialized", value));
}
// Autogenerated method: UnityEngine.UI.Image.get_sprite
UnityEngine::Sprite* UnityEngine::UI::Image::get_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_sprite
void UnityEngine::UI::Image::set_sprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.DisableSpriteOptimizations
void UnityEngine::UI::Image::DisableSpriteOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::DisableSpriteOptimizations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableSpriteOptimizations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_overrideSprite
UnityEngine::Sprite* UnityEngine::UI::Image::get_overrideSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_overrideSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_overrideSprite
void UnityEngine::UI::Image::set_overrideSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_overrideSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_activeSprite
UnityEngine::Sprite* UnityEngine::UI::Image::get_activeSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_activeSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_type
UnityEngine::UI::Image::Type UnityEngine::UI::Image::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image::Type, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_type
void UnityEngine::UI::Image::set_type(UnityEngine::UI::Image::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_preserveAspect
bool UnityEngine::UI::Image::get_preserveAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_preserveAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preserveAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_preserveAspect
void UnityEngine::UI::Image::set_preserveAspect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_preserveAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preserveAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_fillCenter
bool UnityEngine::UI::Image::get_fillCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_fillCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_fillCenter
void UnityEngine::UI::Image::set_fillCenter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_fillCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_fillMethod
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::get_fillMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_fillMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image::FillMethod, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_fillMethod
void UnityEngine::UI::Image::set_fillMethod(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_fillMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_fillAmount
float UnityEngine::UI::Image::get_fillAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_fillAmount
void UnityEngine::UI::Image::set_fillAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_fillClockwise
bool UnityEngine::UI::Image::get_fillClockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_fillClockwise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillClockwise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_fillClockwise
void UnityEngine::UI::Image::set_fillClockwise(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_fillClockwise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillClockwise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_fillOrigin
int UnityEngine::UI::Image::get_fillOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_fillOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_fillOrigin
void UnityEngine::UI::Image::set_fillOrigin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_fillOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_eventAlphaThreshold
float UnityEngine::UI::Image::get_eventAlphaThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_eventAlphaThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventAlphaThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_eventAlphaThreshold
void UnityEngine::UI::Image::set_eventAlphaThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_eventAlphaThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventAlphaThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_alphaHitTestMinimumThreshold
float UnityEngine::UI::Image::get_alphaHitTestMinimumThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_alphaHitTestMinimumThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphaHitTestMinimumThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_alphaHitTestMinimumThreshold
void UnityEngine::UI::Image::set_alphaHitTestMinimumThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_alphaHitTestMinimumThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alphaHitTestMinimumThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_useSpriteMesh
bool UnityEngine::UI::Image::get_useSpriteMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_useSpriteMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useSpriteMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_useSpriteMesh
void UnityEngine::UI::Image::set_useSpriteMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_useSpriteMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useSpriteMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_defaultETC1GraphicMaterial
UnityEngine::Material* UnityEngine::UI::Image::get_defaultETC1GraphicMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_defaultETC1GraphicMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "get_defaultETC1GraphicMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_hasBorder
bool UnityEngine::UI::Image::get_hasBorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_hasBorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_pixelsPerUnitMultiplier
float UnityEngine::UI::Image::get_pixelsPerUnitMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_pixelsPerUnitMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnitMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_pixelsPerUnitMultiplier
void UnityEngine::UI::Image::set_pixelsPerUnitMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_pixelsPerUnitMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelsPerUnitMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.get_pixelsPerUnit
float UnityEngine::UI::Image::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_multipliedPixelsPerUnit
float UnityEngine::UI::Image::get_multipliedPixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_multipliedPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipliedPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnBeforeSerialize
void UnityEngine::UI::Image::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnAfterDeserialize
void UnityEngine::UI::Image::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.PreserveSpriteAspectRatio
void UnityEngine::UI::Image::PreserveSpriteAspectRatio(UnityEngine::Rect& rect, UnityEngine::Vector2 spriteSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::PreserveSpriteAspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreserveSpriteAspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(spriteSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, spriteSize);
}
// Autogenerated method: UnityEngine.UI.Image.GetDrawingDimensions
UnityEngine::Vector4 UnityEngine::UI::Image::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldPreserveAspect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, shouldPreserveAspect);
}
// Autogenerated method: UnityEngine.UI.Image.TrackSprite
void UnityEngine::UI::Image::TrackSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::TrackSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.GenerateSimpleSprite
void UnityEngine::UI::Image::GenerateSimpleSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh, lPreserveAspect);
}
// Autogenerated method: UnityEngine.UI.Image.GenerateSprite
void UnityEngine::UI::Image::GenerateSprite(UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GenerateSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh, lPreserveAspect);
}
// Autogenerated method: UnityEngine.UI.Image.GenerateSlicedSprite
void UnityEngine::UI::Image::GenerateSlicedSprite(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.Image.GenerateTiledSprite
void UnityEngine::UI::Image::GenerateTiledSprite(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.Image.AddQuad
void UnityEngine::UI::Image::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, ::Array<UnityEngine::Vector3>* quadPositions, UnityEngine::Color32 color, ::Array<UnityEngine::Vector3>* quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(quadPositions), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(quadUVs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: UnityEngine.UI.Image.AddQuad
void UnityEngine::UI::Image::AddQuad(UnityEngine::UI::VertexHelper* vertexHelper, UnityEngine::Vector2 posMin, UnityEngine::Vector2 posMax, UnityEngine::Color32 color, UnityEngine::Vector2 uvMin, UnityEngine::Vector2 uvMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax);
}
// Autogenerated method: UnityEngine.UI.Image.GetAdjustedBorders
UnityEngine::Vector4 UnityEngine::UI::Image::GetAdjustedBorders(UnityEngine::Vector4 border, UnityEngine::Rect adjustedRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(adjustedRect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method, border, adjustedRect);
}
// Autogenerated method: UnityEngine.UI.Image.GenerateFilledSprite
void UnityEngine::UI::Image::GenerateFilledSprite(UnityEngine::UI::VertexHelper* toFill, bool preserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(preserveAspect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill, preserveAspect);
}
// Autogenerated method: UnityEngine.UI.Image.RadialCut
bool UnityEngine::UI::Image::RadialCut(::Array<UnityEngine::Vector3>* xy, ::Array<UnityEngine::Vector3>* uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: UnityEngine.UI.Image.RadialCut
void UnityEngine::UI::Image::RadialCut(::Array<UnityEngine::Vector3>* xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(cos), ::il2cpp_utils::ExtractType(sin), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: UnityEngine.UI.Image.CalculateLayoutInputHorizontal
void UnityEngine::UI::Image::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.CalculateLayoutInputVertical
void UnityEngine::UI::Image::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_minWidth
float UnityEngine::UI::Image::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_preferredWidth
float UnityEngine::UI::Image::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_flexibleWidth
float UnityEngine::UI::Image::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_minHeight
float UnityEngine::UI::Image::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_preferredHeight
float UnityEngine::UI::Image::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_flexibleHeight
float UnityEngine::UI::Image::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_layoutPriority
int UnityEngine::UI::Image::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.IsRaycastLocationValid
bool UnityEngine::UI::Image::IsRaycastLocationValid(UnityEngine::Vector2 screenPoint, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, screenPoint, eventCamera);
}
// Autogenerated method: UnityEngine.UI.Image.MapCoordinate
UnityEngine::Vector2 UnityEngine::UI::Image::MapCoordinate(UnityEngine::Vector2 local, UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::MapCoordinate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapCoordinate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(local), ::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, local, rect);
}
// Autogenerated method: UnityEngine.UI.Image.RebuildImage
void UnityEngine::UI::Image::RebuildImage(UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::RebuildImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "RebuildImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated method: UnityEngine.UI.Image.TrackImage
void UnityEngine::UI::Image::TrackImage(UnityEngine::UI::Image* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::TrackImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "TrackImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, g);
}
// Autogenerated method: UnityEngine.UI.Image.UnTrackImage
void UnityEngine::UI::Image::UnTrackImage(UnityEngine::UI::Image* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::UnTrackImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", "UnTrackImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, g);
}
// Autogenerated method: UnityEngine.UI.Image.get_mainTexture
UnityEngine::Texture* UnityEngine::UI::Image::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.get_material
UnityEngine::Material* UnityEngine::UI::Image::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.set_material
void UnityEngine::UI::Image::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Image.SetNativeSize
void UnityEngine::UI::Image::SetNativeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::SetNativeSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNativeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnPopulateMesh
void UnityEngine::UI::Image::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.Image.OnEnable
void UnityEngine::UI::Image::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnDisable
void UnityEngine::UI::Image::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.UpdateMaterial
void UnityEngine::UI::Image::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnCanvasHierarchyChanged
void UnityEngine::UI::Image::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image.OnDidApplyAnimationProperties
void UnityEngine::UI::Image::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Image..cctor
void UnityEngine::UI::Image::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Image", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Image::get_sprite
// Il2CppName: get_sprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (Image::*)()>(&Image::get_sprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_sprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_sprite
// Il2CppName: set_sprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::Sprite*)>(&Image::set_sprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_sprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Image::DisableSpriteOptimizations
// Il2CppName: DisableSpriteOptimizations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::DisableSpriteOptimizations)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "DisableSpriteOptimizations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_overrideSprite
// Il2CppName: get_overrideSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (Image::*)()>(&Image::get_overrideSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_overrideSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_overrideSprite
// Il2CppName: set_overrideSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::Sprite*)>(&Image::set_overrideSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_overrideSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Image::get_activeSprite
// Il2CppName: get_activeSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (Image::*)()>(&Image::get_activeSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_activeSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image::Type (Image::*)()>(&Image::get_type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_type
// Il2CppName: set_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::Image::Type)>(&Image::set_type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image::Type>()});
  }
};
// Writing MetadataGetter for method: Image::get_preserveAspect
// Il2CppName: get_preserveAspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)()>(&Image::get_preserveAspect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_preserveAspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_preserveAspect
// Il2CppName: set_preserveAspect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(bool)>(&Image::set_preserveAspect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_preserveAspect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::get_fillCenter
// Il2CppName: get_fillCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)()>(&Image::get_fillCenter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_fillCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_fillCenter
// Il2CppName: set_fillCenter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(bool)>(&Image::set_fillCenter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_fillCenter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::get_fillMethod
// Il2CppName: get_fillMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image::FillMethod (Image::*)()>(&Image::get_fillMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_fillMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_fillMethod
// Il2CppName: set_fillMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::Image::FillMethod)>(&Image::set_fillMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_fillMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image::FillMethod>()});
  }
};
// Writing MetadataGetter for method: Image::get_fillAmount
// Il2CppName: get_fillAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_fillAmount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_fillAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_fillAmount
// Il2CppName: set_fillAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(float)>(&Image::set_fillAmount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_fillAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Image::get_fillClockwise
// Il2CppName: get_fillClockwise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)()>(&Image::get_fillClockwise)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_fillClockwise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_fillClockwise
// Il2CppName: set_fillClockwise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(bool)>(&Image::set_fillClockwise)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_fillClockwise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::get_fillOrigin
// Il2CppName: get_fillOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Image::*)()>(&Image::get_fillOrigin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_fillOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_fillOrigin
// Il2CppName: set_fillOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(int)>(&Image::set_fillOrigin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_fillOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Image::get_eventAlphaThreshold
// Il2CppName: get_eventAlphaThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_eventAlphaThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_eventAlphaThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_eventAlphaThreshold
// Il2CppName: set_eventAlphaThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(float)>(&Image::set_eventAlphaThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_eventAlphaThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Image::get_alphaHitTestMinimumThreshold
// Il2CppName: get_alphaHitTestMinimumThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_alphaHitTestMinimumThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_alphaHitTestMinimumThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_alphaHitTestMinimumThreshold
// Il2CppName: set_alphaHitTestMinimumThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(float)>(&Image::set_alphaHitTestMinimumThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_alphaHitTestMinimumThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Image::get_useSpriteMesh
// Il2CppName: get_useSpriteMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)()>(&Image::get_useSpriteMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_useSpriteMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_useSpriteMesh
// Il2CppName: set_useSpriteMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(bool)>(&Image::set_useSpriteMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_useSpriteMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::get_defaultETC1GraphicMaterial
// Il2CppName: get_defaultETC1GraphicMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)()>(&Image::get_defaultETC1GraphicMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_defaultETC1GraphicMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_hasBorder
// Il2CppName: get_hasBorder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)()>(&Image::get_hasBorder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_hasBorder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_pixelsPerUnitMultiplier
// Il2CppName: get_pixelsPerUnitMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_pixelsPerUnitMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_pixelsPerUnitMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_pixelsPerUnitMultiplier
// Il2CppName: set_pixelsPerUnitMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(float)>(&Image::set_pixelsPerUnitMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_pixelsPerUnitMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Image::get_pixelsPerUnit
// Il2CppName: get_pixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_pixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_pixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_multipliedPixelsPerUnit
// Il2CppName: get_multipliedPixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_multipliedPixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_multipliedPixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnBeforeSerialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnAfterDeserialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::PreserveSpriteAspectRatio
// Il2CppName: PreserveSpriteAspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::Rect&, UnityEngine::Vector2)>(&Image::PreserveSpriteAspectRatio)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "PreserveSpriteAspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Image::GetDrawingDimensions
// Il2CppName: GetDrawingDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Image::*)(bool)>(&Image::GetDrawingDimensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GetDrawingDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::TrackSprite
// Il2CppName: TrackSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::TrackSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "TrackSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::GenerateSimpleSprite
// Il2CppName: GenerateSimpleSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*, bool)>(&Image::GenerateSimpleSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GenerateSimpleSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::GenerateSprite
// Il2CppName: GenerateSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*, bool)>(&Image::GenerateSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GenerateSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::GenerateSlicedSprite
// Il2CppName: GenerateSlicedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*)>(&Image::GenerateSlicedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GenerateSlicedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: Image::GenerateTiledSprite
// Il2CppName: GenerateTiledSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*)>(&Image::GenerateTiledSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GenerateTiledSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: Image::AddQuad
// Il2CppName: AddQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::VertexHelper*, ::Array<UnityEngine::Vector3>*, UnityEngine::Color32, ::Array<UnityEngine::Vector3>*)>(&Image::AddQuad)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "AddQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: Image::AddQuad
// Il2CppName: AddQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::VertexHelper*, UnityEngine::Vector2, UnityEngine::Vector2, UnityEngine::Color32, UnityEngine::Vector2, UnityEngine::Vector2)>(&Image::AddQuad)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "AddQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Image::GetAdjustedBorders
// Il2CppName: GetAdjustedBorders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Image::*)(UnityEngine::Vector4, UnityEngine::Rect)>(&Image::GetAdjustedBorders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GetAdjustedBorders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Image::GenerateFilledSprite
// Il2CppName: GenerateFilledSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*, bool)>(&Image::GenerateFilledSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "GenerateFilledSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Image::RadialCut
// Il2CppName: RadialCut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<UnityEngine::Vector3>*, ::Array<UnityEngine::Vector3>*, float, bool, int)>(&Image::RadialCut)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "RadialCut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Image::RadialCut
// Il2CppName: RadialCut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<UnityEngine::Vector3>*, float, float, bool, int)>(&Image::RadialCut)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "RadialCut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Image::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Image::*)()>(&Image::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Image::*)()>(&Image::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::IsRaycastLocationValid
// Il2CppName: IsRaycastLocationValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Image::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&Image::IsRaycastLocationValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "IsRaycastLocationValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Image::MapCoordinate
// Il2CppName: MapCoordinate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Image::*)(UnityEngine::Vector2, UnityEngine::Rect)>(&Image::MapCoordinate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "MapCoordinate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: Image::RebuildImage
// Il2CppName: RebuildImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::U2D::SpriteAtlas*)>(&Image::RebuildImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "RebuildImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::U2D::SpriteAtlas*>()});
  }
};
// Writing MetadataGetter for method: Image::TrackImage
// Il2CppName: TrackImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Image*)>(&Image::TrackImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "TrackImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Image::UnTrackImage
// Il2CppName: UnTrackImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::Image*)>(&Image::UnTrackImage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "UnTrackImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Image::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Image::*)()>(&Image::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Image::*)()>(&Image::get_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::set_material
// Il2CppName: set_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::Material*)>(&Image::set_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "set_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Image::SetNativeSize
// Il2CppName: SetNativeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::SetNativeSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "SetNativeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)(UnityEngine::UI::VertexHelper*)>(&Image::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: Image::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::UpdateMaterial
// Il2CppName: UpdateMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::UpdateMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "UpdateMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Image::*)()>(&Image::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Image::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Image::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Image*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/Type
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Type Simple
UnityEngine::UI::Image::Type UnityEngine::UI::Image::Type::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Type>("UnityEngine.UI", "Image/Type", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Type Simple
void UnityEngine::UI::Image::Type::_set_Simple(UnityEngine::UI::Image::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Type", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Type Sliced
UnityEngine::UI::Image::Type UnityEngine::UI::Image::Type::_get_Sliced() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_get_Sliced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Type>("UnityEngine.UI", "Image/Type", "Sliced"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Type Sliced
void UnityEngine::UI::Image::Type::_set_Sliced(UnityEngine::UI::Image::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_set_Sliced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Type", "Sliced", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Type Tiled
UnityEngine::UI::Image::Type UnityEngine::UI::Image::Type::_get_Tiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_get_Tiled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Type>("UnityEngine.UI", "Image/Type", "Tiled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Type Tiled
void UnityEngine::UI::Image::Type::_set_Tiled(UnityEngine::UI::Image::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_set_Tiled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Type", "Tiled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Type Filled
UnityEngine::UI::Image::Type UnityEngine::UI::Image::Type::_get_Filled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_get_Filled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Type>("UnityEngine.UI", "Image/Type", "Filled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Type Filled
void UnityEngine::UI::Image::Type::_set_Filled(UnityEngine::UI::Image::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Type::_set_Filled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Type", "Filled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/FillMethod
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/FillMethod Horizontal
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::FillMethod::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::FillMethod>("UnityEngine.UI", "Image/FillMethod", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/FillMethod Horizontal
void UnityEngine::UI::Image::FillMethod::_set_Horizontal(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/FillMethod", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/FillMethod Vertical
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::FillMethod::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::FillMethod>("UnityEngine.UI", "Image/FillMethod", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/FillMethod Vertical
void UnityEngine::UI::Image::FillMethod::_set_Vertical(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/FillMethod", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/FillMethod Radial90
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::FillMethod::_get_Radial90() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_get_Radial90");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::FillMethod>("UnityEngine.UI", "Image/FillMethod", "Radial90"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/FillMethod Radial90
void UnityEngine::UI::Image::FillMethod::_set_Radial90(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_set_Radial90");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/FillMethod", "Radial90", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/FillMethod Radial180
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::FillMethod::_get_Radial180() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_get_Radial180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::FillMethod>("UnityEngine.UI", "Image/FillMethod", "Radial180"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/FillMethod Radial180
void UnityEngine::UI::Image::FillMethod::_set_Radial180(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_set_Radial180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/FillMethod", "Radial180", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/FillMethod Radial360
UnityEngine::UI::Image::FillMethod UnityEngine::UI::Image::FillMethod::_get_Radial360() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_get_Radial360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::FillMethod>("UnityEngine.UI", "Image/FillMethod", "Radial360"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/FillMethod Radial360
void UnityEngine::UI::Image::FillMethod::_set_Radial360(UnityEngine::UI::Image::FillMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::FillMethod::_set_Radial360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/FillMethod", "Radial360", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/OriginHorizontal
#include "UnityEngine/UI/Image_OriginHorizontal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/OriginHorizontal Left
UnityEngine::UI::Image::OriginHorizontal UnityEngine::UI::Image::OriginHorizontal::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginHorizontal::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::OriginHorizontal>("UnityEngine.UI", "Image/OriginHorizontal", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/OriginHorizontal Left
void UnityEngine::UI::Image::OriginHorizontal::_set_Left(UnityEngine::UI::Image::OriginHorizontal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginHorizontal::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/OriginHorizontal", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/OriginHorizontal Right
UnityEngine::UI::Image::OriginHorizontal UnityEngine::UI::Image::OriginHorizontal::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginHorizontal::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::OriginHorizontal>("UnityEngine.UI", "Image/OriginHorizontal", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/OriginHorizontal Right
void UnityEngine::UI::Image::OriginHorizontal::_set_Right(UnityEngine::UI::Image::OriginHorizontal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginHorizontal::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/OriginHorizontal", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/OriginVertical
#include "UnityEngine/UI/Image_OriginVertical.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/OriginVertical Bottom
UnityEngine::UI::Image::OriginVertical UnityEngine::UI::Image::OriginVertical::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginVertical::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::OriginVertical>("UnityEngine.UI", "Image/OriginVertical", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/OriginVertical Bottom
void UnityEngine::UI::Image::OriginVertical::_set_Bottom(UnityEngine::UI::Image::OriginVertical value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginVertical::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/OriginVertical", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/OriginVertical Top
UnityEngine::UI::Image::OriginVertical UnityEngine::UI::Image::OriginVertical::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginVertical::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::OriginVertical>("UnityEngine.UI", "Image/OriginVertical", "Top"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/OriginVertical Top
void UnityEngine::UI::Image::OriginVertical::_set_Top(UnityEngine::UI::Image::OriginVertical value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::OriginVertical::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/OriginVertical", "Top", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/Origin90
#include "UnityEngine/UI/Image_Origin90.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin90 BottomLeft
UnityEngine::UI::Image::Origin90 UnityEngine::UI::Image::Origin90::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin90>("UnityEngine.UI", "Image/Origin90", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin90 BottomLeft
void UnityEngine::UI::Image::Origin90::_set_BottomLeft(UnityEngine::UI::Image::Origin90 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin90", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin90 TopLeft
UnityEngine::UI::Image::Origin90 UnityEngine::UI::Image::Origin90::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin90>("UnityEngine.UI", "Image/Origin90", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin90 TopLeft
void UnityEngine::UI::Image::Origin90::_set_TopLeft(UnityEngine::UI::Image::Origin90 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin90", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin90 TopRight
UnityEngine::UI::Image::Origin90 UnityEngine::UI::Image::Origin90::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin90>("UnityEngine.UI", "Image/Origin90", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin90 TopRight
void UnityEngine::UI::Image::Origin90::_set_TopRight(UnityEngine::UI::Image::Origin90 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin90", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin90 BottomRight
UnityEngine::UI::Image::Origin90 UnityEngine::UI::Image::Origin90::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin90>("UnityEngine.UI", "Image/Origin90", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin90 BottomRight
void UnityEngine::UI::Image::Origin90::_set_BottomRight(UnityEngine::UI::Image::Origin90 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin90::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin90", "BottomRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/Origin180
#include "UnityEngine/UI/Image_Origin180.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin180 Bottom
UnityEngine::UI::Image::Origin180 UnityEngine::UI::Image::Origin180::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin180>("UnityEngine.UI", "Image/Origin180", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin180 Bottom
void UnityEngine::UI::Image::Origin180::_set_Bottom(UnityEngine::UI::Image::Origin180 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin180", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin180 Left
UnityEngine::UI::Image::Origin180 UnityEngine::UI::Image::Origin180::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin180>("UnityEngine.UI", "Image/Origin180", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin180 Left
void UnityEngine::UI::Image::Origin180::_set_Left(UnityEngine::UI::Image::Origin180 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin180", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin180 Top
UnityEngine::UI::Image::Origin180 UnityEngine::UI::Image::Origin180::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin180>("UnityEngine.UI", "Image/Origin180", "Top"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin180 Top
void UnityEngine::UI::Image::Origin180::_set_Top(UnityEngine::UI::Image::Origin180 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin180", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin180 Right
UnityEngine::UI::Image::Origin180 UnityEngine::UI::Image::Origin180::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin180>("UnityEngine.UI", "Image/Origin180", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin180 Right
void UnityEngine::UI::Image::Origin180::_set_Right(UnityEngine::UI::Image::Origin180 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin180::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin180", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Image/Origin360
#include "UnityEngine/UI/Image_Origin360.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin360 Bottom
UnityEngine::UI::Image::Origin360 UnityEngine::UI::Image::Origin360::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin360>("UnityEngine.UI", "Image/Origin360", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin360 Bottom
void UnityEngine::UI::Image::Origin360::_set_Bottom(UnityEngine::UI::Image::Origin360 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin360", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin360 Right
UnityEngine::UI::Image::Origin360 UnityEngine::UI::Image::Origin360::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin360>("UnityEngine.UI", "Image/Origin360", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin360 Right
void UnityEngine::UI::Image::Origin360::_set_Right(UnityEngine::UI::Image::Origin360 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin360", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin360 Top
UnityEngine::UI::Image::Origin360 UnityEngine::UI::Image::Origin360::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin360>("UnityEngine.UI", "Image/Origin360", "Top"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin360 Top
void UnityEngine::UI::Image::Origin360::_set_Top(UnityEngine::UI::Image::Origin360 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin360", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Image/Origin360 Left
UnityEngine::UI::Image::Origin360 UnityEngine::UI::Image::Origin360::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Image::Origin360>("UnityEngine.UI", "Image/Origin360", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Image/Origin360 Left
void UnityEngine::UI::Image::Origin360::_set_Left(UnityEngine::UI::Image::Origin360 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Image::Origin360::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Image/Origin360", "Left", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField
#include "UnityEngine/UI/InputField.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.TextGenerator
#include "UnityEngine/TextGenerator.hpp"
// Including type: UnityEngine.UI.InputField/OnValidateInput
#include "UnityEngine/UI/InputField_OnValidateInput.hpp"
// Including type: UnityEngine.UI.InputField/SubmitEvent
#include "UnityEngine/UI/InputField_SubmitEvent.hpp"
// Including type: UnityEngine.UI.InputField/OnChangeEvent
#include "UnityEngine/UI/InputField_OnChangeEvent.hpp"
// Including type: UnityEngine.UI.InputField/EditState
#include "UnityEngine/UI/InputField_EditState.hpp"
// Including type: UnityEngine.UI.InputField/<CaretBlink>d__159
#include "UnityEngine/UI/InputField_-CaretBlink-d__159.hpp"
// Including type: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179
#include "UnityEngine/UI/InputField_-MouseDragOutsideRect-d__179.hpp"
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.Selectable/SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] kSeparators
::Array<::Il2CppChar>* UnityEngine::UI::InputField::_get_kSeparators() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_get_kSeparators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("UnityEngine.UI", "InputField", "kSeparators"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] kSeparators
void UnityEngine::UI::InputField::_set_kSeparators(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_set_kSeparators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField", "kSeparators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHScrollSpeed
float UnityEngine::UI::InputField::_get_kHScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_get_kHScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "InputField", "kHScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHScrollSpeed
void UnityEngine::UI::InputField::_set_kHScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_set_kHScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField", "kHScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVScrollSpeed
float UnityEngine::UI::InputField::_get_kVScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_get_kVScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "InputField", "kVScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVScrollSpeed
void UnityEngine::UI::InputField::_set_kVScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_set_kVScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField", "kVScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEmailSpecialCharacters
::Il2CppString* UnityEngine::UI::InputField::_get_kEmailSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_get_kEmailSpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.UI", "InputField", "kEmailSpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEmailSpecialCharacters
void UnityEngine::UI::InputField::_set_kEmailSpecialCharacters(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_set_kEmailSpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField", "kEmailSpecialCharacters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxTextLength
int UnityEngine::UI::InputField::_get_k_MaxTextLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_get_k_MaxTextLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UI", "InputField", "k_MaxTextLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxTextLength
void UnityEngine::UI::InputField::_set_k_MaxTextLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::_set_k_MaxTextLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField", "k_MaxTextLength", value));
}
// Autogenerated method: UnityEngine.UI.InputField.get_input
UnityEngine::EventSystems::BaseInput* UnityEngine::UI::InputField::get_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInput*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_compositionString
::Il2CppString* UnityEngine::UI::InputField::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_compositionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_mesh
UnityEngine::Mesh* UnityEngine::UI::InputField::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_cachedInputTextGenerator
UnityEngine::TextGenerator* UnityEngine::UI::InputField::get_cachedInputTextGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_cachedInputTextGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedInputTextGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_shouldHideMobileInput
void UnityEngine::UI::InputField::set_shouldHideMobileInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_shouldHideMobileInput
bool UnityEngine::UI::InputField::get_shouldHideMobileInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_shouldActivateOnSelect
bool UnityEngine::UI::InputField::get_shouldActivateOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_shouldActivateOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldActivateOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_text
::Il2CppString* UnityEngine::UI::InputField::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_text
void UnityEngine::UI::InputField::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.SetTextWithoutNotify
void UnityEngine::UI::InputField::SetTextWithoutNotify(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetTextWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.InputField.SetText
void UnityEngine::UI::InputField::SetText(::Il2CppString* value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: UnityEngine.UI.InputField.get_isFocused
bool UnityEngine::UI::InputField::get_isFocused() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_isFocused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFocused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretBlinkRate
float UnityEngine::UI::InputField::get_caretBlinkRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretBlinkRate
void UnityEngine::UI::InputField::set_caretBlinkRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretWidth
int UnityEngine::UI::InputField::get_caretWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretWidth
void UnityEngine::UI::InputField::set_caretWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_textComponent
UnityEngine::UI::Text* UnityEngine::UI::InputField::get_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_textComponent
void UnityEngine::UI::InputField::set_textComponent(UnityEngine::UI::Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_placeholder
UnityEngine::UI::Graphic* UnityEngine::UI::InputField::get_placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_placeholder
void UnityEngine::UI::InputField::set_placeholder(UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretColor
UnityEngine::Color UnityEngine::UI::InputField::get_caretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretColor
void UnityEngine::UI::InputField::set_caretColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_customCaretColor
bool UnityEngine::UI::InputField::get_customCaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_customCaretColor
void UnityEngine::UI::InputField::set_customCaretColor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_selectionColor
UnityEngine::Color UnityEngine::UI::InputField::get_selectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_selectionColor
void UnityEngine::UI::InputField::set_selectionColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_onEndEdit
UnityEngine::UI::InputField::SubmitEvent* UnityEngine::UI::InputField::get_onEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::SubmitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_onEndEdit
void UnityEngine::UI::InputField::set_onEndEdit(UnityEngine::UI::InputField::SubmitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_onValueChange
UnityEngine::UI::InputField::OnChangeEvent* UnityEngine::UI::InputField::get_onValueChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_onValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::OnChangeEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_onValueChange
void UnityEngine::UI::InputField::set_onValueChange(UnityEngine::UI::InputField::OnChangeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_onValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_onValueChanged
UnityEngine::UI::InputField::OnChangeEvent* UnityEngine::UI::InputField::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::OnChangeEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_onValueChanged
void UnityEngine::UI::InputField::set_onValueChanged(UnityEngine::UI::InputField::OnChangeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_onValidateInput
UnityEngine::UI::InputField::OnValidateInput* UnityEngine::UI::InputField::get_onValidateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::OnValidateInput*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_onValidateInput
void UnityEngine::UI::InputField::set_onValidateInput(UnityEngine::UI::InputField::OnValidateInput* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_characterLimit
int UnityEngine::UI::InputField::get_characterLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_characterLimit
void UnityEngine::UI::InputField::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_contentType
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::get_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::ContentType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_contentType
void UnityEngine::UI::InputField::set_contentType(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_lineType
UnityEngine::UI::InputField::LineType UnityEngine::UI::InputField::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::LineType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_lineType
void UnityEngine::UI::InputField::set_lineType(UnityEngine::UI::InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_inputType
UnityEngine::UI::InputField::InputType UnityEngine::UI::InputField::get_inputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::InputType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_inputType
void UnityEngine::UI::InputField::set_inputType(UnityEngine::UI::InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_touchScreenKeyboard
UnityEngine::TouchScreenKeyboard* UnityEngine::UI::InputField::get_touchScreenKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_touchScreenKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchScreenKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboard*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_keyboardType
UnityEngine::TouchScreenKeyboardType UnityEngine::UI::InputField::get_keyboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboardType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_keyboardType
void UnityEngine::UI::InputField::set_keyboardType(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_characterValidation
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::get_characterValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::CharacterValidation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_characterValidation
void UnityEngine::UI::InputField::set_characterValidation(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_readOnly
bool UnityEngine::UI::InputField::get_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_readOnly
void UnityEngine::UI::InputField::set_readOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_multiLine
bool UnityEngine::UI::InputField::get_multiLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_multiLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_asteriskChar
::Il2CppChar UnityEngine::UI::InputField::get_asteriskChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_asteriskChar
void UnityEngine::UI::InputField::set_asteriskChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_wasCanceled
bool UnityEngine::UI::InputField::get_wasCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_wasCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.ClampPos
void UnityEngine::UI::InputField::ClampPos(int& pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ClampPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretPositionInternal
int UnityEngine::UI::InputField::get_caretPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretPositionInternal
void UnityEngine::UI::InputField::set_caretPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretSelectPositionInternal
int UnityEngine::UI::InputField::get_caretSelectPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretSelectPositionInternal
void UnityEngine::UI::InputField::set_caretSelectPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_caretPosition
int UnityEngine::UI::InputField::get_caretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_caretPosition
void UnityEngine::UI::InputField::set_caretPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_selectionAnchorPosition
int UnityEngine::UI::InputField::get_selectionAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_selectionAnchorPosition
void UnityEngine::UI::InputField::set_selectionAnchorPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.get_selectionFocusPosition
int UnityEngine::UI::InputField::get_selectionFocusPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_selectionFocusPosition
void UnityEngine::UI::InputField::set_selectionFocusPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.CaretBlink
System::Collections::IEnumerator* UnityEngine::UI::InputField::CaretBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CaretBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaretBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SetCaretVisible
void UnityEngine::UI::InputField::SetCaretVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetCaretVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SetCaretActive
void UnityEngine::UI::InputField::SetCaretActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetCaretActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.UpdateCaretMaterial
void UnityEngine::UI::InputField::UpdateCaretMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UpdateCaretMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCaretMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnFocus
void UnityEngine::UI::InputField::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SelectAll
void UnityEngine::UI::InputField::SelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveTextEnd
void UnityEngine::UI::InputField::MoveTextEnd(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveTextEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveTextStart
void UnityEngine::UI::InputField::MoveTextStart(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveTextStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: UnityEngine.UI.InputField.get_clipboard
::Il2CppString* UnityEngine::UI::InputField::get_clipboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "InputField", "get_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.set_clipboard
void UnityEngine::UI::InputField::set_clipboard(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::set_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "InputField", "set_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.InputField.InPlaceEditing
bool UnityEngine::UI::InputField::InPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InPlaceEditing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InPlaceEditing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.UpdateCaretFromKeyboard
void UnityEngine::UI::InputField::UpdateCaretFromKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UpdateCaretFromKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCaretFromKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.LateUpdate
void UnityEngine::UI::InputField::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.ScreenToLocal
UnityEngine::Vector2 UnityEngine::UI::InputField::ScreenToLocal(UnityEngine::Vector2 screen) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ScreenToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screen)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, screen);
}
// Autogenerated method: UnityEngine.UI.InputField.GetUnclampedCharacterLineFromPosition
int UnityEngine::UI::InputField::GetUnclampedCharacterLineFromPosition(UnityEngine::Vector2 pos, UnityEngine::TextGenerator* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GetUnclampedCharacterLineFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnclampedCharacterLineFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(generator)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, pos, generator);
}
// Autogenerated method: UnityEngine.UI.InputField.GetCharacterIndexFromPosition
int UnityEngine::UI::InputField::GetCharacterIndexFromPosition(UnityEngine::Vector2 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GetCharacterIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: UnityEngine.UI.InputField.MayDrag
bool UnityEngine::UI::InputField::MayDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.OnBeginDrag
void UnityEngine::UI::InputField::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.OnDrag
void UnityEngine::UI::InputField::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.MouseDragOutsideRect
System::Collections::IEnumerator* UnityEngine::UI::InputField::MouseDragOutsideRect(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MouseDragOutsideRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseDragOutsideRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.OnEndDrag
void UnityEngine::UI::InputField::OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.KeyPressed
UnityEngine::UI::InputField::EditState UnityEngine::UI::InputField::KeyPressed(UnityEngine::Event* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::KeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::InputField::EditState, false>(this, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.UI.InputField.IsValidChar
bool UnityEngine::UI::InputField::IsValidChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::IsValidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.UI.InputField.ProcessEvent
void UnityEngine::UI::InputField::ProcessEvent(UnityEngine::Event* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ProcessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.InputField.OnUpdateSelected
void UnityEngine::UI::InputField::OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnUpdateSelected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.GetSelectedString
::Il2CppString* UnityEngine::UI::InputField::GetSelectedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GetSelectedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.FindtNextWordBegin
int UnityEngine::UI::InputField::FindtNextWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::FindtNextWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindtNextWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveRight
void UnityEngine::UI::InputField::MoveRight(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: UnityEngine.UI.InputField.FindtPrevWordBegin
int UnityEngine::UI::InputField::FindtPrevWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::FindtPrevWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindtPrevWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveLeft
void UnityEngine::UI::InputField::MoveLeft(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: UnityEngine.UI.InputField.DetermineCharacterLine
int UnityEngine::UI::InputField::DetermineCharacterLine(int charPos, UnityEngine::TextGenerator* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::DetermineCharacterLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetermineCharacterLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charPos), ::il2cpp_utils::ExtractType(generator)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, charPos, generator);
}
// Autogenerated method: UnityEngine.UI.InputField.LineUpCharacterPosition
int UnityEngine::UI::InputField::LineUpCharacterPosition(int originalPos, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineUpCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineUpCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, originalPos, goToFirstChar);
}
// Autogenerated method: UnityEngine.UI.InputField.LineDownCharacterPosition
int UnityEngine::UI::InputField::LineDownCharacterPosition(int originalPos, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineDownCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineDownCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToLastChar)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, originalPos, goToLastChar);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveDown
void UnityEngine::UI::InputField::MoveDown(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveDown
void UnityEngine::UI::InputField::MoveDown(bool shift, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToLastChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift, goToLastChar);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveUp
void UnityEngine::UI::InputField::MoveUp(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: UnityEngine.UI.InputField.MoveUp
void UnityEngine::UI::InputField::MoveUp(bool shift, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shift, goToFirstChar);
}
// Autogenerated method: UnityEngine.UI.InputField.Delete
void UnityEngine::UI::InputField::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.ForwardSpace
void UnityEngine::UI::InputField::ForwardSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ForwardSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForwardSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.Backspace
void UnityEngine::UI::InputField::Backspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Backspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.Insert
void UnityEngine::UI::InputField::Insert(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.UI.InputField.UpdateTouchKeyboardFromEditChanges
void UnityEngine::UI::InputField::UpdateTouchKeyboardFromEditChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UpdateTouchKeyboardFromEditChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SendOnValueChangedAndUpdateLabel
void UnityEngine::UI::InputField::SendOnValueChangedAndUpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SendOnValueChangedAndUpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SendOnValueChanged
void UnityEngine::UI::InputField::SendOnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SendOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SendOnSubmit
void UnityEngine::UI::InputField::SendOnSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SendOnSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.Append
void UnityEngine::UI::InputField::Append(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.InputField.Append
void UnityEngine::UI::InputField::Append(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.InputField.UpdateLabel
void UnityEngine::UI::InputField::UpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.IsSelectionVisible
bool UnityEngine::UI::InputField::IsSelectionVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::IsSelectionVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelectionVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.GetLineStartPosition
int UnityEngine::UI::InputField::GetLineStartPosition(UnityEngine::TextGenerator* gen, int line) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GetLineStartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "InputField", "GetLineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gen), ::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gen, line);
}
// Autogenerated method: UnityEngine.UI.InputField.GetLineEndPosition
int UnityEngine::UI::InputField::GetLineEndPosition(UnityEngine::TextGenerator* gen, int line) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GetLineEndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "InputField", "GetLineEndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gen), ::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gen, line);
}
// Autogenerated method: UnityEngine.UI.InputField.SetDrawRangeToContainCaretPosition
void UnityEngine::UI::InputField::SetDrawRangeToContainCaretPosition(int caretPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetDrawRangeToContainCaretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrawRangeToContainCaretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caretPos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, caretPos);
}
// Autogenerated method: UnityEngine.UI.InputField.ForceLabelUpdate
void UnityEngine::UI::InputField::ForceLabelUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ForceLabelUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceLabelUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.MarkGeometryAsDirty
void UnityEngine::UI::InputField::MarkGeometryAsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::MarkGeometryAsDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkGeometryAsDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.Rebuild
void UnityEngine::UI::InputField::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: UnityEngine.UI.InputField.LayoutComplete
void UnityEngine::UI::InputField::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.GraphicUpdateComplete
void UnityEngine::UI::InputField::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.UpdateGeometry
void UnityEngine::UI::InputField::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UpdateGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.AssignPositioningIfNeeded
void UnityEngine::UI::InputField::AssignPositioningIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::AssignPositioningIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignPositioningIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnFillVBO
void UnityEngine::UI::InputField::OnFillVBO(UnityEngine::Mesh* vbo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnFillVBO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFillVBO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vbo);
}
// Autogenerated method: UnityEngine.UI.InputField.GenerateCaret
void UnityEngine::UI::InputField::GenerateCaret(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GenerateCaret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateCaret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: UnityEngine.UI.InputField.CreateCursorVerts
void UnityEngine::UI::InputField::CreateCursorVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CreateCursorVerts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCursorVerts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.GenerateHighlight
void UnityEngine::UI::InputField::GenerateHighlight(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::GenerateHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: UnityEngine.UI.InputField.Validate
::Il2CppChar UnityEngine::UI::InputField::Validate(::Il2CppString* text, int pos, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, text, pos, ch);
}
// Autogenerated method: UnityEngine.UI.InputField.ActivateInputField
void UnityEngine::UI::InputField::ActivateInputField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ActivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.ActivateInputFieldInternal
void UnityEngine::UI::InputField::ActivateInputFieldInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ActivateInputFieldInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputFieldInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnPointerClick
void UnityEngine::UI::InputField::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.DeactivateInputField
void UnityEngine::UI::InputField::DeactivateInputField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::DeactivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnSubmit
void UnityEngine::UI::InputField::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.EnforceContentType
void UnityEngine::UI::InputField::EnforceContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EnforceContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnforceContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.EnforceTextHOverflow
void UnityEngine::UI::InputField::EnforceTextHOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EnforceTextHOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnforceTextHOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.SetToCustomIfContentTypeIsNot
void UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot(::Array<UnityEngine::UI::InputField::ContentType>* allowedContentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowedContentTypes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, allowedContentTypes);
}
// Creating initializer_list -> params proxy for: System.Void SetToCustomIfContentTypeIsNot(params UnityEngine.UI.InputField/ContentType[] allowedContentTypes)
void UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot(std::initializer_list<UnityEngine::UI::InputField::ContentType> allowedContentTypes) {
  UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot(::Array<UnityEngine::UI::InputField::ContentType>::New(allowedContentTypes));
}
// Autogenerated method: UnityEngine.UI.InputField.SetToCustom
void UnityEngine::UI::InputField::SetToCustom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::SetToCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.CalculateLayoutInputHorizontal
void UnityEngine::UI::InputField::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.CalculateLayoutInputVertical
void UnityEngine::UI::InputField::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_minWidth
float UnityEngine::UI::InputField::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_preferredWidth
float UnityEngine::UI::InputField::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_flexibleWidth
float UnityEngine::UI::InputField::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_minHeight
float UnityEngine::UI::InputField::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_preferredHeight
float UnityEngine::UI::InputField::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_flexibleHeight
float UnityEngine::UI::InputField::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_layoutPriority
int UnityEngine::UI::InputField::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::InputField::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.get_hasSelection
bool UnityEngine::UI::InputField::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::get_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnEnable
void UnityEngine::UI::InputField::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnDisable
void UnityEngine::UI::InputField::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField.OnPointerDown
void UnityEngine::UI::InputField::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.OnSelect
void UnityEngine::UI::InputField::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.OnDeselect
void UnityEngine::UI::InputField::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.InputField.DoStateTransition
void UnityEngine::UI::InputField::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated method: UnityEngine.UI.InputField..cctor
void UnityEngine::UI::InputField::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "InputField", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: InputField::get_input
// Il2CppName: get_input
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInput* (InputField::*)()>(&InputField::get_input)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_compositionString
// Il2CppName: get_compositionString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::get_compositionString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_compositionString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Mesh* (InputField::*)()>(&InputField::get_mesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_cachedInputTextGenerator
// Il2CppName: get_cachedInputTextGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (InputField::*)()>(&InputField::get_cachedInputTextGenerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_cachedInputTextGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_shouldHideMobileInput
// Il2CppName: set_shouldHideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_shouldHideMobileInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::get_shouldHideMobileInput
// Il2CppName: get_shouldHideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_shouldHideMobileInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_shouldActivateOnSelect
// Il2CppName: get_shouldActivateOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_shouldActivateOnSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_shouldActivateOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InputField::SetTextWithoutNotify
// Il2CppName: SetTextWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::SetTextWithoutNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetTextWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InputField::SetText
// Il2CppName: SetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*, bool)>(&InputField::SetText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::get_isFocused
// Il2CppName: get_isFocused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_isFocused)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_isFocused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_caretBlinkRate
// Il2CppName: get_caretBlinkRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_caretBlinkRate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretBlinkRate
// Il2CppName: set_caretBlinkRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(float)>(&InputField::set_caretBlinkRate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: InputField::get_caretWidth
// Il2CppName: get_caretWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretWidth
// Il2CppName: set_caretWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_textComponent
// Il2CppName: get_textComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Text* (InputField::*)()>(&InputField::get_textComponent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_textComponent
// Il2CppName: set_textComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Text*)>(&InputField::set_textComponent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Text*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_placeholder
// Il2CppName: get_placeholder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Graphic* (InputField::*)()>(&InputField::get_placeholder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_placeholder
// Il2CppName: set_placeholder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Graphic*)>(&InputField::set_placeholder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_caretColor
// Il2CppName: get_caretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (InputField::*)()>(&InputField::get_caretColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretColor
// Il2CppName: set_caretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Color)>(&InputField::set_caretColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: InputField::get_customCaretColor
// Il2CppName: get_customCaretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_customCaretColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_customCaretColor
// Il2CppName: set_customCaretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_customCaretColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::get_selectionColor
// Il2CppName: get_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (InputField::*)()>(&InputField::get_selectionColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_selectionColor
// Il2CppName: set_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Color)>(&InputField::set_selectionColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: InputField::get_onEndEdit
// Il2CppName: get_onEndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::SubmitEvent* (InputField::*)()>(&InputField::get_onEndEdit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_onEndEdit
// Il2CppName: set_onEndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::SubmitEvent*)>(&InputField::set_onEndEdit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::SubmitEvent*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_onValueChange
// Il2CppName: get_onValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnChangeEvent* (InputField::*)()>(&InputField::get_onValueChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_onValueChange
// Il2CppName: set_onValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnChangeEvent*)>(&InputField::set_onValueChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnChangeEvent*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnChangeEvent* (InputField::*)()>(&InputField::get_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnChangeEvent*)>(&InputField::set_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnChangeEvent*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_onValidateInput
// Il2CppName: get_onValidateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::OnValidateInput* (InputField::*)()>(&InputField::get_onValidateInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_onValidateInput
// Il2CppName: set_onValidateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::OnValidateInput*)>(&InputField::set_onValidateInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::OnValidateInput*>()});
  }
};
// Writing MetadataGetter for method: InputField::get_characterLimit
// Il2CppName: get_characterLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_characterLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_characterLimit
// Il2CppName: set_characterLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_characterLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_contentType
// Il2CppName: get_contentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::ContentType (InputField::*)()>(&InputField::get_contentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_contentType
// Il2CppName: set_contentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::ContentType)>(&InputField::set_contentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::ContentType>()});
  }
};
// Writing MetadataGetter for method: InputField::get_lineType
// Il2CppName: get_lineType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::LineType (InputField::*)()>(&InputField::get_lineType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_lineType
// Il2CppName: set_lineType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::LineType)>(&InputField::set_lineType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::LineType>()});
  }
};
// Writing MetadataGetter for method: InputField::get_inputType
// Il2CppName: get_inputType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::InputType (InputField::*)()>(&InputField::get_inputType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_inputType
// Il2CppName: set_inputType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::InputType)>(&InputField::set_inputType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::InputType>()});
  }
};
// Writing MetadataGetter for method: InputField::get_touchScreenKeyboard
// Il2CppName: get_touchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboard* (InputField::*)()>(&InputField::get_touchScreenKeyboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_touchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_keyboardType
// Il2CppName: get_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboardType (InputField::*)()>(&InputField::get_keyboardType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_keyboardType
// Il2CppName: set_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::TouchScreenKeyboardType)>(&InputField::set_keyboardType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>()});
  }
};
// Writing MetadataGetter for method: InputField::get_characterValidation
// Il2CppName: get_characterValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::CharacterValidation (InputField::*)()>(&InputField::get_characterValidation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_characterValidation
// Il2CppName: set_characterValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::InputField::CharacterValidation)>(&InputField::set_characterValidation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::InputField::CharacterValidation>()});
  }
};
// Writing MetadataGetter for method: InputField::get_readOnly
// Il2CppName: get_readOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_readOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_readOnly
// Il2CppName: set_readOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::set_readOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::get_multiLine
// Il2CppName: get_multiLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_multiLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_multiLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_asteriskChar
// Il2CppName: get_asteriskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::*)()>(&InputField::get_asteriskChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_asteriskChar
// Il2CppName: set_asteriskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::set_asteriskChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::get_wasCanceled
// Il2CppName: get_wasCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_wasCanceled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_wasCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::ClampPos
// Il2CppName: ClampPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int&)>(&InputField::ClampPos)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ClampPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: InputField::get_caretPositionInternal
// Il2CppName: get_caretPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretPositionInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretPositionInternal
// Il2CppName: set_caretPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretPositionInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_caretSelectPositionInternal
// Il2CppName: get_caretSelectPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretSelectPositionInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretSelectPositionInternal
// Il2CppName: set_caretSelectPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretSelectPositionInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_caretPosition
// Il2CppName: get_caretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_caretPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_caretPosition
// Il2CppName: set_caretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_caretPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_selectionAnchorPosition
// Il2CppName: get_selectionAnchorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_selectionAnchorPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_selectionAnchorPosition
// Il2CppName: set_selectionAnchorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_selectionAnchorPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::get_selectionFocusPosition
// Il2CppName: get_selectionFocusPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_selectionFocusPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_selectionFocusPosition
// Il2CppName: set_selectionFocusPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::set_selectionFocusPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::CaretBlink
// Il2CppName: CaretBlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (InputField::*)()>(&InputField::CaretBlink)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "CaretBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SetCaretVisible
// Il2CppName: SetCaretVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetCaretVisible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetCaretVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SetCaretActive
// Il2CppName: SetCaretActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetCaretActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetCaretActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::UpdateCaretMaterial
// Il2CppName: UpdateCaretMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateCaretMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateCaretMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnFocus
// Il2CppName: OnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnFocus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SelectAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::MoveTextEnd
// Il2CppName: MoveTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveTextEnd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::MoveTextStart
// Il2CppName: MoveTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveTextStart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::get_clipboard
// Il2CppName: get_clipboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&InputField::get_clipboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::set_clipboard
// Il2CppName: set_clipboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&InputField::set_clipboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "set_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InputField::InPlaceEditing
// Il2CppName: InPlaceEditing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::InPlaceEditing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "InPlaceEditing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::UpdateCaretFromKeyboard
// Il2CppName: UpdateCaretFromKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateCaretFromKeyboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateCaretFromKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::LateUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::ScreenToLocal
// Il2CppName: ScreenToLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (InputField::*)(UnityEngine::Vector2)>(&InputField::ScreenToLocal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ScreenToLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: InputField::GetUnclampedCharacterLineFromPosition
// Il2CppName: GetUnclampedCharacterLineFromPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(UnityEngine::Vector2, UnityEngine::TextGenerator*)>(&InputField::GetUnclampedCharacterLineFromPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GetUnclampedCharacterLineFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>()});
  }
};
// Writing MetadataGetter for method: InputField::GetCharacterIndexFromPosition
// Il2CppName: GetCharacterIndexFromPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(UnityEngine::Vector2)>(&InputField::GetCharacterIndexFromPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GetCharacterIndexFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: InputField::MayDrag
// Il2CppName: MayDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::MayDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnBeginDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::MouseDragOutsideRect
// Il2CppName: MouseDragOutsideRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::MouseDragOutsideRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MouseDragOutsideRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnEndDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::KeyPressed
// Il2CppName: KeyPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::InputField::EditState (InputField::*)(UnityEngine::Event*)>(&InputField::KeyPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "KeyPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Event*>()});
  }
};
// Writing MetadataGetter for method: InputField::IsValidChar
// Il2CppName: IsValidChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)(::Il2CppChar)>(&InputField::IsValidChar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "IsValidChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::ProcessEvent
// Il2CppName: ProcessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Event*)>(&InputField::ProcessEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ProcessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Event*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnUpdateSelected
// Il2CppName: OnUpdateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnUpdateSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::GetSelectedString
// Il2CppName: GetSelectedString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (InputField::*)()>(&InputField::GetSelectedString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GetSelectedString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::FindtNextWordBegin
// Il2CppName: FindtNextWordBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::FindtNextWordBegin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "FindtNextWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::MoveRight
// Il2CppName: MoveRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::FindtPrevWordBegin
// Il2CppName: FindtPrevWordBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::FindtPrevWordBegin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "FindtPrevWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::MoveLeft
// Il2CppName: MoveLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::DetermineCharacterLine
// Il2CppName: DetermineCharacterLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, UnityEngine::TextGenerator*)>(&InputField::DetermineCharacterLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "DetermineCharacterLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>()});
  }
};
// Writing MetadataGetter for method: InputField::LineUpCharacterPosition
// Il2CppName: LineUpCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, bool)>(&InputField::LineUpCharacterPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "LineUpCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::LineDownCharacterPosition
// Il2CppName: LineDownCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)(int, bool)>(&InputField::LineDownCharacterPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "LineDownCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool)>(&InputField::MoveUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(bool, bool)>(&InputField::MoveUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::ForwardSpace
// Il2CppName: ForwardSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ForwardSpace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ForwardSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::Backspace
// Il2CppName: Backspace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::Backspace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Backspace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::UpdateTouchKeyboardFromEditChanges
// Il2CppName: UpdateTouchKeyboardFromEditChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateTouchKeyboardFromEditChanges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SendOnValueChangedAndUpdateLabel
// Il2CppName: SendOnValueChangedAndUpdateLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnValueChangedAndUpdateLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SendOnValueChanged
// Il2CppName: SendOnValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SendOnSubmit
// Il2CppName: SendOnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SendOnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SendOnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppString*)>(&InputField::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InputField::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Il2CppChar)>(&InputField::Append)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::UpdateLabel
// Il2CppName: UpdateLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::IsSelectionVisible
// Il2CppName: IsSelectionVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::IsSelectionVisible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "IsSelectionVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::GetLineStartPosition
// Il2CppName: GetLineStartPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::TextGenerator*, int)>(&InputField::GetLineStartPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GetLineStartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::GetLineEndPosition
// Il2CppName: GetLineEndPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::TextGenerator*, int)>(&InputField::GetLineEndPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GetLineEndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::SetDrawRangeToContainCaretPosition
// Il2CppName: SetDrawRangeToContainCaretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(int)>(&InputField::SetDrawRangeToContainCaretPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetDrawRangeToContainCaretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::ForceLabelUpdate
// Il2CppName: ForceLabelUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ForceLabelUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ForceLabelUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::MarkGeometryAsDirty
// Il2CppName: MarkGeometryAsDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::MarkGeometryAsDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "MarkGeometryAsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::CanvasUpdate)>(&InputField::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: InputField::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::UpdateGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::AssignPositioningIfNeeded
// Il2CppName: AssignPositioningIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::AssignPositioningIfNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "AssignPositioningIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnFillVBO
// Il2CppName: OnFillVBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::Mesh*)>(&InputField::OnFillVBO)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnFillVBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: InputField::GenerateCaret
// Il2CppName: GenerateCaret
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::VertexHelper*, UnityEngine::Vector2)>(&InputField::GenerateCaret)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GenerateCaret", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: InputField::CreateCursorVerts
// Il2CppName: CreateCursorVerts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CreateCursorVerts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "CreateCursorVerts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::GenerateHighlight
// Il2CppName: GenerateHighlight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::VertexHelper*, UnityEngine::Vector2)>(&InputField::GenerateHighlight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "GenerateHighlight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: InputField::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::*)(::Il2CppString*, int, ::Il2CppChar)>(&InputField::Validate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::ActivateInputField
// Il2CppName: ActivateInputField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ActivateInputField)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ActivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::ActivateInputFieldInternal
// Il2CppName: ActivateInputFieldInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::ActivateInputFieldInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "ActivateInputFieldInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::DeactivateInputField
// Il2CppName: DeactivateInputField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::DeactivateInputField)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "DeactivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::EnforceContentType
// Il2CppName: EnforceContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::EnforceContentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "EnforceContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::EnforceTextHOverflow
// Il2CppName: EnforceTextHOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::EnforceTextHOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "EnforceTextHOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::SetToCustomIfContentTypeIsNot
// Il2CppName: SetToCustomIfContentTypeIsNot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(::Array<UnityEngine::UI::InputField::ContentType>*)>(&InputField::SetToCustomIfContentTypeIsNot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::UI::InputField::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: InputField::SetToCustom
// Il2CppName: SetToCustom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::SetToCustom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "SetToCustom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InputField::*)()>(&InputField::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (InputField::*)()>(&InputField::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (InputField::*)()>(&InputField::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::*)()>(&InputField::get_hasSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)()>(&InputField::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::PointerEventData*)>(&InputField::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::EventSystems::BaseEventData*)>(&InputField::OnDeselect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: InputField::DoStateTransition
// Il2CppName: DoStateTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::*)(UnityEngine::UI::Selectable::SelectionState, bool)>(&InputField::DoStateTransition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), "DoStateTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable::SelectionState>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: InputField::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&InputField::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.InputField/ContentType
#include "UnityEngine/UI/InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Standard
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Standard
void UnityEngine::UI::InputField::ContentType::_set_Standard(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Autocorrected
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Autocorrected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Autocorrected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Autocorrected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Autocorrected
void UnityEngine::UI::InputField::ContentType::_set_Autocorrected(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Autocorrected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Autocorrected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType IntegerNumber
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_IntegerNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_IntegerNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "IntegerNumber"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType IntegerNumber
void UnityEngine::UI::InputField::ContentType::_set_IntegerNumber(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_IntegerNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "IntegerNumber", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType DecimalNumber
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_DecimalNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_DecimalNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "DecimalNumber"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType DecimalNumber
void UnityEngine::UI::InputField::ContentType::_set_DecimalNumber(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_DecimalNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "DecimalNumber", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Alphanumeric
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Alphanumeric
void UnityEngine::UI::InputField::ContentType::_set_Alphanumeric(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Name
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Name"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Name
void UnityEngine::UI::InputField::ContentType::_set_Name(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType EmailAddress
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType EmailAddress
void UnityEngine::UI::InputField::ContentType::_set_EmailAddress(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Password
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Password
void UnityEngine::UI::InputField::ContentType::_set_Password(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Password", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Pin
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Pin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Pin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Pin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Pin
void UnityEngine::UI::InputField::ContentType::_set_Pin(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Pin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Pin", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/ContentType Custom
UnityEngine::UI::InputField::ContentType UnityEngine::UI::InputField::ContentType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::ContentType>("UnityEngine.UI", "InputField/ContentType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/ContentType Custom
void UnityEngine::UI::InputField::ContentType::_set_Custom(UnityEngine::UI::InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::ContentType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/ContentType", "Custom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.InputField/InputType
#include "UnityEngine/UI/InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/InputType Standard
UnityEngine::UI::InputField::InputType UnityEngine::UI::InputField::InputType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::InputType>("UnityEngine.UI", "InputField/InputType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/InputType Standard
void UnityEngine::UI::InputField::InputType::_set_Standard(UnityEngine::UI::InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/InputType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/InputType AutoCorrect
UnityEngine::UI::InputField::InputType UnityEngine::UI::InputField::InputType::_get_AutoCorrect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_get_AutoCorrect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::InputType>("UnityEngine.UI", "InputField/InputType", "AutoCorrect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/InputType AutoCorrect
void UnityEngine::UI::InputField::InputType::_set_AutoCorrect(UnityEngine::UI::InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_set_AutoCorrect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/InputType", "AutoCorrect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/InputType Password
UnityEngine::UI::InputField::InputType UnityEngine::UI::InputField::InputType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::InputType>("UnityEngine.UI", "InputField/InputType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/InputType Password
void UnityEngine::UI::InputField::InputType::_set_Password(UnityEngine::UI::InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::InputType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/InputType", "Password", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.InputField/CharacterValidation
#include "UnityEngine/UI/InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation None
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation None
void UnityEngine::UI::InputField::CharacterValidation::_set_None(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation Integer
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation Integer
void UnityEngine::UI::InputField::CharacterValidation::_set_Integer(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation Decimal
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation Decimal
void UnityEngine::UI::InputField::CharacterValidation::_set_Decimal(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation Alphanumeric
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation Alphanumeric
void UnityEngine::UI::InputField::CharacterValidation::_set_Alphanumeric(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation Name
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "Name"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation Name
void UnityEngine::UI::InputField::CharacterValidation::_set_Name(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/CharacterValidation EmailAddress
UnityEngine::UI::InputField::CharacterValidation UnityEngine::UI::InputField::CharacterValidation::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::CharacterValidation>("UnityEngine.UI", "InputField/CharacterValidation", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/CharacterValidation EmailAddress
void UnityEngine::UI::InputField::CharacterValidation::_set_EmailAddress(UnityEngine::UI::InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::CharacterValidation::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/CharacterValidation", "EmailAddress", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.InputField/LineType
#include "UnityEngine/UI/InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/LineType SingleLine
UnityEngine::UI::InputField::LineType UnityEngine::UI::InputField::LineType::_get_SingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_get_SingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::LineType>("UnityEngine.UI", "InputField/LineType", "SingleLine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/LineType SingleLine
void UnityEngine::UI::InputField::LineType::_set_SingleLine(UnityEngine::UI::InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_set_SingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/LineType", "SingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/LineType MultiLineSubmit
UnityEngine::UI::InputField::LineType UnityEngine::UI::InputField::LineType::_get_MultiLineSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_get_MultiLineSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::LineType>("UnityEngine.UI", "InputField/LineType", "MultiLineSubmit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/LineType MultiLineSubmit
void UnityEngine::UI::InputField::LineType::_set_MultiLineSubmit(UnityEngine::UI::InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_set_MultiLineSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/LineType", "MultiLineSubmit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/LineType MultiLineNewline
UnityEngine::UI::InputField::LineType UnityEngine::UI::InputField::LineType::_get_MultiLineNewline() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_get_MultiLineNewline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::LineType>("UnityEngine.UI", "InputField/LineType", "MultiLineNewline"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/LineType MultiLineNewline
void UnityEngine::UI::InputField::LineType::_set_MultiLineNewline(UnityEngine::UI::InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::LineType::_set_MultiLineNewline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/LineType", "MultiLineNewline", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField/OnValidateInput
#include "UnityEngine/UI/InputField_OnValidateInput.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.InputField/OnValidateInput.Invoke
::Il2CppChar UnityEngine::UI::InputField::OnValidateInput::Invoke(::Il2CppString* text, int charIndex, ::Il2CppChar addedChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnValidateInput::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, text, charIndex, addedChar);
}
// Autogenerated method: UnityEngine.UI.InputField/OnValidateInput.BeginInvoke
System::IAsyncResult* UnityEngine::UI::InputField::OnValidateInput::BeginInvoke(::Il2CppString* text, int charIndex, ::Il2CppChar addedChar, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnValidateInput::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, text, charIndex, addedChar, callback, object);
}
// Autogenerated method: UnityEngine.UI.InputField/OnValidateInput.EndInvoke
::Il2CppChar UnityEngine::UI::InputField::OnValidateInput::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::OnValidateInput::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: InputField::OnValidateInput::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::OnValidateInput::*)(::Il2CppObject*, System::IntPtr)>(&InputField::OnValidateInput::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnValidateInput*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::OnValidateInput::*)(::Il2CppObject*, System::IntPtr)>(&InputField::OnValidateInput::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnValidateInput*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: InputField::OnValidateInput::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::OnValidateInput::*)(::Il2CppString*, int, ::Il2CppChar)>(&InputField::OnValidateInput::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnValidateInput*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: InputField::OnValidateInput::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (InputField::OnValidateInput::*)(::Il2CppString*, int, ::Il2CppChar, System::AsyncCallback*, ::Il2CppObject*)>(&InputField::OnValidateInput::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnValidateInput*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: InputField::OnValidateInput::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (InputField::OnValidateInput::*)(System::IAsyncResult*)>(&InputField::OnValidateInput::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnValidateInput*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField/SubmitEvent
#include "UnityEngine/UI/InputField_SubmitEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InputField::SubmitEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::SubmitEvent::*)()>(&InputField::SubmitEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::SubmitEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::SubmitEvent::*)()>(&InputField::SubmitEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::SubmitEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField/OnChangeEvent
#include "UnityEngine/UI/InputField_OnChangeEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InputField::OnChangeEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::OnChangeEvent::*)()>(&InputField::OnChangeEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnChangeEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::OnChangeEvent::*)()>(&InputField::OnChangeEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::OnChangeEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.InputField/EditState
#include "UnityEngine/UI/InputField_EditState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/EditState Continue
UnityEngine::UI::InputField::EditState UnityEngine::UI::InputField::EditState::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EditState::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::EditState>("UnityEngine.UI", "InputField/EditState", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/EditState Continue
void UnityEngine::UI::InputField::EditState::_set_Continue(UnityEngine::UI::InputField::EditState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EditState::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/EditState", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.InputField/EditState Finish
UnityEngine::UI::InputField::EditState UnityEngine::UI::InputField::EditState::_get_Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EditState::_get_Finish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::InputField::EditState>("UnityEngine.UI", "InputField/EditState", "Finish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.InputField/EditState Finish
void UnityEngine::UI::InputField::EditState::_set_Finish(UnityEngine::UI::InputField::EditState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::EditState::_set_Finish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "InputField/EditState", "Finish", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField/<CaretBlink>d__159
#include "UnityEngine/UI/InputField_-CaretBlink-d__159.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.InputField/<CaretBlink>d__159.System.IDisposable.Dispose
void UnityEngine::UI::InputField::$CaretBlink$d__159::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$CaretBlink$d__159::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<CaretBlink>d__159.MoveNext
bool UnityEngine::UI::InputField::$CaretBlink$d__159::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$CaretBlink$d__159::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<CaretBlink>d__159.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::InputField::$CaretBlink$d__159::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$CaretBlink$d__159::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<CaretBlink>d__159.System.Collections.IEnumerator.Reset
void UnityEngine::UI::InputField::$CaretBlink$d__159::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$CaretBlink$d__159::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<CaretBlink>d__159.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::InputField::$CaretBlink$d__159::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$CaretBlink$d__159::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$CaretBlink$d__159::*)(int)>(&InputField::$CaretBlink$d__159::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$CaretBlink$d__159::*)(int)>(&InputField::$CaretBlink$d__159::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$CaretBlink$d__159::*)()>(&InputField::$CaretBlink$d__159::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::$CaretBlink$d__159::*)()>(&InputField::$CaretBlink$d__159::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (InputField::$CaretBlink$d__159::*)()>(&InputField::$CaretBlink$d__159::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$CaretBlink$d__159::*)()>(&InputField::$CaretBlink$d__159::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$CaretBlink$d__159::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (InputField::$CaretBlink$d__159::*)()>(&InputField::$CaretBlink$d__159::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$CaretBlink$d__159*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179
#include "UnityEngine/UI/InputField_-MouseDragOutsideRect-d__179.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179.System.IDisposable.Dispose
void UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179.MoveNext
bool UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179.System.Collections.IEnumerator.Reset
void UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.InputField/<MouseDragOutsideRect>d__179.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::InputField::$MouseDragOutsideRect$d__179::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$MouseDragOutsideRect$d__179::*)(int)>(&InputField::$MouseDragOutsideRect$d__179::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$MouseDragOutsideRect$d__179::*)(int)>(&InputField::$MouseDragOutsideRect$d__179::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$MouseDragOutsideRect$d__179::*)()>(&InputField::$MouseDragOutsideRect$d__179::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InputField::$MouseDragOutsideRect$d__179::*)()>(&InputField::$MouseDragOutsideRect$d__179::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (InputField::$MouseDragOutsideRect$d__179::*)()>(&InputField::$MouseDragOutsideRect$d__179::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InputField::$MouseDragOutsideRect$d__179::*)()>(&InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (InputField::$MouseDragOutsideRect$d__179::*)()>(&InputField::$MouseDragOutsideRect$d__179::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InputField::$MouseDragOutsideRect$d__179*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.AspectRatioFitter
#include "UnityEngine/UI/AspectRatioFitter.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_aspectMode
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::get_aspectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::get_aspectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::AspectRatioFitter::AspectMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.set_aspectMode
void UnityEngine::UI::AspectRatioFitter::set_aspectMode(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::set_aspectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_aspectRatio
float UnityEngine::UI::AspectRatioFitter::get_aspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::get_aspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.set_aspectRatio
void UnityEngine::UI::AspectRatioFitter::set_aspectRatio(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::set_aspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::AspectRatioFitter::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.Update
void UnityEngine::UI::AspectRatioFitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.UpdateRect
void UnityEngine::UI::AspectRatioFitter::UpdateRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::UpdateRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.GetSizeDeltaToProduceSize
float UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize(float size, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSizeDeltaToProduceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, size, axis);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.GetParentSize
UnityEngine::Vector2 UnityEngine::UI::AspectRatioFitter::GetParentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::GetParentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetLayoutHorizontal
void UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetLayoutVertical
void UnityEngine::UI::AspectRatioFitter::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetDirty
void UnityEngine::UI::AspectRatioFitter::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnEnable
void UnityEngine::UI::AspectRatioFitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnDisable
void UnityEngine::UI::AspectRatioFitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnRectTransformDimensionsChange
void UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AspectRatioFitter::get_aspectMode
// Il2CppName: get_aspectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::AspectRatioFitter::AspectMode (AspectRatioFitter::*)()>(&AspectRatioFitter::get_aspectMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "get_aspectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::set_aspectMode
// Il2CppName: set_aspectMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)(UnityEngine::UI::AspectRatioFitter::AspectMode)>(&AspectRatioFitter::set_aspectMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "set_aspectMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::AspectRatioFitter::AspectMode>()});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::get_aspectRatio
// Il2CppName: get_aspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AspectRatioFitter::*)()>(&AspectRatioFitter::get_aspectRatio)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "get_aspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::set_aspectRatio
// Il2CppName: set_aspectRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)(float)>(&AspectRatioFitter::set_aspectRatio)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "set_aspectRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (AspectRatioFitter::*)()>(&AspectRatioFitter::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::UpdateRect
// Il2CppName: UpdateRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::UpdateRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "UpdateRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::GetSizeDeltaToProduceSize
// Il2CppName: GetSizeDeltaToProduceSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AspectRatioFitter::*)(float, int)>(&AspectRatioFitter::GetSizeDeltaToProduceSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "GetSizeDeltaToProduceSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::GetParentSize
// Il2CppName: GetParentSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (AspectRatioFitter::*)()>(&AspectRatioFitter::GetParentSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "GetParentSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AspectRatioFitter::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AspectRatioFitter::*)()>(&AspectRatioFitter::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AspectRatioFitter*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.AspectRatioFitter/AspectMode
#include "UnityEngine/UI/AspectRatioFitter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_None(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_WidthControlsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_get_WidthControlsHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "WidthControlsHeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_WidthControlsHeight(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_set_WidthControlsHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "WidthControlsHeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_HeightControlsWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_get_HeightControlsWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "HeightControlsWidth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_HeightControlsWidth(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_set_HeightControlsWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "HeightControlsWidth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_FitInParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_get_FitInParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "FitInParent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_FitInParent(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_set_FitInParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "FitInParent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_EnvelopeParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_get_EnvelopeParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "EnvelopeParent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_EnvelopeParent(UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::AspectRatioFitter::AspectMode::_set_EnvelopeParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "EnvelopeParent", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler
#include "UnityEngine/UI/CanvasScaler.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLogBase
float UnityEngine::UI::CanvasScaler::_get_kLogBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::_get_kLogBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "CanvasScaler", "kLogBase"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLogBase
void UnityEngine::UI::CanvasScaler::_set_kLogBase(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::_set_kLogBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler", "kLogBase", value));
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_uiScaleMode
UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::get_uiScaleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_uiScaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiScaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::CanvasScaler::ScaleMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_uiScaleMode
void UnityEngine::UI::CanvasScaler::set_uiScaleMode(UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_uiScaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiScaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_referencePixelsPerUnit
float UnityEngine::UI::CanvasScaler::get_referencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_referencePixelsPerUnit
void UnityEngine::UI::CanvasScaler::set_referencePixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_scaleFactor
float UnityEngine::UI::CanvasScaler::get_scaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_scaleFactor
void UnityEngine::UI::CanvasScaler::set_scaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_referenceResolution
UnityEngine::Vector2 UnityEngine::UI::CanvasScaler::get_referenceResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_referenceResolution
void UnityEngine::UI::CanvasScaler::set_referenceResolution(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_screenMatchMode
UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::get_screenMatchMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::CanvasScaler::ScreenMatchMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_screenMatchMode
void UnityEngine::UI::CanvasScaler::set_screenMatchMode(UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_matchWidthOrHeight
float UnityEngine::UI::CanvasScaler::get_matchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_matchWidthOrHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchWidthOrHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_matchWidthOrHeight
void UnityEngine::UI::CanvasScaler::set_matchWidthOrHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_matchWidthOrHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchWidthOrHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_physicalUnit
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::get_physicalUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_physicalUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicalUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::CanvasScaler::Unit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_physicalUnit
void UnityEngine::UI::CanvasScaler::set_physicalUnit(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_physicalUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicalUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_fallbackScreenDPI
float UnityEngine::UI::CanvasScaler::get_fallbackScreenDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_fallbackScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_fallbackScreenDPI
void UnityEngine::UI::CanvasScaler::set_fallbackScreenDPI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_fallbackScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_defaultSpriteDPI
float UnityEngine::UI::CanvasScaler::get_defaultSpriteDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_defaultSpriteDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSpriteDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_defaultSpriteDPI
void UnityEngine::UI::CanvasScaler::set_defaultSpriteDPI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_defaultSpriteDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_defaultSpriteDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_dynamicPixelsPerUnit
float UnityEngine::UI::CanvasScaler::get_dynamicPixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::get_dynamicPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_dynamicPixelsPerUnit
void UnityEngine::UI::CanvasScaler::set_dynamicPixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::set_dynamicPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.Update
void UnityEngine::UI::CanvasScaler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.Handle
void UnityEngine::UI::CanvasScaler::Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Handle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleWorldCanvas
void UnityEngine::UI::CanvasScaler::HandleWorldCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::HandleWorldCanvas");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWorldCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleConstantPixelSize
void UnityEngine::UI::CanvasScaler::HandleConstantPixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::HandleConstantPixelSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConstantPixelSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleScaleWithScreenSize
void UnityEngine::UI::CanvasScaler::HandleScaleWithScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::HandleScaleWithScreenSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScaleWithScreenSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleConstantPhysicalSize
void UnityEngine::UI::CanvasScaler::HandleConstantPhysicalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::HandleConstantPhysicalSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConstantPhysicalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.SetScaleFactor
void UnityEngine::UI::CanvasScaler::SetScaleFactor(float scaleFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::SetScaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleFactor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scaleFactor);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.SetReferencePixelsPerUnit
void UnityEngine::UI::CanvasScaler::SetReferencePixelsPerUnit(float referencePixelsPerUnit) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::SetReferencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReferencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(referencePixelsPerUnit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, referencePixelsPerUnit);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.OnEnable
void UnityEngine::UI::CanvasScaler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.OnDisable
void UnityEngine::UI::CanvasScaler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CanvasScaler::get_uiScaleMode
// Il2CppName: get_uiScaleMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::CanvasScaler::ScaleMode (CanvasScaler::*)()>(&CanvasScaler::get_uiScaleMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_uiScaleMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_uiScaleMode
// Il2CppName: set_uiScaleMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(UnityEngine::UI::CanvasScaler::ScaleMode)>(&CanvasScaler::set_uiScaleMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_uiScaleMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasScaler::ScaleMode>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_referencePixelsPerUnit
// Il2CppName: get_referencePixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_referencePixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_referencePixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_referencePixelsPerUnit
// Il2CppName: set_referencePixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_referencePixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_referencePixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_scaleFactor
// Il2CppName: get_scaleFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_scaleFactor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_scaleFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_scaleFactor
// Il2CppName: set_scaleFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_scaleFactor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_scaleFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_referenceResolution
// Il2CppName: get_referenceResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (CanvasScaler::*)()>(&CanvasScaler::get_referenceResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_referenceResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_referenceResolution
// Il2CppName: set_referenceResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(UnityEngine::Vector2)>(&CanvasScaler::set_referenceResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_referenceResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_screenMatchMode
// Il2CppName: get_screenMatchMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::CanvasScaler::ScreenMatchMode (CanvasScaler::*)()>(&CanvasScaler::get_screenMatchMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_screenMatchMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_screenMatchMode
// Il2CppName: set_screenMatchMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(UnityEngine::UI::CanvasScaler::ScreenMatchMode)>(&CanvasScaler::set_screenMatchMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_screenMatchMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasScaler::ScreenMatchMode>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_matchWidthOrHeight
// Il2CppName: get_matchWidthOrHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_matchWidthOrHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_matchWidthOrHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_matchWidthOrHeight
// Il2CppName: set_matchWidthOrHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_matchWidthOrHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_matchWidthOrHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_physicalUnit
// Il2CppName: get_physicalUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::CanvasScaler::Unit (CanvasScaler::*)()>(&CanvasScaler::get_physicalUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_physicalUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_physicalUnit
// Il2CppName: set_physicalUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(UnityEngine::UI::CanvasScaler::Unit)>(&CanvasScaler::set_physicalUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_physicalUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasScaler::Unit>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_fallbackScreenDPI
// Il2CppName: get_fallbackScreenDPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_fallbackScreenDPI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_fallbackScreenDPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_fallbackScreenDPI
// Il2CppName: set_fallbackScreenDPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_fallbackScreenDPI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_fallbackScreenDPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_defaultSpriteDPI
// Il2CppName: get_defaultSpriteDPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_defaultSpriteDPI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_defaultSpriteDPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_defaultSpriteDPI
// Il2CppName: set_defaultSpriteDPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_defaultSpriteDPI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_defaultSpriteDPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::get_dynamicPixelsPerUnit
// Il2CppName: get_dynamicPixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasScaler::*)()>(&CanvasScaler::get_dynamicPixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "get_dynamicPixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::set_dynamicPixelsPerUnit
// Il2CppName: set_dynamicPixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::set_dynamicPixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "set_dynamicPixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::Handle
// Il2CppName: Handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::Handle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "Handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::HandleWorldCanvas
// Il2CppName: HandleWorldCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::HandleWorldCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "HandleWorldCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::HandleConstantPixelSize
// Il2CppName: HandleConstantPixelSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::HandleConstantPixelSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "HandleConstantPixelSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::HandleScaleWithScreenSize
// Il2CppName: HandleScaleWithScreenSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::HandleScaleWithScreenSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "HandleScaleWithScreenSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::HandleConstantPhysicalSize
// Il2CppName: HandleConstantPhysicalSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::HandleConstantPhysicalSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "HandleConstantPhysicalSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::SetScaleFactor
// Il2CppName: SetScaleFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::SetScaleFactor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "SetScaleFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::SetReferencePixelsPerUnit
// Il2CppName: SetReferencePixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)(float)>(&CanvasScaler::SetReferencePixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "SetReferencePixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasScaler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasScaler::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasScaler::*)()>(&CanvasScaler::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasScaler*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/ScaleMode
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPixelSize
UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPixelSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPixelSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPixelSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPixelSize(UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPixelSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPixelSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ScaleWithScreenSize
UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ScaleWithScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_get_ScaleWithScreenSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ScaleWithScreenSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ScaleWithScreenSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ScaleWithScreenSize(UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_set_ScaleWithScreenSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ScaleWithScreenSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPhysicalSize
UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPhysicalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPhysicalSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPhysicalSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPhysicalSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPhysicalSize(UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPhysicalSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPhysicalSize", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/ScreenMatchMode
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode MatchWidthOrHeight
UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_MatchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_MatchWidthOrHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "MatchWidthOrHeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode MatchWidthOrHeight
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_MatchWidthOrHeight(UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_MatchWidthOrHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "MatchWidthOrHeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Expand
UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Expand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Expand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Expand
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Expand(UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Expand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Expand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Shrink
UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Shrink() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Shrink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Shrink"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Shrink
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Shrink(UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Shrink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Shrink", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/Unit
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Centimeters
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Centimeters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_get_Centimeters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Centimeters"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Centimeters
void UnityEngine::UI::CanvasScaler::Unit::_set_Centimeters(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_set_Centimeters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Centimeters", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Millimeters
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Millimeters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_get_Millimeters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Millimeters"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Millimeters
void UnityEngine::UI::CanvasScaler::Unit::_set_Millimeters(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_set_Millimeters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Millimeters", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Inches
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Inches() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_get_Inches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Inches"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Inches
void UnityEngine::UI::CanvasScaler::Unit::_set_Inches(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_set_Inches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Inches", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Points
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_get_Points");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Points"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Points
void UnityEngine::UI::CanvasScaler::Unit::_set_Points(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_set_Points");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Points", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Picas
UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Picas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_get_Picas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Picas"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Picas
void UnityEngine::UI::CanvasScaler::Unit::_set_Picas(UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CanvasScaler::Unit::_set_Picas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Picas", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ContentSizeFitter
#include "UnityEngine/UI/ContentSizeFitter.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_horizontalFit
UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::get_horizontalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::get_horizontalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ContentSizeFitter::FitMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.set_horizontalFit
void UnityEngine::UI::ContentSizeFitter::set_horizontalFit(UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::set_horizontalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_verticalFit
UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::get_verticalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::get_verticalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ContentSizeFitter::FitMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.set_verticalFit
void UnityEngine::UI::ContentSizeFitter::set_verticalFit(UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::set_verticalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::ContentSizeFitter::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.HandleSelfFittingAlongAxis
void UnityEngine::UI::ContentSizeFitter::HandleSelfFittingAlongAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::HandleSelfFittingAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelfFittingAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetLayoutHorizontal
void UnityEngine::UI::ContentSizeFitter::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetLayoutVertical
void UnityEngine::UI::ContentSizeFitter::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetDirty
void UnityEngine::UI::ContentSizeFitter::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnEnable
void UnityEngine::UI::ContentSizeFitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnDisable
void UnityEngine::UI::ContentSizeFitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnRectTransformDimensionsChange
void UnityEngine::UI::ContentSizeFitter::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ContentSizeFitter::get_horizontalFit
// Il2CppName: get_horizontalFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ContentSizeFitter::FitMode (ContentSizeFitter::*)()>(&ContentSizeFitter::get_horizontalFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "get_horizontalFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::set_horizontalFit
// Il2CppName: set_horizontalFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)(UnityEngine::UI::ContentSizeFitter::FitMode)>(&ContentSizeFitter::set_horizontalFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "set_horizontalFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ContentSizeFitter::FitMode>()});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::get_verticalFit
// Il2CppName: get_verticalFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ContentSizeFitter::FitMode (ContentSizeFitter::*)()>(&ContentSizeFitter::get_verticalFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "get_verticalFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::set_verticalFit
// Il2CppName: set_verticalFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)(UnityEngine::UI::ContentSizeFitter::FitMode)>(&ContentSizeFitter::set_verticalFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "set_verticalFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ContentSizeFitter::FitMode>()});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ContentSizeFitter::*)()>(&ContentSizeFitter::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::HandleSelfFittingAlongAxis
// Il2CppName: HandleSelfFittingAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)(int)>(&ContentSizeFitter::HandleSelfFittingAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "HandleSelfFittingAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentSizeFitter::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentSizeFitter::*)()>(&ContentSizeFitter::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentSizeFitter*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ContentSizeFitter/FitMode
#include "UnityEngine/UI/ContentSizeFitter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode Unconstrained
UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_Unconstrained() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_get_Unconstrained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "Unconstrained"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode Unconstrained
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_Unconstrained(UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_set_Unconstrained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "Unconstrained", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode MinSize
UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_MinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_get_MinSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "MinSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode MinSize
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_MinSize(UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_set_MinSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "MinSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode PreferredSize
UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_PreferredSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_get_PreferredSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "PreferredSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode PreferredSize
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_PreferredSize(UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ContentSizeFitter::FitMode::_set_PreferredSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "PreferredSize", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_startCorner
UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::get_startCorner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_startCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::GridLayoutGroup::Corner, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_startCorner
void UnityEngine::UI::GridLayoutGroup::set_startCorner(UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_startCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_startAxis
UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::get_startAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_startAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::GridLayoutGroup::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_startAxis
void UnityEngine::UI::GridLayoutGroup::set_startAxis(UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_startAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_cellSize
UnityEngine::Vector2 UnityEngine::UI::GridLayoutGroup::get_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_cellSize
void UnityEngine::UI::GridLayoutGroup::set_cellSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_spacing
UnityEngine::Vector2 UnityEngine::UI::GridLayoutGroup::get_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_spacing
void UnityEngine::UI::GridLayoutGroup::set_spacing(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_constraint
UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::get_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_constraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::GridLayoutGroup::Constraint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_constraint
void UnityEngine::UI::GridLayoutGroup::set_constraint(UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_constraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_constraintCount
int UnityEngine::UI::GridLayoutGroup::get_constraintCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::get_constraintCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraintCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_constraintCount
void UnityEngine::UI::GridLayoutGroup::set_constraintCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::set_constraintCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraintCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetCellsAlongAxis
void UnityEngine::UI::GridLayoutGroup::SetCellsAlongAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::SetCellsAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCellsAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::GridLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetLayoutVertical
void UnityEngine::UI::GridLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GridLayoutGroup::get_startCorner
// Il2CppName: get_startCorner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::GridLayoutGroup::Corner (GridLayoutGroup::*)()>(&GridLayoutGroup::get_startCorner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_startCorner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_startCorner
// Il2CppName: set_startCorner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(UnityEngine::UI::GridLayoutGroup::Corner)>(&GridLayoutGroup::set_startCorner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_startCorner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::GridLayoutGroup::Corner>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::get_startAxis
// Il2CppName: get_startAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::GridLayoutGroup::Axis (GridLayoutGroup::*)()>(&GridLayoutGroup::get_startAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_startAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_startAxis
// Il2CppName: set_startAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(UnityEngine::UI::GridLayoutGroup::Axis)>(&GridLayoutGroup::set_startAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_startAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::GridLayoutGroup::Axis>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::get_cellSize
// Il2CppName: get_cellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (GridLayoutGroup::*)()>(&GridLayoutGroup::get_cellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_cellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_cellSize
// Il2CppName: set_cellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(UnityEngine::Vector2)>(&GridLayoutGroup::set_cellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_cellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::get_spacing
// Il2CppName: get_spacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (GridLayoutGroup::*)()>(&GridLayoutGroup::get_spacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_spacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_spacing
// Il2CppName: set_spacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(UnityEngine::Vector2)>(&GridLayoutGroup::set_spacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_spacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::get_constraint
// Il2CppName: get_constraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::GridLayoutGroup::Constraint (GridLayoutGroup::*)()>(&GridLayoutGroup::get_constraint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_constraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_constraint
// Il2CppName: set_constraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(UnityEngine::UI::GridLayoutGroup::Constraint)>(&GridLayoutGroup::set_constraint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_constraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::GridLayoutGroup::Constraint>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::get_constraintCount
// Il2CppName: get_constraintCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GridLayoutGroup::*)()>(&GridLayoutGroup::get_constraintCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "get_constraintCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::set_constraintCount
// Il2CppName: set_constraintCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(int)>(&GridLayoutGroup::set_constraintCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "set_constraintCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::SetCellsAlongAxis
// Il2CppName: SetCellsAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)(int)>(&GridLayoutGroup::SetCellsAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "SetCellsAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GridLayoutGroup::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GridLayoutGroup::*)()>(&GridLayoutGroup::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GridLayoutGroup*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Corner
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
void UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperLeft(UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
void UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperRight(UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
void UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerLeft(UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
void UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerRight(UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Axis
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Axis>("UnityEngine.UI", "GridLayoutGroup/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
void UnityEngine::UI::GridLayoutGroup::Axis::_set_Horizontal(UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Axis>("UnityEngine.UI", "GridLayoutGroup/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
void UnityEngine::UI::GridLayoutGroup::Axis::_set_Vertical(UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Axis", "Vertical", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Constraint
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_Flexible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_get_Flexible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "Flexible"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_Flexible(UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_set_Flexible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "Flexible", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedColumnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedColumnCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedColumnCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedColumnCount(UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedColumnCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedColumnCount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedRowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedRowCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedRowCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedRowCount(UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedRowCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedRowCount", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.HorizontalLayoutGroup
#include "UnityEngine/UI/HorizontalLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::HorizontalLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.SetLayoutVertical
void UnityEngine::UI::HorizontalLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HorizontalLayoutGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalLayoutGroup::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalLayoutGroup::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalLayoutGroup::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalLayoutGroup::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalLayoutGroup::*)()>(&HorizontalLayoutGroup::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalLayoutGroup*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.HorizontalOrVerticalLayoutGroup
#include "UnityEngine/UI/HorizontalOrVerticalLayoutGroup.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_spacing
float UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_spacing
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_spacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childForceExpandWidth
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childForceExpandWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childForceExpandWidth
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childForceExpandWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childForceExpandHeight
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childForceExpandHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childForceExpandHeight
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childForceExpandHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childControlWidth
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childControlWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childControlWidth
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlWidth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childControlWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childControlHeight
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childControlHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childControlHeight
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childControlHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childScaleWidth
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childScaleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childScaleWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childScaleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childScaleWidth
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childScaleWidth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childScaleWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childScaleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childScaleHeight
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childScaleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childScaleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childScaleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childScaleHeight
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childScaleHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childScaleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childScaleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.CalcAlongAxis
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::CalcAlongAxis(int axis, bool isVertical) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::CalcAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(isVertical)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, isVertical);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.SetChildrenAlongAxis
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis(int axis, bool isVertical) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildrenAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(isVertical)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, isVertical);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.GetChildSizes
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::GetChildSizes(UnityEngine::RectTransform* child, int axis, bool controlSize, bool childForceExpand, float& min, float& preferred, float& flexible) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::HorizontalOrVerticalLayoutGroup::GetChildSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(controlSize), ::il2cpp_utils::ExtractType(childForceExpand), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, child, axis, controlSize, childForceExpand, min, preferred, flexible);
}
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_spacing
// Il2CppName: get_spacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_spacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_spacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_spacing
// Il2CppName: set_spacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(float)>(&HorizontalOrVerticalLayoutGroup::set_spacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_spacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth
// Il2CppName: get_childForceExpandWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childForceExpandWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth
// Il2CppName: set_childForceExpandWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childForceExpandWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight
// Il2CppName: get_childForceExpandHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childForceExpandHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight
// Il2CppName: set_childForceExpandHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childForceExpandHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childControlWidth
// Il2CppName: get_childControlWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childControlWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childControlWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childControlWidth
// Il2CppName: set_childControlWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childControlWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childControlWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childControlHeight
// Il2CppName: get_childControlHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childControlHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childControlHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childControlHeight
// Il2CppName: set_childControlHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childControlHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childControlHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childScaleWidth
// Il2CppName: get_childScaleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childScaleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childScaleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childScaleWidth
// Il2CppName: set_childScaleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childScaleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childScaleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::get_childScaleHeight
// Il2CppName: get_childScaleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::get_childScaleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "get_childScaleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::set_childScaleHeight
// Il2CppName: set_childScaleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(bool)>(&HorizontalOrVerticalLayoutGroup::set_childScaleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "set_childScaleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::CalcAlongAxis
// Il2CppName: CalcAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(int, bool)>(&HorizontalOrVerticalLayoutGroup::CalcAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "CalcAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis
// Il2CppName: SetChildrenAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(int, bool)>(&HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "SetChildrenAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::GetChildSizes
// Il2CppName: GetChildSizes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)(UnityEngine::RectTransform*, int, bool, bool, float&, float&, float&)>(&HorizontalOrVerticalLayoutGroup::GetChildSizes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), "GetChildSizes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: HorizontalOrVerticalLayoutGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HorizontalOrVerticalLayoutGroup::*)()>(&HorizontalOrVerticalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HorizontalOrVerticalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutElement.CalculateLayoutInputHorizontal
void UnityEngine::UI::ILayoutElement::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.CalculateLayoutInputVertical
void UnityEngine::UI::ILayoutElement::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_minWidth
float UnityEngine::UI::ILayoutElement::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_preferredWidth
float UnityEngine::UI::ILayoutElement::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_flexibleWidth
float UnityEngine::UI::ILayoutElement::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_minHeight
float UnityEngine::UI::ILayoutElement::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_preferredHeight
float UnityEngine::UI::ILayoutElement::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_flexibleHeight
float UnityEngine::UI::ILayoutElement::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_layoutPriority
int UnityEngine::UI::ILayoutElement::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutElement::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ILayoutElement::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILayoutElement::*)()>(&ILayoutElement::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILayoutElement::*)()>(&ILayoutElement::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ILayoutElement::*)()>(&ILayoutElement::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutElement::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ILayoutElement::*)()>(&ILayoutElement::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutElement*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutController
#include "UnityEngine/UI/ILayoutController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutController.SetLayoutHorizontal
void UnityEngine::UI::ILayoutController::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutController::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutController.SetLayoutVertical
void UnityEngine::UI::ILayoutController::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutController::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ILayoutController::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILayoutController::*)()>(&ILayoutController::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutController*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ILayoutController::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ILayoutController::*)()>(&ILayoutController::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutController*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutIgnorer
#include "UnityEngine/UI/ILayoutIgnorer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutIgnorer.get_ignoreLayout
bool UnityEngine::UI::ILayoutIgnorer::get_ignoreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ILayoutIgnorer::get_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ILayoutIgnorer::get_ignoreLayout
// Il2CppName: get_ignoreLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ILayoutIgnorer::*)()>(&ILayoutIgnorer::get_ignoreLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILayoutIgnorer*), "get_ignoreLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.LayoutElement.get_ignoreLayout
bool UnityEngine::UI::LayoutElement::get_ignoreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_ignoreLayout
void UnityEngine::UI::LayoutElement::set_ignoreLayout(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.CalculateLayoutInputHorizontal
void UnityEngine::UI::LayoutElement::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.CalculateLayoutInputVertical
void UnityEngine::UI::LayoutElement::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_minWidth
float UnityEngine::UI::LayoutElement::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_minWidth
void UnityEngine::UI::LayoutElement::set_minWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_minHeight
float UnityEngine::UI::LayoutElement::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_minHeight
void UnityEngine::UI::LayoutElement::set_minHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_preferredWidth
float UnityEngine::UI::LayoutElement::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_preferredWidth
void UnityEngine::UI::LayoutElement::set_preferredWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_preferredHeight
float UnityEngine::UI::LayoutElement::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_preferredHeight
void UnityEngine::UI::LayoutElement::set_preferredHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_flexibleWidth
float UnityEngine::UI::LayoutElement::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_flexibleWidth
void UnityEngine::UI::LayoutElement::set_flexibleWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_flexibleHeight
float UnityEngine::UI::LayoutElement::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_flexibleHeight
void UnityEngine::UI::LayoutElement::set_flexibleHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_layoutPriority
int UnityEngine::UI::LayoutElement::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_layoutPriority
void UnityEngine::UI::LayoutElement::set_layoutPriority(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::set_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.SetDirty
void UnityEngine::UI::LayoutElement::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnEnable
void UnityEngine::UI::LayoutElement::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnTransformParentChanged
void UnityEngine::UI::LayoutElement::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnDisable
void UnityEngine::UI::LayoutElement::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnDidApplyAnimationProperties
void UnityEngine::UI::LayoutElement::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnBeforeTransformParentChanged
void UnityEngine::UI::LayoutElement::OnBeforeTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutElement::OnBeforeTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LayoutElement::get_ignoreLayout
// Il2CppName: get_ignoreLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutElement::*)()>(&LayoutElement::get_ignoreLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_ignoreLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_ignoreLayout
// Il2CppName: set_ignoreLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(bool)>(&LayoutElement::set_ignoreLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_ignoreLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_minWidth
// Il2CppName: set_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_minHeight
// Il2CppName: set_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_preferredWidth
// Il2CppName: set_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_preferredHeight
// Il2CppName: set_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_flexibleWidth
// Il2CppName: set_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutElement::*)()>(&LayoutElement::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_flexibleHeight
// Il2CppName: set_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(float)>(&LayoutElement::set_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LayoutElement::*)()>(&LayoutElement::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::set_layoutPriority
// Il2CppName: set_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)(int)>(&LayoutElement::set_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "set_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutElement::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutElement::OnBeforeTransformParentChanged
// Il2CppName: OnBeforeTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutElement::*)()>(&LayoutElement::OnBeforeTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutElement*), "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutGroup
#include "UnityEngine/UI/LayoutGroup.hpp"
// Including type: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56
#include "UnityEngine/UI/LayoutGroup_-DelayedSetDirty-d__56.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_padding
UnityEngine::RectOffset* UnityEngine::UI::LayoutGroup::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectOffset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.set_padding
void UnityEngine::UI::LayoutGroup::set_padding(UnityEngine::RectOffset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_childAlignment
UnityEngine::TextAnchor UnityEngine::UI::LayoutGroup::get_childAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_childAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAnchor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.set_childAlignment
void UnityEngine::UI::LayoutGroup::set_childAlignment(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::set_childAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::LayoutGroup::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_rectChildren
System::Collections::Generic::List_1<UnityEngine::RectTransform*>* UnityEngine::UI::LayoutGroup::get_rectChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_rectChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::RectTransform*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::LayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::LayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_minWidth
float UnityEngine::UI::LayoutGroup::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_preferredWidth
float UnityEngine::UI::LayoutGroup::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_flexibleWidth
float UnityEngine::UI::LayoutGroup::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_minHeight
float UnityEngine::UI::LayoutGroup::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_preferredHeight
float UnityEngine::UI::LayoutGroup::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_flexibleHeight
float UnityEngine::UI::LayoutGroup::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_layoutPriority
int UnityEngine::UI::LayoutGroup::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::LayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutVertical
void UnityEngine::UI::LayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalMinSize
float UnityEngine::UI::LayoutGroup::GetTotalMinSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::GetTotalMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalPreferredSize
float UnityEngine::UI::LayoutGroup::GetTotalPreferredSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::GetTotalPreferredSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalPreferredSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalFlexibleSize
float UnityEngine::UI::LayoutGroup::GetTotalFlexibleSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::GetTotalFlexibleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalFlexibleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetStartOffset
float UnityEngine::UI::LayoutGroup::GetStartOffset(int axis, float requiredSpaceWithoutPadding) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::GetStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(requiredSpaceWithoutPadding)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axis, requiredSpaceWithoutPadding);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetAlignmentOnAxis
float UnityEngine::UI::LayoutGroup::GetAlignmentOnAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::GetAlignmentOnAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlignmentOnAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutInputForAxis
void UnityEngine::UI::LayoutGroup::SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetLayoutInputForAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutInputForAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalMin), ::il2cpp_utils::ExtractType(totalPreferred), ::il2cpp_utils::ExtractType(totalFlexible), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, totalMin, totalPreferred, totalFlexible, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxis
void UnityEngine::UI::LayoutGroup::SetChildAlongAxis(UnityEngine::RectTransform* rect, int axis, float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetChildAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, axis, pos);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxisWithScale
void UnityEngine::UI::LayoutGroup::SetChildAlongAxisWithScale(UnityEngine::RectTransform* rect, int axis, float pos, float scaleFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetChildAlongAxisWithScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxisWithScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(scaleFactor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, axis, pos, scaleFactor);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxis
void UnityEngine::UI::LayoutGroup::SetChildAlongAxis(UnityEngine::RectTransform* rect, int axis, float pos, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetChildAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, axis, pos, size);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxisWithScale
void UnityEngine::UI::LayoutGroup::SetChildAlongAxisWithScale(UnityEngine::RectTransform* rect, int axis, float pos, float size, float scaleFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetChildAlongAxisWithScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxisWithScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(scaleFactor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, axis, pos, size, scaleFactor);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_isRootLayoutGroup
bool UnityEngine::UI::LayoutGroup::get_isRootLayoutGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::get_isRootLayoutGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootLayoutGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnTransformChildrenChanged
void UnityEngine::UI::LayoutGroup::OnTransformChildrenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::OnTransformChildrenChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformChildrenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetDirty
void UnityEngine::UI::LayoutGroup::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.DelayedSetDirty
System::Collections::IEnumerator* UnityEngine::UI::LayoutGroup::DelayedSetDirty(UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::DelayedSetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnEnable
void UnityEngine::UI::LayoutGroup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnDisable
void UnityEngine::UI::LayoutGroup::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnDidApplyAnimationProperties
void UnityEngine::UI::LayoutGroup::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnRectTransformDimensionsChange
void UnityEngine::UI::LayoutGroup::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LayoutGroup::get_padding
// Il2CppName: get_padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectOffset* (LayoutGroup::*)()>(&LayoutGroup::get_padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::set_padding
// Il2CppName: set_padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::RectOffset*)>(&LayoutGroup::set_padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "set_padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectOffset*>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_childAlignment
// Il2CppName: get_childAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextAnchor (LayoutGroup::*)()>(&LayoutGroup::get_childAlignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_childAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::set_childAlignment
// Il2CppName: set_childAlignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::TextAnchor)>(&LayoutGroup::set_childAlignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "set_childAlignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (LayoutGroup::*)()>(&LayoutGroup::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_rectChildren
// Il2CppName: get_rectChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::RectTransform*>* (LayoutGroup::*)()>(&LayoutGroup::get_rectChildren)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_rectChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)()>(&LayoutGroup::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LayoutGroup::*)()>(&LayoutGroup::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::GetTotalMinSize
// Il2CppName: GetTotalMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)(int)>(&LayoutGroup::GetTotalMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "GetTotalMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::GetTotalPreferredSize
// Il2CppName: GetTotalPreferredSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)(int)>(&LayoutGroup::GetTotalPreferredSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "GetTotalPreferredSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::GetTotalFlexibleSize
// Il2CppName: GetTotalFlexibleSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)(int)>(&LayoutGroup::GetTotalFlexibleSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "GetTotalFlexibleSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::GetStartOffset
// Il2CppName: GetStartOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)(int, float)>(&LayoutGroup::GetStartOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "GetStartOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::GetAlignmentOnAxis
// Il2CppName: GetAlignmentOnAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutGroup::*)(int)>(&LayoutGroup::GetAlignmentOnAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "GetAlignmentOnAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetLayoutInputForAxis
// Il2CppName: SetLayoutInputForAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(float, float, float, int)>(&LayoutGroup::SetLayoutInputForAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetLayoutInputForAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetChildAlongAxis
// Il2CppName: SetChildAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::RectTransform*, int, float)>(&LayoutGroup::SetChildAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetChildAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetChildAlongAxisWithScale
// Il2CppName: SetChildAlongAxisWithScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::RectTransform*, int, float, float)>(&LayoutGroup::SetChildAlongAxisWithScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetChildAlongAxisWithScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetChildAlongAxis
// Il2CppName: SetChildAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::RectTransform*, int, float, float)>(&LayoutGroup::SetChildAlongAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetChildAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetChildAlongAxisWithScale
// Il2CppName: SetChildAlongAxisWithScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)(UnityEngine::RectTransform*, int, float, float, float)>(&LayoutGroup::SetChildAlongAxisWithScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetChildAlongAxisWithScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::get_isRootLayoutGroup
// Il2CppName: get_isRootLayoutGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutGroup::*)()>(&LayoutGroup::get_isRootLayoutGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "get_isRootLayoutGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::OnTransformChildrenChanged
// Il2CppName: OnTransformChildrenChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::OnTransformChildrenChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "OnTransformChildrenChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::SetProperty
// Il2CppName: SetProperty
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LayoutGroup::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::DelayedSetDirty
// Il2CppName: DelayedSetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (LayoutGroup::*)(UnityEngine::RectTransform*)>(&LayoutGroup::DelayedSetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "DelayedSetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::*)()>(&LayoutGroup::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56
#include "UnityEngine/UI/LayoutGroup_-DelayedSetDirty-d__56.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56.System.IDisposable.Dispose
void UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56.MoveNext
bool UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56.System.Collections.IEnumerator.Reset
void UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutGroup::$DelayedSetDirty$d__56::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::$DelayedSetDirty$d__56::*)(int)>(&LayoutGroup::$DelayedSetDirty$d__56::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::$DelayedSetDirty$d__56::*)(int)>(&LayoutGroup::$DelayedSetDirty$d__56::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::$DelayedSetDirty$d__56::*)()>(&LayoutGroup::$DelayedSetDirty$d__56::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutGroup::$DelayedSetDirty$d__56::*)()>(&LayoutGroup::$DelayedSetDirty$d__56::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LayoutGroup::$DelayedSetDirty$d__56::*)()>(&LayoutGroup::$DelayedSetDirty$d__56::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutGroup::$DelayedSetDirty$d__56::*)()>(&LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LayoutGroup::$DelayedSetDirty$d__56::*)()>(&LayoutGroup::$DelayedSetDirty$d__56::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutGroup::$DelayedSetDirty$d__56*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.LayoutRebuilder
#include "UnityEngine/UI/LayoutRebuilder.hpp"
// Including type: UnityEngine.UI.LayoutRebuilder/<>c
#include "UnityEngine/UI/LayoutRebuilder_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.ObjectPool`1
#include "UnityEngine/UI/ObjectPool_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ObjectPool`1<UnityEngine.UI.LayoutRebuilder> s_Rebuilders
UnityEngine::UI::ObjectPool_1<UnityEngine::UI::LayoutRebuilder*>* UnityEngine::UI::LayoutRebuilder::_get_s_Rebuilders() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::_get_s_Rebuilders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ObjectPool_1<UnityEngine::UI::LayoutRebuilder*>*>("UnityEngine.UI", "LayoutRebuilder", "s_Rebuilders"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ObjectPool`1<UnityEngine.UI.LayoutRebuilder> s_Rebuilders
void UnityEngine::UI::LayoutRebuilder::_set_s_Rebuilders(UnityEngine::UI::ObjectPool_1<UnityEngine::UI::LayoutRebuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::_set_s_Rebuilders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "s_Rebuilders", value));
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Initialize
void UnityEngine::UI::LayoutRebuilder::Initialize(UnityEngine::RectTransform* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Clear
void UnityEngine::UI::LayoutRebuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder..cctor
void UnityEngine::UI::LayoutRebuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ReapplyDrivenProperties
void UnityEngine::UI::LayoutRebuilder::ReapplyDrivenProperties(UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::ReapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ReapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driven);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.get_transform
UnityEngine::Transform* UnityEngine::UI::LayoutRebuilder::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.IsDestroyed
bool UnityEngine::UI::LayoutRebuilder::IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::IsDestroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.StripDisabledBehavioursFromList
void UnityEngine::UI::LayoutRebuilder::StripDisabledBehavioursFromList(System::Collections::Generic::List_1<UnityEngine::Component*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::StripDisabledBehavioursFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "StripDisabledBehavioursFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, components);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate
void UnityEngine::UI::LayoutRebuilder::ForceRebuildLayoutImmediate(UnityEngine::RectTransform* layoutRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::ForceRebuildLayoutImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ForceRebuildLayoutImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layoutRoot)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layoutRoot);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Rebuild
void UnityEngine::UI::LayoutRebuilder::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.PerformLayoutControl
void UnityEngine::UI::LayoutRebuilder::PerformLayoutControl(UnityEngine::RectTransform* rect, UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::PerformLayoutControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformLayoutControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, action);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.PerformLayoutCalculation
void UnityEngine::UI::LayoutRebuilder::PerformLayoutCalculation(UnityEngine::RectTransform* rect, UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::PerformLayoutCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformLayoutCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect, action);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.MarkLayoutForRebuild
void UnityEngine::UI::LayoutRebuilder::MarkLayoutForRebuild(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::MarkLayoutForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "MarkLayoutForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ValidController
bool UnityEngine::UI::LayoutRebuilder::ValidController(UnityEngine::RectTransform* layoutRoot, System::Collections::Generic::List_1<UnityEngine::Component*>* comps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::ValidController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ValidController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layoutRoot), ::il2cpp_utils::ExtractType(comps)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layoutRoot, comps);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.MarkLayoutRootForRebuild
void UnityEngine::UI::LayoutRebuilder::MarkLayoutRootForRebuild(UnityEngine::RectTransform* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::MarkLayoutRootForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "MarkLayoutRootForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.LayoutComplete
void UnityEngine::UI::LayoutRebuilder::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.GraphicUpdateComplete
void UnityEngine::UI::LayoutRebuilder::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.GetHashCode
int UnityEngine::UI::LayoutRebuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Equals
bool UnityEngine::UI::LayoutRebuilder::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ToString
::Il2CppString* UnityEngine::UI::LayoutRebuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LayoutRebuilder::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)(UnityEngine::RectTransform*)>(&LayoutRebuilder::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)()>(&LayoutRebuilder::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LayoutRebuilder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::ReapplyDrivenProperties
// Il2CppName: ReapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*)>(&LayoutRebuilder::ReapplyDrivenProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "ReapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (LayoutRebuilder::*)()>(&LayoutRebuilder::get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::IsDestroyed
// Il2CppName: IsDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutRebuilder::*)()>(&LayoutRebuilder::IsDestroyed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "IsDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::StripDisabledBehavioursFromList
// Il2CppName: StripDisabledBehavioursFromList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::Component*>*)>(&LayoutRebuilder::StripDisabledBehavioursFromList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "StripDisabledBehavioursFromList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Component*>*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::ForceRebuildLayoutImmediate
// Il2CppName: ForceRebuildLayoutImmediate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*)>(&LayoutRebuilder::ForceRebuildLayoutImmediate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "ForceRebuildLayoutImmediate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)(UnityEngine::UI::CanvasUpdate)>(&LayoutRebuilder::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::PerformLayoutControl
// Il2CppName: PerformLayoutControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)(UnityEngine::RectTransform*, UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*)>(&LayoutRebuilder::PerformLayoutControl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "PerformLayoutControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::PerformLayoutCalculation
// Il2CppName: PerformLayoutCalculation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)(UnityEngine::RectTransform*, UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*)>(&LayoutRebuilder::PerformLayoutCalculation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "PerformLayoutCalculation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::MarkLayoutForRebuild
// Il2CppName: MarkLayoutForRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*)>(&LayoutRebuilder::MarkLayoutForRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "MarkLayoutForRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::ValidController
// Il2CppName: ValidController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RectTransform*, System::Collections::Generic::List_1<UnityEngine::Component*>*)>(&LayoutRebuilder::ValidController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "ValidController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Component*>*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::MarkLayoutRootForRebuild
// Il2CppName: MarkLayoutRootForRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*)>(&LayoutRebuilder::MarkLayoutRootForRebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "MarkLayoutRootForRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)()>(&LayoutRebuilder::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)()>(&LayoutRebuilder::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LayoutRebuilder::*)()>(&LayoutRebuilder::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutRebuilder::*)(::Il2CppObject*)>(&LayoutRebuilder::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LayoutRebuilder::*)()>(&LayoutRebuilder::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)()>(&LayoutRebuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::*)()>(&LayoutRebuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutRebuilder/<>c
#include "UnityEngine/UI/LayoutRebuilder_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UI.LayoutRebuilder/<>c <>9
UnityEngine::UI::LayoutRebuilder::$$c* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::UI::LayoutRebuilder::$$c*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UI.LayoutRebuilder/<>c <>9
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9(UnityEngine::UI::LayoutRebuilder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.Component> <>9__10_0
System::Predicate_1<UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.Component> <>9__10_0
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__10_0(System::Predicate_1<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_0
UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_0
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_0(UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_0", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_1
UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_1")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_1
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_1(UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_1", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_2
UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_2")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_2
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_2(UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_2", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_3
UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_get_$$9__12_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_1<UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_3")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>9__12_3
void UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_3(UnityEngine::Events::UnityAction_1<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::_set_$$9__12_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder/<>c", "<>9__12_3", value)));
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c..cctor
void UnityEngine::UI::LayoutRebuilder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<.cctor>b__5_0
void UnityEngine::UI::LayoutRebuilder::$$c::$_cctor$b__5_0(UnityEngine::UI::LayoutRebuilder* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<.cctor>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<StripDisabledBehavioursFromList>b__10_0
bool UnityEngine::UI::LayoutRebuilder::$$c::$StripDisabledBehavioursFromList$b__10_0(UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<StripDisabledBehavioursFromList>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StripDisabledBehavioursFromList>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<Rebuild>b__12_0
void UnityEngine::UI::LayoutRebuilder::$$c::$Rebuild$b__12_0(UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<Rebuild>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Rebuild>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<Rebuild>b__12_1
void UnityEngine::UI::LayoutRebuilder::$$c::$Rebuild$b__12_1(UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<Rebuild>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Rebuild>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<Rebuild>b__12_2
void UnityEngine::UI::LayoutRebuilder::$$c::$Rebuild$b__12_2(UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<Rebuild>b__12_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Rebuild>b__12_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder/<>c.<Rebuild>b__12_3
void UnityEngine::UI::LayoutRebuilder::$$c::$Rebuild$b__12_3(UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutRebuilder::$$c::<Rebuild>b__12_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Rebuild>b__12_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Writing MetadataGetter for method: LayoutRebuilder::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LayoutRebuilder::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$_cctor$b__5_0
// Il2CppName: <.cctor>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)(UnityEngine::UI::LayoutRebuilder*)>(&LayoutRebuilder::$$c::$_cctor$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<.cctor>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::LayoutRebuilder*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$StripDisabledBehavioursFromList$b__10_0
// Il2CppName: <StripDisabledBehavioursFromList>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LayoutRebuilder::$$c::*)(UnityEngine::Component*)>(&LayoutRebuilder::$$c::$StripDisabledBehavioursFromList$b__10_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<StripDisabledBehavioursFromList>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$Rebuild$b__12_0
// Il2CppName: <Rebuild>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)(UnityEngine::Component*)>(&LayoutRebuilder::$$c::$Rebuild$b__12_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<Rebuild>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$Rebuild$b__12_1
// Il2CppName: <Rebuild>b__12_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)(UnityEngine::Component*)>(&LayoutRebuilder::$$c::$Rebuild$b__12_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<Rebuild>b__12_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$Rebuild$b__12_2
// Il2CppName: <Rebuild>b__12_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)(UnityEngine::Component*)>(&LayoutRebuilder::$$c::$Rebuild$b__12_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<Rebuild>b__12_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::$Rebuild$b__12_3
// Il2CppName: <Rebuild>b__12_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)(UnityEngine::Component*)>(&LayoutRebuilder::$$c::$Rebuild$b__12_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), "<Rebuild>b__12_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: LayoutRebuilder::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)()>(&LayoutRebuilder::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutRebuilder::$$c::*)()>(&LayoutRebuilder::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutRebuilder::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutUtility
#include "UnityEngine/UI/LayoutUtility.hpp"
// Including type: UnityEngine.UI.LayoutUtility/<>c
#include "UnityEngine/UI/LayoutUtility_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinSize
float UnityEngine::UI::LayoutUtility::GetMinSize(UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredSize
float UnityEngine::UI::LayoutUtility::GetPreferredSize(UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetPreferredSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleSize
float UnityEngine::UI::LayoutUtility::GetFlexibleSize(UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetFlexibleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinWidth
float UnityEngine::UI::LayoutUtility::GetMinWidth(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetMinWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredWidth
float UnityEngine::UI::LayoutUtility::GetPreferredWidth(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleWidth
float UnityEngine::UI::LayoutUtility::GetFlexibleWidth(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetFlexibleWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinHeight
float UnityEngine::UI::LayoutUtility::GetMinHeight(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetMinHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredHeight
float UnityEngine::UI::LayoutUtility::GetPreferredHeight(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleHeight
float UnityEngine::UI::LayoutUtility::GetFlexibleHeight(UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetFlexibleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetLayoutProperty
float UnityEngine::UI::LayoutUtility::GetLayoutProperty(UnityEngine::RectTransform* rect, System::Func_2<UnityEngine::UI::ILayoutElement*, float>* property, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetLayoutProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetLayoutProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, property, defaultValue);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetLayoutProperty
float UnityEngine::UI::LayoutUtility::GetLayoutProperty(UnityEngine::RectTransform* rect, System::Func_2<UnityEngine::UI::ILayoutElement*, float>* property, float defaultValue, UnityEngine::UI::ILayoutElement*& source) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::GetLayoutProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetLayoutProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*&>()})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, property, defaultValue, source);
}
// Writing MetadataGetter for method: LayoutUtility::GetMinSize
// Il2CppName: GetMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*, int)>(&LayoutUtility::GetMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetPreferredSize
// Il2CppName: GetPreferredSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*, int)>(&LayoutUtility::GetPreferredSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetPreferredSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetFlexibleSize
// Il2CppName: GetFlexibleSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*, int)>(&LayoutUtility::GetFlexibleSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetFlexibleSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetMinWidth
// Il2CppName: GetMinWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetMinWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetMinWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetPreferredWidth
// Il2CppName: GetPreferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetPreferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetPreferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetFlexibleWidth
// Il2CppName: GetFlexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetFlexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetFlexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetMinHeight
// Il2CppName: GetMinHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetMinHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetMinHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetPreferredHeight
// Il2CppName: GetPreferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetPreferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetPreferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetFlexibleHeight
// Il2CppName: GetFlexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*)>(&LayoutUtility::GetFlexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetFlexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetLayoutProperty
// Il2CppName: GetLayoutProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*, System::Func_2<UnityEngine::UI::ILayoutElement*, float>*, float)>(&LayoutUtility::GetLayoutProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetLayoutProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::GetLayoutProperty
// Il2CppName: GetLayoutProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(UnityEngine::RectTransform*, System::Func_2<UnityEngine::UI::ILayoutElement*, float>*, float, UnityEngine::UI::ILayoutElement*&)>(&LayoutUtility::GetLayoutProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility*), "GetLayoutProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutUtility/<>c
#include "UnityEngine/UI/LayoutUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UI.LayoutUtility/<>c <>9
UnityEngine::UI::LayoutUtility::$$c* UnityEngine::UI::LayoutUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::UI::LayoutUtility::$$c*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UI.LayoutUtility/<>c <>9
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9(UnityEngine::UI::LayoutUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__3_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__3_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__3_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__4_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__4_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__4_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__4_1
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__4_1
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__4_1(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__5_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__5_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__5_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__6_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__6_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__6_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__7_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__7_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__7_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__7_1
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__7_1
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__7_1(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__7_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__8_0
System::Func_2<UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>9__8_0
void UnityEngine::UI::LayoutUtility::$$c::_set_$$9__8_0(System::Func_2<UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility/<>c", "<>9__8_0", value)));
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c..cctor
void UnityEngine::UI::LayoutUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetMinWidth>b__3_0
float UnityEngine::UI::LayoutUtility::$$c::$GetMinWidth$b__3_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetMinWidth>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMinWidth>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetPreferredWidth>b__4_0
float UnityEngine::UI::LayoutUtility::$$c::$GetPreferredWidth$b__4_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetPreferredWidth>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreferredWidth>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetPreferredWidth>b__4_1
float UnityEngine::UI::LayoutUtility::$$c::$GetPreferredWidth$b__4_1(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetPreferredWidth>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreferredWidth>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetFlexibleWidth>b__5_0
float UnityEngine::UI::LayoutUtility::$$c::$GetFlexibleWidth$b__5_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetFlexibleWidth>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFlexibleWidth>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetMinHeight>b__6_0
float UnityEngine::UI::LayoutUtility::$$c::$GetMinHeight$b__6_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetMinHeight>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMinHeight>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetPreferredHeight>b__7_0
float UnityEngine::UI::LayoutUtility::$$c::$GetPreferredHeight$b__7_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetPreferredHeight>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreferredHeight>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetPreferredHeight>b__7_1
float UnityEngine::UI::LayoutUtility::$$c::$GetPreferredHeight$b__7_1(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetPreferredHeight>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreferredHeight>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility/<>c.<GetFlexibleHeight>b__8_0
float UnityEngine::UI::LayoutUtility::$$c::$GetFlexibleHeight$b__8_0(UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::LayoutUtility::$$c::<GetFlexibleHeight>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFlexibleHeight>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, e);
}
// Writing MetadataGetter for method: LayoutUtility::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LayoutUtility::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetMinWidth$b__3_0
// Il2CppName: <GetMinWidth>b__3_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetMinWidth$b__3_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetMinWidth>b__3_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetPreferredWidth$b__4_0
// Il2CppName: <GetPreferredWidth>b__4_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetPreferredWidth$b__4_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetPreferredWidth>b__4_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetPreferredWidth$b__4_1
// Il2CppName: <GetPreferredWidth>b__4_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetPreferredWidth$b__4_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetPreferredWidth>b__4_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetFlexibleWidth$b__5_0
// Il2CppName: <GetFlexibleWidth>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetFlexibleWidth$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetFlexibleWidth>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetMinHeight$b__6_0
// Il2CppName: <GetMinHeight>b__6_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetMinHeight$b__6_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetMinHeight>b__6_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetPreferredHeight$b__7_0
// Il2CppName: <GetPreferredHeight>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetPreferredHeight$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetPreferredHeight>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetPreferredHeight$b__7_1
// Il2CppName: <GetPreferredHeight>b__7_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetPreferredHeight$b__7_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetPreferredHeight>b__7_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::$GetFlexibleHeight$b__8_0
// Il2CppName: <GetFlexibleHeight>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LayoutUtility::$$c::*)(UnityEngine::UI::ILayoutElement*)>(&LayoutUtility::$$c::$GetFlexibleHeight$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), "<GetFlexibleHeight>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ILayoutElement*>()});
  }
};
// Writing MetadataGetter for method: LayoutUtility::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutUtility::$$c::*)()>(&LayoutUtility::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LayoutUtility::$$c::*)()>(&LayoutUtility::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LayoutUtility::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.VerticalLayoutGroup
#include "UnityEngine/UI/VerticalLayoutGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::VerticalLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VerticalLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.SetLayoutVertical
void UnityEngine::UI::VerticalLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VerticalLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: VerticalLayoutGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VerticalLayoutGroup::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VerticalLayoutGroup::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VerticalLayoutGroup::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VerticalLayoutGroup::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VerticalLayoutGroup::*)()>(&VerticalLayoutGroup::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VerticalLayoutGroup*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Mask
#include "UnityEngine/UI/Mask.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Mask.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::Mask::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.get_showMaskGraphic
bool UnityEngine::UI::Mask::get_showMaskGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::get_showMaskGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showMaskGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.set_showMaskGraphic
void UnityEngine::UI::Mask::set_showMaskGraphic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::set_showMaskGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showMaskGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Mask.get_graphic
UnityEngine::UI::Graphic* UnityEngine::UI::Mask::get_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::get_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.MaskEnabled
bool UnityEngine::UI::Mask::MaskEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::MaskEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaskEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.OnSiblingGraphicEnabledDisabled
void UnityEngine::UI::Mask::OnSiblingGraphicEnabledDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::OnSiblingGraphicEnabledDisabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSiblingGraphicEnabledDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.IsRaycastLocationValid
bool UnityEngine::UI::Mask::IsRaycastLocationValid(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated method: UnityEngine.UI.Mask.GetModifiedMaterial
UnityEngine::Material* UnityEngine::UI::Mask::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: UnityEngine.UI.Mask.OnEnable
void UnityEngine::UI::Mask::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.OnDisable
void UnityEngine::UI::Mask::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Mask::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Mask::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Mask::*)()>(&Mask::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::get_showMaskGraphic
// Il2CppName: get_showMaskGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mask::*)()>(&Mask::get_showMaskGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "get_showMaskGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::set_showMaskGraphic
// Il2CppName: set_showMaskGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)(bool)>(&Mask::set_showMaskGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "set_showMaskGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Mask::get_graphic
// Il2CppName: get_graphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Graphic* (Mask::*)()>(&Mask::get_graphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "get_graphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::MaskEnabled
// Il2CppName: MaskEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mask::*)()>(&Mask::MaskEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "MaskEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::OnSiblingGraphicEnabledDisabled
// Il2CppName: OnSiblingGraphicEnabledDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)()>(&Mask::OnSiblingGraphicEnabledDisabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "OnSiblingGraphicEnabledDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::IsRaycastLocationValid
// Il2CppName: IsRaycastLocationValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mask::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&Mask::IsRaycastLocationValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "IsRaycastLocationValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Mask::GetModifiedMaterial
// Il2CppName: GetModifiedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Mask::*)(UnityEngine::Material*)>(&Mask::GetModifiedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "GetModifiedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: Mask::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)()>(&Mask::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)()>(&Mask::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)()>(&Mask::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mask::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mask::*)()>(&Mask::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mask*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MaskUtilities
#include "UnityEngine/UI/MaskUtilities.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.MaskUtilities.Notify2DMaskStateChanged
void UnityEngine::UI::MaskUtilities::Notify2DMaskStateChanged(UnityEngine::Component* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::Notify2DMaskStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "Notify2DMaskStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.NotifyStencilStateChanged
void UnityEngine::UI::MaskUtilities::NotifyStencilStateChanged(UnityEngine::Component* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::NotifyStencilStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "NotifyStencilStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.FindRootSortOverrideCanvas
UnityEngine::Transform* UnityEngine::UI::MaskUtilities::FindRootSortOverrideCanvas(UnityEngine::Transform* start) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::FindRootSortOverrideCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "FindRootSortOverrideCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetStencilDepth
int UnityEngine::UI::MaskUtilities::GetStencilDepth(UnityEngine::Transform* transform, UnityEngine::Transform* stopAfter) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::GetStencilDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetStencilDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(stopAfter)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, stopAfter);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.IsDescendantOrSelf
bool UnityEngine::UI::MaskUtilities::IsDescendantOrSelf(UnityEngine::Transform* father, UnityEngine::Transform* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::IsDescendantOrSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "IsDescendantOrSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(father), ::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, father, child);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetRectMaskForClippable
UnityEngine::UI::RectMask2D* UnityEngine::UI::MaskUtilities::GetRectMaskForClippable(UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::GetRectMaskForClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetRectMaskForClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::RectMask2D*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetRectMasksForClip
void UnityEngine::UI::MaskUtilities::GetRectMasksForClip(UnityEngine::UI::RectMask2D* clipper, System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>* masks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskUtilities::GetRectMasksForClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetRectMasksForClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper), ::il2cpp_utils::ExtractType(masks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clipper, masks);
}
// Writing MetadataGetter for method: MaskUtilities::Notify2DMaskStateChanged
// Il2CppName: Notify2DMaskStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Component*)>(&MaskUtilities::Notify2DMaskStateChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "Notify2DMaskStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::NotifyStencilStateChanged
// Il2CppName: NotifyStencilStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Component*)>(&MaskUtilities::NotifyStencilStateChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "NotifyStencilStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Component*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::FindRootSortOverrideCanvas
// Il2CppName: FindRootSortOverrideCanvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (*)(UnityEngine::Transform*)>(&MaskUtilities::FindRootSortOverrideCanvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "FindRootSortOverrideCanvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::GetStencilDepth
// Il2CppName: GetStencilDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&MaskUtilities::GetStencilDepth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "GetStencilDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::IsDescendantOrSelf
// Il2CppName: IsDescendantOrSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Transform*, UnityEngine::Transform*)>(&MaskUtilities::IsDescendantOrSelf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "IsDescendantOrSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::GetRectMaskForClippable
// Il2CppName: GetRectMaskForClippable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::RectMask2D* (*)(UnityEngine::UI::IClippable*)>(&MaskUtilities::GetRectMaskForClippable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "GetRectMaskForClippable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::IClippable*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::GetRectMasksForClip
// Il2CppName: GetRectMasksForClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::UI::RectMask2D*, System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>*)>(&MaskUtilities::GetRectMasksForClip)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), "GetRectMasksForClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::RectMask2D*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UI::RectMask2D*>*>()});
  }
};
// Writing MetadataGetter for method: MaskUtilities::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskUtilities::*)()>(&MaskUtilities::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskUtilities::*)()>(&MaskUtilities::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskUtilities*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
// Including type: UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
#include "UnityEngine/UI/MaskableGraphic_CullStateChangedEvent.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_onCullStateChanged
UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* UnityEngine::UI::MaskableGraphic::get_onCullStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::get_onCullStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onCullStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::MaskableGraphic::CullStateChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.set_onCullStateChanged
void UnityEngine::UI::MaskableGraphic::set_onCullStateChanged(UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::set_onCullStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onCullStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_maskable
bool UnityEngine::UI::MaskableGraphic::get_maskable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::get_maskable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.set_maskable
void UnityEngine::UI::MaskableGraphic::set_maskable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::set_maskable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_isMaskingGraphic
bool UnityEngine::UI::MaskableGraphic::get_isMaskingGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::get_isMaskingGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMaskingGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.set_isMaskingGraphic
void UnityEngine::UI::MaskableGraphic::set_isMaskingGraphic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::set_isMaskingGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isMaskingGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.GetModifiedMaterial
UnityEngine::Material* UnityEngine::UI::MaskableGraphic::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.Cull
void UnityEngine::UI::MaskableGraphic::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UpdateCull
void UnityEngine::UI::MaskableGraphic::UpdateCull(bool cull) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::UpdateCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cull)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cull);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.SetClipRect
void UnityEngine::UI::MaskableGraphic::SetClipRect(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::SetClipRect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.SetClipSoftness
void UnityEngine::UI::MaskableGraphic::SetClipSoftness(UnityEngine::Vector2 clipSoftness) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::SetClipSoftness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipSoftness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipSoftness)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipSoftness);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.ParentMaskStateChanged
void UnityEngine::UI::MaskableGraphic::ParentMaskStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::ParentMaskStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentMaskStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_rootCanvasRect
UnityEngine::Rect UnityEngine::UI::MaskableGraphic::get_rootCanvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::get_rootCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UpdateClipParent
void UnityEngine::UI::MaskableGraphic::UpdateClipParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::UpdateClipParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClipParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.RecalculateClipping
void UnityEngine::UI::MaskableGraphic::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.RecalculateMasking
void UnityEngine::UI::MaskableGraphic::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UnityEngine.UI.IClippable.get_gameObject
UnityEngine::GameObject* UnityEngine::UI::MaskableGraphic::UnityEngine_UI_IClippable_get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::UnityEngine.UI.IClippable.get_gameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.IClippable.get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnEnable
void UnityEngine::UI::MaskableGraphic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnDisable
void UnityEngine::UI::MaskableGraphic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnTransformParentChanged
void UnityEngine::UI::MaskableGraphic::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnCanvasHierarchyChanged
void UnityEngine::UI::MaskableGraphic::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MaskableGraphic::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MaskableGraphic::get_onCullStateChanged
// Il2CppName: get_onCullStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* (MaskableGraphic::*)()>(&MaskableGraphic::get_onCullStateChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "get_onCullStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::set_onCullStateChanged
// Il2CppName: set_onCullStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(UnityEngine::UI::MaskableGraphic::CullStateChangedEvent*)>(&MaskableGraphic::set_onCullStateChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "set_onCullStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::MaskableGraphic::CullStateChangedEvent*>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::get_maskable
// Il2CppName: get_maskable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MaskableGraphic::*)()>(&MaskableGraphic::get_maskable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "get_maskable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::set_maskable
// Il2CppName: set_maskable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(bool)>(&MaskableGraphic::set_maskable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "set_maskable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::get_isMaskingGraphic
// Il2CppName: get_isMaskingGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MaskableGraphic::*)()>(&MaskableGraphic::get_isMaskingGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "get_isMaskingGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::set_isMaskingGraphic
// Il2CppName: set_isMaskingGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(bool)>(&MaskableGraphic::set_isMaskingGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "set_isMaskingGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::GetModifiedMaterial
// Il2CppName: GetModifiedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (MaskableGraphic::*)(UnityEngine::Material*)>(&MaskableGraphic::GetModifiedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "GetModifiedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::Cull
// Il2CppName: Cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(UnityEngine::Rect, bool)>(&MaskableGraphic::Cull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "Cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::UpdateCull
// Il2CppName: UpdateCull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(bool)>(&MaskableGraphic::UpdateCull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "UpdateCull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::SetClipRect
// Il2CppName: SetClipRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(UnityEngine::Rect, bool)>(&MaskableGraphic::SetClipRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "SetClipRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::SetClipSoftness
// Il2CppName: SetClipSoftness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)(UnityEngine::Vector2)>(&MaskableGraphic::SetClipSoftness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "SetClipSoftness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::ParentMaskStateChanged
// Il2CppName: ParentMaskStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::ParentMaskStateChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "ParentMaskStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::get_rootCanvasRect
// Il2CppName: get_rootCanvasRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (MaskableGraphic::*)()>(&MaskableGraphic::get_rootCanvasRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "get_rootCanvasRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::UpdateClipParent
// Il2CppName: UpdateClipParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::UpdateClipParent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "UpdateClipParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::RecalculateClipping
// Il2CppName: RecalculateClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::RecalculateClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "RecalculateClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::RecalculateMasking
// Il2CppName: RecalculateMasking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::RecalculateMasking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "RecalculateMasking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::UnityEngine_UI_IClippable_get_gameObject
// Il2CppName: UnityEngine.UI.IClippable.get_gameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (MaskableGraphic::*)()>(&MaskableGraphic::UnityEngine_UI_IClippable_get_gameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "UnityEngine.UI.IClippable.get_gameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MaskableGraphic::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::*)()>(&MaskableGraphic::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
#include "UnityEngine/UI/MaskableGraphic_CullStateChangedEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MaskableGraphic::CullStateChangedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::CullStateChangedEvent::*)()>(&MaskableGraphic::CullStateChangedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic::CullStateChangedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MaskableGraphic::CullStateChangedEvent::*)()>(&MaskableGraphic::CullStateChangedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MaskableGraphic::CullStateChangedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMaterialModifier
#include "UnityEngine/UI/IMaterialModifier.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMaterialModifier.GetModifiedMaterial
UnityEngine::Material* UnityEngine::UI::IMaterialModifier::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMaterialModifier::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Writing MetadataGetter for method: IMaterialModifier::GetModifiedMaterial
// Il2CppName: GetModifiedMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (IMaterialModifier::*)(UnityEngine::Material*)>(&IMaterialModifier::GetModifiedMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMaterialModifier*), "GetModifiedMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Misc
#include "UnityEngine/UI/Misc.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Misc.Destroy
void UnityEngine::UI::Misc::Destroy(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Misc::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Misc", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.UI.Misc.DestroyImmediate
void UnityEngine::UI::Misc::DestroyImmediate(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Misc::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Misc", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Writing MetadataGetter for method: Misc::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Object*)>(&Misc::Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Misc*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: Misc::DestroyImmediate
// Il2CppName: DestroyImmediate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Object*)>(&Misc::DestroyImmediate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Misc*), "DestroyImmediate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MultipleDisplayUtilities
#include "UnityEngine/UI/MultipleDisplayUtilities.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.MultipleDisplayUtilities.GetRelativeMousePositionForDrag
bool UnityEngine::UI::MultipleDisplayUtilities::GetRelativeMousePositionForDrag(UnityEngine::EventSystems::PointerEventData* eventData, UnityEngine::Vector2& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MultipleDisplayUtilities::GetRelativeMousePositionForDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MultipleDisplayUtilities", "GetRelativeMousePositionForDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventData, position);
}
// Autogenerated method: UnityEngine.UI.MultipleDisplayUtilities.GetMousePositionRelativeToMainDisplayResolution
UnityEngine::Vector2 UnityEngine::UI::MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MultipleDisplayUtilities", "GetMousePositionRelativeToMainDisplayResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MultipleDisplayUtilities::GetRelativeMousePositionForDrag
// Il2CppName: GetRelativeMousePositionForDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::Vector2&)>(&MultipleDisplayUtilities::GetRelativeMousePositionForDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultipleDisplayUtilities*), "GetRelativeMousePositionForDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution
// Il2CppName: GetMousePositionRelativeToMainDisplayResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)()>(&MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultipleDisplayUtilities*), "GetMousePositionRelativeToMainDisplayResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Navigation
#include "UnityEngine/UI/Navigation.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Navigation.get_mode
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Navigation::Mode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_mode
void UnityEngine::UI::Navigation::set_mode(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnUp
UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_selectOnUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnUp
void UnityEngine::UI::Navigation::set_selectOnUp(UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::set_selectOnUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnDown
UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_selectOnDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnDown
void UnityEngine::UI::Navigation::set_selectOnDown(UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::set_selectOnDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnLeft
UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_selectOnLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnLeft
void UnityEngine::UI::Navigation::set_selectOnLeft(UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::set_selectOnLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnRight
UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_selectOnRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnRight
void UnityEngine::UI::Navigation::set_selectOnRight(UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::set_selectOnRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_defaultNavigation
UnityEngine::UI::Navigation UnityEngine::UI::Navigation::get_defaultNavigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::get_defaultNavigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Navigation", "get_defaultNavigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Navigation, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.Equals
bool UnityEngine::UI::Navigation::Equals(UnityEngine::UI::Navigation other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: Navigation::get_mode
// Il2CppName: get_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Navigation::Mode (Navigation::*)()>(&Navigation::get_mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::set_mode
// Il2CppName: set_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Navigation::*)(UnityEngine::UI::Navigation::Mode)>(&Navigation::set_mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "set_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Navigation::Mode>()});
  }
};
// Writing MetadataGetter for method: Navigation::get_selectOnUp
// Il2CppName: get_selectOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Navigation::*)()>(&Navigation::get_selectOnUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_selectOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::set_selectOnUp
// Il2CppName: set_selectOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Navigation::*)(UnityEngine::UI::Selectable*)>(&Navigation::set_selectOnUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "set_selectOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: Navigation::get_selectOnDown
// Il2CppName: get_selectOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Navigation::*)()>(&Navigation::get_selectOnDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_selectOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::set_selectOnDown
// Il2CppName: set_selectOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Navigation::*)(UnityEngine::UI::Selectable*)>(&Navigation::set_selectOnDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "set_selectOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: Navigation::get_selectOnLeft
// Il2CppName: get_selectOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Navigation::*)()>(&Navigation::get_selectOnLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_selectOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::set_selectOnLeft
// Il2CppName: set_selectOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Navigation::*)(UnityEngine::UI::Selectable*)>(&Navigation::set_selectOnLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "set_selectOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: Navigation::get_selectOnRight
// Il2CppName: get_selectOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Navigation::*)()>(&Navigation::get_selectOnRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_selectOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::set_selectOnRight
// Il2CppName: set_selectOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Navigation::*)(UnityEngine::UI::Selectable*)>(&Navigation::set_selectOnRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "set_selectOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: Navigation::get_defaultNavigation
// Il2CppName: get_defaultNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Navigation (*)()>(&Navigation::get_defaultNavigation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "get_defaultNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Navigation::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Navigation::*)(UnityEngine::UI::Navigation)>(&Navigation::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Navigation), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Navigation>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Navigation/Mode
#include "UnityEngine/UI/Navigation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode None
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode None
void UnityEngine::UI::Navigation::Mode::_set_None(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Horizontal
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Horizontal
void UnityEngine::UI::Navigation::Mode::_set_Horizontal(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Vertical
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Vertical
void UnityEngine::UI::Navigation::Mode::_set_Vertical(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Automatic
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Automatic
void UnityEngine::UI::Navigation::Mode::_set_Automatic(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Explicit
UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Explicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_get_Explicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Explicit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Explicit
void UnityEngine::UI::Navigation::Mode::_set_Explicit(UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Navigation::Mode::_set_Explicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Explicit", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.RawImage
#include "UnityEngine/UI/RawImage.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.RawImage.get_texture
UnityEngine::Texture* UnityEngine::UI::RawImage::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.set_texture
void UnityEngine::UI::RawImage::set_texture(UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::set_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RawImage.get_uvRect
UnityEngine::Rect UnityEngine::UI::RawImage::get_uvRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::get_uvRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uvRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.set_uvRect
void UnityEngine::UI::RawImage::set_uvRect(UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::set_uvRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uvRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RawImage.get_mainTexture
UnityEngine::Texture* UnityEngine::UI::RawImage::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.SetNativeSize
void UnityEngine::UI::RawImage::SetNativeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::SetNativeSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNativeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.OnPopulateMesh
void UnityEngine::UI::RawImage::OnPopulateMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated method: UnityEngine.UI.RawImage.OnDidApplyAnimationProperties
void UnityEngine::UI::RawImage::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RawImage::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RawImage::get_texture
// Il2CppName: get_texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (RawImage::*)()>(&RawImage::get_texture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "get_texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RawImage::set_texture
// Il2CppName: set_texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)(UnityEngine::Texture*)>(&RawImage::set_texture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "set_texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: RawImage::get_uvRect
// Il2CppName: get_uvRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RawImage::*)()>(&RawImage::get_uvRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "get_uvRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RawImage::set_uvRect
// Il2CppName: set_uvRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)(UnityEngine::Rect)>(&RawImage::set_uvRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "set_uvRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: RawImage::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)()>(&RawImage::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)()>(&RawImage::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RawImage::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (RawImage::*)()>(&RawImage::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RawImage::SetNativeSize
// Il2CppName: SetNativeSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)()>(&RawImage::SetNativeSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "SetNativeSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RawImage::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)(UnityEngine::UI::VertexHelper*)>(&RawImage::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: RawImage::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RawImage::*)()>(&RawImage::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RawImage*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.UI.RectangularVertexClipper
#include "UnityEngine/UI/RectangularVertexClipper.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.RectMask2D.get_padding
UnityEngine::Vector4 UnityEngine::UI::RectMask2D::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.set_padding
void UnityEngine::UI::RectMask2D::set_padding(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_softness
UnityEngine::Vector2Int UnityEngine::UI::RectMask2D::get_softness() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_softness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_softness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.set_softness
void UnityEngine::UI::RectMask2D::set_softness(UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::set_softness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_softness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_Canvas
UnityEngine::Canvas* UnityEngine::UI::RectMask2D::get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_Canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_canvasRect
UnityEngine::Rect UnityEngine::UI::RectMask2D::get_canvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_canvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::RectMask2D::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.IsRaycastLocationValid
bool UnityEngine::UI::RectMask2D::IsRaycastLocationValid(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_rootCanvasRect
UnityEngine::Rect UnityEngine::UI::RectMask2D::get_rootCanvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::get_rootCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.PerformClipping
void UnityEngine::UI::RectMask2D::PerformClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::PerformClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.UpdateClipSoftness
void UnityEngine::UI::RectMask2D::UpdateClipSoftness() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::UpdateClipSoftness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClipSoftness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.AddClippable
void UnityEngine::UI::RectMask2D::AddClippable(UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::AddClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.RemoveClippable
void UnityEngine::UI::RectMask2D::RemoveClippable(UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::RemoveClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnEnable
void UnityEngine::UI::RectMask2D::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnDisable
void UnityEngine::UI::RectMask2D::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnTransformParentChanged
void UnityEngine::UI::RectMask2D::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnCanvasHierarchyChanged
void UnityEngine::UI::RectMask2D::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::RectMask2D::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RectMask2D::get_padding
// Il2CppName: get_padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (RectMask2D::*)()>(&RectMask2D::get_padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::set_padding
// Il2CppName: set_padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)(UnityEngine::Vector4)>(&RectMask2D::set_padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "set_padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: RectMask2D::get_softness
// Il2CppName: get_softness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2Int (RectMask2D::*)()>(&RectMask2D::get_softness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_softness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::set_softness
// Il2CppName: set_softness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)(UnityEngine::Vector2Int)>(&RectMask2D::set_softness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "set_softness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2Int>()});
  }
};
// Writing MetadataGetter for method: RectMask2D::get_Canvas
// Il2CppName: get_Canvas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Canvas* (RectMask2D::*)()>(&RectMask2D::get_Canvas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_Canvas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::get_canvasRect
// Il2CppName: get_canvasRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RectMask2D::*)()>(&RectMask2D::get_canvasRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_canvasRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (RectMask2D::*)()>(&RectMask2D::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::IsRaycastLocationValid
// Il2CppName: IsRaycastLocationValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RectMask2D::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&RectMask2D::IsRaycastLocationValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "IsRaycastLocationValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: RectMask2D::get_rootCanvasRect
// Il2CppName: get_rootCanvasRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RectMask2D::*)()>(&RectMask2D::get_rootCanvasRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "get_rootCanvasRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::PerformClipping
// Il2CppName: PerformClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::PerformClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "PerformClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::UpdateClipSoftness
// Il2CppName: UpdateClipSoftness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::UpdateClipSoftness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "UpdateClipSoftness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::AddClippable
// Il2CppName: AddClippable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)(UnityEngine::UI::IClippable*)>(&RectMask2D::AddClippable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "AddClippable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::IClippable*>()});
  }
};
// Writing MetadataGetter for method: RectMask2D::RemoveClippable
// Il2CppName: RemoveClippable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)(UnityEngine::UI::IClippable*)>(&RectMask2D::RemoveClippable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "RemoveClippable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::IClippable*>()});
  }
};
// Writing MetadataGetter for method: RectMask2D::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectMask2D::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectMask2D::*)()>(&RectMask2D::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectMask2D*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ScrollRect
#include "UnityEngine/UI/ScrollRect.hpp"
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: UnityEngine.UI.ScrollRect/ScrollRectEvent
#include "UnityEngine/UI/ScrollRect_ScrollRectEvent.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ScrollRect.get_content
UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_content
void UnityEngine::UI::ScrollRect::set_content(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontal
bool UnityEngine::UI::ScrollRect::get_horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontal
void UnityEngine::UI::ScrollRect::set_horizontal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_vertical
bool UnityEngine::UI::ScrollRect::get_vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_vertical
void UnityEngine::UI::ScrollRect::set_vertical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_movementType
UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ScrollRect::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_movementType
void UnityEngine::UI::ScrollRect::set_movementType(UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_elasticity
float UnityEngine::UI::ScrollRect::get_elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_elasticity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elasticity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_elasticity
void UnityEngine::UI::ScrollRect::set_elasticity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_elasticity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_elasticity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_inertia
bool UnityEngine::UI::ScrollRect::get_inertia() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_inertia");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertia", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_inertia
void UnityEngine::UI::ScrollRect::set_inertia(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_inertia");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertia", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_decelerationRate
float UnityEngine::UI::ScrollRect::get_decelerationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_decelerationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_decelerationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_decelerationRate
void UnityEngine::UI::ScrollRect::set_decelerationRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_decelerationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decelerationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_scrollSensitivity
float UnityEngine::UI::ScrollRect::get_scrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_scrollSensitivity
void UnityEngine::UI::ScrollRect::set_scrollSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_viewport
UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_viewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_viewport
void UnityEngine::UI::ScrollRect::set_viewport(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_viewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_viewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbar
UnityEngine::UI::Scrollbar* UnityEngine::UI::ScrollRect::get_horizontalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_horizontalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbar
void UnityEngine::UI::ScrollRect::set_horizontalScrollbar(UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_horizontalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbar
UnityEngine::UI::Scrollbar* UnityEngine::UI::ScrollRect::get_verticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbar
void UnityEngine::UI::ScrollRect::set_verticalScrollbar(UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbarVisibility
UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ScrollRect::ScrollbarVisibility, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbarVisibility
void UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility(UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbarVisibility
UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ScrollRect::ScrollbarVisibility, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbarVisibility
void UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility(UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbarSpacing
float UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbarSpacing
void UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbarSpacing
float UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbarSpacing
void UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_onValueChanged
UnityEngine::UI::ScrollRect::ScrollRectEvent* UnityEngine::UI::ScrollRect::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ScrollRect::ScrollRectEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_onValueChanged
void UnityEngine::UI::ScrollRect::set_onValueChanged(UnityEngine::UI::ScrollRect::ScrollRectEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_viewRect
UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_viewRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_viewRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_velocity
UnityEngine::Vector2 UnityEngine::UI::ScrollRect::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_velocity
void UnityEngine::UI::ScrollRect::set_velocity(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_rectTransform
UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.Rebuild
void UnityEngine::UI::ScrollRect::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.LayoutComplete
void UnityEngine::UI::ScrollRect::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.GraphicUpdateComplete
void UnityEngine::UI::ScrollRect::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateCachedData
void UnityEngine::UI::ScrollRect::UpdateCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateCachedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.EnsureLayoutHasRebuilt
void UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLayoutHasRebuilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.StopMovement
void UnityEngine::UI::ScrollRect::StopMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::StopMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnScroll
void UnityEngine::UI::ScrollRect::OnScroll(UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnScroll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnInitializePotentialDrag
void UnityEngine::UI::ScrollRect::OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnBeginDrag
void UnityEngine::UI::ScrollRect::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnEndDrag
void UnityEngine::UI::ScrollRect::OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnDrag
void UnityEngine::UI::ScrollRect::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetContentAnchoredPosition
void UnityEngine::UI::ScrollRect::SetContentAnchoredPosition(UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetContentAnchoredPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentAnchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.LateUpdate
void UnityEngine::UI::ScrollRect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::LateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdatePrevData
void UnityEngine::UI::ScrollRect::UpdatePrevData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdatePrevData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePrevData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbars
void UnityEngine::UI::ScrollRect::UpdateScrollbars(UnityEngine::Vector2 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateScrollbars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_normalizedPosition
UnityEngine::Vector2 UnityEngine::UI::ScrollRect::get_normalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_normalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_normalizedPosition
void UnityEngine::UI::ScrollRect::set_normalizedPosition(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_normalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalNormalizedPosition
float UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalNormalizedPosition
void UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalNormalizedPosition
float UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalNormalizedPosition
void UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetHorizontalNormalizedPosition
void UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHorizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetVerticalNormalizedPosition
void UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetNormalizedPosition
void UnityEngine::UI::ScrollRect::SetNormalizedPosition(float value, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetNormalizedPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, axis);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.RubberDelta
float UnityEngine::UI::ScrollRect::RubberDelta(float overStretching, float viewSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::RubberDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "RubberDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overStretching), ::il2cpp_utils::ExtractType(viewSize)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, overStretching, viewSize);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_hScrollingNeeded
bool UnityEngine::UI::ScrollRect::get_hScrollingNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_hScrollingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hScrollingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_vScrollingNeeded
bool UnityEngine::UI::ScrollRect::get_vScrollingNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_vScrollingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vScrollingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateLayoutInputHorizontal
void UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateLayoutInputVertical
void UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_minWidth
float UnityEngine::UI::ScrollRect::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_preferredWidth
float UnityEngine::UI::ScrollRect::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_flexibleWidth
float UnityEngine::UI::ScrollRect::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_minHeight
float UnityEngine::UI::ScrollRect::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_preferredHeight
float UnityEngine::UI::ScrollRect::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_flexibleHeight
float UnityEngine::UI::ScrollRect::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_layoutPriority
int UnityEngine::UI::ScrollRect::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetLayoutHorizontal
void UnityEngine::UI::ScrollRect::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetLayoutVertical
void UnityEngine::UI::ScrollRect::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbarVisibility
void UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateOneScrollbarVisibility
void UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility(bool xScrollingNeeded, bool xAxisEnabled, UnityEngine::UI::ScrollRect::ScrollbarVisibility scrollbarVisibility, UnityEngine::UI::Scrollbar* scrollbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "UpdateOneScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xScrollingNeeded), ::il2cpp_utils::ExtractType(xAxisEnabled), ::il2cpp_utils::ExtractType(scrollbarVisibility), ::il2cpp_utils::ExtractType(scrollbar)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xScrollingNeeded, xAxisEnabled, scrollbarVisibility, scrollbar);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbarLayout
void UnityEngine::UI::ScrollRect::UpdateScrollbarLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateScrollbarLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbarLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateBounds
void UnityEngine::UI::ScrollRect::UpdateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UpdateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.AdjustBounds
void UnityEngine::UI::ScrollRect::AdjustBounds(UnityEngine::Bounds& viewBounds, UnityEngine::Vector2& contentPivot, UnityEngine::Vector3& contentSize, UnityEngine::Vector3& contentPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::AdjustBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "AdjustBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewBounds), ::il2cpp_utils::ExtractType(contentPivot), ::il2cpp_utils::ExtractType(contentSize), ::il2cpp_utils::ExtractType(contentPos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, viewBounds, contentPivot, contentSize, contentPos);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.GetBounds
UnityEngine::Bounds UnityEngine::UI::ScrollRect::GetBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.InternalGetBounds
UnityEngine::Bounds UnityEngine::UI::ScrollRect::InternalGetBounds(::Array<UnityEngine::Vector3>* corners, UnityEngine::Matrix4x4& viewWorldToLocalMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::InternalGetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "InternalGetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(corners), ::il2cpp_utils::ExtractType(viewWorldToLocalMatrix)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, corners, viewWorldToLocalMatrix);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateOffset
UnityEngine::Vector2 UnityEngine::UI::ScrollRect::CalculateOffset(UnityEngine::Vector2 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::CalculateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, delta);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.InternalCalculateOffset
UnityEngine::Vector2 UnityEngine::UI::ScrollRect::InternalCalculateOffset(UnityEngine::Bounds& viewBounds, UnityEngine::Bounds& contentBounds, bool horizontal, bool vertical, UnityEngine::UI::ScrollRect::MovementType movementType, UnityEngine::Vector2& delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::InternalCalculateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "InternalCalculateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewBounds), ::il2cpp_utils::ExtractType(contentBounds), ::il2cpp_utils::ExtractType(horizontal), ::il2cpp_utils::ExtractType(vertical), ::il2cpp_utils::ExtractType(movementType), ::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, viewBounds, contentBounds, horizontal, vertical, movementType, delta);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetDirty
void UnityEngine::UI::ScrollRect::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetDirtyCaching
void UnityEngine::UI::ScrollRect::SetDirtyCaching() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::SetDirtyCaching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirtyCaching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::ScrollRect::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnEnable
void UnityEngine::UI::ScrollRect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnDisable
void UnityEngine::UI::ScrollRect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.IsActive
bool UnityEngine::UI::ScrollRect::IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::IsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnRectTransformDimensionsChange
void UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ScrollRect::get_content
// Il2CppName: get_content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_content
// Il2CppName: set_content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::RectTransform*)>(&ScrollRect::set_content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_horizontal
// Il2CppName: get_horizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_horizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_horizontal
// Il2CppName: set_horizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_horizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_vertical
// Il2CppName: get_vertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_vertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_vertical
// Il2CppName: set_vertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_vertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_movementType
// Il2CppName: get_movementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::MovementType (ScrollRect::*)()>(&ScrollRect::get_movementType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_movementType
// Il2CppName: set_movementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::MovementType)>(&ScrollRect::set_movementType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::MovementType>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_elasticity
// Il2CppName: get_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_elasticity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_elasticity
// Il2CppName: set_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_elasticity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_inertia
// Il2CppName: get_inertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_inertia)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_inertia
// Il2CppName: set_inertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(bool)>(&ScrollRect::set_inertia)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_decelerationRate
// Il2CppName: get_decelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_decelerationRate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_decelerationRate
// Il2CppName: set_decelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_decelerationRate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_scrollSensitivity
// Il2CppName: get_scrollSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_scrollSensitivity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_scrollSensitivity
// Il2CppName: set_scrollSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_scrollSensitivity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_viewport
// Il2CppName: get_viewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_viewport)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_viewport
// Il2CppName: set_viewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::RectTransform*)>(&ScrollRect::set_viewport)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbar
// Il2CppName: get_horizontalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar* (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbar
// Il2CppName: set_horizontalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::Scrollbar*)>(&ScrollRect::set_horizontalScrollbar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_verticalScrollbar
// Il2CppName: get_verticalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar* (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_verticalScrollbar
// Il2CppName: set_verticalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::Scrollbar*)>(&ScrollRect::set_verticalScrollbar)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbarVisibility
// Il2CppName: get_horizontalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollbarVisibility (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbarVisibility
// Il2CppName: set_horizontalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&ScrollRect::set_horizontalScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_verticalScrollbarVisibility
// Il2CppName: get_verticalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollbarVisibility (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_verticalScrollbarVisibility
// Il2CppName: set_verticalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&ScrollRect::set_verticalScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_horizontalScrollbarSpacing
// Il2CppName: get_horizontalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_horizontalScrollbarSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_horizontalScrollbarSpacing
// Il2CppName: set_horizontalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_horizontalScrollbarSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_verticalScrollbarSpacing
// Il2CppName: get_verticalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_verticalScrollbarSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_verticalScrollbarSpacing
// Il2CppName: set_verticalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_verticalScrollbarSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ScrollRect::ScrollRectEvent* (ScrollRect::*)()>(&ScrollRect::get_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::ScrollRect::ScrollRectEvent*)>(&ScrollRect::set_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollRectEvent*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_viewRect
// Il2CppName: get_viewRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_viewRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_viewRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)()>(&ScrollRect::get_velocity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_velocity
// Il2CppName: set_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::set_velocity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (ScrollRect::*)()>(&ScrollRect::get_rectTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::UI::CanvasUpdate)>(&ScrollRect::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateCachedData
// Il2CppName: UpdateCachedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateCachedData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateCachedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::EnsureLayoutHasRebuilt
// Il2CppName: EnsureLayoutHasRebuilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::EnsureLayoutHasRebuilt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "EnsureLayoutHasRebuilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::StopMovement
// Il2CppName: StopMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::StopMovement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "StopMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnScroll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnInitializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnBeginDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnEndDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::EventSystems::PointerEventData*)>(&ScrollRect::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetContentAnchoredPosition
// Il2CppName: SetContentAnchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::SetContentAnchoredPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetContentAnchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::LateUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdatePrevData
// Il2CppName: UpdatePrevData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdatePrevData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdatePrevData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateScrollbars
// Il2CppName: UpdateScrollbars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::UpdateScrollbars)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_normalizedPosition
// Il2CppName: get_normalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)()>(&ScrollRect::get_normalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_normalizedPosition
// Il2CppName: set_normalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::set_normalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_horizontalNormalizedPosition
// Il2CppName: get_horizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_horizontalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_horizontalNormalizedPosition
// Il2CppName: set_horizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_horizontalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_verticalNormalizedPosition
// Il2CppName: get_verticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_verticalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::set_verticalNormalizedPosition
// Il2CppName: set_verticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::set_verticalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "set_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetHorizontalNormalizedPosition
// Il2CppName: SetHorizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::SetHorizontalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetHorizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetVerticalNormalizedPosition
// Il2CppName: SetVerticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float)>(&ScrollRect::SetVerticalNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetVerticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetNormalizedPosition
// Il2CppName: SetNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)(float, int)>(&ScrollRect::SetNormalizedPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::RubberDelta
// Il2CppName: RubberDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float)>(&ScrollRect::RubberDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "RubberDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_hScrollingNeeded
// Il2CppName: get_hScrollingNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_hScrollingNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_hScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_vScrollingNeeded
// Il2CppName: get_vScrollingNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::get_vScrollingNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_vScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ScrollRect::*)()>(&ScrollRect::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ScrollRect::*)()>(&ScrollRect::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetLayoutHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetLayoutVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateScrollbarVisibility
// Il2CppName: UpdateScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateOneScrollbarVisibility
// Il2CppName: UpdateOneScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, UnityEngine::UI::ScrollRect::ScrollbarVisibility, UnityEngine::UI::Scrollbar*)>(&ScrollRect::UpdateOneScrollbarVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateOneScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::ScrollbarVisibility>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar*>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateScrollbarLayout
// Il2CppName: UpdateScrollbarLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateScrollbarLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateScrollbarLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UpdateBounds
// Il2CppName: UpdateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::UpdateBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UpdateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::AdjustBounds
// Il2CppName: AdjustBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Bounds&, UnityEngine::Vector2&, UnityEngine::Vector3&, UnityEngine::Vector3&)>(&ScrollRect::AdjustBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "AdjustBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::GetBounds
// Il2CppName: GetBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (ScrollRect::*)()>(&ScrollRect::GetBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "GetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::InternalGetBounds
// Il2CppName: InternalGetBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (*)(::Array<UnityEngine::Vector3>*, UnityEngine::Matrix4x4&)>(&ScrollRect::InternalGetBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "InternalGetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::CalculateOffset
// Il2CppName: CalculateOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (ScrollRect::*)(UnityEngine::Vector2)>(&ScrollRect::CalculateOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "CalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::InternalCalculateOffset
// Il2CppName: InternalCalculateOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Bounds&, UnityEngine::Bounds&, bool, bool, UnityEngine::UI::ScrollRect::MovementType, UnityEngine::Vector2&)>(&ScrollRect::InternalCalculateOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "InternalCalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ScrollRect::MovementType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetDirty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::SetDirtyCaching
// Il2CppName: SetDirtyCaching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::SetDirtyCaching)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "SetDirtyCaching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (ScrollRect::*)()>(&ScrollRect::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ScrollRect::*)()>(&ScrollRect::IsActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ScrollRect::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::*)()>(&ScrollRect::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/MovementType
#include "UnityEngine/UI/ScrollRect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
void UnityEngine::UI::ScrollRect::MovementType::_set_Unrestricted(UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Unrestricted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Elastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_get_Elastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Elastic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
void UnityEngine::UI::ScrollRect::MovementType::_set_Elastic(UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_set_Elastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Elastic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Clamped() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_get_Clamped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Clamped"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
void UnityEngine::UI::ScrollRect::MovementType::_set_Clamped(UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::MovementType::_set_Clamped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Clamped", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/ScrollbarVisibility
#include "UnityEngine/UI/ScrollRect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_Permanent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_Permanent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "Permanent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_Permanent(UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_Permanent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "Permanent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHide(UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHide", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHideAndExpandViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHideAndExpandViewport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHideAndExpandViewport"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHideAndExpandViewport(UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHideAndExpandViewport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHideAndExpandViewport", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/ScrollRectEvent
#include "UnityEngine/UI/ScrollRect_ScrollRectEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ScrollRect::ScrollRectEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::ScrollRectEvent::*)()>(&ScrollRect::ScrollRectEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect::ScrollRectEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ScrollRect::ScrollRectEvent::*)()>(&ScrollRect::ScrollRectEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ScrollRect::ScrollRectEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.UI.Scrollbar/ScrollEvent
#include "UnityEngine/UI/Scrollbar_ScrollEvent.hpp"
// Including type: UnityEngine.UI.Scrollbar/Axis
#include "UnityEngine/UI/Scrollbar_Axis.hpp"
// Including type: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58
#include "UnityEngine/UI/Scrollbar_-ClickRepeat-d__58.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Scrollbar.get_handleRect
UnityEngine::RectTransform* UnityEngine::UI::Scrollbar::get_handleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_handleRect
void UnityEngine::UI::Scrollbar::set_handleRect(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_direction
UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar::Direction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_direction
void UnityEngine::UI::Scrollbar::set_direction(UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_value
float UnityEngine::UI::Scrollbar::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_value
void UnityEngine::UI::Scrollbar::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.SetValueWithoutNotify
void UnityEngine::UI::Scrollbar::SetValueWithoutNotify(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::SetValueWithoutNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_size
float UnityEngine::UI::Scrollbar::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_size
void UnityEngine::UI::Scrollbar::set_size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_numberOfSteps
int UnityEngine::UI::Scrollbar::get_numberOfSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_numberOfSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_numberOfSteps
void UnityEngine::UI::Scrollbar::set_numberOfSteps(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_numberOfSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_numberOfSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_onValueChanged
UnityEngine::UI::Scrollbar::ScrollEvent* UnityEngine::UI::Scrollbar::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar::ScrollEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_onValueChanged
void UnityEngine::UI::Scrollbar::set_onValueChanged(UnityEngine::UI::Scrollbar::ScrollEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_stepSize
float UnityEngine::UI::Scrollbar::get_stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_stepSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Rebuild
void UnityEngine::UI::Scrollbar::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.LayoutComplete
void UnityEngine::UI::Scrollbar::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.GraphicUpdateComplete
void UnityEngine::UI::Scrollbar::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Update
void UnityEngine::UI::Scrollbar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateCachedReferences
void UnityEngine::UI::Scrollbar::UpdateCachedReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::UpdateCachedReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Set
void UnityEngine::UI::Scrollbar::Set(float input, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_axis
UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_reverseValue
bool UnityEngine::UI::Scrollbar::get_reverseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::get_reverseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateVisuals
void UnityEngine::UI::Scrollbar::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::UpdateVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateDrag
void UnityEngine::UI::Scrollbar::UpdateDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::UpdateDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.DoUpdateDrag
void UnityEngine::UI::Scrollbar::DoUpdateDrag(UnityEngine::Vector2 handleCorner, float remainingSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::DoUpdateDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdateDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handleCorner), ::il2cpp_utils::ExtractType(remainingSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handleCorner, remainingSize);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.MayDrag
bool UnityEngine::UI::Scrollbar::MayDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnBeginDrag
void UnityEngine::UI::Scrollbar::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnDrag
void UnityEngine::UI::Scrollbar::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.ClickRepeat
System::Collections::IEnumerator* UnityEngine::UI::Scrollbar::ClickRepeat(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::ClickRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.ClickRepeat
System::Collections::IEnumerator* UnityEngine::UI::Scrollbar::ClickRepeat(UnityEngine::Vector2 screenPosition, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::ClickRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPosition), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, screenPosition, camera);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnInitializePotentialDrag
void UnityEngine::UI::Scrollbar::OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.SetDirection
void UnityEngine::UI::Scrollbar::SetDirection(UnityEngine::UI::Scrollbar::Direction direction, bool includeRectLayouts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::SetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(includeRectLayouts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, direction, includeRectLayouts);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::Scrollbar::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnEnable
void UnityEngine::UI::Scrollbar::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnDisable
void UnityEngine::UI::Scrollbar::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnRectTransformDimensionsChange
void UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnPointerDown
void UnityEngine::UI::Scrollbar::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnPointerUp
void UnityEngine::UI::Scrollbar::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnMove
void UnityEngine::UI::Scrollbar::OnMove(UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::OnMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnLeft
UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnRight
UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnUp
UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnDown
UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Scrollbar::get_handleRect
// Il2CppName: get_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Scrollbar::*)()>(&Scrollbar::get_handleRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_handleRect
// Il2CppName: set_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::RectTransform*)>(&Scrollbar::set_handleRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_direction
// Il2CppName: get_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar::Direction (Scrollbar::*)()>(&Scrollbar::get_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_direction
// Il2CppName: set_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::UI::Scrollbar::Direction)>(&Scrollbar::set_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar::Direction>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Scrollbar::*)()>(&Scrollbar::get_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(float)>(&Scrollbar::set_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(float)>(&Scrollbar::SetValueWithoutNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Scrollbar::*)()>(&Scrollbar::get_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(float)>(&Scrollbar::set_size)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_numberOfSteps
// Il2CppName: get_numberOfSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Scrollbar::*)()>(&Scrollbar::get_numberOfSteps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_numberOfSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_numberOfSteps
// Il2CppName: set_numberOfSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(int)>(&Scrollbar::set_numberOfSteps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_numberOfSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar::ScrollEvent* (Scrollbar::*)()>(&Scrollbar::get_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::UI::Scrollbar::ScrollEvent*)>(&Scrollbar::set_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar::ScrollEvent*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_stepSize
// Il2CppName: get_stepSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Scrollbar::*)()>(&Scrollbar::get_stepSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_stepSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::UI::CanvasUpdate)>(&Scrollbar::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::UpdateCachedReferences
// Il2CppName: UpdateCachedReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::UpdateCachedReferences)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "UpdateCachedReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(float, bool)>(&Scrollbar::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_axis
// Il2CppName: get_axis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Scrollbar::Axis (Scrollbar::*)()>(&Scrollbar::get_axis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_axis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::get_reverseValue
// Il2CppName: get_reverseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scrollbar::*)()>(&Scrollbar::get_reverseValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "get_reverseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::UpdateVisuals
// Il2CppName: UpdateVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::UpdateVisuals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "UpdateVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::UpdateDrag
// Il2CppName: UpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::UpdateDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "UpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::DoUpdateDrag
// Il2CppName: DoUpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::Vector2, float)>(&Scrollbar::DoUpdateDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "DoUpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::MayDrag
// Il2CppName: MayDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::MayDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::OnBeginDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::ClickRepeat
// Il2CppName: ClickRepeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::ClickRepeat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "ClickRepeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::ClickRepeat
// Il2CppName: ClickRepeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Scrollbar::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&Scrollbar::ClickRepeat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "ClickRepeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::OnInitializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::SetDirection
// Il2CppName: SetDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::UI::Scrollbar::Direction, bool)>(&Scrollbar::SetDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "SetDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Scrollbar::Direction>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Scrollbar::*)()>(&Scrollbar::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)()>(&Scrollbar::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::PointerEventData*)>(&Scrollbar::OnPointerUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::*)(UnityEngine::EventSystems::AxisEventData*)>(&Scrollbar::OnMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::FindSelectableOnLeft
// Il2CppName: FindSelectableOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Scrollbar::*)()>(&Scrollbar::FindSelectableOnLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "FindSelectableOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::FindSelectableOnRight
// Il2CppName: FindSelectableOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Scrollbar::*)()>(&Scrollbar::FindSelectableOnRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "FindSelectableOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::FindSelectableOnUp
// Il2CppName: FindSelectableOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Scrollbar::*)()>(&Scrollbar::FindSelectableOnUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "FindSelectableOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::FindSelectableOnDown
// Il2CppName: FindSelectableOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Scrollbar::*)()>(&Scrollbar::FindSelectableOnDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar*), "FindSelectableOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/Direction
#include "UnityEngine/UI/Scrollbar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction LeftToRight
UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction LeftToRight
void UnityEngine::UI::Scrollbar::Direction::_set_LeftToRight(UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction RightToLeft
UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction RightToLeft
void UnityEngine::UI::Scrollbar::Direction::_set_RightToLeft(UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction BottomToTop
UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_BottomToTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_get_BottomToTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "BottomToTop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction BottomToTop
void UnityEngine::UI::Scrollbar::Direction::_set_BottomToTop(UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_set_BottomToTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "BottomToTop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction TopToBottom
UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_TopToBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_get_TopToBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "TopToBottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction TopToBottom
void UnityEngine::UI::Scrollbar::Direction::_set_TopToBottom(UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Direction::_set_TopToBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "TopToBottom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/ScrollEvent
#include "UnityEngine/UI/Scrollbar_ScrollEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Scrollbar::ScrollEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::ScrollEvent::*)()>(&Scrollbar::ScrollEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::ScrollEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::ScrollEvent::*)()>(&Scrollbar::ScrollEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::ScrollEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/Axis
#include "UnityEngine/UI/Scrollbar_Axis.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Axis Horizontal
UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Axis>("UnityEngine.UI", "Scrollbar/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Axis Horizontal
void UnityEngine::UI::Scrollbar::Axis::_set_Horizontal(UnityEngine::UI::Scrollbar::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Axis Vertical
UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Scrollbar::Axis>("UnityEngine.UI", "Scrollbar/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Axis Vertical
void UnityEngine::UI::Scrollbar::Axis::_set_Vertical(UnityEngine::UI::Scrollbar::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Axis", "Vertical", value));
}
