// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlException
#include "System/Xml/XmlException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String res
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_res() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_res");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "res"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] args
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::XmlException::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::XmlException::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::XmlException::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_sourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_sourceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String message
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlException.get_LineNumber
int System::Xml::XmlException::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.get_LinePosition
int System::Xml::XmlException::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.get_ResString
::StringW System::Xml::XmlException::get_ResString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_ResString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.FormatUserMessage
::StringW System::Xml::XmlException::FormatUserMessage(::StringW message, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::FormatUserMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "FormatUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.CreateMessage
::StringW System::Xml::XmlException::CreateMessage(::StringW res, ::ArrayW<::StringW> args, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::CreateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "CreateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::StringW data, int invCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(invCharIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, invCharIndex);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::ArrayW<::Il2CppChar> data, int length, int invCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, length, invCharIndex);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::Il2CppChar invChar, ::Il2CppChar nextChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invChar, nextChar);
}
// Autogenerated method: System.Xml.XmlException.get_Message
::StringW System::Xml::XmlException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.GetObjectData
void System::Xml::XmlException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlNameTable.Get
::StringW System::Xml::XmlNameTable::Get(::StringW array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array);
}
// Autogenerated method: System.Xml.XmlNameTable.Add
::StringW System::Xml::XmlNameTable::Add(::ArrayW<::Il2CppChar> array, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array, offset, length);
}
// Autogenerated method: System.Xml.XmlNameTable.Add
::StringW System::Xml::XmlNameTable::Add(::StringW array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager/System.Xml.NamespaceDeclaration[] nsdecls
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlNamespaceManager::NamespaceDeclaration>& System::Xml::XmlNamespaceManager::dyn_nsdecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_nsdecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsdecls"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlNamespaceManager::NamespaceDeclaration>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastDecl
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::dyn_lastDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_lastDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDecl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlNamespaceManager::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 scopeId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::dyn_scopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_scopeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> hashTable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Xml::XmlNamespaceManager::dyn_hashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_hashTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useHashtable
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlNamespaceManager::dyn_useHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_useHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useHashtable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::dyn_xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::dyn_xmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_xmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlNamespaceManager::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.get_DefaultNamespace
::StringW System::Xml::XmlNamespaceManager::get_DefaultNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::get_DefaultNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.PushScope
void System::Xml::XmlNamespaceManager::PushScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::PushScope");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.PopScope
bool System::Xml::XmlNamespaceManager::PopScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::PopScope");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.AddNamespace
void System::Xml::XmlNamespaceManager::AddNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::AddNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.RemoveNamespace
void System::Xml::XmlNamespaceManager::RemoveNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::RemoveNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNamespaceManager::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupNamespace
::StringW System::Xml::XmlNamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupNamespaceDecl
int System::Xml::XmlNamespaceManager::LookupNamespaceDecl(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupPrefix
::StringW System::Xml::XmlNamespaceManager::LookupPrefix(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNamespaceManager/System.Xml.NamespaceDeclaration
#include "System/Xml/XmlNamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scopeId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_scopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_scopeId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 previousNsIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_previousNsIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_previousNsIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousNsIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamespaceManager/System.Xml.NamespaceDeclaration.Set
void System::Xml::XmlNamespaceManager::NamespaceDeclaration::Set(::StringW prefix, ::StringW uri, int scopeId, int previousNsIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(scopeId), ::il2cpp_utils::ExtractType(previousNsIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri, scopeId, previousNsIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType None
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType None
void System::Xml::XmlNodeType::_set_None(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Element
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Element
void System::Xml::XmlNodeType::_set_Element(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Attribute
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Attribute
void System::Xml::XmlNodeType::_set_Attribute(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Text
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Text
void System::Xml::XmlNodeType::_set_Text(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType CDATA
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType CDATA
void System::Xml::XmlNodeType::_set_CDATA(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EntityReference
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EntityReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EntityReference"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EntityReference
void System::Xml::XmlNodeType::_set_EntityReference(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EntityReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EntityReference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Entity
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Entity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Entity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Entity
void System::Xml::XmlNodeType::_set_Entity(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Entity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Entity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType ProcessingInstruction
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType ProcessingInstruction
void System::Xml::XmlNodeType::_set_ProcessingInstruction(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Comment
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Comment
void System::Xml::XmlNodeType::_set_Comment(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Document
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Document
void System::Xml::XmlNodeType::_set_Document(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType DocumentType
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_DocumentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_DocumentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "DocumentType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType DocumentType
void System::Xml::XmlNodeType::_set_DocumentType(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_DocumentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "DocumentType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType DocumentFragment
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_DocumentFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_DocumentFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "DocumentFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType DocumentFragment
void System::Xml::XmlNodeType::_set_DocumentFragment(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_DocumentFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "DocumentFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Notation
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Notation
void System::Xml::XmlNodeType::_set_Notation(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Whitespace
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Whitespace
void System::Xml::XmlNodeType::_set_Whitespace(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType SignificantWhitespace
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_SignificantWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_SignificantWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "SignificantWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType SignificantWhitespace
void System::Xml::XmlNodeType::_set_SignificantWhitespace(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_SignificantWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "SignificantWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EndElement
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EndElement
void System::Xml::XmlNodeType::_set_EndElement(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EndEntity
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EndEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EndEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EndEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EndEntity
void System::Xml::XmlNodeType::_set_EndEntity(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EndEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EndEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType XmlDeclaration
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_XmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_XmlDeclaration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "XmlDeclaration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType XmlDeclaration
void System::Xml::XmlNodeType::_set_XmlDeclaration(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_XmlDeclaration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "XmlDeclaration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate hashCodeDelegate
::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::_get_hashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_get_hashCodeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*>("System.Xml", "XmlQualifiedName", "hashCodeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate hashCodeDelegate
void System::Xml::XmlQualifiedName::_set_hashCodeDelegate(::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_set_hashCodeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "hashCodeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.XmlQualifiedName Empty
::System::Xml::XmlQualifiedName* System::Xml::XmlQualifiedName::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml", "XmlQualifiedName", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.XmlQualifiedName Empty
void System::Xml::XmlQualifiedName::_set_Empty(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlQualifiedName::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlQualifiedName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hash
[[deprecated("Use field access instead!")]] int& System::Xml::XmlQualifiedName::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Namespace
::StringW System::Xml::XmlQualifiedName::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Name
::StringW System::Xml::XmlQualifiedName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_IsEmpty
bool System::Xml::XmlQualifiedName::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName..cctor
void System::Xml::XmlQualifiedName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeDelegate
::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::GetHashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCodeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.IsRandomizedHashingDisabled
bool System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "IsRandomizedHashingDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeOfString
int System::Xml::XmlQualifiedName::GetHashCodeOfString(::StringW s, int length, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, length, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Init
void System::Xml::XmlQualifiedName::Init(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Parse
::System::Xml::XmlQualifiedName* System::Xml::XmlQualifiedName::Parse(::StringW s, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, nsmgr, byref(prefix));
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCode
int System::Xml::XmlQualifiedName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.ToString
::StringW System::Xml::XmlQualifiedName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Equals
bool System::Xml::XmlQualifiedName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Equality
bool System::Xml::operator ==(::System::Xml::XmlQualifiedName* a, ::System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Inequality
bool System::Xml::operator !=(::System::Xml::XmlQualifiedName* a, ::System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate.Invoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke(::StringW s, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate.BeginInvoke
::System::IAsyncResult* System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke(::StringW s, int sLen, int64_t additionalEntropy, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sLen), ::il2cpp_utils::ExtractType(additionalEntropy), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, s, sLen, additionalEntropy, callback, object);
}
// Autogenerated method: System.Xml.XmlQualifiedName/System.Xml.HashCodeOfStringDelegate.EndInvoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlResolver.GetEntity
::Il2CppObject* System::Xml::XmlResolver::GetEntity(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::GetEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absoluteUri), ::il2cpp_utils::ExtractType(role), ::il2cpp_utils::ExtractType(ofObjectToReturn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated method: System.Xml.XmlResolver.ResolveUri
::System::Uri* System::Xml::XmlResolver::ResolveUri(::System::Uri* baseUri, ::StringW relativeUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::ResolveUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, baseUri, relativeUri);
}
// Autogenerated method: System.Xml.XmlResolver.SupportsType
bool System::Xml::XmlResolver::SupportsType(::System::Uri* absoluteUri, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::SupportsType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absoluteUri), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, absoluteUri, type);
}
// Autogenerated method: System.Xml.XmlResolver.GetEntityAsync
::System::Threading::Tasks::Task_1<::Il2CppObject*>* System::Xml::XmlResolver::GetEntityAsync(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::GetEntityAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absoluteUri), ::il2cpp_utils::ExtractType(role), ::il2cpp_utils::ExtractType(ofObjectToReturn)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUrlResolver
#include "System/Xml/XmlUrlResolver.hpp"
// Including type: System.Xml.XmlUrlResolver/System.Xml.<GetEntityAsync>d__15
#include "System/Xml/XmlUrlResolver_-GetEntityAsync-d__15.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_DownloadManager
::Il2CppObject* System::Xml::XmlUrlResolver::_get_s_DownloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::_get_s_DownloadManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Xml", "XmlUrlResolver", "s_DownloadManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_DownloadManager
void System::Xml::XmlUrlResolver::_set_s_DownloadManager(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::_set_s_DownloadManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlUrlResolver", "s_DownloadManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials _credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Xml::XmlUrlResolver::dyn__credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy _proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Xml::XmlUrlResolver::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCachePolicy _cachePolicy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Xml::XmlUrlResolver::dyn__cachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__cachePolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachePolicy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUrlResolver.get_DownloadManager
::System::Xml::XmlDownloadManager* System::Xml::XmlUrlResolver::get_DownloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::get_DownloadManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUrlResolver", "get_DownloadManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDownloadManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlUrlResolver.GetEntity
::Il2CppObject* System::Xml::XmlUrlResolver::GetEntity(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::GetEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absoluteUri), ::il2cpp_utils::ExtractType(role), ::il2cpp_utils::ExtractType(ofObjectToReturn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated method: System.Xml.XmlUrlResolver.ResolveUri
::System::Uri* System::Xml::XmlUrlResolver::ResolveUri(::System::Uri* baseUri, ::StringW relativeUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::ResolveUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, baseUri, relativeUri);
}
// Autogenerated method: System.Xml.XmlUrlResolver.GetEntityAsync
::System::Threading::Tasks::Task_1<::Il2CppObject*>* System::Xml::XmlUrlResolver::GetEntityAsync(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::GetEntityAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absoluteUri), ::il2cpp_utils::ExtractType(role), ::il2cpp_utils::ExtractType(ofObjectToReturn)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUrlResolver/System.Xml.<GetEntityAsync>d__15
#include "System/Xml/XmlUrlResolver_-GetEntityAsync-d__15.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Object> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppObject*>& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type ofObjectToReturn
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_ofObjectToReturn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_ofObjectToReturn");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ofObjectToReturn"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri absoluteUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_absoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_absoluteUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absoluteUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlUrlResolver <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::XmlUrlResolver*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::XmlUrlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.IO.Stream> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUrlResolver/System.Xml.<GetEntityAsync>d__15.MoveNext
void System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUrlResolver/System.Xml.<GetEntityAsync>d__15.SetStateMachine
void System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Res
#include "System/Xml/Res.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Res.GetString
::StringW System::Xml::Res::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Res.GetString
::StringW System::Xml::Res::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageXmlNmsp
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& System::Xml::XPath::XPathDocument::dyn_pageXmlNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_pageXmlNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageXmlNmsp"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxXmlNmsp
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathDocument::dyn_idxXmlNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_idxXmlNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxXmlNmsp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XPath::XPathDocument::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<MS.Internal.Xml.Cache.XPathNodeRef,MS.Internal.Xml.Cache.XPathNodeRef> mapNmsp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::MS::Internal::Xml::Cache::XPathNodeRef, ::MS::Internal::Xml::Cache::XPathNodeRef>*& System::Xml::XPath::XPathDocument::dyn_mapNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_mapNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mapNmsp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::MS::Internal::Xml::Cache::XPathNodeRef, ::MS::Internal::Xml::Cache::XPathNodeRef>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XPath.XPathDocument.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XPath::XPathDocument::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathDocument.GetXmlNamespaceNode
int System::Xml::XPath::XPathDocument::GetXmlNamespaceNode(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageXmlNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::GetXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageXmlNmsp));
}
// Autogenerated method: System.Xml.XPath.XPathDocument.LookupNamespaces
int System::Xml::XPath::XPathDocument::LookupNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::LookupNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathItem
#include "System/Xml/XPath/XPathItem.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XPath.XPathItem.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::XPath::XPathItem::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_XmlType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_Value
::StringW System::Xml::XPath::XPathItem::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_TypedValue
::Il2CppObject* System::Xml::XPath::XPathItem::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueType
::System::Type* System::Xml::XPath::XPathItem::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsBoolean
bool System::Xml::XPath::XPathItem::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsDateTime
::System::DateTime System::Xml::XPath::XPathItem::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsDouble
double System::Xml::XPath::XPathItem::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsInt
int System::Xml::XPath::XPathItem::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsLong
int64_t System::Xml::XPath::XPathItem::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.ValueAs
::Il2CppObject* System::Xml::XPath::XPathItem::ValueAs(::System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::ValueAs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(returnType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType);
}
// Autogenerated method: System.Xml.XPath.XPathItem.ValueAs
::Il2CppObject* System::Xml::XPath::XPathItem::ValueAs(::System::Type* returnType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::ValueAs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope All
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope All
void System::Xml::XPath::XPathNamespaceScope::_set_All(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope ExcludeXml
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_ExcludeXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_ExcludeXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "ExcludeXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope ExcludeXml
void System::Xml::XPath::XPathNamespaceScope::_set_ExcludeXml(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_ExcludeXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "ExcludeXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope Local
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "Local"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope Local
void System::Xml::XPath::XPathNamespaceScope::_set_Local(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "Local", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathNamespaceScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathNavigator
#include "System/Xml/XPath/XPathNavigator.hpp"
// Including type: System.Xml.XPath.XPathNavigatorKeyComparer
#include "System/Xml/XPath/XPathNavigatorKeyComparer.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.XPath.XPathNavigatorKeyComparer comparer
::System::Xml::XPath::XPathNavigatorKeyComparer* System::Xml::XPath::XPathNavigator::_get_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_comparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNavigatorKeyComparer*>("System.Xml.XPath", "XPathNavigator", "comparer"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.XPath.XPathNavigatorKeyComparer comparer
void System::Xml::XPath::XPathNavigator::_set_comparer(::System::Xml::XPath::XPathNavigatorKeyComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_comparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "comparer", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] NodeTypeLetter
::ArrayW<::Il2CppChar> System::Xml::XPath::XPathNavigator::_get_NodeTypeLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_NodeTypeLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.XPath", "XPathNavigator", "NodeTypeLetter"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] NodeTypeLetter
void System::Xml::XPath::XPathNavigator::_set_NodeTypeLetter(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_NodeTypeLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "NodeTypeLetter", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] UniqueIdTbl
::ArrayW<::Il2CppChar> System::Xml::XPath::XPathNavigator::_get_UniqueIdTbl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_UniqueIdTbl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.XPath", "XPathNavigator", "UniqueIdTbl"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] UniqueIdTbl
void System::Xml::XPath::XPathNavigator::_set_UniqueIdTbl(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_UniqueIdTbl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "UniqueIdTbl", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ContentKindMasks
::ArrayW<int> System::Xml::XPath::XPathNavigator::_get_ContentKindMasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_ContentKindMasks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.XPath", "XPathNavigator", "ContentKindMasks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ContentKindMasks
void System::Xml::XPath::XPathNavigator::_set_ContentKindMasks(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_ContentKindMasks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "ContentKindMasks", value));
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XPath::XPathNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_LocalName
::StringW System::Xml::XPath::XPathNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NamespaceURI
::StringW System::Xml::XPath::XPathNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_Prefix
::StringW System::Xml::XPath::XPathNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_UnderlyingObject
::Il2CppObject* System::Xml::XPath::XPathNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_SchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XPath::XPathNavigator::get_SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_SchemaInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::IXmlSchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator..cctor
void System::Xml::XPath::XPathNavigator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XPath", "XPathNavigator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.System.ICloneable.Clone
::Il2CppObject* System::Xml::XPath::XPathNavigator::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.LookupNamespace
::StringW System::Xml::XPath::XPathNavigator::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.LookupPrefix
::StringW System::Xml::XPath::XPathNavigator::LookupPrefix(::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceURI);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.Clone
::System::Xml::XPath::XPathNavigator* System::Xml::XPath::XPathNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToNamespace
bool System::Xml::XPath::XPathNavigator::MoveToNamespace(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace
bool System::Xml::XPath::XPathNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceScope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToNextNamespace
bool System::Xml::XPath::XPathNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceScope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToParent
bool System::Xml::XPath::XPathNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.IsSamePosition
bool System::Xml::XPath::XPathNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSamePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.IsText
bool System::Xml::XPath::XPathNavigator::IsText(::System::Xml::XPath::XPathNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XPath", "XPathNavigator", "IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::XPath::XPathNavigator::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_XmlType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_TypedValue
::Il2CppObject* System::Xml::XPath::XPathNavigator::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueType
::System::Type* System::Xml::XPath::XPathNavigator::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsBoolean
bool System::Xml::XPath::XPathNavigator::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsDateTime
::System::DateTime System::Xml::XPath::XPathNavigator::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsDouble
double System::Xml::XPath::XPathNavigator::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsInt
int System::Xml::XPath::XPathNavigator::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsLong
int64_t System::Xml::XPath::XPathNavigator::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueAsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.ToString
::StringW System::Xml::XPath::XPathNavigator::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.ValueAs
::Il2CppObject* System::Xml::XPath::XPathNavigator::ValueAs(::System::Type* returnType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::ValueAs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathNavigatorKeyComparer
#include "System/Xml/XPath/XPathNavigatorKeyComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XPath.XPathNavigatorKeyComparer.System.Collections.IEqualityComparer.Equals
bool System::Xml::XPath::XPathNavigatorKeyComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* obj1, ::Il2CppObject* obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigatorKeyComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(obj2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj1, obj2);
}
// Autogenerated method: System.Xml.XPath.XPathNavigatorKeyComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Xml::XPath::XPathNavigatorKeyComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigatorKeyComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Root
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Root
void System::Xml::XPath::XPathNodeType::_set_Root(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Element
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Element
void System::Xml::XPath::XPathNodeType::_set_Element(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Attribute
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Attribute
void System::Xml::XPath::XPathNodeType::_set_Attribute(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Namespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Namespace
void System::Xml::XPath::XPathNodeType::_set_Namespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Text
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Text
void System::Xml::XPath::XPathNodeType::_set_Text(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_SignificantWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_SignificantWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "SignificantWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
void System::Xml::XPath::XPathNodeType::_set_SignificantWhitespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_SignificantWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "SignificantWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Whitespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Whitespace
void System::Xml::XPath::XPathNodeType::_set_Whitespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
void System::Xml::XPath::XPathNodeType::_set_ProcessingInstruction(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Comment
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Comment
void System::Xml::XPath::XPathNodeType::_set_Comment(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType All
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType All
void System::Xml::XPath::XPathNodeType::_set_All(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlTypeConvertorAttribute
#include "System/Xml/Serialization/XmlTypeConvertorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Method>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlTypeConvertorAttribute::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeConvertorAttribute::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlTypeConvertorAttribute.set_Method
void System::Xml::Serialization::XmlTypeConvertorAttribute::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlTypeConvertorAttribute::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAttributeAttribute
#include "System/Xml/Serialization/XmlAttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String attributeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlElementAttribute
#include "System/Xml/Serialization/XmlElementAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlElementAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlElementAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlEnumAttribute
#include "System/Xml/Serialization/XmlEnumAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlEnumAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlEnumAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlIgnoreAttribute
#include "System/Xml/Serialization/XmlIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlSchemaProviderAttribute
#include "System/Xml/Serialization/XmlSchemaProviderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _methodName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__methodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_methodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isAny
[[deprecated("Use field access instead!")]] bool& System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__isAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::dyn__isAny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isAny"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Serialization.XmlSchemaProviderAttribute.set_IsAny
void System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlSchemaProviderAttribute::set_IsAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::BitSet::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bits
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::Schema::BitSet::dyn_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Count
int System::Xml::Schema::BitSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Item
bool System::Xml::Schema::BitSet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clear
void System::Xml::Schema::BitSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Set
void System::Xml::Schema::BitSet::Set(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Get
bool System::Xml::Schema::BitSet::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.NextSet
int System::Xml::Schema::BitSet::NextSet(int startFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::NextSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startFrom);
}
// Autogenerated method: System.Xml.Schema.BitSet.And
void System::Xml::Schema::BitSet::And(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Or
void System::Xml::Schema::BitSet::Or(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clone
::System::Xml::Schema::BitSet* System::Xml::Schema::BitSet::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Intersects
bool System::Xml::Schema::BitSet::Intersects(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Subscript
int System::Xml::Schema::BitSet::Subscript(int bitIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Subscript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bitIndex);
}
// Autogenerated method: System.Xml.Schema.BitSet.EnsureLength
void System::Xml::Schema::BitSet::EnsureLength(int nRequiredLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::EnsureLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nRequiredLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nRequiredLength);
}
// Autogenerated method: System.Xml.Schema.BitSet.GetHashCode
int System::Xml::Schema::BitSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Equals
bool System::Xml::Schema::BitSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UpaException
#include "System/Xml/Schema/UpaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object particle1
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UpaException::dyn_particle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particle2
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UpaException::dyn_particle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 last
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SymbolsDictionary::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable names
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable wildcards
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_wildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_wildcards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wildcards"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList particles
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::SymbolsDictionary::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particleLast
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::SymbolsDictionary::dyn_particleLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_particleLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleLast"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isUpaEnforced
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isUpaEnforced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_Count
int System::Xml::Schema::SymbolsDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_IsUpaEnforced
bool System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.set_IsUpaEnforced
void System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddName
int System::Xml::Schema::SymbolsDictionary::AddName(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddNamespaceList
void System::Xml::Schema::SymbolsDictionary::AddNamespaceList(::System::Xml::Schema::NamespaceList* list, ::Il2CppObject* particle, bool allowLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(allowLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, particle, allowLocal);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddWildcard
void System::Xml::Schema::SymbolsDictionary::AddWildcard(::StringW wildcard, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddWildcard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWildcard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wildcard), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wildcard, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetNamespaceListSymbols
::System::Collections::ICollection* System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols(::System::Xml::Schema::NamespaceList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespaceListSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, list);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.Exists
bool System::Xml::Schema::SymbolsDictionary::Exists(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetParticle
::Il2CppObject* System::Xml::Schema::SymbolsDictionary::GetParticle(int symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::GetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, symbol);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 symbol
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::Position::dyn_symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Position::dyn_symbol");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbol"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object particle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::Position::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Position::dyn_particle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Position..ctor
// ABORTED elsewhere.  System::Xml::Schema::Position::Position(int symbol, ::Il2CppObject* particle)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList positions
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::Positions::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Item
::System::Xml::Schema::Position System::Xml::Schema::Positions::get_Item(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::Position, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Count
int System::Xml::Schema::Positions::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Positions.Add
int System::Xml::Schema::Positions::Add(int symbol, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, symbol, particle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsNullable
bool System::Xml::Schema::SyntaxTreeNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsRangeNode
bool System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRangeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ExpandTree
void System::Xml::Schema::SyntaxTreeNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ConstructPos
void System::Xml::Schema::SyntaxTreeNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafNode
#include "System/Xml/Schema/LeafNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::LeafNode::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_Pos
int System::Xml::Schema::LeafNode::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.set_Pos
void System::Xml::Schema::LeafNode::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_IsNullable
bool System::Xml::Schema::LeafNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ExpandTree
void System::Xml::Schema::LeafNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ConstructPos
void System::Xml::Schema::LeafNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceListNode
#include "System/Xml/Schema/NamespaceListNode.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.NamespaceList namespaceList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList*& System::Xml::Schema::NamespaceListNode::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object particle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::NamespaceListNode::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.GetResolvedSymbols
::System::Collections::ICollection* System::Xml::Schema::NamespaceListNode::GetResolvedSymbols(::System::Xml::Schema::SymbolsDictionary* symbols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::GetResolvedSymbols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbols)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, symbols);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.get_IsNullable
bool System::Xml::Schema::NamespaceListNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ExpandTree
void System::Xml::Schema::NamespaceListNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ConstructPos
void System::Xml::Schema::NamespaceListNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode leftChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_leftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_leftChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode rightChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_rightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_rightChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_LeftChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_LeftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_LeftChild
void System::Xml::Schema::InteriorNode::set_LeftChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_RightChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_RightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_RightChild
void System::Xml::Schema::InteriorNode::set_RightChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTreeNoRecursive
void System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTreeNoRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTree
void System::Xml::Schema::InteriorNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode
#include "System/Xml/Schema/SequenceNode.hpp"
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SequenceNode.get_IsNullable
bool System::Xml::Schema::SequenceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ConstructPos
void System::Xml::Schema::SequenceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ExpandTree
void System::Xml::Schema::SequenceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SequenceNode this_
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SequenceNode*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "this_"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SequenceNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastposLeft
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastposLeft"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstposRight
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstposRight"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext..ctor
System::Xml::Schema::SequenceNode::SequenceConstructPosContext::SequenceConstructPosContext(::System::Xml::Schema::SequenceNode* node, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, firstpos, lastpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ChoiceNode
#include "System/Xml/Schema/ChoiceNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructChildPos
void System::Xml::Schema::ChoiceNode::ConstructChildPos(::System::Xml::Schema::SyntaxTreeNode* child, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructChildPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ChoiceNode", "ConstructChildPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.get_IsNullable
bool System::Xml::Schema::ChoiceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructPos
void System::Xml::Schema::ChoiceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ExpandTree
void System::Xml::Schema::ChoiceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.PlusNode
#include "System/Xml/Schema/PlusNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.PlusNode.get_IsNullable
bool System::Xml::Schema::PlusNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.PlusNode.ConstructPos
void System::Xml::Schema::PlusNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.QmarkNode
#include "System/Xml/Schema/QmarkNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QmarkNode.get_IsNullable
bool System::Xml::Schema::QmarkNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.QmarkNode.ConstructPos
void System::Xml::Schema::QmarkNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.StarNode
#include "System/Xml/Schema/StarNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.StarNode.get_IsNullable
bool System::Xml::Schema::StarNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StarNode.ConstructPos
void System::Xml::Schema::StarNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafRangeNode
#include "System/Xml/Schema/LeafRangeNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Decimal min
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal max
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet nextIteration
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::LeafRangeNode::dyn_nextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_nextIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextIteration"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Max
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Min
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_NextIteration
::System::Xml::Schema::BitSet* System::Xml::Schema::LeafRangeNode::get_NextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.set_NextIteration
void System::Xml::Schema::LeafRangeNode::set_NextIteration(::System::Xml::Schema::BitSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::set_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Empty
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Empty
void System::Xml::Schema::ContentValidator::_set_Empty(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_TextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_TextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "TextOnly"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
void System::Xml::Schema::ContentValidator::_set_TextOnly(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_TextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "TextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Mixed
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Mixed
void System::Xml::Schema::ContentValidator::_set_Mixed(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Any
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Any"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Any
void System::Xml::Schema::ContentValidator::_set_Any(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::ContentValidator::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptiable
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isEmptiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_ContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::ContentValidator::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_IsOpen
bool System::Xml::Schema::ContentValidator::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator..cctor
void System::Xml::Schema::ContentValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::ParticleContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::ParticleContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Xml::Schema::ParticleContentValidator::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode contentNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::ParticleContentValidator::dyn_contentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_contentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPartial
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_isPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_isPartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableUpaCheck
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUpaCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Start
void System::Xml::Schema::ParticleContentValidator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.OpenGroup
void System::Xml::Schema::ParticleContentValidator::OpenGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::OpenGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CloseGroup
void System::Xml::Schema::ParticleContentValidator::CloseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CloseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Exists
bool System::Xml::Schema::ParticleContentValidator::Exists(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddName
void System::Xml::Schema::ParticleContentValidator::AddName(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddNamespaceList
void System::Xml::Schema::ParticleContentValidator::AddNamespaceList(::System::Xml::Schema::NamespaceList* namespaceList, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceList), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, namespaceList, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddLeafNode
void System::Xml::Schema::ParticleContentValidator::AddLeafNode(::System::Xml::Schema::SyntaxTreeNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddLeafNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLeafNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddChoice
void System::Xml::Schema::ParticleContentValidator::AddChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddSequence
void System::Xml::Schema::ParticleContentValidator::AddSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddStar
void System::Xml::Schema::ParticleContentValidator::AddStar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddStar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddPlus
void System::Xml::Schema::ParticleContentValidator::AddPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddQMark
void System::Xml::Schema::ParticleContentValidator::AddQMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddQMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Closure
void System::Xml::Schema::ParticleContentValidator::Closure(::System::Xml::Schema::InteriorNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Closure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Closure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Finish
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ParticleContentValidator::Finish(bool useDFA) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useDFA)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, useDFA);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CalculateTotalFollowposForRangeNodes
::ArrayW<::System::Xml::Schema::BitSet*> System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, ByRef<::System::Xml::Schema::BitSet*> posWithRangeTerminals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTotalFollowposForRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::BitSet*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::BitSet*>, false>(this, ___internal__method, firstpos, followpos, byref(posWithRangeTerminals));
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckCMUPAWithLeafRangeNodes
void System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCMUPAWithLeafRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.GetApplicableMinMaxFollowPos
::System::Xml::Schema::BitSet* System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos(::System::Xml::Schema::BitSet* curpos, ::System::Xml::Schema::BitSet* posWithRangeTerminals, ::ArrayW<::System::Xml::Schema::BitSet*> minmaxFollowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicableMinMaxFollowPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos), ::il2cpp_utils::ExtractType(posWithRangeTerminals), ::il2cpp_utils::ExtractType(minmaxFollowPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method, curpos, posWithRangeTerminals, minmaxFollowPos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.BuildTransitionTable
::ArrayW<::ArrayW<int>> System::Xml::Schema::ParticleContentValidator::BuildTransitionTable(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, int endMarkerPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::BuildTransitionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTransitionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractType(endMarkerPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<int>>, false>(this, ___internal__method, firstpos, followpos, endMarkerPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DfaContentValidator
#include "System/Xml/Schema/DfaContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[][] transitionTable
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Xml::Schema::DfaContentValidator::dyn_transitionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_transitionTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTable"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::DfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NfaContentValidator
#include "System/Xml/Schema/NfaContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::NfaContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::NfaContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::NfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::NfaContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RangeContentValidator
#include "System/Xml/Schema/RangeContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::RangeContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet positionsWithRangeTerminals
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsWithRangeTerminals"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::RangeContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::RangeContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaDatatypeVariety
#include "System/Xml/Schema/XmlSchemaDatatypeVariety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdSimpleValue
#include "System/Xml/Schema/XsdSimpleValue.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType xmlType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XsdSimpleValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object typedValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XsdSimpleValue::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_XmlType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XsdSimpleValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XsdSimpleValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_TypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Length
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Length"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Length
void System::Xml::Schema::RestrictionFlags::_set_Length(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Length", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinLength
void System::Xml::Schema::RestrictionFlags::_set_MinLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxLength
void System::Xml::Schema::RestrictionFlags::_set_MaxLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Pattern
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Pattern
void System::Xml::Schema::RestrictionFlags::_set_Pattern(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Enumeration
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Enumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Enumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Enumeration
void System::Xml::Schema::RestrictionFlags::_set_Enumeration(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Enumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Enumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_WhiteSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "WhiteSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
void System::Xml::Schema::RestrictionFlags::_set_WhiteSpace(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_WhiteSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "WhiteSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
void System::Xml::Schema::RestrictionFlags::_set_MinInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
void System::Xml::Schema::RestrictionFlags::_set_MinExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_TotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "TotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
void System::Xml::Schema::RestrictionFlags::_set_TotalDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_TotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "TotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_FractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "FractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
void System::Xml::Schema::RestrictionFlags::_set_FractionDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_FractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "FractionDigits", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RestrictionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable builtinTypes
::System::Collections::Hashtable* System::Xml::Schema::DatatypeImplementation::_get_builtinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_builtinTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Schema", "DatatypeImplementation", "builtinTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable builtinTypes
void System::Xml::Schema::DatatypeImplementation::_set_builtinTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_builtinTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "builtinTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>>("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
void System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_anySimpleType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
void System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
void System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnySimpleType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnyType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnyType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnyType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnyType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnyType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyURI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyURI"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
void System::Xml::Schema::DatatypeImplementation::_set_c_anyURI(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyURI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyURI", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
void System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_boolean"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
void System::Xml::Schema::DatatypeImplementation::_set_c_boolean(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_boolean", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_byte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
void System::Xml::Schema::DatatypeImplementation::_set_c_byte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_byte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
void System::Xml::Schema::DatatypeImplementation::_set_c_char(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_date"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
void System::Xml::Schema::DatatypeImplementation::_set_c_date(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_date", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTime(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_day");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_day"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
void System::Xml::Schema::DatatypeImplementation::_set_c_day(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_day");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_day", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_decimal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
void System::Xml::Schema::DatatypeImplementation::_set_c_decimal(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_decimal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_double"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
void System::Xml::Schema::DatatypeImplementation::_set_c_double(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_double", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_duration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
void System::Xml::Schema::DatatypeImplementation::_set_c_duration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_duration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
void System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_fixed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
void System::Xml::Schema::DatatypeImplementation::_set_c_fixed(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_fixed", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_float"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
void System::Xml::Schema::DatatypeImplementation::_set_c_float(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_float", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
void System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
void System::Xml::Schema::DatatypeImplementation::_set_c_ID(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREF(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREF", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_int"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
void System::Xml::Schema::DatatypeImplementation::_set_c_int(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_int", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_integer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
void System::Xml::Schema::DatatypeImplementation::_set_c_integer(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_integer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_language"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
void System::Xml::Schema::DatatypeImplementation::_set_c_language(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_language", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_long"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
void System::Xml::Schema::DatatypeImplementation::_set_c_long(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_long", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_month");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_month"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
void System::Xml::Schema::DatatypeImplementation::_set_c_month(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_month");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_month", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_monthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_monthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_monthDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
void System::Xml::Schema::DatatypeImplementation::_set_c_monthDay(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_monthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_monthDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_Name"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
void System::Xml::Schema::DatatypeImplementation::_set_c_Name(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_Name", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NCName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
void System::Xml::Schema::DatatypeImplementation::_set_c_NCName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NCName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
void System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
void System::Xml::Schema::DatatypeImplementation::_set_c_QName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_short"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
void System::Xml::Schema::DatatypeImplementation::_set_c_short(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_short", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_string");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_string"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
void System::Xml::Schema::DatatypeImplementation::_set_c_string(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_string");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_string", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_time"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
void System::Xml::Schema::DatatypeImplementation::_set_c_time(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_time", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_token"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
void System::Xml::Schema::DatatypeImplementation::_set_c_token(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_token", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_uuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
void System::Xml::Schema::DatatypeImplementation::_set_c_uuid(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_uuid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_year");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_year"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
void System::Xml::Schema::DatatypeImplementation::_set_c_year(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_year");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_year", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatypeVariety variety
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatypeVariety& System::Xml::Schema::DatatypeImplementation::dyn_variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_variety");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "variety"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatypeVariety*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFacets restriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::RestrictionFacets*& System::Xml::Schema::DatatypeImplementation::dyn_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFacets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation baseType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter valueConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::DatatypeImplementation::dyn_valueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_valueConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType parentSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_AnySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_AnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_AnySimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_AnySimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_UntypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_UntypedAtomicType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ListValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation..cctor
void System::Xml::Schema::DatatypeImplementation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXmlTokenizedType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType(::System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXmlTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromTypeName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromTypeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.StartBuiltinType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::StartBuiltinType(::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaDatatype* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::StartBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "StartBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, dataType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FinishBuiltinType
void System::Xml::Schema::DatatypeImplementation::FinishBuiltinType(::System::Xml::Schema::XmlSchemaSimpleType* derivedType, ::System::Xml::Schema::XmlSchemaSimpleType* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FinishBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FinishBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateBuiltinTypes
void System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "CreateBuiltinTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromTypeCode
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetSimpleTypeFromTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByList
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByList(int minSize, ::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::DeriveByList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minSize), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, minSize, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetTypeName
::StringW System::Xml::Schema::DatatypeImplementation::GetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.Compare
int System::Xml::Schema::DatatypeImplementation::Compare(::ArrayW<uint8_t> value1, ::ArrayW<uint8_t> value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::DatatypeImplementation::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Variety
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::DatatypeImplementation::get_Variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Variety");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatypeVariety, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::DatatypeImplementation::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Restriction
::System::Xml::Schema::RestrictionFacets* System::Xml::Schema::DatatypeImplementation::get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Restriction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Restriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsEqual
bool System::Xml::Schema::DatatypeImplementation::IsEqual(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::IsEqual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o1, o2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation type
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parentIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_Name
::StringW System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_ParentIndex
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.op_Explicit
System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::operator ::System::Xml::Schema::DatatypeImplementation*() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation/SchemaDatatypeMap", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.CompareTo
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_List
#include "System/Xml/Schema/Datatype_List.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::Datatype_List::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minListSize
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::Datatype_List::dyn_minListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_minListSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minListSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_List::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_List::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_List::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_List::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.Compare
int System::Xml::Schema::Datatype_List::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_List::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_union
#include "System/Xml/Schema/Datatype_union.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_union::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_union::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] types
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::Datatype_union::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.HasAtomicMembers
bool System::Xml::Schema::Datatype_union::HasAtomicMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::HasAtomicMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAtomicMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union..cctor
void System::Xml::Schema::Datatype_union::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_union", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anySimpleType
#include "System/Xml/Schema/Datatype_anySimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anySimpleType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType..cctor
void System::Xml::Schema::Datatype_anySimpleType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anySimpleType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.Compare
int System::Xml::Schema::Datatype_anySimpleType::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anySimpleType::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_anyAtomicType
#include "System/Xml/Schema/Datatype_anyAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_untypedAtomicType
#include "System/Xml/Schema/Datatype_untypedAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_string
#include "System/Xml/Schema/Datatype_string.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_string.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_string::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_string::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_string::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_string::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_string::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_boolean
#include "System/Xml/Schema/Datatype_boolean.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_boolean::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_boolean::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_boolean::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_boolean::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean..cctor
void System::Xml::Schema::Datatype_boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_boolean::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.Compare
int System::Xml::Schema::Datatype_boolean::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_boolean::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_float
#include "System/Xml/Schema/Datatype_float.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_float::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_float::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_float::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_float::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float..cctor
void System::Xml::Schema::Datatype_float::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_float", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_float::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.Compare
int System::Xml::Schema::Datatype_float::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_float::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_double
#include "System/Xml/Schema/Datatype_double.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_double::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_double::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_double::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_double::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double..cctor
void System::Xml::Schema::Datatype_double::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_double", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_double::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.Compare
int System::Xml::Schema::Datatype_double::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_double::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_decimal
#include "System/Xml/Schema/Datatype_decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_decimal::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_decimal::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_decimal::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal..cctor
void System::Xml::Schema::Datatype_decimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_decimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_decimal::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.Compare
int System::Xml::Schema::Datatype_decimal::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_decimal::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_duration
#include "System/Xml/Schema/Datatype_duration.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_duration::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_duration::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_duration::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_duration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration..cctor
void System::Xml::Schema::Datatype_duration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_duration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_duration::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.Compare
int System::Xml::Schema::Datatype_duration::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_duration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_yearMonthDuration
#include "System/Xml/Schema/Datatype_yearMonthDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dayTimeDuration
#include "System/Xml/Schema/Datatype_dayTimeDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dateTimeBase
#include "System/Xml/Schema/Datatype_dateTimeBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdDateTimeFlags dateTimeFlags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTimeFlags& System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTimeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase..cctor
void System::Xml::Schema::Datatype_dateTimeBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_dateTimeBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.Compare
int System::Xml::Schema::Datatype_dateTimeBase::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dateTimeBase::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeNoTimeZone
#include "System/Xml/Schema/Datatype_dateTimeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeTimeZone
#include "System/Xml/Schema/Datatype_dateTimeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTime
#include "System/Xml/Schema/Datatype_dateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeNoTimeZone
#include "System/Xml/Schema/Datatype_timeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeTimeZone
#include "System/Xml/Schema/Datatype_timeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_time
#include "System/Xml/Schema/Datatype_time.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_time.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_time::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_time::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_date
#include "System/Xml/Schema/Datatype_date.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_date.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_date::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_date::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_yearMonth
#include "System/Xml/Schema/Datatype_yearMonth.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonth.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonth::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonth::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_year
#include "System/Xml/Schema/Datatype_year.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_year.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_year::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_year::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_monthDay
#include "System/Xml/Schema/Datatype_monthDay.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_monthDay.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_monthDay::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_monthDay::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_day
#include "System/Xml/Schema/Datatype_day.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_day.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_day::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_day::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_month
#include "System/Xml/Schema/Datatype_month.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_month.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_month::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_month::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_hexBinary
#include "System/Xml/Schema/Datatype_hexBinary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_hexBinary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_hexBinary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary..cctor
void System::Xml::Schema::Datatype_hexBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_hexBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_hexBinary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.Compare
int System::Xml::Schema::Datatype_hexBinary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_hexBinary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_base64Binary
#include "System/Xml/Schema/Datatype_base64Binary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_base64Binary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_base64Binary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary..cctor
void System::Xml::Schema::Datatype_base64Binary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_base64Binary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_base64Binary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.Compare
int System::Xml::Schema::Datatype_base64Binary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_base64Binary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anyURI
#include "System/Xml/Schema/Datatype_anyURI.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anyURI::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anyURI::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anyURI::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyURI::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI..cctor
void System::Xml::Schema::Datatype_anyURI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anyURI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyURI::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.Compare
int System::Xml::Schema::Datatype_anyURI::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anyURI::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QName
#include "System/Xml/Schema/Datatype_QName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QName::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QName::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_QName::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_QName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QName::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName..cctor
void System::Xml::Schema::Datatype_QName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_QName::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_QName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedString
#include "System/Xml/Schema/Datatype_normalizedString.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedString::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedStringV1Compat
#include "System/Xml/Schema/Datatype_normalizedStringV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_token
#include "System/Xml/Schema/Datatype_token.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_token.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_token::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_token.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_tokenV1Compat
#include "System/Xml/Schema/Datatype_tokenV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_tokenV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_language
#include "System/Xml/Schema/Datatype_language.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_language.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_language::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_language::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_NMTOKEN
#include "System/Xml/Schema/Datatype_NMTOKEN.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_Name
#include "System/Xml/Schema/Datatype_Name.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_Name.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_Name::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_Name::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NCName
#include "System/Xml/Schema/Datatype_NCName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NCName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NCName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NCName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NCName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ID
#include "System/Xml/Schema/Datatype_ID.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ID::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ID::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_IDREF
#include "System/Xml/Schema/Datatype_IDREF.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_IDREF::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_IDREF::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENTITY
#include "System/Xml/Schema/Datatype_ENTITY.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ENTITY::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENTITY::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NOTATION
#include "System/Xml/Schema/Datatype_NOTATION.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_NOTATION::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NOTATION::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NOTATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION..cctor
void System::Xml::Schema::Datatype_NOTATION::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_NOTATION", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_NOTATION::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NOTATION::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_integer
#include "System/Xml/Schema/Datatype_integer.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_integer.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_integer::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_integer.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_integer::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonPositiveInteger
#include "System/Xml/Schema/Datatype_nonPositiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger..cctor
void System::Xml::Schema::Datatype_nonPositiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonPositiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_negativeInteger
#include "System/Xml/Schema/Datatype_negativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_negativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger..cctor
void System::Xml::Schema::Datatype_negativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_negativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_long
#include "System/Xml/Schema/Datatype_long.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_long::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_long::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_long::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long..cctor
void System::Xml::Schema::Datatype_long::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_long", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.Compare
int System::Xml::Schema::Datatype_long::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_long::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_int
#include "System/Xml/Schema/Datatype_int.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_int::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_int::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_int::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int..cctor
void System::Xml::Schema::Datatype_int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.Compare
int System::Xml::Schema::Datatype_int::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_int::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_short
#include "System/Xml/Schema/Datatype_short.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_short::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_short::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_short::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short..cctor
void System::Xml::Schema::Datatype_short::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_short", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.Compare
int System::Xml::Schema::Datatype_short::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_short::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
