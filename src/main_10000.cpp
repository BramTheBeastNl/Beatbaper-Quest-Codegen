// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCacheLevel
#include "System/Net/Cache/RequestCacheLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Default
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Default
void System::Net::Cache::RequestCacheLevel::_set_Default(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel BypassCache
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_BypassCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_BypassCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "BypassCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel BypassCache
void System::Net::Cache::RequestCacheLevel::_set_BypassCache(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_BypassCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "BypassCache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_CacheOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
void System::Net::Cache::RequestCacheLevel::_set_CacheOnly(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_CacheOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
void System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Revalidate
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Revalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_Revalidate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Revalidate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Revalidate
void System::Net::Cache::RequestCacheLevel::_set_Revalidate(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_Revalidate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Revalidate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Reload
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_Reload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Reload"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Reload
void System::Net::Cache::RequestCacheLevel::_set_Reload(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_Reload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Reload", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
void System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore(System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Net::Cache::RequestCacheLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCacheLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheLevel m_Level
System::Net::Cache::RequestCacheLevel& System::Net::Cache::RequestCachePolicy::dyn_m_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCachePolicy::dyn_m_Level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Level"))->offset;
  return *reinterpret_cast<System::Net::Cache::RequestCacheLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCachePolicy.get_Level
System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCachePolicy::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Cache::RequestCachePolicy::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Cache::RequestCacheLevel, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cache.RequestCacheProtocol
#include "System/Net/Cache/RequestCacheProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.BitVector32
#include "System/Collections/Specialized/BitVector32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 data
uint& System::Collections::Specialized::BitVector32::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.get_Item
bool System::Collections::Specialized::BitVector32::get_Item(int bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.set_Item
void System::Collections::Specialized::BitVector32::set_Item(int bit, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bit, value);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.CreateMask
int System::Collections::Specialized::BitVector32::CreateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::CreateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "BitVector32", "CreateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.CreateMask
int System::Collections::Specialized::BitVector32::CreateMask(int previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::CreateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "BitVector32", "CreateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previous)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previous);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.ToString
::StringW System::Collections::Specialized::BitVector32::ToString(System::Collections::Specialized::BitVector32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "BitVector32", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.Equals
bool System::Collections::Specialized::BitVector32::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.GetHashCode
int System::Collections::Specialized::BitVector32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.BitVector32.ToString
::StringW System::Collections::Specialized::BitVector32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::BitVector32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.CaseSensitiveStringDictionary
#include "System/Collections/Specialized/CaseSensitiveStringDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.CaseSensitiveStringDictionary.Add
void System::Collections::Specialized::CaseSensitiveStringDictionary::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CaseSensitiveStringDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.HybridDictionary
#include "System/Collections/Specialized/HybridDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::HybridDictionary::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable hashtable
System::Collections::Hashtable*& System::Collections::Specialized::HybridDictionary::dyn_hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::dyn_hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashtable"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean caseInsensitive
bool& System::Collections::Specialized::HybridDictionary::dyn_caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::dyn_caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::HybridDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.set_Item
void System::Collections::Specialized::HybridDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_List
System::Collections::Specialized::ListDictionary* System::Collections::Specialized::HybridDictionary::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Specialized::ListDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Count
int System::Collections::Specialized::HybridDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Keys
System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_IsReadOnly
bool System::Collections::Specialized::HybridDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::HybridDictionary::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Values
System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.ChangeOver
void System::Collections::Specialized::HybridDictionary::ChangeOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::ChangeOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Add
void System::Collections::Specialized::HybridDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Clear
void System::Collections::Specialized::HybridDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Contains
bool System::Collections::Specialized::HybridDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.CopyTo
void System::Collections::Specialized::HybridDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Specialized::HybridDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::HybridDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Remove
void System::Collections::Specialized::HybridDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode head
System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Specialized::ListDictionary::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Collections::Specialized::ListDictionary::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
System::Collections::IComparer*& System::Collections::Specialized::ListDictionary::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Specialized::ListDictionary::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::ListDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.set_Item
void System::Collections::Specialized::ListDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Count
int System::Collections::Specialized::ListDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Keys
System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_IsReadOnly
bool System::Collections::Specialized::ListDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::ListDictionary::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Values
System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Add
void System::Collections::Specialized::ListDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Clear
void System::Collections::Specialized::ListDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Contains
bool System::Collections::Specialized::ListDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.CopyTo
void System::Collections::Specialized::ListDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Specialized::ListDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Remove
void System::Collections::Specialized::ListDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode current
System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode current
System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object key
::Il2CppObject*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
::Il2CppObject*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode next
System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase
#include "System/Collections/Specialized/NameObjectCollectionBase.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.StringComparer defaultComparer
System::StringComparer* System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.StringComparer defaultComparer
void System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readOnly
bool& System::Collections::Specialized::NameObjectCollectionBase::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _entriesArray
System::Collections::ArrayList*& System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesArray"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _keyComparer
System::Collections::IEqualityComparer*& System::Collections::Specialized::NameObjectCollectionBase::dyn__keyComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__keyComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyComparer"))->offset;
  return *reinterpret_cast<System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _entriesTable
System::Collections::Hashtable*& System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesTable"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry _nullKeyEntry
System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry*& System::Collections::Specialized::NameObjectCollectionBase::dyn__nullKeyEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__nullKeyEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullKeyEntry"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _serializationInfo
System::Runtime::Serialization::SerializationInfo*& System::Collections::Specialized::NameObjectCollectionBase::dyn__serializationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__serializationInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializationInfo"))->offset;
  return *reinterpret_cast<System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Specialized::NameObjectCollectionBase::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Specialized::NameObjectCollectionBase::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_IsReadOnly
bool System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_Count
int System::Collections::Specialized::NameObjectCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase..cctor
void System::Collections::Specialized::NameObjectCollectionBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameObjectCollectionBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData
void System::Collections::Specialized::NameObjectCollectionBase::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization
void System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.FindEntry
System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry* System::Collections::Specialized::NameObjectCollectionBase::FindEntry(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::FindEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
void System::Collections::Specialized::NameObjectCollectionBase::BaseAdd(::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
void System::Collections::Specialized::NameObjectCollectionBase::BaseRemove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
void System::Collections::Specialized::NameObjectCollectionBase::BaseSet(::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
::StringW System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::NameObjectCollectionBase::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String Key
::StringW& System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object Value
::Il2CppObject*& System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
int& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameObjectCollectionBase _coll
System::Collections::Specialized::NameObjectCollectionBase*& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__coll() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__coll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coll"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::NameObjectCollectionBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.MoveNext
bool System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.Reset
void System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.CompatibleComparer
#include "System/Collections/Specialized/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.IComparer defaultComparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IComparer*>("System.Collections.Specialized", "CompatibleComparer", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IComparer defaultComparer
void System::Collections::Specialized::CompatibleComparer::_set_defaultComparer(System::Collections::IComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultComparer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.IHashCodeProvider defaultHashProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IHashCodeProvider*>("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IHashCodeProvider defaultHashProvider
void System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider(System::Collections::IHashCodeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer _comparer
System::Collections::IComparer*& System::Collections::Specialized::CompatibleComparer::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IHashCodeProvider _hcp
System::Collections::IHashCodeProvider*& System::Collections::Specialized::CompatibleComparer::dyn__hcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::dyn__hcp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hcp"))->offset;
  return *reinterpret_cast<System::Collections::IHashCodeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_Comparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_HashCodeProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultComparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_DefaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_DefaultComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultHashCodeProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultHashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IHashCodeProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.Equals
bool System::Collections::Specialized::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.GetHashCode
int System::Collections::Specialized::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] _all
::ArrayW<::StringW>& System::Collections::Specialized::NameValueCollection::dyn__all() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::dyn__all");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_all"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _allKeys
::ArrayW<::StringW>& System::Collections::Specialized::NameValueCollection::dyn__allKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::dyn__allKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.get_Item
::StringW System::Collections::Specialized::NameValueCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.set_Item
void System::Collections::Specialized::NameValueCollection::set_Item(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
void System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateCachedArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsOneString
::StringW System::Collections::Specialized::NameValueCollection::GetAsOneString(System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetAsOneString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsOneString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsStringArray
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetAsStringArray(System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetAsStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Add
void System::Collections::Specialized::NameValueCollection::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::StringW System::Collections::Specialized::NameValueCollection::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetValues(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Set
void System::Collections::Specialized::NameValueCollection::Set(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Remove
void System::Collections::Specialized::NameValueCollection::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::StringW System::Collections::Specialized::NameValueCollection::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetValues(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetKey
::StringW System::Collections::Specialized::NameValueCollection::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.NotifyCollectionChangedAction
#include "System/Collections/Specialized/NotifyCollectionChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Add
System::Collections::Specialized::NotifyCollectionChangedAction System::Collections::Specialized::NotifyCollectionChangedAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::NotifyCollectionChangedAction>("System.Collections.Specialized", "NotifyCollectionChangedAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Add
void System::Collections::Specialized::NotifyCollectionChangedAction::_set_Add(System::Collections::Specialized::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NotifyCollectionChangedAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Remove
System::Collections::Specialized::NotifyCollectionChangedAction System::Collections::Specialized::NotifyCollectionChangedAction::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::NotifyCollectionChangedAction>("System.Collections.Specialized", "NotifyCollectionChangedAction", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Remove
void System::Collections::Specialized::NotifyCollectionChangedAction::_set_Remove(System::Collections::Specialized::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NotifyCollectionChangedAction", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Replace
System::Collections::Specialized::NotifyCollectionChangedAction System::Collections::Specialized::NotifyCollectionChangedAction::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::NotifyCollectionChangedAction>("System.Collections.Specialized", "NotifyCollectionChangedAction", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Replace
void System::Collections::Specialized::NotifyCollectionChangedAction::_set_Replace(System::Collections::Specialized::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NotifyCollectionChangedAction", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Move
System::Collections::Specialized::NotifyCollectionChangedAction System::Collections::Specialized::NotifyCollectionChangedAction::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::NotifyCollectionChangedAction>("System.Collections.Specialized", "NotifyCollectionChangedAction", "Move"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Move
void System::Collections::Specialized::NotifyCollectionChangedAction::_set_Move(System::Collections::Specialized::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NotifyCollectionChangedAction", "Move", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Reset
System::Collections::Specialized::NotifyCollectionChangedAction System::Collections::Specialized::NotifyCollectionChangedAction::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Specialized::NotifyCollectionChangedAction>("System.Collections.Specialized", "NotifyCollectionChangedAction", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Specialized.NotifyCollectionChangedAction Reset
void System::Collections::Specialized::NotifyCollectionChangedAction::_set_Reset(System::Collections::Specialized::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NotifyCollectionChangedAction", "Reset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Collections::Specialized::NotifyCollectionChangedAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
#include "System/Collections/Specialized/NotifyCollectionChangedEventArgs.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NotifyCollectionChangedAction _action
System::Collections::Specialized::NotifyCollectionChangedAction& System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__action() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_action"))->offset;
  return *reinterpret_cast<System::Collections::Specialized::NotifyCollectionChangedAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IList _newItems
System::Collections::IList*& System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__newItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__newItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newItems"))->offset;
  return *reinterpret_cast<System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IList _oldItems
System::Collections::IList*& System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__oldItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__oldItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldItems"))->offset;
  return *reinterpret_cast<System::Collections::IList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _newStartingIndex
int& System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__newStartingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__newStartingIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newStartingIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _oldStartingIndex
int& System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__oldStartingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::dyn__oldStartingIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldStartingIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventArgs.InitializeAddOrRemove
void System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeAddOrRemove(System::Collections::Specialized::NotifyCollectionChangedAction action, System::Collections::IList* changedItems, int startingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeAddOrRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAddOrRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(changedItems), ::il2cpp_utils::ExtractType(startingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, changedItems, startingIndex);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventArgs.InitializeAdd
void System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeAdd(System::Collections::Specialized::NotifyCollectionChangedAction action, System::Collections::IList* newItems, int newStartingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(newItems), ::il2cpp_utils::ExtractType(newStartingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, newItems, newStartingIndex);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventArgs.InitializeRemove
void System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeRemove(System::Collections::Specialized::NotifyCollectionChangedAction action, System::Collections::IList* oldItems, int oldStartingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(oldItems), ::il2cpp_utils::ExtractType(oldStartingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, oldItems, oldStartingIndex);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventArgs.InitializeMoveOrReplace
void System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeMoveOrReplace(System::Collections::Specialized::NotifyCollectionChangedAction action, System::Collections::IList* newItems, System::Collections::IList* oldItems, int startingIndex, int oldStartingIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventArgs::InitializeMoveOrReplace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMoveOrReplace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(newItems), ::il2cpp_utils::ExtractType(oldItems), ::il2cpp_utils::ExtractType(startingIndex), ::il2cpp_utils::ExtractType(oldStartingIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, newItems, oldItems, startingIndex, oldStartingIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
#include "System/Collections/Specialized/NotifyCollectionChangedEventHandler.hpp"
// Including type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
#include "System/Collections/Specialized/NotifyCollectionChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke
void System::Collections::Specialized::NotifyCollectionChangedEventHandler::Invoke(::Il2CppObject* sender, System::Collections::Specialized::NotifyCollectionChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventHandler.BeginInvoke
System::IAsyncResult* System::Collections::Specialized::NotifyCollectionChangedEventHandler::BeginInvoke(::Il2CppObject* sender, System::Collections::Specialized::NotifyCollectionChangedEventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Collections.Specialized.NotifyCollectionChangedEventHandler.EndInvoke
void System::Collections::Specialized::NotifyCollectionChangedEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NotifyCollectionChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary
#include "System/Collections/Specialized/OrderedDictionary.hpp"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objectsArray
System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::dyn__objectsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__objectsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsArray"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _objectsTable
System::Collections::Hashtable*& System::Collections::Specialized::OrderedDictionary::dyn__objectsTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__objectsTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsTable"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialCapacity
int& System::Collections::Specialized::OrderedDictionary::dyn__initialCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__initialCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _comparer
System::Collections::IEqualityComparer*& System::Collections::Specialized::OrderedDictionary::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readOnly
bool& System::Collections::Specialized::OrderedDictionary::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Specialized::OrderedDictionary::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _siInfo
System::Runtime::Serialization::SerializationInfo*& System::Collections::Specialized::OrderedDictionary::dyn__siInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::dyn__siInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_siInfo"))->offset;
  return *reinterpret_cast<System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Count
int System::Collections::Specialized::OrderedDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_IsReadOnly
bool System::Collections::Specialized::OrderedDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Keys
System::Collections::ICollection* System::Collections::Specialized::OrderedDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_objectsArray
System::Collections::ArrayList* System::Collections::Specialized::OrderedDictionary::get_objectsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_objectsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_objectsTable
System::Collections::Hashtable* System::Collections::Specialized::OrderedDictionary::get_objectsTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_objectsTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.set_Item
void System::Collections::Specialized::OrderedDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Values
System::Collections::ICollection* System::Collections::Specialized::OrderedDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Add
void System::Collections::Specialized::OrderedDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Clear
void System::Collections::Specialized::OrderedDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Contains
bool System::Collections::Specialized::OrderedDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.CopyTo
void System::Collections::Specialized::OrderedDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.IndexOfKey
int System::Collections::Specialized::OrderedDictionary::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::IndexOfKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.OnDeserialization
void System::Collections::Specialized::OrderedDictionary::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Remove
void System::Collections::Specialized::OrderedDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Specialized::OrderedDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.GetObjectData
void System::Collections::Specialized::OrderedDictionary::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Collections::Specialized::OrderedDictionary::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectReturnType
int& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectReturnType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator arrayEnumerator
System::Collections::IEnumerator*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayEnumerator"))->offset;
  return *reinterpret_cast<System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.MoveNext
bool System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.Reset
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objects
System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.StringCollection
#include "System/Collections/Specialized/StringCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList data
System::Collections::ArrayList*& System::Collections::Specialized::StringCollection::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Item
::StringW System::Collections::Specialized::StringCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.set_Item
void System::Collections::Specialized::StringCollection::set_Item(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Count
int System::Collections::Specialized::StringCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsReadOnly
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsFixedSize
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::StringCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::Specialized::StringCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.set_Item
void System::Collections::Specialized::StringCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Add
int System::Collections::Specialized::StringCollection::Add(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Clear
void System::Collections::Specialized::StringCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Contains
bool System::Collections::Specialized::StringCollection::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.CopyTo
void System::Collections::Specialized::StringCollection::CopyTo(::ArrayW<::StringW> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.IndexOf
int System::Collections::Specialized::StringCollection::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Insert
void System::Collections::Specialized::StringCollection::Insert(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Remove
void System::Collections::Specialized::StringCollection::Remove(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.RemoveAt
void System::Collections::Specialized::StringCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Add
int System::Collections::Specialized::StringCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains
bool System::Collections::Specialized::StringCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf
int System::Collections::Specialized::StringCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert
void System::Collections::Specialized::StringCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove
void System::Collections::Specialized::StringCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::StringCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::StringCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable contents
System::Collections::Hashtable*& System::Collections::Specialized::StringDictionary::dyn_contents() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringDictionary::dyn_contents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contents"))->offset;
  return *reinterpret_cast<System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.Add
void System::Collections::Specialized::StringDictionary::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::StringDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NodeColor
#include "System/Collections/Generic/NodeColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Black
System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Black
void System::Collections::Generic::NodeColor::_set_Black(System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Red
System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Red
void System::Collections::Generic::NodeColor::_set_Red(System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Red", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& System::Collections::Generic::NodeColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.TreeRotation
#include "System/Collections/Generic/TreeRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Left
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Left"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Left
void System::Collections::Generic::TreeRotation::_set_Left(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation LeftRight
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation LeftRight
void System::Collections::Generic::TreeRotation::_set_LeftRight(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Right
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Right
void System::Collections::Generic::TreeRotation::_set_Right(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation RightLeft
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_RightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_RightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "RightLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation RightLeft
void System::Collections::Generic::TreeRotation::_set_RightLeft(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_RightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "RightLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& System::Collections::Generic::TreeRotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(configContext), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.ByteArrayContent
#include "System/Net/Http/ByteArrayContent.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] content
::ArrayW<uint8_t>& System::Net::Http::ByteArrayContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::ByteArrayContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 offset
int& System::Net::Http::ByteArrayContent::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::ByteArrayContent::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 count
int& System::Net::Http::ByteArrayContent::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::ByteArrayContent::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.SerializeToStreamAsync
System::Threading::Tasks::Task* System::Net::Http::ByteArrayContent::SerializeToStreamAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::ByteArrayContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.TryComputeLength
bool System::Net::Http::ByteArrayContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::ByteArrayContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.FormUrlEncodedContent
#include "System/Net/Http/FormUrlEncodedContent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.EncodeContent
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::EncodeContent(System::Collections::Generic::IEnumerable_1<System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>* nameValueCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::FormUrlEncodedContent::EncodeContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "EncodeContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameValueCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameValueCollection);
}
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.SerializeValue
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::SerializeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::FormUrlEncodedContent::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan TimeoutDefault
System::TimeSpan System::Net::Http::HttpClient::_get_TimeoutDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::_get_TimeoutDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Net.Http", "HttpClient", "TimeoutDefault"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan TimeoutDefault
void System::Net::Http::HttpClient::_set_TimeoutDefault(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::_set_TimeoutDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClient", "TimeoutDefault", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Uri base_address
System::Uri*& System::Net::Http::HttpClient::dyn_base_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_base_address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_address"))->offset;
  return *reinterpret_cast<System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource cts
System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::dyn_cts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_cts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cts"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
bool& System::Net::Http::HttpClient::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpClient::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buffer_size
int64_t& System::Net::Http::HttpClient::dyn_buffer_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_buffer_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer_size"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan timeout
System::TimeSpan& System::Net::Http::HttpClient::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient.get_MaxResponseContentBufferSize
int64_t System::Net::Http::HttpClient::get_MaxResponseContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::get_MaxResponseContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxResponseContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.set_Timeout
void System::Net::Http::HttpClient::set_Timeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpClient..cctor
void System::Net::Http::HttpClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.GetAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::GetAsync(System::Uri* requestUri, System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::GetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.PostAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::PostAsync(System::Uri* requestUri, System::Net::Http::HttpContent* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::PostAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(content)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, content);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsyncWorker
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsyncWorker(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsyncWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsyncWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.GetStringAsync
System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpClient::GetStringAsync(System::Uri* requestUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::GetStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method, requestUri);
}
// Autogenerated method: System.Net.Http.HttpClient.<>n__0
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::$$n__0(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.Dispose
void System::Net::Http::HttpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpCompletionOption completionOption
System::Net::Http::HttpCompletionOption& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionOption"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpCompletionOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <response>5__1
System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<response>5__1"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource <lcts>5__2
System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lcts>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.MoveNext
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.SetStateMachine
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri requestUri
System::Uri*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestUri"))->offset;
  return *reinterpret_cast<System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <resp>5__1
System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resp>5__1"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.String> <>u__2
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.MoveNext
void System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.SetStateMachine
void System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler
#include "System/Net/Http/HttpClientHandler.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 groupCounter
int64_t System::Net::Http::HttpClientHandler::_get_groupCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::_get_groupCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Net.Http", "HttpClientHandler", "groupCounter"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 groupCounter
void System::Net::Http::HttpClientHandler::_set_groupCounter(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::_set_groupCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler", "groupCounter", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowAutoRedirect
bool& System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoRedirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DecompressionMethods automaticDecompression
System::Net::DecompressionMethods& System::Net::Http::HttpClientHandler::dyn_automaticDecompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_automaticDecompression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticDecompression"))->offset;
  return *reinterpret_cast<System::Net::DecompressionMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieContainer cookieContainer
System::Net::CookieContainer*& System::Net::Http::HttpClientHandler::dyn_cookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_cookieContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieContainer"))->offset;
  return *reinterpret_cast<System::Net::CookieContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
System::Net::ICredentials*& System::Net::Http::HttpClientHandler::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxAutomaticRedirections
int& System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAutomaticRedirections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxRequestContentBufferSize
int64_t& System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRequestContentBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preAuthenticate
bool& System::Net::Http::HttpClientHandler::dyn_preAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_preAuthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preAuthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy proxy
System::Net::IWebProxy*& System::Net::Http::HttpClientHandler::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useCookies
bool& System::Net::Http::HttpClientHandler::dyn_useCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_useCookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCookies"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useDefaultCredentials
bool& System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDefaultCredentials"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useProxy
bool& System::Net::Http::HttpClientHandler::dyn_useProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_useProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useProxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sentRequest
bool& System::Net::Http::HttpClientHandler::dyn_sentRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_sentRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sentRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String connectionGroupName
::StringW& System::Net::Http::HttpClientHandler::dyn_connectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_connectionGroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionGroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
bool& System::Net::Http::HttpClientHandler::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_CookieContainer
System::Net::CookieContainer* System::Net::Http::HttpClientHandler::get_CookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::get_CookieContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CookieContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::CookieContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_MaxRequestContentBufferSize
int64_t System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRequestContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateWebRequest
System::Net::HttpWebRequest* System::Net::Http::HttpClientHandler::CreateWebRequest(System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::CreateWebRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::HttpWebRequest*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateResponseMessage
System::Net::Http::HttpResponseMessage* System::Net::Http::HttpClientHandler::CreateResponseMessage(System::Net::HttpWebResponse* wr, System::Net::Http::HttpRequestMessage* requestMessage, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::CreateResponseMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateResponseMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wr), ::il2cpp_utils::ExtractType(requestMessage), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method, wr, requestMessage, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.MethodHasBody
bool System::Net::Http::HttpClientHandler::MethodHasBody(System::Net::Http::HttpMethod* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::MethodHasBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler", "MethodHasBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.Dispose
void System::Net::Http::HttpClientHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClientHandler::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
System::Net::Http::HttpClientHandler::$$c* System::Net::Http::HttpClientHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::HttpClientHandler::$$c*>("System.Net.Http", "HttpClientHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
void System::Net::Http::HttpClientHandler::$$c::_set_$$9(System::Net::Http::HttpClientHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
System::Func_2<::StringW, bool>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::StringW, bool>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0(System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__64_0
System::Action_1<::Il2CppObject*>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__64_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0", value)));
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c..cctor
void System::Net::Http::HttpClientHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<CreateWebRequest>b__61_0
bool System::Net::Http::HttpClientHandler::$$c::$CreateWebRequest$b__61_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::<CreateWebRequest>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateWebRequest>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<SendAsync>b__64_0
void System::Net::Http::HttpClientHandler::$$c::$SendAsync$b__64_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::<SendAsync>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendAsync>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClientHandler <>4__this
System::Net::Http::HttpClientHandler*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpClientHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest <wrequest>5__1
System::Net::HttpWebRequest*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wrequest>5__1"))->offset;
  return *reinterpret_cast<System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <content>5__2
System::Net::Http::HttpContent*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<content>5__2"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream <stream>5__3
System::IO::Stream*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stream>5__3"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebResponse <wresponse>5__4
System::Net::HttpWebResponse*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wresponse>5__4"))->offset;
  return *reinterpret_cast<System::Net::HttpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration <>7__wrap1
System::Threading::CancellationTokenRegistration& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.IO.Stream> <>u__2
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::IO::Stream*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::IO::Stream*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebResponse> <>u__3
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::WebResponse*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<System::Net::WebResponse*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__4
System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.MoveNext
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.SetStateMachine
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseContentRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_get_ResponseContentRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseContentRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
void System::Net::Http::HttpCompletionOption::_set_ResponseContentRead(System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_set_ResponseContentRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseContentRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
void System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead(System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Net::Http::HttpCompletionOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream buffer
System::Net::Http::HttpContent::FixedMemoryStream*& System::Net::Http::HttpContent::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent::FixedMemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
bool& System::Net::Http::HttpContent::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpContentHeaders headers
System::Net::Http::Headers::HttpContentHeaders*& System::Net::Http::HttpContent::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpContentHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent.get_Headers
System::Net::Http::Headers::HttpContentHeaders* System::Net::Http::HttpContent::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpContentHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.get_LoadedBufferLength
System::Nullable_1<int64_t> System::Net::Http::HttpContent::get_LoadedBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::get_LoadedBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadedBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyTo
void System::Net::Http::HttpContent::CopyTo(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.CreateFixedMemoryStream
System::Net::Http::HttpContent::FixedMemoryStream* System::Net::Http::HttpContent::CreateFixedMemoryStream(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CreateFixedMemoryStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "CreateFixedMemoryStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpContent::FixedMemoryStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.ReadAsStringAsync
System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpContent::ReadAsStringAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::ReadAsStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.GetEncodingFromBuffer
System::Text::Encoding* System::Net::Http::HttpContent::GetEncodingFromBuffer(::ArrayW<uint8_t> buffer, int length, ByRef<int> preambleLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::GetEncodingFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "GetEncodingFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(preambleLength)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, byref(preambleLength));
}
// Autogenerated method: System.Net.Http.HttpContent.StartsWith
int System::Net::Http::HttpContent::StartsWith(::ArrayW<uint8_t> array, int length, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, length, value);
}
// Autogenerated method: System.Net.Http.HttpContent.SerializeToStreamAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::SerializeToStreamAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.TryComputeLength
bool System::Net::Http::HttpContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 maxSize
int64_t& System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.CheckOverflow
void System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.WriteByte
void System::Net::Http::HttpContent::FixedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.Write
void System::Net::Http::HttpContent::FixedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maxBufferSize
int64_t& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.MoveNext
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.SetStateMachine
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.MoveNext
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.SetStateMachine
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageHandler::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageInvoker
#include "System/Net/Http/HttpMessageInvoker.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMessageHandler handler
System::Net::Http::HttpMessageHandler*& System::Net::Http::HttpMessageInvoker::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean disposeHandler
bool& System::Net::Http::HttpMessageInvoker::dyn_disposeHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::dyn_disposeHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeHandler"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageInvoker::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod delete_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_delete_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_delete_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "delete_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod delete_method
void System::Net::Http::HttpMethod::_set_delete_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_delete_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "delete_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod get_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_get_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "get_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod get_method
void System::Net::Http::HttpMethod::_set_get_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_get_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "get_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod head_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_head_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_head_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "head_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod head_method
void System::Net::Http::HttpMethod::_set_head_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_head_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "head_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod options_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_options_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_options_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "options_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod options_method
void System::Net::Http::HttpMethod::_set_options_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_options_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "options_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod post_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_post_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_post_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "post_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod post_method
void System::Net::Http::HttpMethod::_set_post_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_post_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "post_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod put_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_put_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_put_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "put_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod put_method
void System::Net::Http::HttpMethod::_set_put_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_put_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "put_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod trace_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_trace_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_trace_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "trace_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod trace_method
void System::Net::Http::HttpMethod::_set_trace_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_trace_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "trace_method", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String method
::StringW& System::Net::Http::HttpMethod::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Get
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::get_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Method
::StringW System::Net::Http::HttpMethod::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Post
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::get_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod..cctor
void System::Net::Http::HttpMethod::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(System::Net::Http::HttpMethod* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.HttpMethod.GetHashCode
int System::Net::Http::HttpMethod::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.ToString
::StringW System::Net::Http::HttpMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.op_Equality
bool System::Net::Http::operator ==(System::Net::Http::HttpMethod* left, System::Net::Http::HttpMethod& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestException
#include "System/Net/Http/HttpRequestException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpRequestMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMethod method
System::Net::Http::HttpMethod*& System::Net::Http::HttpRequestMessage::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
System::Version*& System::Net::Http::HttpRequestMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
System::Uri*& System::Net::Http::HttpRequestMessage::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_used
bool& System::Net::Http::HttpRequestMessage::dyn_is_used() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_is_used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_used"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
bool& System::Net::Http::HttpRequestMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
System::Net::Http::HttpContent*& System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Content
System::Net::Http::HttpContent* System::Net::Http::HttpRequestMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Content
void System::Net::Http::HttpRequestMessage::set_Content(System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Headers
System::Net::Http::Headers::HttpRequestHeaders* System::Net::Http::HttpRequestMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpRequestHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Method
System::Net::Http::HttpMethod* System::Net::Http::HttpRequestMessage::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Method
void System::Net::Http::HttpRequestMessage::set_Method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_RequestUri
System::Uri* System::Net::Http::HttpRequestMessage::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_RequestUri
void System::Net::Http::HttpRequestMessage::set_RequestUri(System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::set_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Version
System::Version* System::Net::Http::HttpRequestMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.IsAllowedAbsoluteUri
bool System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpRequestMessage", "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.SetIsUsed
bool System::Net::Http::HttpRequestMessage::SetIsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::SetIsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.ToString
::StringW System::Net::Http::HttpRequestMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpResponseHeaders headers
System::Net::Http::Headers::HttpResponseHeaders*& System::Net::Http::HttpResponseMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpResponseHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reasonPhrase
::StringW& System::Net::Http::HttpResponseMessage::dyn_reasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_reasonPhrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reasonPhrase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpStatusCode statusCode
System::Net::HttpStatusCode& System::Net::Http::HttpResponseMessage::dyn_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCode"))->offset;
  return *reinterpret_cast<System::Net::HttpStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
System::Version*& System::Net::Http::HttpResponseMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
bool& System::Net::Http::HttpResponseMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
System::Net::Http::HttpContent*& System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpRequestMessage <RequestMessage>k__BackingField
System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestMessage>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Content
System::Net::Http::HttpContent* System::Net::Http::HttpResponseMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_Content
void System::Net::Http::HttpResponseMessage::set_Content(System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Headers
System::Net::Http::Headers::HttpResponseHeaders* System::Net::Http::HttpResponseMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpResponseHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_IsSuccessStatusCode
bool System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_ReasonPhrase
::StringW System::Net::Http::HttpResponseMessage::get_ReasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_ReasonPhrase
void System::Net::Http::HttpResponseMessage::set_ReasonPhrase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_RequestMessage
void System::Net::Http::HttpResponseMessage::set_RequestMessage(System::Net::Http::HttpRequestMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_RequestMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_StatusCode
System::Net::HttpStatusCode System::Net::Http::HttpResponseMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_StatusCode
void System::Net::Http::HttpResponseMessage::set_StatusCode(System::Net::HttpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Version
System::Version* System::Net::Http::HttpResponseMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
System::Net::Http::HttpResponseMessage* System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.ToString
::StringW System::Net::Http::HttpResponseMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StreamContent
#include "System/Net/Http/StreamContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream content
System::IO::Stream*& System::Net::Http::StreamContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 bufferSize
int& System::Net::Http::StreamContent::dyn_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::dyn_bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& System::Net::Http::StreamContent::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 startPosition
int64_t& System::Net::Http::StreamContent::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean contentCopied
bool& System::Net::Http::StreamContent::dyn_contentCopied() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::dyn_contentCopied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentCopied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.StreamContent.Dispose
void System::Net::Http::StreamContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.StreamContent.SerializeToStreamAsync
System::Threading::Tasks::Task* System::Net::Http::StreamContent::SerializeToStreamAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.StreamContent.TryComputeLength
bool System::Net::Http::StreamContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StringContent
#include "System/Net/Http/StringContent.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.StringContent.GetByteArray
::ArrayW<uint8_t> System::Net::Http::StringContent::GetByteArray(::StringW content, System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StringContent::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "StringContent", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content, encoding);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.AuthenticationHeaderValue
#include "System/Net/Http/Headers/AuthenticationHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Parameter>k__BackingField
::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameter>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Scheme>k__BackingField
::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scheme>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Parameter
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Parameter
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Scheme
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Scheme
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::AuthenticationHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParseElement
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.Equals
bool System::Net::Http::Headers::AuthenticationHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode
int System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.ToString
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> extensions
System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> no_cache_headers
System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_cache_headers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> private_headers
System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_headers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxAge>k__BackingField
System::Nullable_1<System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MaxStale>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStale>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxStaleLimit>k__BackingField
System::Nullable_1<System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStaleLimit>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MinFresh>k__BackingField
System::Nullable_1<System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinFresh>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MustRevalidate>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MustRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoCache>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoCache>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoStore>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoStore>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoTransform>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoTransform>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OnlyIfCached>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnlyIfCached>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Private>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Private>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProxyRevalidate>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProxyRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Public>k__BackingField
bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Public>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <SharedMaxAge>k__BackingField
System::Nullable_1<System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SharedMaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCacheHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::CacheControlHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::CacheControlHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::StringW System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionExtensions
#include "System/Net/Http/Headers/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionExtensions.SetValue
void System::Net::Http::Headers::CollectionExtensions::SetValue(System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>* parameters, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CollectionExtensions::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionExtensions", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionParser
#include "System/Net/Http/Headers/CollectionParser.hpp"
// Including type: System.Net.Http.Headers.ElementTryParser`1
#include "System/Net/Http/Headers/ElementTryParser_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParse
bool System::Net::Http::Headers::CollectionParser::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<::StringW>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CollectionParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParseStringElement
bool System::Net::Http::Headers::CollectionParser::TryParseStringElement(System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CollectionParser::TryParseStringElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParseStringElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentDispositionHeaderValue
#include "System/Net/Http/Headers/ContentDispositionHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dispositionType
::StringW& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispositionType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentDispositionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse
bool System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::ContentDispositionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentDispositionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentDispositionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.Equals
bool System::Net::Http::Headers::ContentDispositionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentDispositionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentRangeHeaderValue
#include "System/Net/Http/Headers/ContentRangeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String unit
::StringW& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <Length>k__BackingField
System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_From
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_From
void System::Net::Http::Headers::ContentRangeHeaderValue::set_From(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Length
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_Length
void System::Net::Http::Headers::ContentRangeHeaderValue::set_Length(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_To
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_To
void System::Net::Http::Headers::ContentRangeHeaderValue::set_To(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentRangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse
bool System::Net::Http::Headers::ContentRangeHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::ContentRangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentRangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentRangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.Equals
bool System::Net::Http::Headers::ContentRangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::_get_any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::_set_any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWeak>k__BackingField
bool& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWeak>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Tag>k__BackingField
::StringW& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::StringW System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::StringW System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HashCodeCalculator
#include "System/Net/Http/Headers/HashCodeCalculator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.HeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_HeaderTypeInfo_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.CollectionHeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_CollectionHeaderTypeInfo_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.Http.Headers.TryParseDelegate`1
#include "System/Net/Http/Headers/TryParseDelegate_1.hpp"
// Including type: System.Net.Http.Headers.TryParseListDelegate`1
#include "System/Net/Http/Headers/TryParseListDelegate_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowsMany
bool& System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowsMany"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
::StringW& System::Net::Http::Headers::HeaderInfo::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.String> <CustomToString>k__BackingField
System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomToString>k__BackingField"))->offset;
  return *reinterpret_cast<System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_CustomToString
System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::HeaderInfo::get_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::get_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Func_2<::Il2CppObject*, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.set_CustomToString
void System::Net::Http::Headers::HeaderInfo::set_CustomToString(System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::set_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_Separator
::StringW System::Net::Http::Headers::HeaderInfo::get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::get_Separator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Separator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(System::Net::Http::Headers::HttpHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::CreateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.AddToCollection
void System::Net::Http::Headers::HeaderInfo::AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::AddToCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(System::Net::Http::Headers::HttpHeaders* headers, System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::CreateCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.ToStringCollection
System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HeaderInfo::ToStringCollection(::Il2CppObject* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::ToStringCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.TryParse
bool System::Net::Http::Headers::HeaderInfo::TryParse(::StringW value, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::TryParse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpContent content
System::Net::Http::HttpContent*& System::Net::Http::Headers::HttpContentHeaders::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentLength
System::Nullable_1<int64_t> System::Net::Http::Headers::HttpContentHeaders::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentType
System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::HttpContentHeaders::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::MediaTypeHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.set_ContentType
void System::Net::Http::Headers::HttpContentHeaders::set_ContentType(System::Net::Http::Headers::MediaTypeHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind None
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind None
void System::Net::Http::Headers::HttpHeaderKind::_set_None(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Request
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Request"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Request
void System::Net::Http::Headers::HttpHeaderKind::_set_Request(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Response
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Response
void System::Net::Http::Headers::HttpHeaderKind::_set_Response(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Content
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Content
void System::Net::Http::Headers::HttpHeaderKind::_set_Content(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Net::Http::Headers::HttpHeaderKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HeaderInfo*>* System::Net::Http::Headers::HttpHeaders::_get_known_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::_get_known_headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HeaderInfo*>*>("System.Net.Http.Headers", "HttpHeaders", "known_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
void System::Net::Http::Headers::HttpHeaders::_set_known_headers(System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::_set_known_headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaders", "known_headers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> headers
System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HttpHeaders::HeaderBucket*>*& System::Net::Http::Headers::HttpHeaders::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HttpHeaders::HeaderBucket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> connectionclose
System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_connectionclose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::dyn_connectionclose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionclose"))->offset;
  return *reinterpret_cast<System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> transferEncodingChunked
System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferEncodingChunked"))->offset;
  return *reinterpret_cast<System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders..cctor
void System::Net::Http::Headers::HttpHeaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.AddInternal
bool System::Net::Http::Headers::HttpHeaders::AddInternal(::StringW name, System::Collections::Generic::IEnumerable_1<::StringW>* values, System::Net::Http::Headers::HeaderInfo* headerInfo, bool ignoreInvalid) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(headerInfo), ::il2cpp_utils::ExtractType(ignoreInvalid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values, headerInfo, ignoreInvalid);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation
bool System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation(::StringW name, System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddWithoutValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.CheckName
System::Net::Http::Headers::HeaderInfo* System::Net::Http::Headers::HttpHeaders::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HeaderInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryCheckName
bool System::Net::Http::Headers::HttpHeaders::TryCheckName(::StringW name, ByRef<System::Net::Http::Headers::HeaderInfo*> headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::TryCheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(headerInfo));
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*>>* System::Net::Http::Headers::HttpHeaders::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::Http::Headers::HttpHeaders::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.Remove
bool System::Net::Http::Headers::HttpHeaders::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetSingleHeaderString
::StringW System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString(::StringW key, System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetSingleHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetAllHeaderValues
System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues(System::Net::Http::Headers::HttpHeaders::HeaderBucket* bucket, System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllHeaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, bucket, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetKnownHeaderKind
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetKnownHeaderKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpHeaderKind, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.ToString
::StringW System::Net::Http::Headers::HttpHeaders::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Parsed
::Il2CppObject*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parsed"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> values
System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Func`2<System.Object,System.String> CustomToString
System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomToString"))->offset;
  return *reinterpret_cast<System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_HasStringValues
bool System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasStringValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_Values
System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.set_Values
void System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values(System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.ParsedToString
::StringW System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsedToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,System.Collections.Generic.IEnumerable`1<System.String>> <>2__current
System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*>& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.Headers.HttpHeaders <>4__this
System::Net::Http::Headers::HttpHeaders*& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::HttpHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> <>7__wrap1
typename System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename System::Collections::Generic::Dictionary_2<::StringW, System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*> System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::KeyValuePair_2<::StringW, System::Collections::Generic::IEnumerable_1<::StringW>*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.IDisposable.Dispose
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.MoveNext
bool System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.<>m__Finally1
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.Reset
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> expectContinue
System::Nullable_1<bool>& System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectContinue"))->offset;
  return *reinterpret_cast<System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Connection
System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionClose
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionKeepAlive
bool System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Host
::StringW System::Net::Http::Headers::HttpRequestHeaders::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncoding
System::Net::Http::Headers::HttpHeaderValueCollection_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::HttpHeaderValueCollection_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncodingChunked
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncodingChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.AddHeaders
void System::Net::Http::Headers::HttpRequestHeaders::AddHeaders(System::Net::Http::Headers::HttpRequestHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::AddHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
System::Net::Http::Headers::HttpRequestHeaders::$$c* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpRequestHeaders::$$c*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9(System::Net::Http::Headers::HttpRequestHeaders::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__19_0
System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__19_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0(System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__22_0
System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__22_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0(System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0(System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0(System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpRequestHeaders/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionClose>b__19_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionClose>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionKeepAlive>b__22_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionKeepAlive>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ExpectContinue>b__29_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0(System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ExpectContinue>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_TransferEncodingChunked>b__71_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0(System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_TransferEncodingChunked>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Token Empty
System::Net::Http::Headers::Token System::Net::Http::Headers::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token>("System.Net.Http.Headers", "Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Token Empty
void System::Net::Http::Headers::Token::_set_Empty(System::Net::Http::Headers::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.Token/System.Net.Http.Headers.Type type
System::Net::Http::Headers::Token::Type& System::Net::Http::Headers::Token::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::Token::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartPosition>k__BackingField
int& System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EndPosition>k__BackingField
int& System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_StartPosition
int System::Net::Http::Headers::Token::get_StartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_StartPosition
void System::Net::Http::Headers::Token::set_StartPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::set_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_EndPosition
int System::Net::Http::Headers::Token::get_EndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_EndPosition
void System::Net::Http::Headers::Token::set_EndPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::set_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_Kind
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::Token::Type, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token..ctor
// ABORTED elsewhere.  System::Net::Http::Headers::Token::Token(System::Net::Http::Headers::Token::Type type, int startPosition, int endPosition)
// Autogenerated method: System.Net.Http.Headers.Token..cctor
void System::Net::Http::Headers::Token::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Token", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.ToString
::StringW System::Net::Http::Headers::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token/System.Net.Http.Headers.Type
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
void System::Net::Http::Headers::Token::Type::_set_Error(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
void System::Net::Http::Headers::Token::Type::_set_End(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
void System::Net::Http::Headers::Token::Type::_set_Token(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_QuotedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_QuotedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "QuotedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
void System::Net::Http::Headers::Token::Type::_set_QuotedString(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_QuotedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "QuotedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
void System::Net::Http::Headers::Token::Type::_set_SeparatorEqual(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
void System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSlash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
void System::Net::Http::Headers::Token::Type::_set_SeparatorSlash(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSlash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorDash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorDash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorDash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
void System::Net::Http::Headers::Token::Type::_set_SeparatorDash(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorDash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorDash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_SeparatorComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorComma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
void System::Net::Http::Headers::Token::Type::_set_SeparatorComma(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_SeparatorComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorComma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_OpenParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_get_OpenParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "OpenParens"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
void System::Net::Http::Headers::Token::Type::_set_OpenParens(System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::_set_OpenParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "OpenParens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Net::Http::Headers::Token::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] token_chars
::ArrayW<bool> System::Net::Http::Headers::Lexer::_get_token_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_token_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.Net.Http.Headers", "Lexer", "token_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] token_chars
void System::Net::Http::Headers::Lexer::_set_token_chars(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_token_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "token_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 last_token_char
int System::Net::Http::Headers::Lexer::_get_last_token_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_last_token_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Http.Headers", "Lexer", "last_token_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 last_token_char
void System::Net::Http::Headers::Lexer::_set_last_token_char(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_last_token_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "last_token_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] dt_formats
::ArrayW<::StringW> System::Net::Http::Headers::Lexer::_get_dt_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_get_dt_formats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net.Http.Headers", "Lexer", "dt_formats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] dt_formats
void System::Net::Http::Headers::Lexer::_set_dt_formats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::_set_dt_formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "dt_formats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String s
::StringW& System::Net::Http::Headers::Lexer::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
int& System::Net::Http::Headers::Lexer::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.get_Position
int System::Net::Http::Headers::Lexer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.set_Position
void System::Net::Http::Headers::Lexer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer..cctor
void System::Net::Http::Headers::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(System::Net::Http::Headers::Token start, System::Net::Http::Headers::Token end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetQuotedStringValue
::StringW System::Net::Http::Headers::Lexer::GetQuotedStringValue(System::Net::Http::Headers::Token start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetQuotedStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuotedStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetRemainingStringValue
::StringW System::Net::Http::Headers::Lexer::GetRemainingStringValue(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::GetRemainingStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsStarStringValue
bool System::Net::Http::Headers::Lexer::IsStarStringValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsStarStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStarStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(System::Net::Http::Headers::Token token, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(System::Net::Http::Headers::Token token, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetTimeSpanValue
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::Lexer::TryGetTimeSpanValue(System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetTimeSpanValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTimeSpanValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(System::Net::Http::Headers::Token token, ByRef<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::StringW text, ByRef<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDoubleValue
bool System::Net::Http::Headers::Lexer::TryGetDoubleValue(System::Net::Http::Headers::Token token, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::TryGetDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidToken
bool System::Net::Http::Headers::Lexer::IsValidToken(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidCharacter
bool System::Net::Http::Headers::Lexer::IsValidCharacter(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::IsValidCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.EatChar
void System::Net::Http::Headers::Lexer::EatChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::EatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.PeekChar
int System::Net::Http::Headers::Lexer::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.ScanCommentOptional
bool System::Net::Http::Headers::Lexer::ScanCommentOptional(ByRef<::StringW> value, ByRef<System::Net::Http::Headers::Token> readToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::ScanCommentOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCommentOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value), byref(readToken));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.Scan
System::Net::Http::Headers::Token System::Net::Http::Headers::Lexer::Scan(bool recognizeDash) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Lexer::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recognizeDash)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::Token, false>(this, ___internal__method, recognizeDash);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String media_type
::StringW& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "media_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_CharSet
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_CharSet
void System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_MediaType
void System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::MediaTypeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::MediaTypeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::MediaTypeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParseMediaType
System::Nullable_1<System::Net::Http::Headers::Token> System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType(System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> media) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParseMediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::Net::Http::Headers::Token>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(media));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Equals
bool System::Net::Http::Headers::MediaTypeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
int System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
System::Net::Http::Headers::MediaTypeHeaderValue::$$c* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::MediaTypeHeaderValue::$$c*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9(System::Net::Http::Headers::MediaTypeHeaderValue::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0(System::Predicate_1<System::Net::Http::Headers::NameValueHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c.<get_CharSet>b__6_0
bool System::Net::Http::Headers::MediaTypeHeaderValue::$$c::$get_CharSet$b__6_0(System::Net::Http::Headers::NameValueHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeHeaderValue::$$c::<get_CharSet>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CharSet>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
#include "System/Net/Http/Headers/MediaTypeWithQualityHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Name
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Name
void System::Net::Http::Headers::NameValueHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Value
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Value
void System::Net::Http::Headers::NameValueHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Create
System::Net::Http::Headers::NameValueHeaderValue* System::Net::Http::Headers::NameValueHeaderValue::Create(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::NameValueHeaderValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParsePragma
bool System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParsePragma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseParameters
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*> result, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(result), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::NameValueHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::NameValueHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Equals
bool System::Net::Http::Headers::NameValueHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
#include "System/Net/Http/Headers/NameValueWithParametersHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueWithParametersHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::NameValueWithParametersHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::NameValueWithParametersHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Parser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.Check
void System::Net::Http::Headers::Parser::Token::Check(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Token::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.TryCheck
bool System::Net::Http::Headers::Parser::Token::TryCheck(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Token::TryCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "TryCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime
#include "System/Net/Http/Headers/Parser_DateTime.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::DateTime::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/DateTime", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::DateTime::_set_ToString(System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime..cctor
void System::Net::Http::Headers::Parser::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime.TryParse
bool System::Net::Http::Headers::Parser::DateTime::TryParse(::StringW input, ByRef<System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
System::Net::Http::Headers::Parser::DateTime::$$c* System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Parser::DateTime::$$c*>("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9(System::Net::Http::Headers::Parser::DateTime::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::DateTime::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::DateTime::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::DateTime::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress
#include "System/Net/Http/Headers/Parser_EmailAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress.TryParse
bool System::Net::Http::Headers::Parser::EmailAddress::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::EmailAddress::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/EmailAddress", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host
#include "System/Net/Http/Headers/Parser_Host.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host.TryParse
bool System::Net::Http::Headers::Parser::Host::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Host::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Host", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int
#include "System/Net/Http/Headers/Parser_Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int.TryParse
bool System::Net::Http::Headers::Parser::Int::TryParse(::StringW input, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Int::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Int", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long
#include "System/Net/Http/Headers/Parser_Long.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long.TryParse
bool System::Net::Http::Headers::Parser::Long::TryParse(::StringW input, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Long::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Long", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5
#include "System/Net/Http/Headers/Parser_MD5.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::MD5::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/MD5", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::MD5::_set_ToString(System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5..cctor
void System::Net::Http::Headers::Parser::MD5::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5.TryParse
bool System::Net::Http::Headers::Parser::MD5::TryParse(::StringW input, ByRef<::ArrayW<uint8_t>> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
System::Net::Http::Headers::Parser::MD5::$$c* System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Parser::MD5::$$c*>("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9(System::Net::Http::Headers::Parser::MD5::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::MD5::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::MD5::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::MD5::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds
#include "System/Net/Http/Headers/Parser_TimeSpanSeconds.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds.TryParse
bool System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse(::StringW input, ByRef<System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/TimeSpanSeconds", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri
#include "System/Net/Http/Headers/Parser_Uri.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri.TryParse
bool System::Net::Http::Headers::Parser::Uri::TryParse(::StringW input, ByRef<System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Parser::Uri::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Uri", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Version>k__BackingField
::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Version>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Name
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Name
void System::Net::Http::Headers::ProductHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Version
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Version
void System::Net::Http::Headers::ProductHeaderValue::set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParse
bool System::Net::Http::Headers::ProductHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::ProductHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ProductHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.Equals
bool System::Net::Http::Headers::ProductHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductInfoHeaderValue
#include "System/Net/Http/Headers/ProductInfoHeaderValue.hpp"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
::StringW& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.ProductHeaderValue <Product>k__BackingField
System::Net::Http::Headers::ProductHeaderValue*& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Product>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::ProductHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Comment
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Product
System::Net::Http::Headers::ProductHeaderValue* System::Net::Http::Headers::ProductInfoHeaderValue::get_Product() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::get_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::ProductHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Product
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Product(System::Net::Http::Headers::ProductHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::set_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductInfoHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductInfoHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ProductInfoHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::ProductInfoHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ProductInfoHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.Equals
bool System::Net::Http::Headers::ProductInfoHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ProductInfoHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeConditionHeaderValue
#include "System/Net/Http/Headers/RangeConditionHeaderValue.hpp"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
System::Nullable_1<System::DateTimeOffset>& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.EntityTagHeaderValue <EntityTag>k__BackingField
System::Net::Http::Headers::EntityTagHeaderValue*& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EntityTag>k__BackingField"))->offset;
  return *reinterpret_cast<System::Net::Http::Headers::EntityTagHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::RangeConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_Date
void System::Net::Http::Headers::RangeConditionHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_EntityTag
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Net::Http::Headers::EntityTagHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_EntityTag
void System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag(System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RangeConditionHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::RangeConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RangeConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.Equals
bool System::Net::Http::Headers::RangeConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeHeaderValue
#include "System/Net/Http/Headers/RangeHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.RangeItemHeaderValue> ranges
System::Collections::Generic::List_1<System::Net::Http::Headers::RangeItemHeaderValue*>*& System::Net::Http::Headers::RangeHeaderValue::dyn_ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::dyn_ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ranges"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::RangeItemHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String unit
::StringW& System::Net::Http::Headers::RangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Ranges
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::RangeItemHeaderValue*>* System::Net::Http::Headers::RangeHeaderValue::get_Ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::get_Ranges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ranges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::RangeItemHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::RangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.TryParse
bool System::Net::Http::Headers::RangeHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::RangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.Equals
bool System::Net::Http::Headers::RangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_From
System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_From
void System::Net::Http::Headers::RangeItemHeaderValue::set_From(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_To
System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_To
void System::Net::Http::Headers::RangeItemHeaderValue::set_To(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeItemHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.Equals
bool System::Net::Http::Headers::RangeItemHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeItemHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RangeItemHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RetryConditionHeaderValue
#include "System/Net/Http/Headers/RetryConditionHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
System::Nullable_1<System::DateTimeOffset>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <Delta>k__BackingField
System::Nullable_1<System::TimeSpan>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Delta>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::RetryConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Date
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Delta
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Delta
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RetryConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RetryConditionHeaderValue::TryParse(::StringW input, ByRef<System::Net::Http::Headers::RetryConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RetryConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::RetryConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.Equals
bool System::Net::Http::Headers::RetryConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RetryConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::RetryConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.StringWithQualityHeaderValue
#include "System/Net/Http/Headers/StringWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Double> <Quality>k__BackingField
System::Nullable_1<double>& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Quality>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Value>k__BackingField
::StringW& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Quality
System::Nullable_1<double> System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Quality
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality(System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Value
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Value
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::StringWithQualityHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::StringWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::StringWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::StringWithQualityHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::StringWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals
bool System::Net::Http::Headers::StringWithQualityHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
int System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::StringWithQualityHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
::StringW& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Value
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::TransferCodingHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::TransferCodingHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.Equals
bool System::Net::Http::Headers::TransferCodingHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode
int System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.ToString
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
#include "System/Net/Http/Headers/TransferCodingWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ViaHeaderValue
#include "System/Net/Http/Headers/ViaHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolName>k__BackingField
::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolVersion>k__BackingField
::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ReceivedBy>k__BackingField
::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedBy>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ViaHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_Comment
void System::Net::Http::Headers::ViaHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolName
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolName
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolVersion
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolVersion
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ReceivedBy
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ReceivedBy
void System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ViaHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParse
bool System::Net::Http::Headers::ViaHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::ViaHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::ViaHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParseElement
bool System::Net::Http::Headers::ViaHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::ViaHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ViaHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.Equals
bool System::Net::Http::Headers::ViaHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
int System::Net::Http::Headers::ViaHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.ToString
::StringW System::Net::Http::Headers::ViaHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ViaHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.WarningHeaderValue
#include "System/Net/Http/Headers/WarningHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Agent>k__BackingField
::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Agent>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Code>k__BackingField
int& System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Code>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
System::Nullable_1<System::DateTimeOffset>& System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<System::Nullable_1<System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Agent
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Agent
void System::Net::Http::Headers::WarningHeaderValue::set_Agent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Code
int System::Net::Http::Headers::WarningHeaderValue::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Code
void System::Net::Http::Headers::WarningHeaderValue::set_Code(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Date
System::Nullable_1<System::DateTimeOffset> System::Net::Http::Headers::WarningHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Nullable_1<System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Date
void System::Net::Http::Headers::WarningHeaderValue::set_Date(System::Nullable_1<System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Text
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Text
void System::Net::Http::Headers::WarningHeaderValue::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.IsCodeValid
bool System::Net::Http::Headers::WarningHeaderValue::IsCodeValid(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::IsCodeValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "IsCodeValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::WarningHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParse
bool System::Net::Http::Headers::WarningHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<System::Collections::Generic::List_1<System::Net::Http::Headers::WarningHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::WarningHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParseElement
bool System::Net::Http::Headers::WarningHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, ByRef<System::Net::Http::Headers::WarningHeaderValue*> parsedValue, ByRef<System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::WarningHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.Equals
bool System::Net::Http::Headers::WarningHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.GetHashCode
int System::Net::Http::Headers::WarningHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.ToString
::StringW System::Net::Http::Headers::WarningHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::WarningHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinInt
System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_get_s_bnMinInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinInt
void System::Numerics::BigInteger::_set_s_bnMinInt(System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_set_s_bnMinInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnOneInt
System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_get_s_bnOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnOneInt
void System::Numerics::BigInteger::_set_s_bnOneInt(System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_set_s_bnOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnZeroInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_get_s_bnZeroInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnZeroInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
void System::Numerics::BigInteger::_set_s_bnZeroInt(System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_set_s_bnZeroInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnZeroInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinusOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_get_s_bnMinusOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinusOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
void System::Numerics::BigInteger::_set_s_bnMinusOneInt(System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_set_s_bnMinusOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinusOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_success
::ArrayW<uint8_t> System::Numerics::BigInteger::_get_s_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_get_s_success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Numerics", "BigInteger", "s_success"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_success
void System::Numerics::BigInteger::_set_s_success(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::_set_s_success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_success", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _sign
int& System::Numerics::BigInteger::dyn__sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::dyn__sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sign"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32[] _bits
::ArrayW<uint>& System::Numerics::BigInteger::dyn__bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::dyn__bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigInteger.get_Zero
System::Numerics::BigInteger System::Numerics::BigInteger::get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::get_Zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "get_Zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.get_IsZero
bool System::Numerics::BigInteger::get_IsZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::get_IsZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
// ABORTED elsewhere.  System::Numerics::BigInteger::BigInteger(int n, ::ArrayW<uint> rgu)
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint> value, bool negative) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(negative)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, negative);
}
// Autogenerated method: System.Numerics.BigInteger..cctor
void System::Numerics::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToByteArray
::ArrayW<uint8_t> System::Numerics::BigInteger::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.TryGetBytes
::ArrayW<uint8_t> System::Numerics::BigInteger::TryGetBytes(System::Numerics::BigInteger::GetBytesMode mode, System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::TryGetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bytesWritten)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, mode, destination, byref(bytesWritten));
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(::StringW format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Add
System::Numerics::BigInteger System::Numerics::BigInteger::Add(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.Subtract
System::Numerics::BigInteger System::Numerics::BigInteger::Subtract(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator System::Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.GetDiffLength
int System::Numerics::BigInteger::GetDiffLength(::ArrayW<uint> rgu1, ::ArrayW<uint> rgu2, int cu) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetDiffLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "GetDiffLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgu1), ::il2cpp_utils::ExtractType(rgu2), ::il2cpp_utils::ExtractType(cu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgu1, rgu2, cu);
}
// Autogenerated method: System.Numerics.BigInteger.GetHashCode
int System::Numerics::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Subtraction
System::Numerics::BigInteger System::Numerics::operator-(const System::Numerics::BigInteger& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_UnaryNegation
System::Numerics::BigInteger System::Numerics::operator-(const System::Numerics::BigInteger& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger.op_Addition
System::Numerics::BigInteger System::Numerics::operator+(const System::Numerics::BigInteger& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Multiply
System::Numerics::BigInteger System::Numerics::operator*(const System::Numerics::BigInteger& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const System::Numerics::BigInteger& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const System::Numerics::BigInteger& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Equality
bool System::Numerics::operator ==(const System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const int64_t& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const int64_t& left, const System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
void System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray(System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Count"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
void System::Numerics::BigInteger::GetBytesMode::_set_Count(System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Span() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_get_Span");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Span"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
void System::Numerics::BigInteger::GetBytesMode::_set_Span(System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::_set_Span");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Span", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Numerics::BigInteger::GetBytesMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigInteger::GetBytesMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigIntegerCalculator
#include "System/Numerics/BigIntegerCalculator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ReducerThreshold
int System::Numerics::BigIntegerCalculator::_get_ReducerThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_get_ReducerThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "ReducerThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ReducerThreshold
void System::Numerics::BigIntegerCalculator::_set_ReducerThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_set_ReducerThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "ReducerThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SquareThreshold
int System::Numerics::BigIntegerCalculator::_get_SquareThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_get_SquareThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "SquareThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SquareThreshold
void System::Numerics::BigIntegerCalculator::_set_SquareThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_set_SquareThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "SquareThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AllocationThreshold
int System::Numerics::BigIntegerCalculator::_get_AllocationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_get_AllocationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "AllocationThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AllocationThreshold
void System::Numerics::BigIntegerCalculator::_set_AllocationThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_set_AllocationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "AllocationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MultiplyThreshold
int System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MultiplyThreshold
void System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold", value));
}
// Autogenerated method: System.Numerics.BigIntegerCalculator..cctor
void System::Numerics::BigIntegerCalculator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
void System::Numerics::BigIntegerCalculator::Add(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.AddSelf
void System::Numerics::BigIntegerCalculator::AddSelf(uint* left, int leftLength, uint* right, int rightLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::AddSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "AddSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
void System::Numerics::BigIntegerCalculator::Subtract(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Compare
int System::Numerics::BigIntegerCalculator::Compare(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Square(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
void System::Numerics::BigIntegerCalculator::Square(uint* value, int valueLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, valueLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
void System::Numerics::BigIntegerCalculator::Multiply(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.SubtractCore
void System::Numerics::BigIntegerCalculator::SubtractCore(uint* left, int leftLength, uint* right, int rightLength, uint* core, int coreLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigIntegerCalculator::SubtractCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "SubtractCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(core), ::il2cpp_utils::ExtractType(coreLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, core, coreLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber
#include "System/Numerics/BigNumber.hpp"
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.BigNumber.TryValidateParseStyleInteger
bool System::Numerics::BigNumber::TryValidateParseStyleInteger(System::Globalization::NumberStyles style, ByRef<System::ArgumentException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::TryValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<System::ArgumentException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style, byref(e));
}
// Autogenerated method: System.Numerics.BigNumber.TryParseBigInteger
bool System::Numerics::BigNumber::TryParseBigInteger(System::ReadOnlySpan_1<::Il2CppChar> value, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, ByRef<System::Numerics::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::TryParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<System::Numerics::BigInteger&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info, byref(result));
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(::StringW value, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.AsReadOnlySpan
System::ReadOnlySpan_1<::Il2CppChar> System::Numerics::BigNumber::AsReadOnlySpan(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::AsReadOnlySpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "AsReadOnlySpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(System::ReadOnlySpan_1<::Il2CppChar> value, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.HexNumberToBigInteger
bool System::Numerics::BigNumber::HexNumberToBigInteger(ByRef<System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::HexNumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "HexNumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.NumberToBigInteger
bool System::Numerics::BigNumber::NumberToBigInteger(ByRef<System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::NumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "NumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.ParseFormatSpecifier
::Il2CppChar System::Numerics::BigNumber::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigIntegerToHexString
::StringW System::Numerics::BigNumber::FormatBigIntegerToHexString(System::Numerics::BigInteger value, ::Il2CppChar format, int digits, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::FormatBigIntegerToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigIntegerToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, digits, info);
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigInteger
::StringW System::Numerics::BigNumber::FormatBigInteger(System::Numerics::BigInteger value, ::StringW format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder digits
System::Text::StringBuilder*& System::Numerics::BigNumber::BigNumberBuffer::dyn_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::BigNumberBuffer::dyn_digits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digits"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
int& System::Numerics::BigNumber::BigNumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::BigNumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
int& System::Numerics::BigNumber::BigNumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::BigNumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
bool& System::Numerics::BigNumber::BigNumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::BigNumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer.Create
System::Numerics::BigNumber::BigNumberBuffer System::Numerics::BigNumber::BigNumberBuffer::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::BigNumber::BigNumberBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber/BigNumberBuffer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Numerics::BigNumber::BigNumberBuffer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.NumericsHelpers
#include "System/Numerics/NumericsHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleParts
void System::Numerics::NumericsHelpers::GetDoubleParts(double dbl, ByRef<int> sign, ByRef<int> exp, ByRef<uint64_t> man, ByRef<bool> fFinite) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::GetDoubleParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dbl), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dbl, byref(sign), byref(exp), byref(man), byref(fFinite));
}
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleFromParts
double System::Numerics::NumericsHelpers::GetDoubleFromParts(int sign, int exp, uint64_t man) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::GetDoubleFromParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleFromParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(man)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sign, exp, man);
}
// Autogenerated method: System.Numerics.NumericsHelpers.DangerousMakeTwosComplement
void System::Numerics::NumericsHelpers::DangerousMakeTwosComplement(::ArrayW<uint> d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::DangerousMakeTwosComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "DangerousMakeTwosComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Numerics.NumericsHelpers.MakeUlong
uint64_t System::Numerics::NumericsHelpers::MakeUlong(uint uHi, uint uLo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::MakeUlong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "MakeUlong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uHi), ::il2cpp_utils::ExtractType(uLo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uHi, uLo);
}
// Autogenerated method: System.Numerics.NumericsHelpers.Abs
uint System::Numerics::NumericsHelpers::Abs(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
uint System::Numerics::NumericsHelpers::CombineHash(uint u1, uint u2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u1), ::il2cpp_utils::ExtractType(u2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u1, u2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
int System::Numerics::NumericsHelpers::CombineHash(int n1, int n2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n1, n2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint u) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint64_t uu) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uu);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider
#include "System/Globalization/FormatProvider.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.FormatProvider.FormatBigInteger
::StringW System::Globalization::FormatProvider::FormatBigInteger(int precision, int scale, bool sign, ::StringW format, System::Globalization::NumberFormatInfo* numberFormatInfo, ::ArrayW<::Il2CppChar> digits, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, precision, scale, sign, format, numberFormatInfo, digits, startIndex);
}
// Autogenerated method: System.Globalization.FormatProvider.TryStringToBigInteger
bool System::Globalization::FormatProvider::TryStringToBigInteger(System::ReadOnlySpan_1<::Il2CppChar> s, System::Globalization::NumberStyles styles, System::Globalization::NumberFormatInfo* numberFormatInfo, System::Text::StringBuilder* receiver, ByRef<int> precision, ByRef<int> scale, ByRef<bool> sign) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::TryStringToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "TryStringToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(receiver), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, styles, numberFormatInfo, receiver, byref(precision), byref(scale), byref(sign));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_posCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_posPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_posPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_posPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_posPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_negPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_negPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_negPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negNumberFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_negNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negNumberFormats
void System::Globalization::FormatProvider::Number::_set_s_negNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_negNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negNumberFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_posNumberFormat
::StringW System::Globalization::FormatProvider::Number::_get_s_posNumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_get_s_posNumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "FormatProvider/Number", "s_posNumberFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_posNumberFormat
void System::Globalization::FormatProvider::Number::_set_s_posNumberFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::_set_s_posNumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posNumberFormat", value));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number..cctor
void System::Globalization::FormatProvider::Number::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.IsWhite
bool System::Globalization::FormatProvider::Number::IsWhite(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseNumber
bool System::Globalization::FormatProvider::Number::ParseNumber(ByRef<::Il2CppChar*> str, System::Globalization::NumberStyles options, ByRef<System::Globalization::FormatProvider::Number::NumberBuffer> number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TrailingZeros
bool System::Globalization::FormatProvider::Number::TrailingZeros(System::ReadOnlySpan_1<::Il2CppChar> s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TryStringToNumber
bool System::Globalization::FormatProvider::Number::TryStringToNumber(System::ReadOnlySpan_1<::Il2CppChar> str, System::Globalization::NumberStyles options, ByRef<System::Globalization::FormatProvider::Number::NumberBuffer> number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.Int32ToDecChars
void System::Globalization::FormatProvider::Number::Int32ToDecChars(::Il2CppChar* buffer, ByRef<int> index, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::Int32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "Int32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(index), value, digits);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseFormatSpecifier
::Il2CppChar System::Globalization::FormatProvider::Number::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToString
::StringW System::Globalization::FormatProvider::Number::NumberToString(System::Globalization::FormatProvider::Number::NumberBuffer number, ::Il2CppChar format, int nMaxDigits, System::Globalization::NumberFormatInfo* info, bool isDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(isDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, nMaxDigits, info, isDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatCurrency
void System::Globalization::FormatProvider::Number::FormatCurrency(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.wcslen
int System::Globalization::FormatProvider::Number::wcslen(::Il2CppChar* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatFixed
void System::Globalization::FormatProvider::Number::FormatFixed(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(groupDigits), ::il2cpp_utils::ExtractType(sDecimal), ::il2cpp_utils::ExtractType(sGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, groupDigits, sDecimal, sGroup);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatNumber
void System::Globalization::FormatProvider::Number::FormatNumber(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatScientific
void System::Globalization::FormatProvider::Number::FormatScientific(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatScientific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatScientific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatExponent
void System::Globalization::FormatProvider::Number::FormatExponent(System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(minDigits), ::il2cpp_utils::ExtractType(positiveSign)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, info, value, expChar, minDigits, positiveSign);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatGeneral
void System::Globalization::FormatProvider::Number::FormatGeneral(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatGeneral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatGeneral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(bSuppressScientific)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar, bSuppressScientific);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatPercent
void System::Globalization::FormatProvider::Number::FormatPercent(System::Text::StringBuilder* sb, System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FormatPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.RoundNumber
void System::Globalization::FormatProvider::Number::RoundNumber(ByRef<System::Globalization::FormatProvider::Number::NumberBuffer> number, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FindSection
int System::Globalization::FormatProvider::Number::FindSection(::StringW format, int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::FindSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FindSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, section);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToStringFormat
::StringW System::Globalization::FormatProvider::Number::NumberToStringFormat(System::Globalization::FormatProvider::Number::NumberBuffer number, ::StringW format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberToStringFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToStringFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
bool& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char* overrideDigits
::Il2CppChar*& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDigits"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer.get_digits
::Il2CppChar* System::Globalization::FormatProvider::Number::NumberBuffer::get_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FormatProvider::Number::NumberBuffer::get_digits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_digits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReference
bool& System::Runtime::Serialization::DataContractAttribute::dyn_isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataContractAttribute::dyn_isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataContractAttribute.get_IsReference
bool System::Runtime::Serialization::DataContractAttribute::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataContractAttribute::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Runtime::Serialization::DataMemberAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
int& System::Runtime::Serialization::DataMemberAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequired
bool& System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitDefaultValue
bool& System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Name
::StringW System::Runtime::Serialization::DataMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Order
int System::Runtime::Serialization::DataMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_IsRequired
bool System::Runtime::Serialization::DataMemberAttribute::get_IsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::get_IsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_EmitDefaultValue
bool System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
::StringW& System::Runtime::Serialization::EnumMemberAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::EnumMemberAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.EnumMemberAttribute.get_Value
::StringW System::Runtime::Serialization::EnumMemberAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::EnumMemberAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.KnownTypeAttribute
#include "System/Runtime/Serialization/KnownTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
System::Type*& System::Runtime::Serialization::KnownTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::KnownTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CodeDomProvider
#include "Microsoft/CSharp/CodeDomProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CSharpCodeProvider
#include "Microsoft/CSharp/CSharpCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode
#include "MS/Internal/Xml/XPath/AstNode.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::AstNode::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
void MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Function(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Group"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Group(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Root(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Error(MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis
#include "MS/Internal/Xml/XPath/Axis.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType
MS::Internal::Xml::XPath::Axis::AxisType& MS::Internal::Xml::XPath::Axis::dyn_axisType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_axisType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisType"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::Axis::AxisType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Axis::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
::StringW& MS::Internal::Xml::XPath::Axis::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& MS::Internal::Xml::XPath::Axis::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathNodeType nodeType
System::Xml::XPath::XPathNodeType& MS::Internal::Xml::XPath::Axis::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<System::Xml::XPath::XPathNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean abbrAxis
bool& MS::Internal::Xml::XPath::Axis::dyn_abbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_abbrAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbrAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String urn
::StringW& MS::Internal::Xml::XPath::Axis::dyn_urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::dyn_urn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "urn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Input
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::Axis::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Input
void MS::Internal::Xml::XPath::Axis::set_Input(MS::Internal::Xml::XPath::AstNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::set_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Prefix
::StringW MS::Internal::Xml::XPath::Axis::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Name
::StringW MS::Internal::Xml::XPath::Axis::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_NodeType
System::Xml::XPath::XPathNodeType MS::Internal::Xml::XPath::Axis::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_TypeOfAxis
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::get_TypeOfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_TypeOfAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeOfAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_AbbrAxis
bool MS::Internal::Xml::XPath::Axis::get_AbbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_AbbrAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbrAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Urn
::StringW MS::Internal::Xml::XPath::Axis::get_Urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Urn
void MS::Internal::Xml::XPath::Axis::set_Urn(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::set_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Axis::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Axis::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType
#include "MS/Internal/Xml/XPath/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Child"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Child(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Following() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Following");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Following"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Following(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Following");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Following", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Self"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Self(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
void MS::Internal::Xml::XPath::Axis::AxisType::_set_None(MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Filter
#include "MS/Internal/Xml/XPath/Filter.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Filter::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode condition
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Filter::dyn_condition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condition"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Filter::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Filter::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Filter::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Filter::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function
#include "MS/Internal/Xml/XPath/Function.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::Function::_get_ReturnTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::_get_ReturnTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "Function", "ReturnTypes"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
void MS::Internal::Xml::XPath::Function::_set_ReturnTypes(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::_set_ReturnTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function", "ReturnTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType functionType
MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::Function::dyn_functionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::dyn_functionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionType"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList argumentList
System::Collections::ArrayList*& MS::Internal::Xml::XPath::Function::dyn_argumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::dyn_argumentList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argumentList"))->offset;
  return *reinterpret_cast<System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& MS::Internal::Xml::XPath::Function::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
::StringW& MS::Internal::Xml::XPath::Function::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function..cctor
void MS::Internal::Xml::XPath::Function::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Function", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Function::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Function::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType
#include "MS/Internal/Xml/XPath/Function.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined(MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Group
#include "MS/Internal/Xml/XPath/Group.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode groupNode
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Group::dyn_groupNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Group::dyn_groupNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupNode"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Group::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Group::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Group::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Group::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.XPath.Operand
#include "MS/Internal/Xml/XPath/Operand.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType type
System::Xml::XPath::XPathResultType& MS::Internal::Xml::XPath::Operand::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operand::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Xml::XPath::XPathResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object val
::Il2CppObject*& MS::Internal::Xml::XPath::Operand::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operand::dyn_val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operand::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operand::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operand::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operand::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator
#include "MS/Internal/Xml/XPath/Operator.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
::ArrayW<MS::Internal::Xml::XPath::Operator::Op> MS::Internal::Xml::XPath::Operator::_get_invertOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::_get_invertOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<MS::Internal::Xml::XPath::Operator::Op>>("MS.Internal.Xml.XPath", "Operator", "invertOp"));
}
// Autogenerated static field setter
// Set static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
void MS::Internal::Xml::XPath::Operator::_set_invertOp(::ArrayW<MS::Internal::Xml::XPath::Operator::Op> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::_set_invertOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator", "invertOp", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op opType
MS::Internal::Xml::XPath::Operator::Op& MS::Internal::Xml::XPath::Operator::dyn_opType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::dyn_opType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opType"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::Operator::Op*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd1
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::dyn_opnd1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd1"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd2
MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::dyn_opnd2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd2"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator..cctor
void MS::Internal::Xml::XPath::Operator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Operator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operator::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operator::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op
#include "MS/Internal/Xml/XPath/Operator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "INVALID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
void MS::Internal::Xml::XPath::Operator::Op::_set_INVALID(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "INVALID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_OR() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_OR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "OR"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
void MS::Internal::Xml::XPath::Operator::Op::_set_OR(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_OR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "OR", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_AND() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_AND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "AND"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
void MS::Internal::Xml::XPath::Operator::Op::_set_AND(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_AND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "AND", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "EQ"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
void MS::Internal::Xml::XPath::Operator::Op::_set_EQ(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "EQ", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_NE() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_NE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "NE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
void MS::Internal::Xml::XPath::Operator::Op::_set_NE(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_NE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "NE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
void MS::Internal::Xml::XPath::Operator::Op::_set_LT(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LE() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_LE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
void MS::Internal::Xml::XPath::Operator::Op::_set_LE(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_LE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GT() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_GT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
void MS::Internal::Xml::XPath::Operator::Op::_set_GT(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_GT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GE() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_GE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
void MS::Internal::Xml::XPath::Operator::Op::_set_GE(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_GE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_PLUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_PLUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "PLUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
void MS::Internal::Xml::XPath::Operator::Op::_set_PLUS(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_PLUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "PLUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MINUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
void MS::Internal::Xml::XPath::Operator::Op::_set_MINUS(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MUL() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_MUL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MUL"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
void MS::Internal::Xml::XPath::Operator::Op::_set_MUL(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_MUL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MUL", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_DIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_DIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "DIV"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
void MS::Internal::Xml::XPath::Operator::Op::_set_DIV(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_DIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "DIV", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_MOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MOD"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
void MS::Internal::Xml::XPath::Operator::Op::_set_MOD(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_MOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MOD", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_UNION() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_get_UNION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "UNION"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
void MS::Internal::Xml::XPath::Operator::Op::_set_UNION(MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::_set_UNION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "UNION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MS::Internal::Xml::XPath::Operator::Op::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Operator::Op::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Root
#include "MS/Internal/Xml/XPath/Root.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Root::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Root::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Root::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Root::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Variable
#include "MS/Internal/Xml/XPath/Variable.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localname
::StringW& MS::Internal::Xml::XPath::Variable::dyn_localname() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Variable::dyn_localname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
::StringW& MS::Internal::Xml::XPath::Variable::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Variable::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_Type
MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Variable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Variable::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_ReturnType
System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Variable::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::Variable::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser
#include "MS/Internal/Xml/XPath/XPathParser.hpp"
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
void MS::Internal::Xml::XPath::XPathParser::_set_temparray1(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
void MS::Internal::Xml::XPath::XPathParser::_set_temparray2(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
void MS::Internal::Xml::XPath::XPathParser::_set_temparray3(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
void MS::Internal::Xml::XPath::XPathParser::_set_temparray4(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
void MS::Internal::Xml::XPath::XPathParser::_set_temparray5(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray6() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
void MS::Internal::Xml::XPath::XPathParser::_set_temparray6(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
void MS::Internal::Xml::XPath::XPathParser::_set_temparray7(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray8() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
void MS::Internal::Xml::XPath::XPathParser::_set_temparray8(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray8", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray9() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_temparray9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
void MS::Internal::Xml::XPath::XPathParser::_set_temparray9(::ArrayW<System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_temparray9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray9", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable functionTable
System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_functionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_functionTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "functionTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable functionTable
void MS::Internal::Xml::XPath::XPathParser::_set_functionTable(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_functionTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "functionTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable AxesTable
System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_AxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_get_AxesTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "AxesTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable AxesTable
void MS::Internal::Xml::XPath::XPathParser::_set_AxesTable(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::_set_AxesTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "AxesTable", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner scanner
MS::Internal::Xml::XPath::XPathScanner*& MS::Internal::Xml::XPath::XPathParser::dyn_scanner() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::dyn_scanner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanner"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::XPathScanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parseDepth
int& MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser..cctor
void MS::Internal::Xml::XPath::XPathParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseXPathExpresion
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion(::StringW xpathExpresion) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "ParseXPathExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xpathExpresion)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xpathExpresion);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseExpresion
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseExpresion(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseOrExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseOrExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseOrExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseOrExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAndExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAndExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseAndExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAndExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseEqualityExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEqualityExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelationalExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelationalExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAdditiveExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAdditiveExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMultiplicativeExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMultiplicativeExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnaryExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnionExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnionExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsNodeType
bool MS::Internal::Xml::XPath::XPathParser::IsNodeType(MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::IsNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scaner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePathExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePathExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParsePathExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePathExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseFilterExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFilterExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePredicate
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePredicate(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParsePredicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePredicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseLocationPath
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseLocationPath(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelativeLocationPath
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelativeLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsStep
bool MS::Internal::Xml::XPath::XPathParser::IsStep(MS::Internal::Xml::XPath::XPathScanner::LexKind lexKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::IsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexKind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexKind);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseStep
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseStep(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseNodeTest
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseNodeTest(MS::Internal::Xml::XPath::AstNode* qyInput, MS::Internal::Xml::XPath::Axis::AxisType axisType, System::Xml::XPath::XPathNodeType nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseNodeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNodeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput), ::il2cpp_utils::ExtractType(axisType), ::il2cpp_utils::ExtractType(nodeType)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput, axisType, nodeType);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsPrimaryExpr
bool MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr(MS::Internal::Xml::XPath::XPathScanner* scanner) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsPrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scanner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePrimaryExpr
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMethod
MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMethod(MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParseMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckToken
void MS::Internal::Xml::XPath::XPathParser::CheckToken(MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::CheckToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.PassToken
void MS::Internal::Xml::XPath::XPathParser::PassToken(MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::PassToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.NextLex
void MS::Internal::Xml::XPath::XPathParser::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.TestOp
bool MS::Internal::Xml::XPath::XPathParser::TestOp(::StringW op) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::TestOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, op);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckNodeSet
void MS::Internal::Xml::XPath::XPathParser::CheckNodeSet(System::Xml::XPath::XPathResultType t) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::CheckNodeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNodeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateFunctionTable
System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateFunctionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateAxesTable
System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateAxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::CreateAxesTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateAxesTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.GetAxis
MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::XPathParser::GetAxis(MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method, scaner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType ftype
MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ftype"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minargs
int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxargs
int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType[] argTypes
::ArrayW<System::Xml::XPath::XPathResultType>& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argTypes"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::XPath::XPathResultType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_FType
MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::Function::FunctionType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Minargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Minargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Maxargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Maxargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_ArgTypes
::ArrayW<System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Xml::XPath::XPathResultType>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String xpathExpr
::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExpr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 xpathExprIndex
int& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExprIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind kind
MS::Internal::Xml::XPath::XPathScanner::LexKind& MS::Internal::Xml::XPath::XPathScanner::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_kind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::XPath::XPathScanner::LexKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char currentChar
::Il2CppChar& MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stringValue
::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double numberValue
double& MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canBeFunction
bool& MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canBeFunction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
System::Xml::XmlCharType& MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_SourceText
::StringW MS::Internal::Xml::XPath::XPathScanner::get_SourceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_SourceText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CurerntChar
::Il2CppChar MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurerntChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Kind
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::XPath::XPathScanner::LexKind, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Name
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Prefix
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_StringValue
::StringW MS::Internal::Xml::XPath::XPathScanner::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_NumberValue
double MS::Internal::Xml::XPath::XPathScanner::get_NumberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_NumberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CanBeFunction
bool MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextChar
bool MS::Internal::Xml::XPath::XPathScanner::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.SkipSpace
void MS::Internal::Xml::XPath::XPathScanner::SkipSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::SkipSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextLex
bool MS::Internal::Xml::XPath::XPathScanner::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanNumber
double MS::Internal::Xml::XPath::XPathScanner::ScanNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::ScanNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanFraction
double MS::Internal::Xml::XPath::XPathScanner::ScanFraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::ScanFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanString
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::ScanString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanName
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof(MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathDocumentNavigator
#include "MS/Internal/Xml/Cache/XPathDocumentNavigator.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageCurrent
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurrent"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxCurrent
int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxCurrent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxParent
int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LineNumber
int MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LinePosition
int MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.HasLineInfo
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.GetPositionHashCode
int MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Value
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NodeType
System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NamespaceURI
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NameTable
System::Xml::XmlNameTable* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_UnderlyingObject
::Il2CppObject* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.Clone
System::Xml::XPath::XPathNavigator* MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToFirstNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace(System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceScope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToNextNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace(System::Xml::XPath::XPathNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToParent
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.IsSamePosition
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition(System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSamePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNode
#include "MS/Internal/Xml/Cache/XPathNode.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodeInfoAtom info
MS::Internal::Xml::Cache::XPathNodeInfoAtom*& MS::Internal::Xml::Cache::XPathNode::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::Cache::XPathNodeInfoAtom**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSibling
uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSibling"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxParent
uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_idxParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSimilar
uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSimilar"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 posOffset
uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_posOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_posOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posOffset"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 props
uint& MS::Internal::Xml::Cache::XPathNode::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_props");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
::StringW& MS::Internal::Xml::Cache::XPathNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NodeType
System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Document
System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LineNumber
int MS::Internal::Xml::Cache::XPathNode::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LinePosition
int MS::Internal::Xml::Cache::XPathNode::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_CollapsedLinePosition
int MS::Internal::Xml::Cache::XPathNode::get_CollapsedLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_CollapsedLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CollapsedLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_PageInfo
MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNode::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsXmlNamespaceNode
bool MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasSibling
bool MS::Internal::Xml::Cache::XPathNode::get_HasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_HasSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasCollapsedText
bool MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasCollapsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsText
bool MS::Internal::Xml::Cache::XPathNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasNamespaceDecls
bool MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasNamespaceDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Value
::StringW MS::Internal::Xml::Cache::XPathNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetParent
int MS::Internal::Xml::Cache::XPathNode::GetParent(ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetSibling
int MS::Internal::Xml::Cache::XPathNode::GetSibling(ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNode::GetSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeRef
#include "MS/Internal/Xml/Cache/XPathNodeRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] page
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeRef::dyn_page() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeRef::dyn_page");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "page"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idx
int& MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Page
::ArrayW<MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeRef::get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeRef::get_Page");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Page", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Index
int MS::Internal::Xml::Cache::XPathNodeRef::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeRef::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef..ctor
// ABORTED elsewhere.  MS::Internal::Xml::Cache::XPathNodeRef::XPathNodeRef(::ArrayW<MS::Internal::Xml::Cache::XPathNode> page, int idx)
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeHelper
#include "MS/Internal/Xml/Cache/XPathNodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces(::ArrayW<MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocalNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces(::ArrayW<MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetInScopeNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetParent
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetParent(ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation(::ArrayW<MS::Internal::Xml::Cache::XPathNode> pageNode, int idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageNode, idxNode);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing(ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageCurrent, ByRef<int> idxCurrent, ::ArrayW<MS::Internal::Xml::Cache::XPathNode> pageEnd, int idxEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetTextFollowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageCurrent), ::il2cpp_utils::ExtractType(idxCurrent), ::il2cpp_utils::ExtractType(pageEnd), ::il2cpp_utils::ExtractType(idxEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageCurrent), byref(idxCurrent), pageEnd, idxEnd);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant(ByRef<::ArrayW<MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetNonDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageNum
int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageNext
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNext"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_PageNumber
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NodeCount
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NextPage
::ArrayW<MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localName
::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceUri
::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSibling
::ArrayW<MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSibling"))->offset;
  return *reinterpret_cast<::ArrayW<MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathDocument doc
System::Xml::XPath::XPathDocument*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<System::Xml::XPath::XPathDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumBase
int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosBase
int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodePageInfo pageInfo
MS::Internal::Xml::Cache::XPathNodePageInfo*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<MS::Internal::Xml::Cache::XPathNodePageInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_PageInfo
MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_SiblingPage
::ArrayW<MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SiblingPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_ParentPage
::ArrayW<MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Document
System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LineNumberBase
int MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LineNumberBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LineNumberBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumberBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LinePositionBase
int MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LinePositionBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LinePositionBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePositionBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AsyncHelper
#include "System/Xml/AsyncHelper.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task DoneTask
System::Threading::Tasks::Task* System::Xml::AsyncHelper::_get_DoneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task*>("System.Xml", "AsyncHelper", "DoneTask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task DoneTask
void System::Xml::AsyncHelper::_set_DoneTask(System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
void System::Xml::AsyncHelper::_set_DoneTaskTrue(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
void System::Xml::AsyncHelper::_set_DoneTaskFalse(System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
System::Threading::Tasks::Task_1<int>* System::Xml::AsyncHelper::_get_DoneTaskZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_get_DoneTaskZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<int>*>("System.Xml", "AsyncHelper", "DoneTaskZero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
void System::Xml::AsyncHelper::_set_DoneTaskZero(System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::_set_DoneTaskZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskZero", value));
}
// Autogenerated method: System.Xml.AsyncHelper..cctor
void System::Xml::AsyncHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::AsyncHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "AsyncHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Base64Encoder
#include "System/Xml/Base64Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] leftOverBytes
::ArrayW<uint8_t>& System::Xml::Base64Encoder::dyn_leftOverBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::dyn_leftOverBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftOverBytesCount
int& System::Xml::Base64Encoder::dyn_leftOverBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::dyn_leftOverBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charsLine
::ArrayW<::Il2CppChar>& System::Xml::Base64Encoder::dyn_charsLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::dyn_charsLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Base64Encoder.WriteChars
void System::Xml::Base64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Encode
void System::Xml::Base64Encoder::Encode(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Flush
void System::Xml::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter rawWriter
System::Xml::XmlRawWriter*& System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawWriter"))->offset;
  return *reinterpret_cast<System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRawWriterBase64Encoder.WriteChars
void System::Xml::XmlRawWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlRawWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextWriterBase64Encoder
#include "System/Xml/XmlTextWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlTextEncoder
#include "System/Xml/XmlTextEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextEncoder xmlTextEncoder
System::Xml::XmlTextEncoder*& System::Xml::XmlTextWriterBase64Encoder::dyn_xmlTextEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlTextWriterBase64Encoder::dyn_xmlTextEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlTextEncoder"))->offset;
  return *reinterpret_cast<System::Xml::XmlTextEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextWriterBase64Encoder.WriteChars
void System::Xml::XmlTextWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlTextWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexDecoder
#include "System/Xml/BinHexDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
::ArrayW<uint8_t>& System::Xml::BinHexDecoder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curIndex
int& System::Xml::BinHexDecoder::dyn_curIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::dyn_curIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
int& System::Xml::BinHexDecoder::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasHalfByteCached
bool& System::Xml::BinHexDecoder::dyn_hasHalfByteCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::dyn_hasHalfByteCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHalfByteCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte cachedHalfByte
uint8_t& System::Xml::BinHexDecoder::dyn_cachedHalfByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::dyn_cachedHalfByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedHalfByte"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
::ArrayW<uint8_t> System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, bool allowOddChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(allowOddChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, allowOddChars);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
void System::Xml::BinHexDecoder::Decode(::Il2CppChar* pChars, ::Il2CppChar* pCharsEndPos, uint8_t* pBytes, uint8_t* pBytesEndPos, ByRef<bool> hasHalfByteCached, ByRef<uint8_t> cachedHalfByte, ByRef<int> charsDecoded, ByRef<int> bytesDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pChars), ::il2cpp_utils::ExtractType(pCharsEndPos), ::il2cpp_utils::ExtractType(pBytes), ::il2cpp_utils::ExtractType(pBytesEndPos), ::il2cpp_utils::ExtractType(hasHalfByteCached), ::il2cpp_utils::ExtractType(cachedHalfByte), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pChars, pCharsEndPos, pBytes, pBytesEndPos, byref(hasHalfByteCached), byref(cachedHalfByte), byref(charsDecoded), byref(bytesDecoded));
}
// Autogenerated method: System.Xml.BinHexDecoder.get_IsFull
bool System::Xml::BinHexDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
int System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
void System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> buffer, int index, int count, System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, writer);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
::StringW System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count, ::ArrayW<::Il2CppChar> outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlToken
#include "System/Xml/BinXmlToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Error
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Error
void System::Xml::BinXmlToken::_set_Error(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken NotImpl
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_NotImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_NotImpl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "NotImpl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken NotImpl
void System::Xml::BinXmlToken::_set_NotImpl(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_NotImpl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "NotImpl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EOF
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_EOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EOF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EOF
void System::Xml::BinXmlToken::_set_EOF(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_EOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EOF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XmlDecl
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XmlDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XmlDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XmlDecl
void System::Xml::BinXmlToken::_set_XmlDecl(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XmlDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XmlDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Encoding
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Encoding
void System::Xml::BinXmlToken::_set_Encoding(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken DocType
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_DocType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_DocType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "DocType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken DocType
void System::Xml::BinXmlToken::_set_DocType(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_DocType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "DocType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken System
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken System
void System::Xml::BinXmlToken::_set_System(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Public
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Public
void System::Xml::BinXmlToken::_set_Public(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Subset
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Subset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Subset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Subset"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Subset
void System::Xml::BinXmlToken::_set_Subset(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Subset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Subset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Element
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Element
void System::Xml::BinXmlToken::_set_Element(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndElem
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_EndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndElem
void System::Xml::BinXmlToken::_set_EndElem(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_EndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Attr
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Attr
void System::Xml::BinXmlToken::_set_Attr(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndAttrs
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_EndAttrs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndAttrs"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndAttrs
void System::Xml::BinXmlToken::_set_EndAttrs(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_EndAttrs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndAttrs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken PI
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken PI
void System::Xml::BinXmlToken::_set_PI(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Comment
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Comment
void System::Xml::BinXmlToken::_set_Comment(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken CData
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken CData
void System::Xml::BinXmlToken::_set_CData(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndCData
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_EndCData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndCData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndCData
void System::Xml::BinXmlToken::_set_EndCData(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_EndCData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndCData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Name
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Name
void System::Xml::BinXmlToken::_set_Name(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken QName
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken QName
void System::Xml::BinXmlToken::_set_QName(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XmlText
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XmlText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XmlText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XmlText
void System::Xml::BinXmlToken::_set_XmlText(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XmlText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XmlText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Nest
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Nest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Nest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Nest"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Nest
void System::Xml::BinXmlToken::_set_Nest(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Nest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Nest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndNest
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_EndNest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndNest"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndNest
void System::Xml::BinXmlToken::_set_EndNest(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_EndNest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndNest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Extn
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Extn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_Extn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Extn"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Extn
void System::Xml::BinXmlToken::_set_Extn(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_Extn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Extn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken NmFlush
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_NmFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_NmFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "NmFlush"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken NmFlush
void System::Xml::BinXmlToken::_set_NmFlush(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_NmFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "NmFlush", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BIT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BIT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BIT
void System::Xml::BinXmlToken::_set_SQL_BIT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BIT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_TINYINT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_TINYINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_TINYINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_TINYINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_TINYINT
void System::Xml::BinXmlToken::_set_SQL_TINYINT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_TINYINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_TINYINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLINT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_SMALLINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLINT
void System::Xml::BinXmlToken::_set_SQL_SMALLINT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_SMALLINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_INT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_INT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_INT
void System::Xml::BinXmlToken::_set_SQL_INT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_INT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BIGINT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BIGINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_BIGINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BIGINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BIGINT
void System::Xml::BinXmlToken::_set_SQL_BIGINT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_BIGINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BIGINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_REAL
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_REAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_REAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_REAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_REAL
void System::Xml::BinXmlToken::_set_SQL_REAL(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_REAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_REAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_FLOAT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_FLOAT
void System::Xml::BinXmlToken::_set_SQL_FLOAT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_FLOAT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_MONEY
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_MONEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_MONEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_MONEY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_MONEY
void System::Xml::BinXmlToken::_set_SQL_MONEY(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_MONEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_MONEY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLMONEY
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLMONEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_SMALLMONEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLMONEY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLMONEY
void System::Xml::BinXmlToken::_set_SQL_SMALLMONEY(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_SMALLMONEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLMONEY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_DATETIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_DATETIME
void System::Xml::BinXmlToken::_set_SQL_DATETIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLDATETIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLDATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_SMALLDATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLDATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLDATETIME
void System::Xml::BinXmlToken::_set_SQL_SMALLDATETIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_SMALLDATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLDATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_DECIMAL
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_DECIMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_DECIMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_DECIMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_DECIMAL
void System::Xml::BinXmlToken::_set_SQL_DECIMAL(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_DECIMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_DECIMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NUMERIC
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NUMERIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_NUMERIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NUMERIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NUMERIC
void System::Xml::BinXmlToken::_set_SQL_NUMERIC(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_NUMERIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NUMERIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_UUID
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_UUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_UUID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_UUID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_UUID
void System::Xml::BinXmlToken::_set_SQL_UUID(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_UUID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_UUID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_VARBINARY
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_VARBINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_VARBINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_VARBINARY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_VARBINARY
void System::Xml::BinXmlToken::_set_SQL_VARBINARY(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_VARBINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_VARBINARY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BINARY
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_BINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BINARY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BINARY
void System::Xml::BinXmlToken::_set_SQL_BINARY(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_BINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BINARY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_IMAGE
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_IMAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_IMAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_IMAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_IMAGE
void System::Xml::BinXmlToken::_set_SQL_IMAGE(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_IMAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_IMAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_CHAR
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_CHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_CHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_CHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_CHAR
void System::Xml::BinXmlToken::_set_SQL_CHAR(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_CHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_CHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_VARCHAR
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_VARCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_VARCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_VARCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_VARCHAR
void System::Xml::BinXmlToken::_set_SQL_VARCHAR(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_VARCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_VARCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_TEXT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_TEXT
void System::Xml::BinXmlToken::_set_SQL_TEXT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NVARCHAR
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NVARCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_NVARCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NVARCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NVARCHAR
void System::Xml::BinXmlToken::_set_SQL_NVARCHAR(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_NVARCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NVARCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NCHAR
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_NCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NCHAR
void System::Xml::BinXmlToken::_set_SQL_NCHAR(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_NCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NTEXT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NTEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_NTEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NTEXT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NTEXT
void System::Xml::BinXmlToken::_set_SQL_NTEXT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_NTEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NTEXT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_UDT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_UDT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_SQL_UDT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_UDT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_UDT
void System::Xml::BinXmlToken::_set_SQL_UDT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_SQL_UDT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_UDT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATE
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_DATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATE
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATE(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_DATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIME
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIME
void System::Xml::BinXmlToken::_set_XSD_KATMAI_TIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATEOFFSET
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_DATEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATEOFFSET(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_DATEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIMEOFFSET
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIMEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIMEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIMEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIMEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIMEOFFSET(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIMEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIMEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIMEOFFSET
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_TIMEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_KATMAI_TIMEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_TIMEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIMEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_TIMEOFFSET(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_KATMAI_TIMEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_TIMEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BOOLEAN
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BOOLEAN
void System::Xml::BinXmlToken::_set_XSD_BOOLEAN(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_TIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_TIME
void System::Xml::BinXmlToken::_set_XSD_TIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DATETIME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DATETIME
void System::Xml::BinXmlToken::_set_XSD_DATETIME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DATE
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_DATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DATE
void System::Xml::BinXmlToken::_set_XSD_DATE(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_DATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BINHEX
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BINHEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_BINHEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BINHEX"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BINHEX
void System::Xml::BinXmlToken::_set_XSD_BINHEX(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_BINHEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BINHEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BASE64
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BASE64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_BASE64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BASE64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BASE64
void System::Xml::BinXmlToken::_set_XSD_BASE64(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_BASE64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BASE64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DECIMAL
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DECIMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_DECIMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DECIMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DECIMAL
void System::Xml::BinXmlToken::_set_XSD_DECIMAL(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_DECIMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DECIMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BYTE
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BYTE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BYTE
void System::Xml::BinXmlToken::_set_XSD_BYTE(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDSHORT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDSHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_UNSIGNEDSHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDSHORT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDSHORT
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDSHORT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_UNSIGNEDSHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDSHORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDINT
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_UNSIGNEDINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDINT
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDINT(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_UNSIGNEDINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDLONG
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDLONG() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_UNSIGNEDLONG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDLONG"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDLONG
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDLONG(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_UNSIGNEDLONG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDLONG", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_QNAME
System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_QNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_get_XSD_QNAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_QNAME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_QNAME
void System::Xml::BinXmlToken::_set_XSD_QNAME(System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::_set_XSD_QNAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_QNAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::BinXmlToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlSqlDecimal
#include "System/Xml/BinXmlSqlDecimal.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte NUMERIC_MAX_PRECISION
uint8_t System::Xml::BinXmlSqlDecimal::_get_NUMERIC_MAX_PRECISION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_NUMERIC_MAX_PRECISION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "NUMERIC_MAX_PRECISION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte NUMERIC_MAX_PRECISION
void System::Xml::BinXmlSqlDecimal::_set_NUMERIC_MAX_PRECISION(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_NUMERIC_MAX_PRECISION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "NUMERIC_MAX_PRECISION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte MaxPrecision
uint8_t System::Xml::BinXmlSqlDecimal::_get_MaxPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_MaxPrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "MaxPrecision"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte MaxPrecision
void System::Xml::BinXmlSqlDecimal::_set_MaxPrecision(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_MaxPrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "MaxPrecision", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte MaxScale
uint8_t System::Xml::BinXmlSqlDecimal::_get_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_MaxScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "MaxScale"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte MaxScale
void System::Xml::BinXmlSqlDecimal::_set_MaxScale(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_MaxScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "MaxScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 x_cNumeMax
int System::Xml::BinXmlSqlDecimal::_get_x_cNumeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_cNumeMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlSqlDecimal", "x_cNumeMax"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 x_cNumeMax
void System::Xml::BinXmlSqlDecimal::_set_x_cNumeMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_cNumeMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_cNumeMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 x_lInt32Base
int64_t System::Xml::BinXmlSqlDecimal::_get_x_lInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_lInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Xml", "BinXmlSqlDecimal", "x_lInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 x_lInt32Base
void System::Xml::BinXmlSqlDecimal::_set_x_lInt32Base(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_lInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_lInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 x_ulInt32Base
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_ulInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_ulInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_ulInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 x_ulInt32Base
void System::Xml::BinXmlSqlDecimal::_set_x_ulInt32Base(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_ulInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_ulInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 x_ulInt32BaseForMod
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_ulInt32BaseForMod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_ulInt32BaseForMod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_ulInt32BaseForMod"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 x_ulInt32BaseForMod
void System::Xml::BinXmlSqlDecimal::_set_x_ulInt32BaseForMod(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_ulInt32BaseForMod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_ulInt32BaseForMod", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt64 x_llMax
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_llMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_llMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_llMax"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt64 x_llMax
void System::Xml::BinXmlSqlDecimal::_set_x_llMax(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_llMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_llMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE2
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE2
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE2(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE3
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE3
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE3(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] x_rgulShiftBase
::ArrayW<uint> System::Xml::BinXmlSqlDecimal::_get_x_rgulShiftBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_x_rgulShiftBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Xml", "BinXmlSqlDecimal", "x_rgulShiftBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] x_rgulShiftBase
void System::Xml::BinXmlSqlDecimal::_set_x_rgulShiftBase(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_x_rgulShiftBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_rgulShiftBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] rgCLenFromPrec
::ArrayW<uint8_t> System::Xml::BinXmlSqlDecimal::_get_rgCLenFromPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_get_rgCLenFromPrec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "BinXmlSqlDecimal", "rgCLenFromPrec"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] rgCLenFromPrec
void System::Xml::BinXmlSqlDecimal::_set_rgCLenFromPrec(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::_set_rgCLenFromPrec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "rgCLenFromPrec", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bLen
uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_bLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bLen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bPrec
uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_bPrec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bPrec"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bScale
uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_bScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bScale"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bSign
uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_bSign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bSign"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data1
uint& System::Xml::BinXmlSqlDecimal::dyn_m_data1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_data1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data2
uint& System::Xml::BinXmlSqlDecimal::dyn_m_data2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_data2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data3
uint& System::Xml::BinXmlSqlDecimal::dyn_m_data3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_data3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data4
uint& System::Xml::BinXmlSqlDecimal::dyn_m_data4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::dyn_m_data4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.get_IsPositive
bool System::Xml::BinXmlSqlDecimal::get_IsPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::get_IsPositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsPositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal..ctor
System::Xml::BinXmlSqlDecimal::BinXmlSqlDecimal(::ArrayW<uint8_t> data, int offset, bool trim) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(trim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, trim);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal..cctor
void System::Xml::BinXmlSqlDecimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.UIntFromByteArray
uint System::Xml::BinXmlSqlDecimal::UIntFromByteArray(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::UIntFromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "UIntFromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.MpDiv1
void System::Xml::BinXmlSqlDecimal::MpDiv1(::ArrayW<uint> rgulU, ByRef<int> ciulU, uint iulD, ByRef<uint> iulR) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::MpDiv1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "MpDiv1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU), ::il2cpp_utils::ExtractType(iulD), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU), iulD, byref(iulR));
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.MpNormalize
void System::Xml::BinXmlSqlDecimal::MpNormalize(::ArrayW<uint> rgulU, ByRef<int> ciulU) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::MpNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "MpNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU));
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ChFromDigit
::Il2CppChar System::Xml::BinXmlSqlDecimal::ChFromDigit(uint uiDigit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::ChFromDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "ChFromDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDigit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uiDigit);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ToDecimal
System::Decimal System::Xml::BinXmlSqlDecimal::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.TrimTrailingZeros
void System::Xml::BinXmlSqlDecimal::TrimTrailingZeros() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::TrimTrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrimTrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ToString
::StringW System::Xml::BinXmlSqlDecimal::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlDecimal::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlSqlMoney
#include "System/Xml/BinXmlSqlMoney.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 data
int64_t& System::Xml::BinXmlSqlMoney::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlMoney::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney..ctor
System::Xml::BinXmlSqlMoney::BinXmlSqlMoney(int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney..ctor
// ABORTED elsewhere.  System::Xml::BinXmlSqlMoney::BinXmlSqlMoney(int64_t v)
// Autogenerated method: System.Xml.BinXmlSqlMoney.ToDecimal
System::Decimal System::Xml::BinXmlSqlMoney::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlMoney::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney.ToString
::StringW System::Xml::BinXmlSqlMoney::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlSqlMoney::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlDateTime
#include "System/Xml/BinXmlDateTime.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32[] KatmaiTimeScaleMultiplicator
::ArrayW<int> System::Xml::BinXmlDateTime::_get_KatmaiTimeScaleMultiplicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_KatmaiTimeScaleMultiplicator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml", "BinXmlDateTime", "KatmaiTimeScaleMultiplicator"));
}
// Autogenerated static field setter
// Set static field: static System.Int32[] KatmaiTimeScaleMultiplicator
void System::Xml::BinXmlDateTime::_set_KatmaiTimeScaleMultiplicator(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_KatmaiTimeScaleMultiplicator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "KatmaiTimeScaleMultiplicator", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double SQLTicksPerMillisecond
double System::Xml::BinXmlDateTime::_get_SQLTicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_SQLTicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlDateTime", "SQLTicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double SQLTicksPerMillisecond
void System::Xml::BinXmlDateTime::_set_SQLTicksPerMillisecond(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_SQLTicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerSecond
int System::Xml::BinXmlDateTime::_get_SQLTicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_SQLTicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerSecond
void System::Xml::BinXmlDateTime::_set_SQLTicksPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_SQLTicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerMinute
int System::Xml::BinXmlDateTime::_get_SQLTicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_SQLTicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerMinute
void System::Xml::BinXmlDateTime::_set_SQLTicksPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_SQLTicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerHour
int System::Xml::BinXmlDateTime::_get_SQLTicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_SQLTicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerHour
void System::Xml::BinXmlDateTime::_set_SQLTicksPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_SQLTicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 SQLTicksPerDay
int System::Xml::BinXmlDateTime::_get_SQLTicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_get_SQLTicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 SQLTicksPerDay
void System::Xml::BinXmlDateTime::_set_SQLTicksPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::_set_SQLTicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerDay", value));
}
// Autogenerated method: System.Xml.BinXmlDateTime..cctor
void System::Xml::BinXmlDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write2Dig
void System::Xml::BinXmlDateTime::Write2Dig(System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::Write2Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write2Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write4DigNeg
void System::Xml::BinXmlDateTime::Write4DigNeg(System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::Write4DigNeg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write4DigNeg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write3Dec
void System::Xml::BinXmlDateTime::Write3Dec(System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::Write3Dec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write3Dec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteDate
void System::Xml::BinXmlDateTime::WriteDate(System::Text::StringBuilder* sb, int yr, int mnth, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::WriteDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(yr), ::il2cpp_utils::ExtractType(mnth), ::il2cpp_utils::ExtractType(day)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, yr, mnth, day);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTime
void System::Xml::BinXmlDateTime::WriteTime(System::Text::StringBuilder* sb, int hr, int min, int sec, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::WriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(sec), ::il2cpp_utils::ExtractType(ms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, hr, min, sec, ms);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeFullPrecision
void System::Xml::BinXmlDateTime::WriteTimeFullPrecision(System::Text::StringBuilder* sb, int hr, int min, int sec, int fraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::WriteTimeFullPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeFullPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(sec), ::il2cpp_utils::ExtractType(fraction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, hr, min, sec, fraction);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeZone
void System::Xml::BinXmlDateTime::WriteTimeZone(System::Text::StringBuilder* sb, System::TimeSpan zone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::WriteTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(zone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, zone);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeZone
void System::Xml::BinXmlDateTime::WriteTimeZone(System::Text::StringBuilder* sb, bool negTimeZone, int hr, int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::WriteTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(negTimeZone), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, negTimeZone, hr, min);
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdDateTime
void System::Xml::BinXmlDateTime::BreakDownXsdDateTime(int64_t val, ByRef<int> yr, ByRef<int> mnth, ByRef<int> day, ByRef<int> hr, ByRef<int> min, ByRef<int> sec, ByRef<int> ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::BreakDownXsdDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(yr), byref(mnth), byref(day), byref(hr), byref(min), byref(sec), byref(ms));
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdDate
void System::Xml::BinXmlDateTime::BreakDownXsdDate(int64_t val, ByRef<int> yr, ByRef<int> mnth, ByRef<int> day, ByRef<bool> negTimeZone, ByRef<int> hr, ByRef<int> min) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::BreakDownXsdDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(yr), byref(mnth), byref(day), byref(negTimeZone), byref(hr), byref(min));
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdTime
void System::Xml::BinXmlDateTime::BreakDownXsdTime(int64_t val, ByRef<int> hr, ByRef<int> min, ByRef<int> sec, ByRef<int> ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::BreakDownXsdTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(hr), byref(min), byref(sec), byref(ms));
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdDateTimeToString
::StringW System::Xml::BinXmlDateTime::XsdDateTimeToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdDateToString
::StringW System::Xml::BinXmlDateTime::XsdDateToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdDateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdDateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdTimeToString
::StringW System::Xml::BinXmlDateTime::XsdTimeToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlDateTimeToString
::StringW System::Xml::BinXmlDateTime::SqlDateTimeToString(int dateticks, uint timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::SqlDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlDateTimeToDateTime
System::DateTime System::Xml::BinXmlDateTime::SqlDateTimeToDateTime(int dateticks, uint timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::SqlDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlSmallDateTimeToString
::StringW System::Xml::BinXmlDateTime::SqlSmallDateTimeToString(int16_t dateticks, uint16_t timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::SqlSmallDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlSmallDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlSmallDateTimeToDateTime
System::DateTime System::Xml::BinXmlDateTime::SqlSmallDateTimeToDateTime(int16_t dateticks, uint16_t timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::SqlSmallDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlSmallDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateToDateTime
System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiDateToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToDateTime
System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeToDateTime
System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiTimeToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToDateTimeOffset
System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToDateTimeOffset
System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToDateTimeOffset
System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiTimeToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiDateTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiDateTicks(::ArrayW<uint8_t> data, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::GetKatmaiDateTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiDateTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos));
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiTimeTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiTimeTicks(::ArrayW<uint8_t> data, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::GetKatmaiTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos));
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiTimeZoneTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiTimeZoneTicks(::ArrayW<uint8_t> data, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::GetKatmaiTimeZoneTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiTimeZoneTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, pos);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetFractions
int System::Xml::BinXmlDateTime::GetFractions(System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::GetFractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetFractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetFractions
int System::Xml::BinXmlDateTime::GetFractions(System::DateTimeOffset dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BinXmlDateTime::GetFractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetFractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml
#include "System/Xml/XmlSqlBinaryReader_NestedBinXml.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Xml.XmlNamespaceScope
#include "System/Xml/XmlNamespaceScope.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Type TypeOfObject
System::Type* System::Xml::XmlSqlBinaryReader::_get_TypeOfObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_get_TypeOfObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml", "XmlSqlBinaryReader", "TypeOfObject"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type TypeOfObject
void System::Xml::XmlSqlBinaryReader::_set_TypeOfObject(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_set_TypeOfObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TypeOfObject", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Type TypeOfString
System::Type* System::Xml::XmlSqlBinaryReader::_get_TypeOfString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_get_TypeOfString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Xml", "XmlSqlBinaryReader", "TypeOfString"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type TypeOfString
void System::Xml::XmlSqlBinaryReader::_set_TypeOfString(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_set_TypeOfString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TypeOfString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] TokenTypeMap
::ArrayW<System::Type*> System::Xml::XmlSqlBinaryReader::_get_TokenTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_get_TokenTypeMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Type*>>("System.Xml", "XmlSqlBinaryReader", "TokenTypeMap"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] TokenTypeMap
void System::Xml::XmlSqlBinaryReader::_set_TokenTypeMap(::ArrayW<System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_set_TokenTypeMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TokenTypeMap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] XsdKatmaiTimeScaleToValueLengthMap
::ArrayW<uint8_t> System::Xml::XmlSqlBinaryReader::_get_XsdKatmaiTimeScaleToValueLengthMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_get_XsdKatmaiTimeScaleToValueLengthMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "XmlSqlBinaryReader", "XsdKatmaiTimeScaleToValueLengthMap"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] XsdKatmaiTimeScaleToValueLengthMap
void System::Xml::XmlSqlBinaryReader::_set_XsdKatmaiTimeScaleToValueLengthMap(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_set_XsdKatmaiTimeScaleToValueLengthMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "XsdKatmaiTimeScaleToValueLengthMap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.ReadState[] ScanState2ReadState
::ArrayW<System::Xml::ReadState> System::Xml::XmlSqlBinaryReader::_get_ScanState2ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_get_ScanState2ReadState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Xml::ReadState>>("System.Xml", "XmlSqlBinaryReader", "ScanState2ReadState"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.ReadState[] ScanState2ReadState
void System::Xml::XmlSqlBinaryReader::_set_ScanState2ReadState(::ArrayW<System::Xml::ReadState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::_set_ScanState2ReadState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "ScanState2ReadState", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream inStrm
System::IO::Stream*& System::Xml::XmlSqlBinaryReader::dyn_inStrm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_inStrm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inStrm"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] data
::ArrayW<uint8_t>& System::Xml::XmlSqlBinaryReader::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
int& System::Xml::XmlSqlBinaryReader::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mark
int& System::Xml::XmlSqlBinaryReader::dyn_mark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_mark");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mark"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 end
int& System::Xml::XmlSqlBinaryReader::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 offset
int64_t& System::Xml::XmlSqlBinaryReader::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean eof
bool& System::Xml::XmlSqlBinaryReader::dyn_eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_eof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sniffed
bool& System::Xml::XmlSqlBinaryReader::dyn_sniffed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_sniffed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sniffed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmpty
bool& System::Xml::XmlSqlBinaryReader::dyn_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_isEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmpty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 docState
int& System::Xml::XmlSqlBinaryReader::dyn_docState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_docState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables symbolTables
System::Xml::XmlSqlBinaryReader::SymbolTables& System::Xml::XmlSqlBinaryReader::dyn_symbolTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_symbolTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbolTables"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::SymbolTables*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable xnt
System::Xml::XmlNameTable*& System::Xml::XmlSqlBinaryReader::dyn_xnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xnt"))->offset;
  return *reinterpret_cast<System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xntFromSettings
bool& System::Xml::XmlSqlBinaryReader::dyn_xntFromSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xntFromSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xntFromSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xml
::StringW& System::Xml::XmlSqlBinaryReader::dyn_xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlns
::StringW& System::Xml::XmlSqlBinaryReader::dyn_xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nsxmlns
::StringW& System::Xml::XmlSqlBinaryReader::dyn_nsxmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_nsxmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsxmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseUri
::StringW& System::Xml::XmlSqlBinaryReader::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.ScanState state
System::Xml::XmlSqlBinaryReader::ScanState& System::Xml::XmlSqlBinaryReader::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::ScanState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType nodetype
System::Xml::XmlNodeType& System::Xml::XmlSqlBinaryReader::dyn_nodetype() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_nodetype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodetype"))->offset;
  return *reinterpret_cast<System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.BinXmlToken token
System::Xml::BinXmlToken& System::Xml::XmlSqlBinaryReader::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Xml::BinXmlToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrIndex
int& System::Xml::XmlSqlBinaryReader::dyn_attrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_attrIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.QName qnameOther
System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::dyn_qnameOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_qnameOther");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameOther"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.QName qnameElement
System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::dyn_qnameElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_qnameElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameElement"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType parentNodeType
System::Xml::XmlNodeType& System::Xml::XmlSqlBinaryReader::dyn_parentNodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_parentNodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentNodeType"))->offset;
  return *reinterpret_cast<System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo[] elementStack
::ArrayW<System::Xml::XmlSqlBinaryReader::ElemInfo>& System::Xml::XmlSqlBinaryReader::dyn_elementStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_elementStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementStack"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::XmlSqlBinaryReader::ElemInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 elemDepth
int& System::Xml::XmlSqlBinaryReader::dyn_elemDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_elemDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elemDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo[] attributes
::ArrayW<System::Xml::XmlSqlBinaryReader::AttrInfo>& System::Xml::XmlSqlBinaryReader::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::XmlSqlBinaryReader::AttrInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] attrHashTbl
::ArrayW<int>& System::Xml::XmlSqlBinaryReader::dyn_attrHashTbl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_attrHashTbl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrHashTbl"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrCount
int& System::Xml::XmlSqlBinaryReader::dyn_attrCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_attrCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 posAfterAttrs
int& System::Xml::XmlSqlBinaryReader::dyn_posAfterAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_posAfterAttrs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posAfterAttrs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlspacePreserve
bool& System::Xml::XmlSqlBinaryReader::dyn_xmlspacePreserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xmlspacePreserve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlspacePreserve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokLen
int& System::Xml::XmlSqlBinaryReader::dyn_tokLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_tokLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokDataPos
int& System::Xml::XmlSqlBinaryReader::dyn_tokDataPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_tokDataPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokDataPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasTypedValue
bool& System::Xml::XmlSqlBinaryReader::dyn_hasTypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_hasTypedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasTypedValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type valueType
System::Type*& System::Xml::XmlSqlBinaryReader::dyn_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stringValue
::StringW& System::Xml::XmlSqlBinaryReader::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl> namespaces
System::Collections::Generic::Dictionary_2<::StringW, System::Xml::XmlSqlBinaryReader::NamespaceDecl*>*& System::Xml::XmlSqlBinaryReader::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::StringW, System::Xml::XmlSqlBinaryReader::NamespaceDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml prevNameInfo
System::Xml::XmlSqlBinaryReader::NestedBinXml*& System::Xml::XmlSqlBinaryReader::dyn_prevNameInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_prevNameInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNameInfo"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::NestedBinXml**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader textXmlReader
System::Xml::XmlReader*& System::Xml::XmlSqlBinaryReader::dyn_textXmlReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_textXmlReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textXmlReader"))->offset;
  return *reinterpret_cast<System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeInput
bool& System::Xml::XmlSqlBinaryReader::dyn_closeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_closeInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
bool& System::Xml::XmlSqlBinaryReader::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreWhitespace
bool& System::Xml::XmlSqlBinaryReader::dyn_ignoreWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_ignoreWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignorePIs
bool& System::Xml::XmlSqlBinaryReader::dyn_ignorePIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_ignorePIs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignorePIs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreComments
bool& System::Xml::XmlSqlBinaryReader::dyn_ignoreComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_ignoreComments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreComments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdProcessing dtdProcessing
System::Xml::DtdProcessing& System::Xml::XmlSqlBinaryReader::dyn_dtdProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_dtdProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdProcessing"))->offset;
  return *reinterpret_cast<System::Xml::DtdProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.SecureStringHasher hasher
System::Xml::SecureStringHasher*& System::Xml::XmlSqlBinaryReader::dyn_hasher() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_hasher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasher"))->offset;
  return *reinterpret_cast<System::Xml::SecureStringHasher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
System::Xml::XmlCharType& System::Xml::XmlSqlBinaryReader::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding unicode
System::Text::Encoding*& System::Xml::XmlSqlBinaryReader::dyn_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_unicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unicode"))->offset;
  return *reinterpret_cast<System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte version
uint8_t& System::Xml::XmlSqlBinaryReader::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Xml::XmlSqlBinaryReader::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::System.Xml.IXmlNamespaceResolver.GetNamespacesInScope");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.GetNamespacesInScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scope)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, scope);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlSqlBinaryReader::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.VerifyVersion
void System::Xml::XmlSqlBinaryReader::VerifyVersion(int requiredVersion, System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::VerifyVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requiredVersion), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requiredVersion, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddInitNamespace
void System::Xml::XmlSqlBinaryReader::AddInitNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AddInitNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInitNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddName
void System::Xml::XmlSqlBinaryReader::AddName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddQName
void System::Xml::XmlSqlBinaryReader::AddQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AddQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NameFlush
void System::Xml::XmlSqlBinaryReader::NameFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NameFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NameFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.SkipExtn
void System::Xml::XmlSqlBinaryReader::SkipExtn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SkipExtn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipExtn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadQNameRef
int System::Xml::XmlSqlBinaryReader::ReadQNameRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadQNameRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQNameRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadNameRef
int System::Xml::XmlSqlBinaryReader::ReadNameRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadNameRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNameRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FillAllowEOF
bool System::Xml::XmlSqlBinaryReader::FillAllowEOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::FillAllowEOF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAllowEOF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Fill_
void System::Xml::XmlSqlBinaryReader::Fill_(int require) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::Fill_");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill_", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(require)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, require);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Fill
void System::Xml::XmlSqlBinaryReader::Fill(int require) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::Fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(require)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, require);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadByte
uint8_t System::Xml::XmlSqlBinaryReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadUShort
uint16_t System::Xml::XmlSqlBinaryReader::ReadUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32
int System::Xml::XmlSqlBinaryReader::ParseMB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ParseMB32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32_
int System::Xml::XmlSqlBinaryReader::ParseMB32_(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ParseMB32_");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32_", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32
int System::Xml::XmlSqlBinaryReader::ParseMB32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ParseMB32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB64
int System::Xml::XmlSqlBinaryReader::ParseMB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ParseMB64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PeekToken
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::PeekToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::PeekToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadToken
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::ReadToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken2
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken2(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NextToken2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken1
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NextToken1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PeekNextToken
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::PeekNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::PeekNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.RescanNextToken
System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::RescanNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::RescanNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RescanNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseText
::StringW System::Xml::XmlSqlBinaryReader::ParseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanText
int System::Xml::XmlSqlBinaryReader::ScanText(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetString
::StringW System::Xml::XmlSqlBinaryReader::GetString(int pos, int cch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(cch)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pos, cch);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetStringAligned
::StringW System::Xml::XmlSqlBinaryReader::GetStringAligned(::ArrayW<uint8_t> data, int offset, int cch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetStringAligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(cch)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, data, offset, cch);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttributeText
::StringW System::Xml::XmlSqlBinaryReader::GetAttributeText(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LocateAttribute
int System::Xml::XmlSqlBinaryReader::LocateAttribute(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::LocateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LocateAttribute
int System::Xml::XmlSqlBinaryReader::LocateAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::LocateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PositionOnAttribute
void System::Xml::XmlSqlBinaryReader::PositionOnAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::PositionOnAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionOnAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GrowElements
void System::Xml::XmlSqlBinaryReader::GrowElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GrowElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GrowAttributes
void System::Xml::XmlSqlBinaryReader::GrowAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GrowAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ClearAttributes
void System::Xml::XmlSqlBinaryReader::ClearAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ClearAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PushNamespace
void System::Xml::XmlSqlBinaryReader::PushNamespace(::StringW prefix, ::StringW ns, bool implied) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::PushNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(implied)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns, implied);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PopNamespaces
void System::Xml::XmlSqlBinaryReader::PopNamespaces(System::Xml::XmlSqlBinaryReader::NamespaceDecl* firstInScopeChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::PopNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstInScopeChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstInScopeChain);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GenerateImpliedXmlnsAttrs
void System::Xml::XmlSqlBinaryReader::GenerateImpliedXmlnsAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GenerateImpliedXmlnsAttrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpliedXmlnsAttrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadInit
bool System::Xml::XmlSqlBinaryReader::ReadInit(bool skipXmlDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipXmlDecl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, skipXmlDecl);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanAttributes
void System::Xml::XmlSqlBinaryReader::ScanAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.SimpleCheckForDuplicateAttributes
void System::Xml::XmlSqlBinaryReader::SimpleCheckForDuplicateAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SimpleCheckForDuplicateAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleCheckForDuplicateAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.HashCheckForDuplicateAttributes
void System::Xml::XmlSqlBinaryReader::HashCheckForDuplicateAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::HashCheckForDuplicateAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCheckForDuplicateAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.XmlDeclValue
::StringW System::Xml::XmlSqlBinaryReader::XmlDeclValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::XmlDeclValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XmlDeclValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CDATAValue
::StringW System::Xml::XmlSqlBinaryReader::CDATAValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::CDATAValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CDATAValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FinishCDATA
void System::Xml::XmlSqlBinaryReader::FinishCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::FinishCDATA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishCDATA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FinishEndElement
void System::Xml::XmlSqlBinaryReader::FinishEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::FinishEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadDoc
bool System::Xml::XmlSqlBinaryReader::ReadDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadDoc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDoc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadData
void System::Xml::XmlSqlBinaryReader::ImplReadData(System::Xml::BinXmlToken tokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenType);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadElement
void System::Xml::XmlSqlBinaryReader::ImplReadElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadEndElement
void System::Xml::XmlSqlBinaryReader::ImplReadEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadDoctype
void System::Xml::XmlSqlBinaryReader::ImplReadDoctype() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadDoctype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadDoctype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadPI
void System::Xml::XmlSqlBinaryReader::ImplReadPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadComment
void System::Xml::XmlSqlBinaryReader::ImplReadComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadCDATA
void System::Xml::XmlSqlBinaryReader::ImplReadCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadCDATA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadCDATA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadNest
void System::Xml::XmlSqlBinaryReader::ImplReadNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadNest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadNest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadEndNest
void System::Xml::XmlSqlBinaryReader::ImplReadEndNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadEndNest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadEndNest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadXmlText
void System::Xml::XmlSqlBinaryReader::ImplReadXmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ImplReadXmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadXmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.UpdateFromTextReader
void System::Xml::XmlSqlBinaryReader::UpdateFromTextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::UpdateFromTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.UpdateFromTextReader
bool System::Xml::XmlSqlBinaryReader::UpdateFromTextReader(bool needUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::UpdateFromTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, needUpdate);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckAllowContent
void System::Xml::XmlSqlBinaryReader::CheckAllowContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::CheckAllowContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAllowContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GenerateTokenTypeMap
void System::Xml::XmlSqlBinaryReader::GenerateTokenTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GenerateTokenTypeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTokenTypeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetValueType
System::Type* System::Xml::XmlSqlBinaryReader::GetValueType(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReScanOverValue
void System::Xml::XmlSqlBinaryReader::ReScanOverValue(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReScanOverValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReScanOverValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanOverValue
System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::ScanOverValue(System::Xml::BinXmlToken token, bool attr, bool checkChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanOverValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOverValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(checkChars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNodeType, false>(this, ___internal__method, token, attr, checkChars);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanOverAnyValue
System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::ScanOverAnyValue(System::Xml::BinXmlToken token, bool attr, bool checkChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanOverAnyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOverAnyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(checkChars)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNodeType, false>(this, ___internal__method, token, attr, checkChars);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckText
System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::CheckText(bool attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::CheckText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNodeType, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckTextIsWS
System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::CheckTextIsWS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::CheckTextIsWS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTextIsWS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckValueTokenBounds
void System::Xml::XmlSqlBinaryReader::CheckValueTokenBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::CheckValueTokenBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueTokenBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetXsdKatmaiTokenLength
int System::Xml::XmlSqlBinaryReader::GetXsdKatmaiTokenLength(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetXsdKatmaiTokenLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXsdKatmaiTokenLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.XsdKatmaiTimeScaleToValueLength
int System::Xml::XmlSqlBinaryReader::XsdKatmaiTimeScaleToValueLength(uint8_t scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::XsdKatmaiTimeScaleToValueLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XsdKatmaiTimeScaleToValueLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, scale);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsLong
int64_t System::Xml::XmlSqlBinaryReader::ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsULong
uint64_t System::Xml::XmlSqlBinaryReader::ValueAsULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDecimal
System::Decimal System::Xml::XmlSqlBinaryReader::ValueAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDouble
double System::Xml::XmlSqlBinaryReader::ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDateTimeString
::StringW System::Xml::XmlSqlBinaryReader::ValueAsDateTimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsString
::StringW System::Xml::XmlSqlBinaryReader::ValueAsString(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ValueAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt16
int16_t System::Xml::XmlSqlBinaryReader::GetInt16(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt16
uint16_t System::Xml::XmlSqlBinaryReader::GetUInt16(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt32
int System::Xml::XmlSqlBinaryReader::GetInt32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt32
uint System::Xml::XmlSqlBinaryReader::GetUInt32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt64
int64_t System::Xml::XmlSqlBinaryReader::GetInt64(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt64
uint64_t System::Xml::XmlSqlBinaryReader::GetUInt64(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetSingle
float System::Xml::XmlSqlBinaryReader::GetSingle(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetDouble
double System::Xml::XmlSqlBinaryReader::GetDouble(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowUnexpectedToken
System::Exception* System::Xml::XmlSqlBinaryReader::ThrowUnexpectedToken(System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowXmlException
System::Exception* System::Xml::XmlSqlBinaryReader::ThrowXmlException(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ThrowXmlException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowXmlException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowXmlException
System::Exception* System::Xml::XmlSqlBinaryReader::ThrowXmlException(::StringW res, ::StringW arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ThrowXmlException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowXmlException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, res, arg1, arg2);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowNotSupported
System::Exception* System::Xml::XmlSqlBinaryReader::ThrowNotSupported(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ThrowNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Settings
System::Xml::XmlReaderSettings* System::Xml::XmlSqlBinaryReader::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_Settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NodeType
System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_LocalName
::StringW System::Xml::XmlSqlBinaryReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NamespaceURI
::StringW System::Xml::XmlSqlBinaryReader::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Prefix
::StringW System::Xml::XmlSqlBinaryReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Value
::StringW System::Xml::XmlSqlBinaryReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Depth
int System::Xml::XmlSqlBinaryReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_BaseURI
::StringW System::Xml::XmlSqlBinaryReader::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_IsEmptyElement
bool System::Xml::XmlSqlBinaryReader::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_XmlSpace
System::Xml::XmlSpace System::Xml::XmlSqlBinaryReader::get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_XmlSpace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_XmlLang
::StringW System::Xml::XmlSqlBinaryReader::get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_XmlLang");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlLang", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_ValueType
System::Type* System::Xml::XmlSqlBinaryReader::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_AttributeCount
int System::Xml::XmlSqlBinaryReader::get_AttributeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_AttributeCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_EOF
bool System::Xml::XmlSqlBinaryReader::get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_EOF");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EOF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NameTable
System::Xml::XmlNameTable* System::Xml::XmlSqlBinaryReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_ReadState
System::Xml::ReadState System::Xml::XmlSqlBinaryReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader..cctor
void System::Xml::XmlSqlBinaryReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlSqlBinaryReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToAttribute
void System::Xml::XmlSqlBinaryReader::MoveToAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToFirstAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToNextAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToElement
bool System::Xml::XmlSqlBinaryReader::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::MoveToElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadAttributeValue
bool System::Xml::XmlSqlBinaryReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Close
void System::Xml::XmlSqlBinaryReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LookupNamespace
::StringW System::Xml::XmlSqlBinaryReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ResolveEntity
void System::Xml::XmlSqlBinaryReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Read
bool System::Xml::XmlSqlBinaryReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.op_Equality
bool System::Xml::operator ==(const System::Xml::XmlSqlBinaryReader::QName& a, const System::Xml::XmlSqlBinaryReader::QName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlSqlBinaryReader/QName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.ScanState
#include "System/Xml/XmlSqlBinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Doc
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_Doc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Doc"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Doc
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Doc(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_Doc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Doc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState XmlText
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_XmlText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "XmlText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState XmlText
void System::Xml::XmlSqlBinaryReader::ScanState::_set_XmlText(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_XmlText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "XmlText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Attr
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Attr
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Attr(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrVal
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrVal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrVal
void System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrVal(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrVal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrValPseudoValue
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrValPseudoValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrValPseudoValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrValPseudoValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrValPseudoValue
void System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrValPseudoValue(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrValPseudoValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrValPseudoValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Init
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Init"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Init
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Init(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Error
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Error
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Error(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState EOF
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_EOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "EOF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState EOF
void System::Xml::XmlSqlBinaryReader::ScanState::_set_EOF(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_EOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "EOF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Closed
System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Closed
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Closed(System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Xml::XmlSqlBinaryReader::ScanState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ScanState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.QName
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String localname
::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_localname() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::dyn_localname");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String namespaceUri
::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::dyn_namespaceUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName..ctor
// ABORTED elsewhere.  System::Xml::XmlSqlBinaryReader::QName::QName(::StringW prefix, ::StringW lname, ::StringW nsUri)
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Set
void System::Xml::XmlSqlBinaryReader::QName::Set(::StringW prefix, ::StringW lname, ::StringW nsUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(lname), ::il2cpp_utils::ExtractType(nsUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, lname, nsUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Clear
void System::Xml::XmlSqlBinaryReader::QName::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.MatchNs
bool System::Xml::XmlSqlBinaryReader::QName::MatchNs(::StringW lname, ::StringW nsUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::MatchNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lname), ::il2cpp_utils::ExtractType(nsUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lname, nsUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.MatchPrefix
bool System::Xml::XmlSqlBinaryReader::QName::MatchPrefix(::StringW prefix, ::StringW lname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::MatchPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(lname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, lname);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.CheckPrefixNS
void System::Xml::XmlSqlBinaryReader::QName::CheckPrefixNS(::StringW prefix, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::CheckPrefixNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckPrefixNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.GetNSHashCode
int System::Xml::XmlSqlBinaryReader::QName::GetNSHashCode(System::Xml::SecureStringHasher* hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::GetNSHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNSHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hasher);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.GetHashCode
int System::Xml::XmlSqlBinaryReader::QName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Equals
bool System::Xml::XmlSqlBinaryReader::QName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.ToString
::StringW System::Xml::XmlSqlBinaryReader::QName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::QName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName name
System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xmlLang
::StringW& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlLang");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSpace xmlSpace
System::Xml::XmlSpace& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean xmlspacePreserve
bool& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlspacePreserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlspacePreserve");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlspacePreserve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl nsdecls
System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_nsdecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_nsdecls");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsdecls"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo.Set
void System::Xml::XmlSqlBinaryReader::ElemInfo::Set(System::Xml::XmlSqlBinaryReader::QName name, bool xmlspacePreserve) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(xmlspacePreserve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, xmlspacePreserve);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo.Clear
System::Xml::XmlSqlBinaryReader::NamespaceDecl* System::Xml::XmlSqlBinaryReader::ElemInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::ElemInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Xml::XmlSqlBinaryReader::NamespaceDecl*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName name
System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String val
::StringW& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_val");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 contentPos
int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_contentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_contentPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_hashCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 prevHash
int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_prevHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_prevHash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.Set
void System::Xml::XmlSqlBinaryReader::AttrInfo::Set(System::Xml::XmlSqlBinaryReader::QName n, ::StringW v) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, v);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.Set
void System::Xml::XmlSqlBinaryReader::AttrInfo::Set(System::Xml::XmlSqlBinaryReader::QName n, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.GetLocalnameAndNamespaceUri
void System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUri(ByRef<::StringW> localname, ByRef<::StringW> namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalnameAndNamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(localname), byref(namespaceUri));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.GetLocalnameAndNamespaceUriAndHash
int System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUriAndHash(System::Xml::SecureStringHasher* hasher, ByRef<::StringW> localname, ByRef<::StringW> namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUriAndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalnameAndNamespaceUriAndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hasher, byref(localname), byref(namespaceUri));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.MatchNS
bool System::Xml::XmlSqlBinaryReader::AttrInfo::MatchNS(::StringW localname, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::MatchNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.MatchHashNS
bool System::Xml::XmlSqlBinaryReader::AttrInfo::MatchHashNS(int hash, ::StringW localname, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::MatchHashNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchHashNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, localname, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.AdjustPosition
void System::Xml::XmlSqlBinaryReader::AttrInfo::AdjustPosition(int adj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::AttrInfo::AdjustPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AdjustPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, adj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
::StringW& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
::StringW& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl scopeLink
System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scopeLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scopeLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeLink"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl prevLink
System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prevLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prevLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevLink"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scope
int& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scope"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean implied
bool& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_implied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "implied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables
#include "System/Xml/XmlSqlBinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] symtable
::ArrayW<::StringW>& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symtable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symtable"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 symCount
int& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName[] qnametable
::ArrayW<System::Xml::XmlSqlBinaryReader::QName>& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnametable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnametable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnametable"))->offset;
  return *reinterpret_cast<::ArrayW<System::Xml::XmlSqlBinaryReader::QName>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 qnameCount
int& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnameCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables.Init
void System::Xml::XmlSqlBinaryReader::SymbolTables::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::SymbolTables::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml
#include "System/Xml/XmlSqlBinaryReader_NestedBinXml.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables symbolTables
System::Xml::XmlSqlBinaryReader::SymbolTables& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_symbolTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_symbolTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbolTables"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::SymbolTables*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 docState
int& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_docState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_docState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml next
System::Xml::XmlSqlBinaryReader::NestedBinXml*& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<System::Xml::XmlSqlBinaryReader::NestedBinXml**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bitStack
::ArrayW<uint>& System::Xml::BitStack::dyn_bitStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::dyn_bitStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitStack"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stackPos
int& System::Xml::BitStack::dyn_stackPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::dyn_stackPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 curr
uint& System::Xml::BitStack::dyn_curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::dyn_curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BitStack.PushBit
void System::Xml::BitStack::PushBit(bool bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PushBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Xml.BitStack.PopBit
bool System::Xml::BitStack::PopBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PopBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PeekBit
bool System::Xml::BitStack::PeekBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PeekBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PushCurr
void System::Xml::BitStack::PushCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PushCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PopCurr
void System::Xml::BitStack::PopCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Xml::BitStack::PopCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
