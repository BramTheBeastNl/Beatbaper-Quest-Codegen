// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers
#include "Org/BouncyCastle/Asn1/X9/X9ObjectIdentifiers.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_X9_62
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ansi_X9_62() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ansi_X9_62");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ansi_X9_62"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_X9_62
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ansi_X9_62(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ansi_X9_62");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ansi_X9_62", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdFieldType
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdFieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdFieldType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdFieldType"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdFieldType
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdFieldType(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdFieldType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdFieldType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeField
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PrimeField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PrimeField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PrimeField"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeField
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PrimeField(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PrimeField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PrimeField", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier CharacteristicTwoField
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_CharacteristicTwoField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_CharacteristicTwoField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "CharacteristicTwoField"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier CharacteristicTwoField
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_CharacteristicTwoField(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_CharacteristicTwoField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "CharacteristicTwoField", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier GNBasis
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_GNBasis() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_GNBasis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "GNBasis"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier GNBasis
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_GNBasis(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_GNBasis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "GNBasis", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier TPBasis
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_TPBasis() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_TPBasis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "TPBasis"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier TPBasis
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_TPBasis(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_TPBasis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "TPBasis", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PPBasis
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PPBasis() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PPBasis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PPBasis"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PPBasis
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PPBasis(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PPBasis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PPBasis", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_ecSigType
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_id_ecSigType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_id_ecSigType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "id_ecSigType"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_ecSigType
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_id_ecSigType(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_id_ecSigType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "id_ecSigType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_publicKeyType
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_id_publicKeyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_id_publicKeyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "id_publicKeyType"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier id_publicKeyType
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_id_publicKeyType(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_id_publicKeyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "id_publicKeyType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdECPublicKey
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdECPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdECPublicKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdECPublicKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdECPublicKey
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdECPublicKey(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdECPublicKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdECPublicKey", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha224
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha224() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha224");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha224"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha224
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha224(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha224");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha224", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha256
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha256"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha256
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha256(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha256", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha384
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha384"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha384
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha384(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha384", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha512
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ECDsaWithSha512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha512"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ECDsaWithSha512
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha512(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ECDsaWithSha512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ECDsaWithSha512", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier EllipticCurve
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_EllipticCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_EllipticCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "EllipticCurve"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier EllipticCurve
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_EllipticCurve(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_EllipticCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "EllipticCurve", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier CTwoCurve
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_CTwoCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_CTwoCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "CTwoCurve"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier CTwoCurve
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_CTwoCurve(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_CTwoCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "CTwoCurve", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v3
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb163v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb163v3
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v3(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb163v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb163v3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb176w1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb176w1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb176w1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb176w1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb176w1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb176w1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb176w1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb176w1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v3
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb191v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb191v3
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v3(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb191v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb191v3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v4
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb191v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb191v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb191v4"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v4
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb191v4(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb191v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb191v4", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v5
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb191v5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb191v5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb191v5"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb191v5
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb191v5(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb191v5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb191v5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb208w1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb208w1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb208w1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb208w1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb208w1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb208w1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb208w1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb208w1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v3
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb239v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb239v3
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v3(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb239v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb239v3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v4
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb239v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb239v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb239v4"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v4
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb239v4(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb239v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb239v4", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v5
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb239v5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Onb239v5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb239v5"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Onb239v5
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb239v5(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Onb239v5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Onb239v5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb272w1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb272w1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb272w1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb272w1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb272w1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb272w1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb272w1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb272w1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb304w1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb304w1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb304w1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb304w1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb304w1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb304w1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb304w1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb304w1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb359v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb359v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb359v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb359v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb359v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb359v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb359v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb359v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb368w1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb368w1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Pnb368w1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb368w1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Pnb368w1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb368w1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Pnb368w1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Pnb368w1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb431r1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb431r1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_C2Tnb431r1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb431r1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier C2Tnb431r1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb431r1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_C2Tnb431r1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "C2Tnb431r1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeCurve
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PrimeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_PrimeCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PrimeCurve"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier PrimeCurve
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PrimeCurve(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_PrimeCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "PrimeCurve", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v3
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime192v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime192v3
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v3(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime192v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime192v3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v3
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime239v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime239v3
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v3(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime239v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime239v3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime256v1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime256v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Prime256v1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime256v1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Prime256v1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime256v1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Prime256v1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Prime256v1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsa
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdDsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdDsa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdDsa"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsa
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdDsa(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdDsa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdDsa", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsaWithSha1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdDsaWithSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_IdDsaWithSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdDsaWithSha1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier IdDsaWithSha1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdDsaWithSha1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_IdDsaWithSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "IdDsaWithSha1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier X9x63Scheme
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_X9x63Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_X9x63Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "X9x63Scheme"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier X9x63Scheme
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_X9x63Scheme(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_X9x63Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "X9x63Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassStdDHSha1KdfScheme
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHSinglePassStdDHSha1KdfScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHSinglePassStdDHSha1KdfScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHSinglePassStdDHSha1KdfScheme"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassStdDHSha1KdfScheme
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHSinglePassStdDHSha1KdfScheme(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHSinglePassStdDHSha1KdfScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHSinglePassStdDHSha1KdfScheme", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassCofactorDHSha1KdfScheme
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHSinglePassCofactorDHSha1KdfScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHSinglePassCofactorDHSha1KdfScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHSinglePassCofactorDHSha1KdfScheme"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHSinglePassCofactorDHSha1KdfScheme
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHSinglePassCofactorDHSha1KdfScheme(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHSinglePassCofactorDHSha1KdfScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHSinglePassCofactorDHSha1KdfScheme", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier MqvSinglePassSha1KdfScheme
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_MqvSinglePassSha1KdfScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_MqvSinglePassSha1KdfScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "MqvSinglePassSha1KdfScheme"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier MqvSinglePassSha1KdfScheme
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_MqvSinglePassSha1KdfScheme(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_MqvSinglePassSha1KdfScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "MqvSinglePassSha1KdfScheme", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_x9_42
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ansi_x9_42() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_ansi_x9_42");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ansi_x9_42"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier ansi_x9_42
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ansi_x9_42(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_ansi_x9_42");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "ansi_x9_42", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHPublicNumber
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHPublicNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHPublicNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHPublicNumber"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHPublicNumber
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHPublicNumber(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHPublicNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHPublicNumber", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier X9x42Schemes
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_X9x42Schemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_X9x42Schemes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "X9x42Schemes"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier X9x42Schemes
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_X9x42Schemes(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_X9x42Schemes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "X9x42Schemes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHStatic
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHStatic"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHStatic
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHStatic(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHStatic", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHEphem
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHEphem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHEphem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHEphem"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHEphem
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHEphem(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHEphem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHEphem", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHOneFlow
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHOneFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHOneFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHOneFlow"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHOneFlow
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHOneFlow(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHOneFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHOneFlow", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybrid1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybrid1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybrid1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybrid1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybrid1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybrid1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybrid2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybrid2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybrid2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybrid2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybrid2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybrid2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybrid2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybridOneFlow
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybridOneFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_DHHybridOneFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybridOneFlow"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier DHHybridOneFlow
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybridOneFlow(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_DHHybridOneFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "DHHybridOneFlow", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv2
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Mqv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Mqv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Mqv2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv2
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Mqv2(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Mqv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Mqv2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv1
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Mqv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_get_Mqv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerObjectIdentifier*>("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Mqv1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerObjectIdentifier Mqv1
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Mqv1(Org::BouncyCastle::Asn1::DerObjectIdentifier* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_set_Mqv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", "Mqv1", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers..cctor
void Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::X9::X9ObjectIdentifiers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1.X9", "X9ObjectIdentifiers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: X9ObjectIdentifiers::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&X9ObjectIdentifiers::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X9ObjectIdentifiers*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Org.BouncyCastle.Asn1.Asn1Encodable[] EmptyElements
::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* Org::BouncyCastle::Asn1::Asn1EncodableVector::_get_EmptyElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::_get_EmptyElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>("Org.BouncyCastle.Asn1", "Asn1EncodableVector", "EmptyElements"));
}
// Autogenerated static field setter
// Set static field: static readonly Org.BouncyCastle.Asn1.Asn1Encodable[] EmptyElements
void Org::BouncyCastle::Asn1::Asn1EncodableVector::_set_EmptyElements(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::_set_EmptyElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "Asn1EncodableVector", "EmptyElements", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.Add
void Org::BouncyCastle::Asn1::Asn1EncodableVector::Add(Org::BouncyCastle::Asn1::Asn1Encodable* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.Add
void Org::BouncyCastle::Asn1::Asn1EncodableVector::Add(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* objs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objs);
}
// Creating initializer_list -> params proxy for: System.Void Add(params Org.BouncyCastle.Asn1.Asn1Encodable[] objs)
void Org::BouncyCastle::Asn1::Asn1EncodableVector::Add(std::initializer_list<Org::BouncyCastle::Asn1::Asn1Encodable*> objs) {
  Org::BouncyCastle::Asn1::Asn1EncodableVector::Add(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>::New(objs));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.AddOptional
void Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptional(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* objs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objs);
}
// Creating initializer_list -> params proxy for: System.Void AddOptional(params Org.BouncyCastle.Asn1.Asn1Encodable[] objs)
void Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptional(std::initializer_list<Org::BouncyCastle::Asn1::Asn1Encodable*> objs) {
  Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptional(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>::New(objs));
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.AddOptionalTagged
void Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptionalTagged(bool isExplicit, int tagNo, Org::BouncyCastle::Asn1::Asn1Encodable* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::AddOptionalTagged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptionalTagged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExplicit), ::il2cpp_utils::ExtractType(tagNo), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isExplicit, tagNo, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.get_Item
Org::BouncyCastle::Asn1::Asn1Encodable* Org::BouncyCastle::Asn1::Asn1EncodableVector::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Encodable*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.get_Count
int Org::BouncyCastle::Asn1::Asn1EncodableVector::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::Asn1EncodableVector::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.CopyElements
::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* Org::BouncyCastle::Asn1::Asn1EncodableVector::CopyElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::CopyElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.TakeElements
::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* Org::BouncyCastle::Asn1::Asn1EncodableVector::TakeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::TakeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.Reallocate
void Org::BouncyCastle::Asn1::Asn1EncodableVector::Reallocate(int minCapacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minCapacity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, minCapacity);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector.CloneElements
::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* Org::BouncyCastle::Asn1::Asn1EncodableVector::CloneElements(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* elements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::CloneElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1EncodableVector", "CloneElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elements);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1EncodableVector..cctor
void Org::BouncyCastle::Asn1::Asn1EncodableVector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1EncodableVector::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1EncodableVector", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Asn1EncodableVector::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(int)>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(int)>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1EncodableVector::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1EncodableVector::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::AddOptional
// Il2CppName: AddOptional
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1EncodableVector::AddOptional)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "AddOptional", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::AddOptionalTagged
// Il2CppName: AddOptionalTagged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1EncodableVector::AddOptionalTagged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "AddOptionalTagged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Encodable* (Asn1EncodableVector::*)(int)>(&Asn1EncodableVector::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1EncodableVector::*)()>(&Asn1EncodableVector::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Asn1EncodableVector::*)()>(&Asn1EncodableVector::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::CopyElements
// Il2CppName: CopyElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* (Asn1EncodableVector::*)()>(&Asn1EncodableVector::CopyElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "CopyElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::TakeElements
// Il2CppName: TakeElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* (Asn1EncodableVector::*)()>(&Asn1EncodableVector::TakeElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "TakeElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::Reallocate
// Il2CppName: Reallocate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)(int)>(&Asn1EncodableVector::Reallocate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "Reallocate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::CloneElements
// Il2CppName: CloneElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>* (*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1EncodableVector::CloneElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), "CloneElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Asn1EncodableVector::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1EncodableVector::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)()>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1EncodableVector::*)()>(&Asn1EncodableVector::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1EncodableVector*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Exception
#include "Org/BouncyCastle/Asn1/Asn1Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Asn1Exception::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)()>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)()>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Exception::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)(::Il2CppString*)>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)(::Il2CppString*)>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Asn1Exception::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)(::Il2CppString*, System::Exception*)>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Exception::*)(::Il2CppString*, System::Exception*)>(&Asn1Exception::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Exception*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.FilterStream
#include "Org/BouncyCastle/Utilities/IO/FilterStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.get_CanRead
bool Org::BouncyCastle::Utilities::IO::FilterStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.get_CanSeek
bool Org::BouncyCastle::Utilities::IO::FilterStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.get_CanWrite
bool Org::BouncyCastle::Utilities::IO::FilterStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.get_Length
int64_t Org::BouncyCastle::Utilities::IO::FilterStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.get_Position
int64_t Org::BouncyCastle::Utilities::IO::FilterStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.set_Position
void Org::BouncyCastle::Utilities::IO::FilterStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.Close
void Org::BouncyCastle::Utilities::IO::FilterStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.Flush
void Org::BouncyCastle::Utilities::IO::FilterStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.Seek
int64_t Org::BouncyCastle::Utilities::IO::FilterStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.SetLength
void Org::BouncyCastle::Utilities::IO::FilterStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.Read
int Org::BouncyCastle::Utilities::IO::FilterStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.ReadByte
int Org::BouncyCastle::Utilities::IO::FilterStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.Write
void Org::BouncyCastle::Utilities::IO::FilterStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.FilterStream.WriteByte
void Org::BouncyCastle::Utilities::IO::FilterStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::FilterStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: FilterStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(System::IO::Stream*)>(&FilterStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(System::IO::Stream*)>(&FilterStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: FilterStream::get_CanRead
// Il2CppName: get_CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FilterStream::*)()>(&FilterStream::get_CanRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "get_CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::get_CanSeek
// Il2CppName: get_CanSeek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FilterStream::*)()>(&FilterStream::get_CanSeek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "get_CanSeek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::get_CanWrite
// Il2CppName: get_CanWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FilterStream::*)()>(&FilterStream::get_CanWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "get_CanWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (FilterStream::*)()>(&FilterStream::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (FilterStream::*)()>(&FilterStream::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(int64_t)>(&FilterStream::set_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: FilterStream::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)()>(&FilterStream::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)()>(&FilterStream::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::Seek
// Il2CppName: Seek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (FilterStream::*)(int64_t, System::IO::SeekOrigin)>(&FilterStream::Seek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "Seek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IO::SeekOrigin>()});
  }
};
// Writing MetadataGetter for method: FilterStream::SetLength
// Il2CppName: SetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(int64_t)>(&FilterStream::SetLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "SetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: FilterStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FilterStream::*)(::Array<uint8_t>*, int, int)>(&FilterStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FilterStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FilterStream::*)()>(&FilterStream::ReadByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FilterStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(::Array<uint8_t>*, int, int)>(&FilterStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FilterStream::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FilterStream::*)(uint8_t)>(&FilterStream::WriteByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FilterStream*), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1InputStream
#include "Org/BouncyCastle/Asn1/Asn1InputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.DefiniteLengthInputStream
#include "Org/BouncyCastle/Asn1/DefiniteLengthInputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.DerSequence
#include "Org/BouncyCastle/Asn1/DerSequence.hpp"
// Including type: Org.BouncyCastle.Asn1.DerSet
#include "Org/BouncyCastle/Asn1/DerSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.FindLimit
int Org::BouncyCastle::Asn1::Asn1InputStream::FindLimit(System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::FindLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "FindLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.BuildObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1InputStream::BuildObject(int tag, int tagNo, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::BuildObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(tagNo), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method, tag, tagNo, length);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.ReadVector
Org::BouncyCastle::Asn1::Asn1EncodableVector* Org::BouncyCastle::Asn1::Asn1InputStream::ReadVector(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::ReadVector");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1EncodableVector*, false>(this, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.CreateDerSequence
Org::BouncyCastle::Asn1::DerSequence* Org::BouncyCastle::Asn1::Asn1InputStream::CreateDerSequence(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::CreateDerSequence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDerSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSequence*, false>(this, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.CreateDerSet
Org::BouncyCastle::Asn1::DerSet* Org::BouncyCastle::Asn1::Asn1InputStream::CreateDerSet(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::CreateDerSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDerSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSet*, false>(this, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.ReadObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1InputStream::ReadObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.get_Limit
int Org::BouncyCastle::Asn1::Asn1InputStream::get_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::get_Limit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.ReadTagNumber
int Org::BouncyCastle::Asn1::Asn1InputStream::ReadTagNumber(System::IO::Stream* s, int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::ReadTagNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "ReadTagNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, tag);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.ReadLength
int Org::BouncyCastle::Asn1::Asn1InputStream::ReadLength(System::IO::Stream* s, int limit, bool isParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::ReadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "ReadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(isParsing)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, limit, isParsing);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.GetBuffer
::Array<uint8_t>* Org::BouncyCastle::Asn1::Asn1InputStream::GetBuffer(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* defIn, ::Array<::Array<uint8_t>*>* tmpBuffers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defIn), ::il2cpp_utils::ExtractType(tmpBuffers)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, defIn, tmpBuffers);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.GetBmpCharBuffer
::Array<::Il2CppChar>* Org::BouncyCastle::Asn1::Asn1InputStream::GetBmpCharBuffer(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* defIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::GetBmpCharBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "GetBmpCharBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defIn)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, defIn);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1InputStream.CreatePrimitiveDerObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1InputStream::CreatePrimitiveDerObject(int tagNo, Org::BouncyCastle::Asn1::DefiniteLengthInputStream* defIn, ::Array<::Array<uint8_t>*>* tmpBuffers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1InputStream::CreatePrimitiveDerObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1InputStream", "CreatePrimitiveDerObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagNo), ::il2cpp_utils::ExtractType(defIn), ::il2cpp_utils::ExtractType(tmpBuffers)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tagNo, defIn, tmpBuffers);
}
// Writing MetadataGetter for method: Asn1InputStream::FindLimit
// Il2CppName: FindLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IO::Stream*)>(&Asn1InputStream::FindLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "FindLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(System::IO::Stream*, int)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(System::IO::Stream*, int)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(::Array<uint8_t>*)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(::Array<uint8_t>*)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::BuildObject
// Il2CppName: BuildObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (Asn1InputStream::*)(int, int, int)>(&Asn1InputStream::BuildObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "BuildObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::ReadVector
// Il2CppName: ReadVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1EncodableVector* (Asn1InputStream::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&Asn1InputStream::ReadVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "ReadVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::CreateDerSequence
// Il2CppName: CreateDerSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSequence* (Asn1InputStream::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&Asn1InputStream::CreateDerSequence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "CreateDerSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::CreateDerSet
// Il2CppName: CreateDerSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSet* (Asn1InputStream::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&Asn1InputStream::CreateDerSet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "CreateDerSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (Asn1InputStream::*)()>(&Asn1InputStream::ReadObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::get_Limit
// Il2CppName: get_Limit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1InputStream::*)()>(&Asn1InputStream::get_Limit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "get_Limit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::ReadTagNumber
// Il2CppName: ReadTagNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IO::Stream*, int)>(&Asn1InputStream::ReadTagNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "ReadTagNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::ReadLength
// Il2CppName: ReadLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IO::Stream*, int, bool)>(&Asn1InputStream::ReadLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "ReadLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::GetBuffer
// Il2CppName: GetBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*, ::Array<::Array<uint8_t>*>*)>(&Asn1InputStream::GetBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "GetBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Array<uint8_t>*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::GetBmpCharBuffer
// Il2CppName: GetBmpCharBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppChar>* (*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&Asn1InputStream::GetBmpCharBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "GetBmpCharBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::CreatePrimitiveDerObject
// Il2CppName: CreatePrimitiveDerObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (*)(int, Org::BouncyCastle::Asn1::DefiniteLengthInputStream*, ::Array<::Array<uint8_t>*>*)>(&Asn1InputStream::CreatePrimitiveDerObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), "CreatePrimitiveDerObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Array<uint8_t>*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1InputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(System::IO::Stream*)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1InputStream::*)(System::IO::Stream*)>(&Asn1InputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Null
#include "Org/BouncyCastle/Asn1/Asn1Null.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Null.ToString
::Il2CppString* Org::BouncyCastle::Asn1::Asn1Null::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Null::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1Null::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Null::*)()>(&Asn1Null::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Null*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Null::*)()>(&Asn1Null::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Null*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Null::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Asn1Null::*)()>(&Asn1Null::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Null*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.Asn1OctetStringParser
#include "Org/BouncyCastle/Asn1/Asn1OctetStringParser.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetStringParser.GetOctetStream
System::IO::Stream* Org::BouncyCastle::Asn1::Asn1OctetStringParser::GetOctetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetStringParser::GetOctetStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1OctetStringParser::GetOctetStream
// Il2CppName: GetOctetStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::Stream* (Asn1OctetStringParser::*)()>(&Asn1OctetStringParser::GetOctetStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetStringParser*), "GetOctetStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1OctetString
#include "Org/BouncyCastle/Asn1/Asn1OctetString.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance
Org::BouncyCastle::Asn1::Asn1OctetString* Org::BouncyCastle::Asn1::Asn1OctetString::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool isExplicit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1OctetString", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isExplicit)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1OctetString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, isExplicit);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance
Org::BouncyCastle::Asn1::Asn1OctetString* Org::BouncyCastle::Asn1::Asn1OctetString::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1OctetString", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1OctetString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.GetOctetStream
System::IO::Stream* Org::BouncyCastle::Asn1::Asn1OctetString::GetOctetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::GetOctetStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::Asn1OctetString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::GetOctets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.Asn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1OctetString::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.Asn1Equals
bool Org::BouncyCastle::Asn1::Asn1OctetString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1OctetString.ToString
::Il2CppString* Org::BouncyCastle::Asn1::Asn1OctetString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1OctetString::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1OctetString::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1OctetString* (*)(Org::BouncyCastle::Asn1::Asn1TaggedObject*, bool)>(&Asn1OctetString::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1TaggedObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1OctetString* (*)(::Il2CppObject*)>(&Asn1OctetString::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1OctetString::*)(::Array<uint8_t>*)>(&Asn1OctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1OctetString::*)(::Array<uint8_t>*)>(&Asn1OctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::GetOctetStream
// Il2CppName: GetOctetStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::Stream* (Asn1OctetString::*)()>(&Asn1OctetString::GetOctetStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "GetOctetStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Asn1OctetString::*)()>(&Asn1OctetString::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1OctetString::*)()>(&Asn1OctetString::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1OctetString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&Asn1OctetString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: Asn1OctetString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Asn1OctetString::*)()>(&Asn1OctetString::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OctetString*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteLength
void Org::BouncyCastle::Asn1::DerOutputStream::WriteLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteEncoded
void Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded(int tag, ::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, bytes);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteEncoded
void Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded(int tag, uint8_t first, ::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, first, bytes);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteTag
void Org::BouncyCastle::Asn1::DerOutputStream::WriteTag(int flags, int tagNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(tagNo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags, tagNo);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteEncoded
void Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded(int flags, int tagNo, ::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteEncoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEncoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(tagNo), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags, tagNo, bytes);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteNull
void Org::BouncyCastle::Asn1::DerOutputStream::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteObject
void Org::BouncyCastle::Asn1::DerOutputStream::WriteObject(Org::BouncyCastle::Asn1::Asn1Encodable* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOutputStream.WriteObject
void Org::BouncyCastle::Asn1::DerOutputStream::WriteObject(Org::BouncyCastle::Asn1::Asn1Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOutputStream::WriteObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Writing MetadataGetter for method: DerOutputStream::WriteLength
// Il2CppName: WriteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(int)>(&DerOutputStream::WriteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteEncoded
// Il2CppName: WriteEncoded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(int, ::Array<uint8_t>*)>(&DerOutputStream::WriteEncoded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteEncoded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteEncoded
// Il2CppName: WriteEncoded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(int, uint8_t, ::Array<uint8_t>*)>(&DerOutputStream::WriteEncoded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteEncoded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteTag
// Il2CppName: WriteTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(int, int)>(&DerOutputStream::WriteTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteEncoded
// Il2CppName: WriteEncoded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(int, int, ::Array<uint8_t>*)>(&DerOutputStream::WriteEncoded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteEncoded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteNull
// Il2CppName: WriteNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)()>(&DerOutputStream::WriteNull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteObject
// Il2CppName: WriteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerOutputStream::WriteObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::WriteObject
// Il2CppName: WriteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerOutputStream::WriteObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), "WriteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerOutputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(System::IO::Stream*)>(&DerOutputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOutputStream::*)(System::IO::Stream*)>(&DerOutputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOutputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.Asn1OutputStream
#include "Org/BouncyCastle/Asn1/Asn1OutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Asn1OutputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1OutputStream::*)(System::IO::Stream*)>(&Asn1OutputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OutputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1OutputStream::*)(System::IO::Stream*)>(&Asn1OutputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1OutputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1ParsingException
#include "Org/BouncyCastle/Asn1/Asn1ParsingException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Asn1ParsingException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)()>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)()>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1ParsingException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)(::Il2CppString*)>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)(::Il2CppString*)>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Asn1ParsingException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)(::Il2CppString*, System::Exception*)>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1ParsingException::*)(::Il2CppString*, System::Exception*)>(&Asn1ParsingException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1ParsingException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance
Org::BouncyCastle::Asn1::Asn1Sequence* Org::BouncyCastle::Asn1::Asn1Sequence::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Sequence", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Sequence*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance
Org::BouncyCastle::Asn1::Asn1Sequence* Org::BouncyCastle::Asn1::Asn1Sequence::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool explicitly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Sequence", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(explicitly)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Sequence*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, explicitly);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::Asn1Sequence::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.get_Item
Org::BouncyCastle::Asn1::Asn1Encodable* Org::BouncyCastle::Asn1::Asn1Sequence::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Encodable*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.get_Count
int Org::BouncyCastle::Asn1::Asn1Sequence::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.Asn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1Sequence::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.Asn1Equals
bool Org::BouncyCastle::Asn1::Asn1Sequence::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Sequence.ToString
::Il2CppString* Org::BouncyCastle::Asn1::Asn1Sequence::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Sequence::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1Sequence::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Sequence* (*)(::Il2CppObject*)>(&Asn1Sequence::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Sequence* (*)(Org::BouncyCastle::Asn1::Asn1TaggedObject*, bool)>(&Asn1Sequence::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1TaggedObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Asn1Sequence::*)()>(&Asn1Sequence::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Encodable* (Asn1Sequence::*)(int)>(&Asn1Sequence::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1Sequence::*)()>(&Asn1Sequence::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)()>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Sequence::*)()>(&Asn1Sequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1Sequence::*)()>(&Asn1Sequence::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1Sequence::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&Asn1Sequence::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: Asn1Sequence::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Asn1Sequence::*)()>(&Asn1Sequence::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Sequence*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Set
#include "Org/BouncyCastle/Asn1/Asn1Set.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Set/DerComparer
#include "Org/BouncyCastle/Asn1/Asn1Set_DerComparer.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.GetInstance
Org::BouncyCastle::Asn1::Asn1Set* Org::BouncyCastle::Asn1::Asn1Set::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Set", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Set*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.GetInstance
Org::BouncyCastle::Asn1::Asn1Set* Org::BouncyCastle::Asn1::Asn1Set::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool explicitly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1Set", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(explicitly)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Set*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, explicitly);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::Asn1Set::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.get_Item
Org::BouncyCastle::Asn1::Asn1Encodable* Org::BouncyCastle::Asn1::Asn1Set::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Encodable*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.get_Count
int Org::BouncyCastle::Asn1::Asn1Set::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.Sort
void Org::BouncyCastle::Asn1::Asn1Set::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.Asn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1Set::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.Asn1Equals
bool Org::BouncyCastle::Asn1::Asn1Set::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set.ToString
::Il2CppString* Org::BouncyCastle::Asn1::Asn1Set::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1Set::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Set* (*)(::Il2CppObject*)>(&Asn1Set::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Set* (*)(Org::BouncyCastle::Asn1::Asn1TaggedObject*, bool)>(&Asn1Set::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1TaggedObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Asn1Set::*)()>(&Asn1Set::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Set::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Encodable* (Asn1Set::*)(int)>(&Asn1Set::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1Set::*)()>(&Asn1Set::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Set::Sort
// Il2CppName: Sort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)()>(&Asn1Set::Sort)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "Sort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Set::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)()>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::*)()>(&Asn1Set::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Set::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1Set::*)()>(&Asn1Set::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1Set::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1Set::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&Asn1Set::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Asn1Set::*)()>(&Asn1Set::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1Set/DerComparer
#include "Org/BouncyCastle/Asn1/Asn1Set_DerComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1Set/DerComparer.Compare
int Org::BouncyCastle::Asn1::Asn1Set::DerComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1Set::DerComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Writing MetadataGetter for method: Asn1Set::DerComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1Set::DerComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&Asn1Set::DerComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set::DerComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Asn1Set::DerComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::DerComparer::*)()>(&Asn1Set::DerComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set::DerComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1Set::DerComparer::*)()>(&Asn1Set::DerComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1Set::DerComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.IAsn1Convertible
#include "Org/BouncyCastle/Asn1/IAsn1Convertible.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1StreamParser.ReadIndef
Org::BouncyCastle::Asn1::IAsn1Convertible* Org::BouncyCastle::Asn1::Asn1StreamParser::ReadIndef(int tagValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1StreamParser::ReadIndef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadIndef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tagValue)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::IAsn1Convertible*, false>(this, ___internal__method, tagValue);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1StreamParser.ReadTaggedObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1StreamParser::ReadTaggedObject(bool constructed, int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1StreamParser::ReadTaggedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTaggedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructed), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method, constructed, tag);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1StreamParser.ReadObject
Org::BouncyCastle::Asn1::IAsn1Convertible* Org::BouncyCastle::Asn1::Asn1StreamParser::ReadObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1StreamParser::ReadObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::IAsn1Convertible*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1StreamParser.Set00Check
void Org::BouncyCastle::Asn1::Asn1StreamParser::Set00Check(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1StreamParser::Set00Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set00Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1StreamParser.ReadVector
Org::BouncyCastle::Asn1::Asn1EncodableVector* Org::BouncyCastle::Asn1::Asn1StreamParser::ReadVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1StreamParser::ReadVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1EncodableVector*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1StreamParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1StreamParser::*)(System::IO::Stream*)>(&Asn1StreamParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1StreamParser::*)(System::IO::Stream*)>(&Asn1StreamParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1StreamParser::*)(System::IO::Stream*, int)>(&Asn1StreamParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1StreamParser::*)(System::IO::Stream*, int)>(&Asn1StreamParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::ReadIndef
// Il2CppName: ReadIndef
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::IAsn1Convertible* (Asn1StreamParser::*)(int)>(&Asn1StreamParser::ReadIndef)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), "ReadIndef", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::ReadTaggedObject
// Il2CppName: ReadTaggedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (Asn1StreamParser::*)(bool, int)>(&Asn1StreamParser::ReadTaggedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), "ReadTaggedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::IAsn1Convertible* (Asn1StreamParser::*)()>(&Asn1StreamParser::ReadObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::Set00Check
// Il2CppName: Set00Check
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1StreamParser::*)(bool)>(&Asn1StreamParser::Set00Check)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), "Set00Check", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1StreamParser::ReadVector
// Il2CppName: ReadVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1EncodableVector* (Asn1StreamParser::*)()>(&Asn1StreamParser::ReadVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1StreamParser*), "ReadVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.GetInstance
Org::BouncyCastle::Asn1::Asn1TaggedObject* Org::BouncyCastle::Asn1::Asn1TaggedObject::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool explicitly) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1TaggedObject", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(explicitly)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1TaggedObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, explicitly);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.GetInstance
Org::BouncyCastle::Asn1::Asn1TaggedObject* Org::BouncyCastle::Asn1::Asn1TaggedObject::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "Asn1TaggedObject", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1TaggedObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.get_TagNo
int Org::BouncyCastle::Asn1::Asn1TaggedObject::get_TagNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::get_TagNo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TagNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.IsExplicit
bool Org::BouncyCastle::Asn1::Asn1TaggedObject::IsExplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::IsExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.IsEmpty
bool Org::BouncyCastle::Asn1::Asn1TaggedObject::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.GetObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::Asn1TaggedObject::GetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::GetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.Asn1Equals
bool Org::BouncyCastle::Asn1::Asn1TaggedObject::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.Asn1GetHashCode
int Org::BouncyCastle::Asn1::Asn1TaggedObject::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.Asn1TaggedObject.ToString
::Il2CppString* Org::BouncyCastle::Asn1::Asn1TaggedObject::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::Asn1TaggedObject::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Asn1TaggedObject::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1TaggedObject* (*)(Org::BouncyCastle::Asn1::Asn1TaggedObject*, bool)>(&Asn1TaggedObject::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1TaggedObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1TaggedObject* (*)(::Il2CppObject*)>(&Asn1TaggedObject::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1TaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1TaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1TaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1TaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1TaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1TaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Asn1TaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&Asn1TaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::get_TagNo
// Il2CppName: get_TagNo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1TaggedObject::*)()>(&Asn1TaggedObject::get_TagNo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "get_TagNo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::IsExplicit
// Il2CppName: IsExplicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1TaggedObject::*)()>(&Asn1TaggedObject::IsExplicit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "IsExplicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::IsEmpty
// Il2CppName: IsEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1TaggedObject::*)()>(&Asn1TaggedObject::IsEmpty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "IsEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (Asn1TaggedObject::*)()>(&Asn1TaggedObject::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Asn1TaggedObject::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&Asn1TaggedObject::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Asn1TaggedObject::*)()>(&Asn1TaggedObject::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Asn1TaggedObject::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Asn1TaggedObject::*)()>(&Asn1TaggedObject::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Asn1TaggedObject*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerApplicationSpecific
#include "Org/BouncyCastle/Asn1/DerApplicationSpecific.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.IsConstructed
bool Org::BouncyCastle::Asn1::DerApplicationSpecific::IsConstructed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::IsConstructed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConstructed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.GetContents
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerApplicationSpecific::GetContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::GetContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.get_ApplicationTag
int Org::BouncyCastle::Asn1::DerApplicationSpecific::get_ApplicationTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::get_ApplicationTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.GetObject
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerApplicationSpecific::GetObject(int derTagNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::GetObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derTagNo)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method, derTagNo);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.ReplaceTagNumber
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerApplicationSpecific::ReplaceTagNumber(int newTag, ::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::ReplaceTagNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceTagNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTag), ::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, newTag, input);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.Encode
void Org::BouncyCastle::Asn1::DerApplicationSpecific::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.Asn1Equals
bool Org::BouncyCastle::Asn1::DerApplicationSpecific::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerApplicationSpecific.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerApplicationSpecific::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerApplicationSpecific::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerApplicationSpecific::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerApplicationSpecific::*)(bool, int, ::Array<uint8_t>*)>(&DerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerApplicationSpecific::*)(bool, int, ::Array<uint8_t>*)>(&DerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerApplicationSpecific::*)(int, Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerApplicationSpecific::*)(int, Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::IsConstructed
// Il2CppName: IsConstructed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerApplicationSpecific::*)()>(&DerApplicationSpecific::IsConstructed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "IsConstructed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::GetContents
// Il2CppName: GetContents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerApplicationSpecific::*)()>(&DerApplicationSpecific::GetContents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "GetContents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::get_ApplicationTag
// Il2CppName: get_ApplicationTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerApplicationSpecific::*)()>(&DerApplicationSpecific::get_ApplicationTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "get_ApplicationTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerApplicationSpecific::*)(int)>(&DerApplicationSpecific::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::ReplaceTagNumber
// Il2CppName: ReplaceTagNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerApplicationSpecific::*)(int, ::Array<uint8_t>*)>(&DerApplicationSpecific::ReplaceTagNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "ReplaceTagNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerApplicationSpecific::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerApplicationSpecific::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerApplicationSpecific::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerApplicationSpecific::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerApplicationSpecific::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerApplicationSpecific::*)()>(&DerApplicationSpecific::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerApplicationSpecific*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerApplicationSpecific
#include "Org/BouncyCastle/Asn1/BerApplicationSpecific.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: BerApplicationSpecific::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerApplicationSpecific::*)(int, Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&BerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerApplicationSpecific::*)(int, Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&BerApplicationSpecific::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerApplicationSpecific*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerApplicationSpecificParser
#include "Org/BouncyCastle/Asn1/BerApplicationSpecificParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerApplicationSpecificParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::BerApplicationSpecificParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerApplicationSpecificParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerApplicationSpecificParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerApplicationSpecificParser::*)(int, Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerApplicationSpecificParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerApplicationSpecificParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerApplicationSpecificParser::*)(int, Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerApplicationSpecificParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerApplicationSpecificParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: BerApplicationSpecificParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (BerApplicationSpecificParser::*)()>(&BerApplicationSpecificParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerApplicationSpecificParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.BerBitString
#include "Org/BouncyCastle/Asn1/BerBitString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerBitString.Encode
void Org::BouncyCastle::Asn1::BerBitString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerBitString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: BerBitString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerBitString::*)(::Array<uint8_t>*, int)>(&BerBitString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerBitString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerBitString::*)(::Array<uint8_t>*, int)>(&BerBitString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerBitString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BerBitString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerBitString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&BerBitString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerBitString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerNull
#include "Org/BouncyCastle/Asn1/DerNull.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerNull Instance
Org::BouncyCastle::Asn1::DerNull* Org::BouncyCastle::Asn1::DerNull::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerNull*>("Org.BouncyCastle.Asn1", "DerNull", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerNull Instance
void Org::BouncyCastle::Asn1::DerNull::_set_Instance(Org::BouncyCastle::Asn1::DerNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerNull", "Instance", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNull..cctor
void Org::BouncyCastle::Asn1::DerNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNull.Encode
void Org::BouncyCastle::Asn1::DerNull::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNull.Asn1Equals
bool Org::BouncyCastle::Asn1::DerNull::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNull.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerNull::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNull::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerNull::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNull::*)(int)>(&DerNull::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNull::*)(int)>(&DerNull::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerNull::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DerNull::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerNull::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNull::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerNull::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerNull::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerNull::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerNull::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerNull::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerNull::*)()>(&DerNull::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNull*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerOctetString
#include "Org/BouncyCastle/Asn1/DerOctetString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerOctetString.Encode
void Org::BouncyCastle::Asn1::DerOctetString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOctetString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetString::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetString::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetString::*)(::Array<uint8_t>*)>(&DerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetString::*)(::Array<uint8_t>*)>(&DerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerOctetString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerOctetString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.BerOctetString
#include "Org/BouncyCastle/Asn1/BerOctetString.hpp"
// Including type: Org.BouncyCastle.Asn1.BerOctetString/ChunkEnumerator
#include "Org/BouncyCastle/Asn1/BerOctetString_ChunkEnumerator.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Sequence
#include "Org/BouncyCastle/Asn1/Asn1Sequence.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 DefaultChunkSize
int Org::BouncyCastle::Asn1::BerOctetString::_get_DefaultChunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::_get_DefaultChunkSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Asn1", "BerOctetString", "DefaultChunkSize"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 DefaultChunkSize
void Org::BouncyCastle::Asn1::BerOctetString::_set_DefaultChunkSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::_set_DefaultChunkSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "BerOctetString", "DefaultChunkSize", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString.FromSequence
Org::BouncyCastle::Asn1::BerOctetString* Org::BouncyCastle::Asn1::BerOctetString::FromSequence(Org::BouncyCastle::Asn1::Asn1Sequence* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::FromSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerOctetString", "FromSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::BerOctetString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seq);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString.ToBytes
::Array<uint8_t>* Org::BouncyCastle::Asn1::BerOctetString::ToBytes(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>* octs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerOctetString", "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(octs)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, octs);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::BerOctetString::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString..cctor
void Org::BouncyCastle::Asn1::BerOctetString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerOctetString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString.Encode
void Org::BouncyCastle::Asn1::BerOctetString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: BerOctetString::FromSequence
// Il2CppName: FromSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::BerOctetString* (*)(Org::BouncyCastle::Asn1::Asn1Sequence*)>(&BerOctetString::FromSequence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), "FromSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Sequence*>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::ToBytes
// Il2CppName: ToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*)>(&BerOctetString::ToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), "ToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*, ::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*, ::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*, int)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1OctetString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (BerOctetString::*)()>(&BerOctetString::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerOctetString::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BerOctetString::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerOctetString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(::Array<uint8_t>*)>(&BerOctetString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&BerOctetString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.BerOctetString/ChunkEnumerator
#include "Org/BouncyCastle/Asn1/BerOctetString_ChunkEnumerator.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOctetString
#include "Org/BouncyCastle/Asn1/DerOctetString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString/ChunkEnumerator.get_Current
::Il2CppObject* Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString/ChunkEnumerator.MoveNext
bool Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetString/ChunkEnumerator.Reset
void Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetString::ChunkEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerOctetString::ChunkEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::ChunkEnumerator::*)(::Array<uint8_t>*, int)>(&BerOctetString::ChunkEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString::ChunkEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::ChunkEnumerator::*)(::Array<uint8_t>*, int)>(&BerOctetString::ChunkEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString::ChunkEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BerOctetString::ChunkEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (BerOctetString::ChunkEnumerator::*)()>(&BerOctetString::ChunkEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString::ChunkEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerOctetString::ChunkEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BerOctetString::ChunkEnumerator::*)()>(&BerOctetString::ChunkEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString::ChunkEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerOctetString::ChunkEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetString::ChunkEnumerator::*)()>(&BerOctetString::ChunkEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetString::ChunkEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerOctetStringParser
#include "Org/BouncyCastle/Asn1/BerOctetStringParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetStringParser.GetOctetStream
System::IO::Stream* Org::BouncyCastle::Asn1::BerOctetStringParser::GetOctetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetStringParser::GetOctetStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerOctetStringParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::BerOctetStringParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerOctetStringParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerOctetStringParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetStringParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerOctetStringParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetStringParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerOctetStringParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerOctetStringParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetStringParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: BerOctetStringParser::GetOctetStream
// Il2CppName: GetOctetStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::Stream* (BerOctetStringParser::*)()>(&BerOctetStringParser::GetOctetStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetStringParser*), "GetOctetStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerOctetStringParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (BerOctetStringParser::*)()>(&BerOctetStringParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerOctetStringParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerSequence
#include "Org/BouncyCastle/Asn1/DerSequence.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerSequence Empty
Org::BouncyCastle::Asn1::DerSequence* Org::BouncyCastle::Asn1::DerSequence::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequence::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerSequence*>("Org.BouncyCastle.Asn1", "DerSequence", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerSequence Empty
void Org::BouncyCastle::Asn1::DerSequence::_set_Empty(Org::BouncyCastle::Asn1::DerSequence* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequence::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerSequence", "Empty", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSequence.FromVector
Org::BouncyCastle::Asn1::DerSequence* Org::BouncyCastle::Asn1::DerSequence::FromVector(Org::BouncyCastle::Asn1::Asn1EncodableVector* elementVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequence::FromVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerSequence", "FromVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementVector)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSequence*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementVector);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSequence..cctor
void Org::BouncyCastle::Asn1::DerSequence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequence::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerSequence", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSequence.Encode
void Org::BouncyCastle::Asn1::DerSequence::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequence::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerSequence::FromVector
// Il2CppName: FromVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSequence* (*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerSequence::FromVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), "FromVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: DerSequence::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DerSequence::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)()>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)()>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Org::BouncyCastle::Asn1::Asn1Encodable*>*>()});
  }
};
// Writing MetadataGetter for method: DerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: DerSequence::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequence::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerSequence::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequence*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerSequence
#include "Org/BouncyCastle/Asn1/BerSequence.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.BerSequence Empty
Org::BouncyCastle::Asn1::BerSequence* Org::BouncyCastle::Asn1::BerSequence::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequence::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::BerSequence*>("Org.BouncyCastle.Asn1", "BerSequence", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.BerSequence Empty
void Org::BouncyCastle::Asn1::BerSequence::_set_Empty(Org::BouncyCastle::Asn1::BerSequence* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequence::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "BerSequence", "Empty", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerSequence.FromVector
Org::BouncyCastle::Asn1::BerSequence* Org::BouncyCastle::Asn1::BerSequence::FromVector(Org::BouncyCastle::Asn1::Asn1EncodableVector* elementVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequence::FromVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerSequence", "FromVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementVector)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::BerSequence*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementVector);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerSequence.Encode
void Org::BouncyCastle::Asn1::BerSequence::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequence::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerSequence..cctor
void Org::BouncyCastle::Asn1::BerSequence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequence::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerSequence", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: BerSequence::FromVector
// Il2CppName: FromVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::BerSequence* (*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&BerSequence::FromVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), "FromVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: BerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)()>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)()>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: BerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&BerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: BerSequence::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequence::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&BerSequence::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: BerSequence::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BerSequence::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequence*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerSequenceParser
#include "Org/BouncyCastle/Asn1/BerSequenceParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerSequenceParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::BerSequenceParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSequenceParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerSequenceParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequenceParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerSequenceParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequenceParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSequenceParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerSequenceParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequenceParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: BerSequenceParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (BerSequenceParser::*)()>(&BerSequenceParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSequenceParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerSet
#include "Org/BouncyCastle/Asn1/DerSet.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Encodable
#include "Org/BouncyCastle/Asn1/Asn1Encodable.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerSet Empty
Org::BouncyCastle::Asn1::DerSet* Org::BouncyCastle::Asn1::DerSet::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSet::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerSet*>("Org.BouncyCastle.Asn1", "DerSet", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerSet Empty
void Org::BouncyCastle::Asn1::DerSet::_set_Empty(Org::BouncyCastle::Asn1::DerSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSet::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerSet", "Empty", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSet.FromVector
Org::BouncyCastle::Asn1::DerSet* Org::BouncyCastle::Asn1::DerSet::FromVector(Org::BouncyCastle::Asn1::Asn1EncodableVector* elementVector, bool needsSorting) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSet::FromVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerSet", "FromVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementVector), ::il2cpp_utils::ExtractType(needsSorting)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, elementVector, needsSorting);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSet..cctor
void Org::BouncyCastle::Asn1::DerSet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerSet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerSet.Encode
void Org::BouncyCastle::Asn1::DerSet::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSet::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerSet::FromVector
// Il2CppName: FromVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSet* (*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, bool)>(&DerSet::FromVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), "FromVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, bool)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, bool)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerSet::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DerSet::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)()>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)()>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: DerSet::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSet::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerSet::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSet*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerSet
#include "Org/BouncyCastle/Asn1/BerSet.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.BerSet Empty
Org::BouncyCastle::Asn1::BerSet* Org::BouncyCastle::Asn1::BerSet::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSet::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::BerSet*>("Org.BouncyCastle.Asn1", "BerSet", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.BerSet Empty
void Org::BouncyCastle::Asn1::BerSet::_set_Empty(Org::BouncyCastle::Asn1::BerSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSet::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "BerSet", "Empty", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerSet.Encode
void Org::BouncyCastle::Asn1::BerSet::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSet::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerSet..cctor
void Org::BouncyCastle::Asn1::BerSet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "BerSet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: BerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSet::*)()>(&BerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSet::*)()>(&BerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, bool)>(&BerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSet::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, bool)>(&BerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BerSet::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSet::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&BerSet::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: BerSet::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BerSet::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSet*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerSetParser
#include "Org/BouncyCastle/Asn1/BerSetParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerSetParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::BerSetParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerSetParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerSetParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSetParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerSetParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSetParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerSetParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerSetParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSetParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: BerSetParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (BerSetParser::*)()>(&BerSetParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerSetParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerTaggedObject
#include "Org/BouncyCastle/Asn1/DerTaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerTaggedObject.Encode
void Org::BouncyCastle::Asn1::DerTaggedObject::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerTaggedObject::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerTaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerTaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerTaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerTaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerTaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerTaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerTaggedObject::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerTaggedObject::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerTaggedObject::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerTaggedObject*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerTaggedObject
#include "Org/BouncyCastle/Asn1/BerTaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerTaggedObject.Encode
void Org::BouncyCastle::Asn1::BerTaggedObject::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerTaggedObject::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: BerTaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObject::*)(int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: BerTaggedObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObject::*)(bool, int, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&BerTaggedObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: BerTaggedObject::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObject::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&BerTaggedObject::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObject*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerTaggedObjectParser
#include "Org/BouncyCastle/Asn1/BerTaggedObjectParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerTaggedObjectParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::BerTaggedObjectParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::BerTaggedObjectParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BerTaggedObjectParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObjectParser::*)(bool, int, Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerTaggedObjectParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObjectParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BerTaggedObjectParser::*)(bool, int, Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&BerTaggedObjectParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObjectParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: BerTaggedObjectParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (BerTaggedObjectParser::*)()>(&BerTaggedObjectParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BerTaggedObjectParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Utilities.IO.BaseInputStream
#include "Org/BouncyCastle/Utilities/IO/BaseInputStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.get_CanRead
bool Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.get_CanSeek
bool Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.get_CanWrite
bool Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.Close
void Org::BouncyCastle::Utilities::IO::BaseInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.Flush
void Org::BouncyCastle::Utilities::IO::BaseInputStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.get_Length
int64_t Org::BouncyCastle::Utilities::IO::BaseInputStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.get_Position
int64_t Org::BouncyCastle::Utilities::IO::BaseInputStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.set_Position
void Org::BouncyCastle::Utilities::IO::BaseInputStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.Read
int Org::BouncyCastle::Utilities::IO::BaseInputStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.Seek
int64_t Org::BouncyCastle::Utilities::IO::BaseInputStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.SetLength
void Org::BouncyCastle::Utilities::IO::BaseInputStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IO.BaseInputStream.Write
void Org::BouncyCastle::Utilities::IO::BaseInputStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IO::BaseInputStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Writing MetadataGetter for method: BaseInputStream::get_CanRead
// Il2CppName: get_CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputStream::*)()>(&BaseInputStream::get_CanRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "get_CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::get_CanSeek
// Il2CppName: get_CanSeek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputStream::*)()>(&BaseInputStream::get_CanSeek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "get_CanSeek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::get_CanWrite
// Il2CppName: get_CanWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputStream::*)()>(&BaseInputStream::get_CanWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "get_CanWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)()>(&BaseInputStream::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)()>(&BaseInputStream::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (BaseInputStream::*)()>(&BaseInputStream::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (BaseInputStream::*)()>(&BaseInputStream::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputStream::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)(int64_t)>(&BaseInputStream::set_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: BaseInputStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseInputStream::*)(::Array<uint8_t>*, int, int)>(&BaseInputStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInputStream::Seek
// Il2CppName: Seek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (BaseInputStream::*)(int64_t, System::IO::SeekOrigin)>(&BaseInputStream::Seek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "Seek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IO::SeekOrigin>()});
  }
};
// Writing MetadataGetter for method: BaseInputStream::SetLength
// Il2CppName: SetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)(int64_t)>(&BaseInputStream::SetLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "SetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: BaseInputStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)(::Array<uint8_t>*, int, int)>(&BaseInputStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)()>(&BaseInputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputStream::*)()>(&BaseInputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.ConstructedOctetStream
#include "Org/BouncyCastle/Asn1/ConstructedOctetStream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1OctetStringParser
#include "Org/BouncyCastle/Asn1/Asn1OctetStringParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.ConstructedOctetStream.GetNextParser
Org::BouncyCastle::Asn1::Asn1OctetStringParser* Org::BouncyCastle::Asn1::ConstructedOctetStream::GetNextParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::ConstructedOctetStream::GetNextParser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextParser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1OctetStringParser*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.ConstructedOctetStream.Read
int Org::BouncyCastle::Asn1::ConstructedOctetStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::ConstructedOctetStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Org.BouncyCastle.Asn1.ConstructedOctetStream.ReadByte
int Org::BouncyCastle::Asn1::ConstructedOctetStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::ConstructedOctetStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ConstructedOctetStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConstructedOctetStream::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&ConstructedOctetStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructedOctetStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConstructedOctetStream::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&ConstructedOctetStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructedOctetStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: ConstructedOctetStream::GetNextParser
// Il2CppName: GetNextParser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1OctetStringParser* (ConstructedOctetStream::*)()>(&ConstructedOctetStream::GetNextParser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructedOctetStream*), "GetNextParser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConstructedOctetStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ConstructedOctetStream::*)(::Array<uint8_t>*, int, int)>(&ConstructedOctetStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructedOctetStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ConstructedOctetStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ConstructedOctetStream::*)()>(&ConstructedOctetStream::ReadByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstructedOctetStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.LimitedInputStream
#include "Org/BouncyCastle/Asn1/LimitedInputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.LimitedInputStream.get_Limit
int Org::BouncyCastle::Asn1::LimitedInputStream::get_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LimitedInputStream::get_Limit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LimitedInputStream.SetParentEofDetect
void Org::BouncyCastle::Asn1::LimitedInputStream::SetParentEofDetect(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LimitedInputStream::SetParentEofDetect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentEofDetect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Writing MetadataGetter for method: LimitedInputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LimitedInputStream::*)(System::IO::Stream*, int)>(&LimitedInputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LimitedInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LimitedInputStream::*)(System::IO::Stream*, int)>(&LimitedInputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LimitedInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LimitedInputStream::get_Limit
// Il2CppName: get_Limit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LimitedInputStream::*)()>(&LimitedInputStream::get_Limit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LimitedInputStream*), "get_Limit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LimitedInputStream::SetParentEofDetect
// Il2CppName: SetParentEofDetect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LimitedInputStream::*)(bool)>(&LimitedInputStream::SetParentEofDetect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LimitedInputStream*), "SetParentEofDetect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DefiniteLengthInputStream
#include "Org/BouncyCastle/Asn1/DefiniteLengthInputStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] EmptyBytes
::Array<uint8_t>* Org::BouncyCastle::Asn1::DefiniteLengthInputStream::_get_EmptyBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::_get_EmptyBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Asn1", "DefiniteLengthInputStream", "EmptyBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] EmptyBytes
void Org::BouncyCastle::Asn1::DefiniteLengthInputStream::_set_EmptyBytes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::_set_EmptyBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DefiniteLengthInputStream", "EmptyBytes", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream.get_Remaining
int Org::BouncyCastle::Asn1::DefiniteLengthInputStream::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::get_Remaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream.ReadAllIntoByteArray
void Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ReadAllIntoByteArray(::Array<uint8_t>* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ReadAllIntoByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAllIntoByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buf);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream.ToArray
::Array<uint8_t>* Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream.ReadByte
int Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream.Read
int Org::BouncyCastle::Asn1::DefiniteLengthInputStream::Read(::Array<uint8_t>* buf, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buf, off, len);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DefiniteLengthInputStream..cctor
void Org::BouncyCastle::Asn1::DefiniteLengthInputStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DefiniteLengthInputStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DefiniteLengthInputStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DefiniteLengthInputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefiniteLengthInputStream::*)(System::IO::Stream*, int, int)>(&DefiniteLengthInputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefiniteLengthInputStream::*)(System::IO::Stream*, int, int)>(&DefiniteLengthInputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::get_Remaining
// Il2CppName: get_Remaining
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DefiniteLengthInputStream::*)()>(&DefiniteLengthInputStream::get_Remaining)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), "get_Remaining", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::ReadAllIntoByteArray
// Il2CppName: ReadAllIntoByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefiniteLengthInputStream::*)(::Array<uint8_t>*)>(&DefiniteLengthInputStream::ReadAllIntoByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), "ReadAllIntoByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::ToArray
// Il2CppName: ToArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DefiniteLengthInputStream::*)()>(&DefiniteLengthInputStream::ToArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), "ToArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DefiniteLengthInputStream::*)()>(&DefiniteLengthInputStream::ReadByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DefiniteLengthInputStream::*)(::Array<uint8_t>*, int, int)>(&DefiniteLengthInputStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DefiniteLengthInputStream::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DefiniteLengthInputStream::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefiniteLengthInputStream*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerBmpString
#include "Org/BouncyCastle/Asn1/DerBmpString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerBmpString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerBmpString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBmpString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBmpString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerBmpString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBmpString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBmpString.Encode
void Org::BouncyCastle::Asn1::DerBmpString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBmpString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerBmpString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBmpString::*)(::Array<::Il2CppChar>*)>(&DerBmpString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBmpString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBmpString::*)(::Array<::Il2CppChar>*)>(&DerBmpString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBmpString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppChar>*>()});
  }
};
// Writing MetadataGetter for method: DerBmpString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerBmpString::*)()>(&DerBmpString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBmpString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerBmpString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerBmpString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerBmpString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBmpString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerBmpString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBmpString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerBmpString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBmpString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerBoolean
#include "Org/BouncyCastle/Asn1/DerBoolean.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1TaggedObject
#include "Org/BouncyCastle/Asn1/Asn1TaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerBoolean False
Org::BouncyCastle::Asn1::DerBoolean* Org::BouncyCastle::Asn1::DerBoolean::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerBoolean*>("Org.BouncyCastle.Asn1", "DerBoolean", "False"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerBoolean False
void Org::BouncyCastle::Asn1::DerBoolean::_set_False(Org::BouncyCastle::Asn1::DerBoolean* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerBoolean", "False", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Asn1.DerBoolean True
Org::BouncyCastle::Asn1::DerBoolean* Org::BouncyCastle::Asn1::DerBoolean::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Asn1::DerBoolean*>("Org.BouncyCastle.Asn1", "DerBoolean", "True"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Asn1.DerBoolean True
void Org::BouncyCastle::Asn1::DerBoolean::_set_True(Org::BouncyCastle::Asn1::DerBoolean* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerBoolean", "True", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.GetInstance
Org::BouncyCastle::Asn1::DerBoolean* Org::BouncyCastle::Asn1::DerBoolean::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBoolean", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBoolean*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.GetInstance
Org::BouncyCastle::Asn1::DerBoolean* Org::BouncyCastle::Asn1::DerBoolean::GetInstance(Org::BouncyCastle::Asn1::Asn1TaggedObject* obj, bool isExplicit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBoolean", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isExplicit)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBoolean*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, isExplicit);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.get_IsTrue
bool Org::BouncyCastle::Asn1::DerBoolean::get_IsTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::get_IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.FromOctetString
Org::BouncyCastle::Asn1::DerBoolean* Org::BouncyCastle::Asn1::DerBoolean::FromOctetString(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::FromOctetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBoolean", "FromOctetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerBoolean*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean..cctor
void Org::BouncyCastle::Asn1::DerBoolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerBoolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.Encode
void Org::BouncyCastle::Asn1::DerBoolean::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.Asn1Equals
bool Org::BouncyCastle::Asn1::DerBoolean::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerBoolean::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerBoolean.ToString
::Il2CppString* Org::BouncyCastle::Asn1::DerBoolean::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerBoolean::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerBoolean::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerBoolean* (*)(::Il2CppObject*)>(&DerBoolean::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerBoolean* (*)(Org::BouncyCastle::Asn1::Asn1TaggedObject*, bool)>(&DerBoolean::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1TaggedObject*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBoolean::*)(::Array<uint8_t>*)>(&DerBoolean::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBoolean::*)(::Array<uint8_t>*)>(&DerBoolean::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBoolean::*)(bool)>(&DerBoolean::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBoolean::*)(bool)>(&DerBoolean::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::get_IsTrue
// Il2CppName: get_IsTrue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerBoolean::*)()>(&DerBoolean::get_IsTrue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "get_IsTrue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerBoolean::FromOctetString
// Il2CppName: FromOctetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerBoolean* (*)(::Array<uint8_t>*)>(&DerBoolean::FromOctetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "FromOctetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DerBoolean::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerBoolean::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerBoolean::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerBoolean::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerBoolean::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerBoolean::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerBoolean::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerBoolean::*)()>(&DerBoolean::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerBoolean::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerBoolean::*)()>(&DerBoolean::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerBoolean*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerExternal
#include "Org/BouncyCastle/Asn1/DerExternal.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Asn1.DerInteger
#include "Org/BouncyCastle/Asn1/DerInteger.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1EncodableVector
#include "Org/BouncyCastle/Asn1/Asn1EncodableVector.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.get_DataValueDescriptor
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerExternal::get_DataValueDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::get_DataValueDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataValueDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.get_DirectReference
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Asn1::DerExternal::get_DirectReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::get_DirectReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DirectReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerObjectIdentifier*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.get_Encoding
int Org::BouncyCastle::Asn1::DerExternal::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.set_Encoding
void Org::BouncyCastle::Asn1::DerExternal::set_Encoding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::set_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.get_ExternalContent
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerExternal::get_ExternalContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::get_ExternalContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExternalContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.get_IndirectReference
Org::BouncyCastle::Asn1::DerInteger* Org::BouncyCastle::Asn1::DerExternal::get_IndirectReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::get_IndirectReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndirectReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerInteger*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.GetObjFromVector
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerExternal::GetObjFromVector(Org::BouncyCastle::Asn1::Asn1EncodableVector* v, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::GetObjFromVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerExternal", "GetObjFromVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.WriteEncodable
void Org::BouncyCastle::Asn1::DerExternal::WriteEncodable(System::IO::MemoryStream* ms, Org::BouncyCastle::Asn1::Asn1Encodable* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::WriteEncodable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerExternal", "WriteEncodable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ms, e);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.Encode
void Org::BouncyCastle::Asn1::DerExternal::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerExternal::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternal.Asn1Equals
bool Org::BouncyCastle::Asn1::DerExternal::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternal::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerExternal::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternal::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerExternal::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternal::*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*)>(&DerExternal::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>()});
  }
};
// Writing MetadataGetter for method: DerExternal::get_DataValueDescriptor
// Il2CppName: get_DataValueDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerExternal::*)()>(&DerExternal::get_DataValueDescriptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "get_DataValueDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::get_DirectReference
// Il2CppName: get_DirectReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerObjectIdentifier* (DerExternal::*)()>(&DerExternal::get_DirectReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "get_DirectReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerExternal::*)()>(&DerExternal::get_Encoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::set_Encoding
// Il2CppName: set_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternal::*)(int)>(&DerExternal::set_Encoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "set_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerExternal::get_ExternalContent
// Il2CppName: get_ExternalContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerExternal::*)()>(&DerExternal::get_ExternalContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "get_ExternalContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::get_IndirectReference
// Il2CppName: get_IndirectReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerInteger* (DerExternal::*)()>(&DerExternal::get_IndirectReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "get_IndirectReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::GetObjFromVector
// Il2CppName: GetObjFromVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (*)(Org::BouncyCastle::Asn1::Asn1EncodableVector*, int)>(&DerExternal::GetObjFromVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "GetObjFromVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1EncodableVector*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerExternal::WriteEncodable
// Il2CppName: WriteEncodable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IO::MemoryStream*, Org::BouncyCastle::Asn1::Asn1Encodable*)>(&DerExternal::WriteEncodable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "WriteEncodable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::MemoryStream*>(), ::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Encodable*>()});
  }
};
// Writing MetadataGetter for method: DerExternal::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternal::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerExternal::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerExternal::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerExternal::*)()>(&DerExternal::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerExternal::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerExternal::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerExternal::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternal*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerExternalParser
#include "Org/BouncyCastle/Asn1/DerExternalParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerExternalParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerExternalParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerExternalParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerExternalParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternalParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerExternalParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternalParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerExternalParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerExternalParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternalParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: DerExternalParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerExternalParser::*)()>(&DerExternalParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerExternalParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerGeneralizedTime
#include "Org/BouncyCastle/Asn1/DerGeneralizedTime.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance
Org::BouncyCastle::Asn1::DerGeneralizedTime* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetInstance(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerGeneralizedTime", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerGeneralizedTime*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetTime
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.CalculateGmtOffset
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::CalculateGmtOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::CalculateGmtOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateGmtOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Convert
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::Convert(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerGeneralizedTime", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.ToDateTime
System::DateTime Org::BouncyCastle::Asn1::DerGeneralizedTime::ToDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.FString
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::FString(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::FString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, count);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.ParseDateString
System::DateTime Org::BouncyCastle::Asn1::DerGeneralizedTime::ParseDateString(::Il2CppString* s, ::Il2CppString* format, bool makeUniversal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::ParseDateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(makeUniversal)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, s, format, makeUniversal);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.get_HasFractionalSeconds
bool Org::BouncyCastle::Asn1::DerGeneralizedTime::get_HasFractionalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::get_HasFractionalSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasFractionalSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Encode
void Org::BouncyCastle::Asn1::DerGeneralizedTime::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Asn1Equals
bool Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerGeneralizedTime::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerGeneralizedTime* (*)(::Il2CppObject*)>(&DerGeneralizedTime::GetInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralizedTime::*)(::Array<uint8_t>*)>(&DerGeneralizedTime::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralizedTime::*)(::Array<uint8_t>*)>(&DerGeneralizedTime::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::GetTime
// Il2CppName: GetTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerGeneralizedTime::*)()>(&DerGeneralizedTime::GetTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "GetTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::CalculateGmtOffset
// Il2CppName: CalculateGmtOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerGeneralizedTime::*)()>(&DerGeneralizedTime::CalculateGmtOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "CalculateGmtOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&DerGeneralizedTime::Convert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::ToDateTime
// Il2CppName: ToDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (DerGeneralizedTime::*)()>(&DerGeneralizedTime::ToDateTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "ToDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::FString
// Il2CppName: FString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerGeneralizedTime::*)(int)>(&DerGeneralizedTime::FString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "FString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::ParseDateString
// Il2CppName: ParseDateString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (DerGeneralizedTime::*)(::Il2CppString*, ::Il2CppString*, bool)>(&DerGeneralizedTime::ParseDateString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "ParseDateString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::get_HasFractionalSeconds
// Il2CppName: get_HasFractionalSeconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerGeneralizedTime::*)()>(&DerGeneralizedTime::get_HasFractionalSeconds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "get_HasFractionalSeconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerGeneralizedTime::*)()>(&DerGeneralizedTime::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralizedTime::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerGeneralizedTime::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerGeneralizedTime::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerGeneralizedTime::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralizedTime::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerGeneralizedTime::*)()>(&DerGeneralizedTime::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralizedTime*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerGeneralString
#include "Org/BouncyCastle/Asn1/DerGeneralString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerGeneralString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralString::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralString.Encode
void Org::BouncyCastle::Asn1::DerGeneralString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerGeneralString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGeneralString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerGeneralString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralString::*)(::Array<uint8_t>*)>(&DerGeneralString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralString::*)(::Array<uint8_t>*)>(&DerGeneralString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralString::*)(::Il2CppString*)>(&DerGeneralString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralString::*)(::Il2CppString*)>(&DerGeneralString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralString::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerGeneralString::*)()>(&DerGeneralString::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerGeneralString::*)()>(&DerGeneralString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGeneralString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGeneralString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerGeneralString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerGeneralString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerGeneralString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerGeneralString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGeneralString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerGraphicString
#include "Org/BouncyCastle/Asn1/DerGraphicString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerGraphicString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerGraphicString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGraphicString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGraphicString.Encode
void Org::BouncyCastle::Asn1::DerGraphicString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGraphicString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGraphicString.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerGraphicString::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGraphicString::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGraphicString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerGraphicString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerGraphicString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerGraphicString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGraphicString::*)(::Array<uint8_t>*)>(&DerGraphicString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGraphicString::*)(::Array<uint8_t>*)>(&DerGraphicString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerGraphicString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerGraphicString::*)()>(&DerGraphicString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGraphicString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerGraphicString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerGraphicString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerGraphicString::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerGraphicString::*)()>(&DerGraphicString::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerGraphicString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerGraphicString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerGraphicString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerGraphicString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerNumericString
#include "Org/BouncyCastle/Asn1/DerNumericString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerNumericString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerNumericString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNumericString::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNumericString.IsNumericString
bool Org::BouncyCastle::Asn1::DerNumericString::IsNumericString(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNumericString::IsNumericString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerNumericString", "IsNumericString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNumericString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerNumericString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNumericString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNumericString.Encode
void Org::BouncyCastle::Asn1::DerNumericString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNumericString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerNumericString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerNumericString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerNumericString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerNumericString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNumericString::*)(::Array<uint8_t>*)>(&DerNumericString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNumericString::*)(::Array<uint8_t>*)>(&DerNumericString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerNumericString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNumericString::*)(::Il2CppString*, bool)>(&DerNumericString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNumericString::*)(::Il2CppString*, bool)>(&DerNumericString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerNumericString::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerNumericString::*)()>(&DerNumericString::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerNumericString::IsNumericString
// Il2CppName: IsNumericString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&DerNumericString::IsNumericString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), "IsNumericString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerNumericString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerNumericString::*)()>(&DerNumericString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerNumericString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerNumericString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerNumericString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerNumericString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerNumericString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerNumericString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerNumericString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerOctetStringParser
#include "Org/BouncyCastle/Asn1/DerOctetStringParser.hpp"
// Including type: Org.BouncyCastle.Asn1.DefiniteLengthInputStream
#include "Org/BouncyCastle/Asn1/DefiniteLengthInputStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerOctetStringParser.GetOctetStream
System::IO::Stream* Org::BouncyCastle::Asn1::DerOctetStringParser::GetOctetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOctetStringParser::GetOctetStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerOctetStringParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerOctetStringParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerOctetStringParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerOctetStringParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetStringParser::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&DerOctetStringParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetStringParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerOctetStringParser::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&DerOctetStringParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetStringParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: DerOctetStringParser::GetOctetStream
// Il2CppName: GetOctetStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::Stream* (DerOctetStringParser::*)()>(&DerOctetStringParser::GetOctetStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetStringParser*), "GetOctetStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerOctetStringParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerOctetStringParser::*)()>(&DerOctetStringParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerOctetStringParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerPrintableString
#include "Org/BouncyCastle/Asn1/DerPrintableString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerPrintableString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerPrintableString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerPrintableString::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerPrintableString.IsPrintableString
bool Org::BouncyCastle::Asn1::DerPrintableString::IsPrintableString(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerPrintableString::IsPrintableString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerPrintableString", "IsPrintableString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerPrintableString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerPrintableString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerPrintableString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerPrintableString.Encode
void Org::BouncyCastle::Asn1::DerPrintableString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerPrintableString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerPrintableString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerPrintableString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerPrintableString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerPrintableString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerPrintableString::*)(::Array<uint8_t>*)>(&DerPrintableString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerPrintableString::*)(::Array<uint8_t>*)>(&DerPrintableString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerPrintableString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerPrintableString::*)(::Il2CppString*, bool)>(&DerPrintableString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerPrintableString::*)(::Il2CppString*, bool)>(&DerPrintableString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DerPrintableString::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerPrintableString::*)()>(&DerPrintableString::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerPrintableString::IsPrintableString
// Il2CppName: IsPrintableString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&DerPrintableString::IsPrintableString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), "IsPrintableString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerPrintableString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerPrintableString::*)()>(&DerPrintableString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerPrintableString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerPrintableString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerPrintableString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerPrintableString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerPrintableString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerPrintableString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerPrintableString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerSequenceParser
#include "Org/BouncyCastle/Asn1/DerSequenceParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerSequenceParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerSequenceParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSequenceParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerSequenceParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequenceParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerSequenceParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequenceParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSequenceParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerSequenceParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequenceParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: DerSequenceParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerSequenceParser::*)()>(&DerSequenceParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSequenceParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.DerSetParser
#include "Org/BouncyCastle/Asn1/DerSetParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1StreamParser
#include "Org/BouncyCastle/Asn1/Asn1StreamParser.hpp"
// Including type: Org.BouncyCastle.Asn1.Asn1Object
#include "Org/BouncyCastle/Asn1/Asn1Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerSetParser.ToAsn1Object
Org::BouncyCastle::Asn1::Asn1Object* Org::BouncyCastle::Asn1::DerSetParser::ToAsn1Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerSetParser::ToAsn1Object");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAsn1Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Object*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerSetParser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSetParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerSetParser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSetParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerSetParser::*)(Org::BouncyCastle::Asn1::Asn1StreamParser*)>(&DerSetParser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSetParser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1StreamParser*>()});
  }
};
// Writing MetadataGetter for method: DerSetParser::ToAsn1Object
// Il2CppName: ToAsn1Object
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Object* (DerSetParser::*)()>(&DerSetParser::ToAsn1Object)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerSetParser*), "ToAsn1Object", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerT61String
#include "Org/BouncyCastle/Asn1/DerT61String.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerT61String.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerT61String::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerT61String::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerT61String.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerT61String::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerT61String::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerT61String.Encode
void Org::BouncyCastle::Asn1::DerT61String::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerT61String::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerT61String.Asn1Equals
bool Org::BouncyCastle::Asn1::DerT61String::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerT61String::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerT61String::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerT61String::*)(::Array<uint8_t>*)>(&DerT61String::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerT61String::*)(::Array<uint8_t>*)>(&DerT61String::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerT61String::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerT61String::*)(::Il2CppString*)>(&DerT61String::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerT61String::*)(::Il2CppString*)>(&DerT61String::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerT61String::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerT61String::*)()>(&DerT61String::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerT61String::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerT61String::*)()>(&DerT61String::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerT61String::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerT61String::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerT61String::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerT61String::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerT61String::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerT61String::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerT61String*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerUniversalString
#include "Org/BouncyCastle/Asn1/DerUniversalString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] table
::Array<::Il2CppChar>* Org::BouncyCastle::Asn1::DerUniversalString::_get_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::_get_table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("Org.BouncyCastle.Asn1", "DerUniversalString", "table"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] table
void Org::BouncyCastle::Asn1::DerUniversalString::_set_table(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::_set_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Asn1", "DerUniversalString", "table", value));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUniversalString..cctor
void Org::BouncyCastle::Asn1::DerUniversalString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Asn1", "DerUniversalString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUniversalString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerUniversalString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUniversalString.Encode
void Org::BouncyCastle::Asn1::DerUniversalString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUniversalString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerUniversalString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUniversalString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerUniversalString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUniversalString::*)(::Array<uint8_t>*)>(&DerUniversalString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUniversalString::*)(::Array<uint8_t>*)>(&DerUniversalString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerUniversalString::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DerUniversalString::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUniversalString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerUniversalString::*)()>(&DerUniversalString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUniversalString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUniversalString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerUniversalString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerUniversalString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerUniversalString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerUniversalString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUniversalString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerUtcTime
#include "Org/BouncyCastle/Asn1/DerUtcTime.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.ToAdjustedDateTime
System::DateTime Org::BouncyCastle::Asn1::DerUtcTime::ToAdjustedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::ToAdjustedDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToAdjustedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.ParseDateString
System::DateTime Org::BouncyCastle::Asn1::DerUtcTime::ParseDateString(::Il2CppString* dateStr, ::Il2CppString* formatStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::ParseDateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStr), ::il2cpp_utils::ExtractType(formatStr)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, dateStr, formatStr);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.get_TimeString
::Il2CppString* Org::BouncyCastle::Asn1::DerUtcTime::get_TimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::get_TimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.get_AdjustedTimeString
::Il2CppString* Org::BouncyCastle::Asn1::DerUtcTime::get_AdjustedTimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::get_AdjustedTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdjustedTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerUtcTime::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.Encode
void Org::BouncyCastle::Asn1::DerUtcTime::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.Asn1Equals
bool Org::BouncyCastle::Asn1::DerUtcTime::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerUtcTime::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtcTime.ToString
::Il2CppString* Org::BouncyCastle::Asn1::DerUtcTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtcTime::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerUtcTime::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtcTime::*)(::Array<uint8_t>*)>(&DerUtcTime::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtcTime::*)(::Array<uint8_t>*)>(&DerUtcTime::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerUtcTime::ToAdjustedDateTime
// Il2CppName: ToAdjustedDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (DerUtcTime::*)()>(&DerUtcTime::ToAdjustedDateTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "ToAdjustedDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtcTime::ParseDateString
// Il2CppName: ParseDateString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (DerUtcTime::*)(::Il2CppString*, ::Il2CppString*)>(&DerUtcTime::ParseDateString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "ParseDateString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerUtcTime::get_TimeString
// Il2CppName: get_TimeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerUtcTime::*)()>(&DerUtcTime::get_TimeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "get_TimeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtcTime::get_AdjustedTimeString
// Il2CppName: get_AdjustedTimeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerUtcTime::*)()>(&DerUtcTime::get_AdjustedTimeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "get_AdjustedTimeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtcTime::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerUtcTime::*)()>(&DerUtcTime::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtcTime::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtcTime::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerUtcTime::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerUtcTime::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerUtcTime::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerUtcTime::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerUtcTime::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerUtcTime::*)()>(&DerUtcTime::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtcTime::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerUtcTime::*)()>(&DerUtcTime::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtcTime*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerUtf8String
#include "Org/BouncyCastle/Asn1/DerUtf8String.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtf8String.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerUtf8String::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtf8String::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtf8String.Asn1Equals
bool Org::BouncyCastle::Asn1::DerUtf8String::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtf8String::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerUtf8String.Encode
void Org::BouncyCastle::Asn1::DerUtf8String::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerUtf8String::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: DerUtf8String::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtf8String::*)(::Array<uint8_t>*)>(&DerUtf8String::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtf8String::*)(::Array<uint8_t>*)>(&DerUtf8String::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerUtf8String::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtf8String::*)(::Il2CppString*)>(&DerUtf8String::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtf8String::*)(::Il2CppString*)>(&DerUtf8String::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerUtf8String::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerUtf8String::*)()>(&DerUtf8String::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerUtf8String::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerUtf8String::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerUtf8String::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerUtf8String::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerUtf8String::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerUtf8String::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerUtf8String*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerVideotexString
#include "Org/BouncyCastle/Asn1/DerVideotexString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerVideotexString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerVideotexString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVideotexString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVideotexString.Encode
void Org::BouncyCastle::Asn1::DerVideotexString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVideotexString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVideotexString.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerVideotexString::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVideotexString::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVideotexString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerVideotexString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVideotexString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Writing MetadataGetter for method: DerVideotexString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVideotexString::*)(::Array<uint8_t>*)>(&DerVideotexString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVideotexString::*)(::Array<uint8_t>*)>(&DerVideotexString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerVideotexString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerVideotexString::*)()>(&DerVideotexString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerVideotexString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVideotexString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerVideotexString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerVideotexString::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerVideotexString::*)()>(&DerVideotexString::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerVideotexString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerVideotexString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerVideotexString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVideotexString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerVisibleString
#include "Org/BouncyCastle/Asn1/DerVisibleString.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerVisibleString.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerVisibleString::GetOctets() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVisibleString::GetOctets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOctets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVisibleString.GetString
::Il2CppString* Org::BouncyCastle::Asn1::DerVisibleString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVisibleString::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVisibleString.Encode
void Org::BouncyCastle::Asn1::DerVisibleString::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVisibleString::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVisibleString.Asn1Equals
bool Org::BouncyCastle::Asn1::DerVisibleString::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVisibleString::Asn1Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1Object)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asn1Object);
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerVisibleString.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerVisibleString::Asn1GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::DerVisibleString::Asn1GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Asn1GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DerVisibleString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVisibleString::*)(::Array<uint8_t>*)>(&DerVisibleString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVisibleString::*)(::Array<uint8_t>*)>(&DerVisibleString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DerVisibleString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVisibleString::*)(::Il2CppString*)>(&DerVisibleString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVisibleString::*)(::Il2CppString*)>(&DerVisibleString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DerVisibleString::GetOctets
// Il2CppName: GetOctets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (DerVisibleString::*)()>(&DerVisibleString::GetOctets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), "GetOctets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerVisibleString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (DerVisibleString::*)()>(&DerVisibleString::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DerVisibleString::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DerVisibleString::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&DerVisibleString::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Writing MetadataGetter for method: DerVisibleString::Asn1Equals
// Il2CppName: Asn1Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DerVisibleString::*)(Org::BouncyCastle::Asn1::Asn1Object*)>(&DerVisibleString::Asn1Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), "Asn1Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::Asn1Object*>()});
  }
};
// Writing MetadataGetter for method: DerVisibleString::Asn1GetHashCode
// Il2CppName: Asn1GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DerVisibleString::*)()>(&DerVisibleString::Asn1GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DerVisibleString*), "Asn1GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream
#include "Org/BouncyCastle/Asn1/IndefiniteLengthInputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream.SetEofOn00
void Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::SetEofOn00(bool eofOn00) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::SetEofOn00");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEofOn00", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eofOn00)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eofOn00);
}
// Autogenerated method: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream.CheckForEof
bool Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::CheckForEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::CheckForEof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream.RequireByte
int Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::RequireByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::RequireByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream.Read
int Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Org.BouncyCastle.Asn1.IndefiniteLengthInputStream.ReadByte
int Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::IndefiniteLengthInputStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IndefiniteLengthInputStream::SetEofOn00
// Il2CppName: SetEofOn00
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IndefiniteLengthInputStream::*)(bool)>(&IndefiniteLengthInputStream::SetEofOn00)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), "SetEofOn00", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IndefiniteLengthInputStream::CheckForEof
// Il2CppName: CheckForEof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IndefiniteLengthInputStream::*)()>(&IndefiniteLengthInputStream::CheckForEof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), "CheckForEof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IndefiniteLengthInputStream::RequireByte
// Il2CppName: RequireByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IndefiniteLengthInputStream::*)()>(&IndefiniteLengthInputStream::RequireByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), "RequireByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IndefiniteLengthInputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IndefiniteLengthInputStream::*)(System::IO::Stream*, int)>(&IndefiniteLengthInputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IndefiniteLengthInputStream::*)(System::IO::Stream*, int)>(&IndefiniteLengthInputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IndefiniteLengthInputStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IndefiniteLengthInputStream::*)(::Array<uint8_t>*, int, int)>(&IndefiniteLengthInputStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IndefiniteLengthInputStream::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IndefiniteLengthInputStream::*)()>(&IndefiniteLengthInputStream::ReadByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IndefiniteLengthInputStream*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.LazyAsn1InputStream
#include "Org/BouncyCastle/Asn1/LazyAsn1InputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.DerSequence
#include "Org/BouncyCastle/Asn1/DerSequence.hpp"
// Including type: Org.BouncyCastle.Asn1.DefiniteLengthInputStream
#include "Org/BouncyCastle/Asn1/DefiniteLengthInputStream.hpp"
// Including type: Org.BouncyCastle.Asn1.DerSet
#include "Org/BouncyCastle/Asn1/DerSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.LazyAsn1InputStream.CreateDerSequence
Org::BouncyCastle::Asn1::DerSequence* Org::BouncyCastle::Asn1::LazyAsn1InputStream::CreateDerSequence(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyAsn1InputStream::CreateDerSequence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDerSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSequence*, false>(this, ___internal__method, dIn);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyAsn1InputStream.CreateDerSet
Org::BouncyCastle::Asn1::DerSet* Org::BouncyCastle::Asn1::LazyAsn1InputStream::CreateDerSet(Org::BouncyCastle::Asn1::DefiniteLengthInputStream* dIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyAsn1InputStream::CreateDerSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDerSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dIn)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::DerSet*, false>(this, ___internal__method, dIn);
}
// Writing MetadataGetter for method: LazyAsn1InputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyAsn1InputStream::*)(::Array<uint8_t>*)>(&LazyAsn1InputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyAsn1InputStream::*)(::Array<uint8_t>*)>(&LazyAsn1InputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: LazyAsn1InputStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyAsn1InputStream::*)(System::IO::Stream*)>(&LazyAsn1InputStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyAsn1InputStream::*)(System::IO::Stream*)>(&LazyAsn1InputStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: LazyAsn1InputStream::CreateDerSequence
// Il2CppName: CreateDerSequence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSequence* (LazyAsn1InputStream::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&LazyAsn1InputStream::CreateDerSequence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), "CreateDerSequence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Writing MetadataGetter for method: LazyAsn1InputStream::CreateDerSet
// Il2CppName: CreateDerSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::DerSet* (LazyAsn1InputStream::*)(Org::BouncyCastle::Asn1::DefiniteLengthInputStream*)>(&LazyAsn1InputStream::CreateDerSet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyAsn1InputStream*), "CreateDerSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DefiniteLengthInputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.LazyDerSequence
#include "Org/BouncyCastle/Asn1/LazyDerSequence.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSequence.Parse
void Org::BouncyCastle::Asn1::LazyDerSequence::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSequence::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSequence.get_Item
Org::BouncyCastle::Asn1::Asn1Encodable* Org::BouncyCastle::Asn1::LazyDerSequence::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSequence::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Encodable*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSequence.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::LazyDerSequence::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSequence::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSequence.get_Count
int Org::BouncyCastle::Asn1::LazyDerSequence::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSequence::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSequence.Encode
void Org::BouncyCastle::Asn1::LazyDerSequence::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSequence::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: LazyDerSequence::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSequence::*)(::Array<uint8_t>*)>(&LazyDerSequence::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSequence::*)(::Array<uint8_t>*)>(&LazyDerSequence::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: LazyDerSequence::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSequence::*)()>(&LazyDerSequence::Parse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSequence::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Encodable* (LazyDerSequence::*)(int)>(&LazyDerSequence::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LazyDerSequence::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (LazyDerSequence::*)()>(&LazyDerSequence::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSequence::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LazyDerSequence::*)()>(&LazyDerSequence::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSequence::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSequence::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&LazyDerSequence::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSequence*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.LazyDerSet
#include "Org/BouncyCastle/Asn1/LazyDerSet.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSet.Parse
void Org::BouncyCastle::Asn1::LazyDerSet::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSet::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSet.get_Item
Org::BouncyCastle::Asn1::Asn1Encodable* Org::BouncyCastle::Asn1::LazyDerSet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSet::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Asn1::Asn1Encodable*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSet.GetEnumerator
System::Collections::IEnumerator* Org::BouncyCastle::Asn1::LazyDerSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSet.get_Count
int Org::BouncyCastle::Asn1::LazyDerSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSet::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LazyDerSet.Encode
void Org::BouncyCastle::Asn1::LazyDerSet::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::LazyDerSet::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
// Writing MetadataGetter for method: LazyDerSet::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSet::*)(::Array<uint8_t>*)>(&LazyDerSet::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSet::*)(::Array<uint8_t>*)>(&LazyDerSet::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: LazyDerSet::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSet::*)()>(&LazyDerSet::Parse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSet::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Asn1::Asn1Encodable* (LazyDerSet::*)(int)>(&LazyDerSet::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LazyDerSet::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (LazyDerSet::*)()>(&LazyDerSet::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSet::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LazyDerSet::*)()>(&LazyDerSet::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LazyDerSet::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LazyDerSet::*)(Org::BouncyCastle::Asn1::DerOutputStream*)>(&LazyDerSet::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LazyDerSet*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Asn1::DerOutputStream*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.OidTokenizer
#include "Org/BouncyCastle/Asn1/OidTokenizer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.OidTokenizer.get_HasMoreTokens
bool Org::BouncyCastle::Asn1::OidTokenizer::get_HasMoreTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::OidTokenizer::get_HasMoreTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasMoreTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.OidTokenizer.NextToken
::Il2CppString* Org::BouncyCastle::Asn1::OidTokenizer::NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Asn1::OidTokenizer::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: OidTokenizer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OidTokenizer::*)(::Il2CppString*)>(&OidTokenizer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OidTokenizer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OidTokenizer::*)(::Il2CppString*)>(&OidTokenizer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OidTokenizer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OidTokenizer::get_HasMoreTokens
// Il2CppName: get_HasMoreTokens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (OidTokenizer::*)()>(&OidTokenizer::get_HasMoreTokens)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OidTokenizer*), "get_HasMoreTokens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OidTokenizer::NextToken
// Il2CppName: NextToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OidTokenizer::*)()>(&OidTokenizer::NextToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OidTokenizer*), "NextToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IDerivationFunction
#include "Org/BouncyCastle/Crypto/IDerivationFunction.hpp"
// Including type: Org.BouncyCastle.Crypto.IDerivationParameters
#include "Org/BouncyCastle/Crypto/IDerivationParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IDerivationFunction.Init
void Org::BouncyCastle::Crypto::IDerivationFunction::Init(Org::BouncyCastle::Crypto::IDerivationParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDerivationFunction::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDerivationFunction.GenerateBytes
int Org::BouncyCastle::Crypto::IDerivationFunction::GenerateBytes(::Array<uint8_t>* output, int outOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDerivationFunction::GenerateBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff, length);
}
// Writing MetadataGetter for method: IDerivationFunction::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDerivationFunction::*)(Org::BouncyCastle::Crypto::IDerivationParameters*)>(&IDerivationFunction::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDerivationFunction*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::IDerivationParameters*>()});
  }
};
// Writing MetadataGetter for method: IDerivationFunction::GenerateBytes
// Il2CppName: GenerateBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IDerivationFunction::*)(::Array<uint8_t>*, int, int)>(&IDerivationFunction::GenerateBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDerivationFunction*), "GenerateBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.IBasicAgreement
#include "Org/BouncyCastle/Crypto/IBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IBasicAgreement.Init
void Org::BouncyCastle::Crypto::IBasicAgreement::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBasicAgreement::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize
int Org::BouncyCastle::Crypto::IBasicAgreement::GetFieldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBasicAgreement::GetFieldSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::IBasicAgreement::CalculateAgreement(Org::BouncyCastle::Crypto::ICipherParameters* pubKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IBasicAgreement::CalculateAgreement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateAgreement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pubKey)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, pubKey);
}
// Writing MetadataGetter for method: IBasicAgreement::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&IBasicAgreement::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBasicAgreement*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: IBasicAgreement::GetFieldSize
// Il2CppName: GetFieldSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IBasicAgreement::*)()>(&IBasicAgreement::GetFieldSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBasicAgreement*), "GetFieldSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IBasicAgreement::CalculateAgreement
// Il2CppName: CalculateAgreement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (IBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&IBasicAgreement::CalculateAgreement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBasicAgreement*), "CalculateAgreement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/DHBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHPrivateKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement.Init
void Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement.GetFieldSize
int Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::GetFieldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::GetFieldSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement.CalculateAgreement
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::CalculateAgreement(Org::BouncyCastle::Crypto::ICipherParameters* pubKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement::CalculateAgreement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateAgreement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pubKey)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, pubKey);
}
// Writing MetadataGetter for method: DHBasicAgreement::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&DHBasicAgreement::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicAgreement*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: DHBasicAgreement::GetFieldSize
// Il2CppName: GetFieldSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DHBasicAgreement::*)()>(&DHBasicAgreement::GetFieldSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicAgreement*), "GetFieldSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DHBasicAgreement::CalculateAgreement
// Il2CppName: CalculateAgreement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (DHBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&DHBasicAgreement::CalculateAgreement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicAgreement*), "CalculateAgreement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: DHBasicAgreement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicAgreement::*)()>(&DHBasicAgreement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicAgreement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DHBasicAgreement::*)()>(&DHBasicAgreement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHBasicAgreement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Agreement.DHStandardGroups
#include "Org/BouncyCastle/Crypto/Agreement/DHStandardGroups.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Math.BigInteger Two
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Math::BigInteger*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "Two"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Math.BigInteger Two
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_Two(Org::BouncyCastle::Math::BigInteger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "Two", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc2409_768_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_768_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_768_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_768_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc2409_768_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_768_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_768_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_768_p", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc2409_768
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_768() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_768");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_768"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc2409_768
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_768(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_768");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_768", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc2409_1024_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_1024_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_1024_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_1024_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc2409_1024_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_1024_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_1024_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_1024_p", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc2409_1024
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_1024() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc2409_1024");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_1024"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc2409_1024
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_1024(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc2409_1024");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc2409_1024", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_1536_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_1536_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_1536_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_1536_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_1536
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_1536");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_1536
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_1536");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_1536", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_2048_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_2048_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_2048_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_2048_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_2048
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_2048");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_2048
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_2048");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_2048", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_3072_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_3072_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_3072_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_3072_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_3072
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_3072");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_3072
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_3072");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_3072", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_4096_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_4096_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_4096_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_4096_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_4096
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_4096");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_4096
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_4096");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_4096", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_6144_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_6144_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_6144_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_6144_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_6144
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_6144");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_6144
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_6144");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_6144", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc3526_8192_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc3526_8192_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc3526_8192_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc3526_8192_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_8192
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc3526_8192");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc3526_8192
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc3526_8192");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc3526_8192", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc4306_768
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc4306_768() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc4306_768");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc4306_768"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc4306_768
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc4306_768(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc4306_768");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc4306_768", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc4306_1024
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc4306_1024() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc4306_1024");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc4306_1024"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc4306_1024
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc4306_1024(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc4306_1024");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc4306_1024", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc5996_768
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc5996_768() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc5996_768");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc5996_768"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc5996_768
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc5996_768(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc5996_768");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc5996_768", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc5996_1024
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc5996_1024() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc5996_1024");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc5996_1024"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc5996_1024
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc5996_1024(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc5996_1024");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc5996_1024", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc7919_ffdhe2048_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc7919_ffdhe2048_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc7919_ffdhe2048_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc7919_ffdhe2048_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe2048
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe2048");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe2048
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe2048");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe2048", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc7919_ffdhe3072_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc7919_ffdhe3072_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc7919_ffdhe3072_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc7919_ffdhe3072_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe3072
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe3072");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe3072
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe3072");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe3072", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc7919_ffdhe4096_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc7919_ffdhe4096_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc7919_ffdhe4096_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc7919_ffdhe4096_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe4096
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe4096");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe4096
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe4096");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe4096", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc7919_ffdhe6144_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc7919_ffdhe6144_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc7919_ffdhe6144_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc7919_ffdhe6144_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe6144
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe6144");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe6144
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe6144");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe6144", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String rfc7919_ffdhe8192_p
::Il2CppString* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192_p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String rfc7919_ffdhe8192_p
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192_p(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192_p", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 rfc7919_ffdhe8192_l
int Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192_l");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192_l"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 rfc7919_ffdhe8192_l
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192_l(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192_l");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192_l", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe8192
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_get_rfc7919_ffdhe8192");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Org::BouncyCastle::Crypto::Parameters::DHParameters*>("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192"));
}
// Autogenerated static field setter
// Set static field: static public readonly Org.BouncyCastle.Crypto.Parameters.DHParameters rfc7919_ffdhe8192
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192(Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_set_rfc7919_ffdhe8192");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "rfc7919_ffdhe8192", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHStandardGroups.FromHex
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::FromHex(::Il2CppString* hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHStandardGroups.SafePrimeGen2
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::SafePrimeGen2(::Il2CppString* hexP) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::SafePrimeGen2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "SafePrimeGen2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexP)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::DHParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hexP);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHStandardGroups.SafePrimeGen2
Org::BouncyCastle::Crypto::Parameters::DHParameters* Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::SafePrimeGen2(::Il2CppString* hexP, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::SafePrimeGen2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", "SafePrimeGen2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexP), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::DHParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hexP, l);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.DHStandardGroups..cctor
void Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::DHStandardGroups::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Agreement", "DHStandardGroups", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DHStandardGroups::FromHex
// Il2CppName: FromHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (*)(::Il2CppString*)>(&DHStandardGroups::FromHex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHStandardGroups*), "FromHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DHStandardGroups::SafePrimeGen2
// Il2CppName: SafePrimeGen2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::Parameters::DHParameters* (*)(::Il2CppString*)>(&DHStandardGroups::SafePrimeGen2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHStandardGroups*), "SafePrimeGen2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: DHStandardGroups::SafePrimeGen2
// Il2CppName: SafePrimeGen2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Crypto::Parameters::DHParameters* (*)(::Il2CppString*, int)>(&DHStandardGroups::SafePrimeGen2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHStandardGroups*), "SafePrimeGen2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DHStandardGroups::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DHStandardGroups::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DHStandardGroups*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/ECDHBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPrivateKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.Init
void Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::Init(Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.GetFieldSize
int Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::GetFieldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::GetFieldSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement.CalculateAgreement
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::CalculateAgreement(Org::BouncyCastle::Crypto::ICipherParameters* pubKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement::CalculateAgreement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateAgreement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pubKey)})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(this, ___internal__method, pubKey);
}
// Writing MetadataGetter for method: ECDHBasicAgreement::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECDHBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&ECDHBasicAgreement::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECDHBasicAgreement*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: ECDHBasicAgreement::GetFieldSize
// Il2CppName: GetFieldSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ECDHBasicAgreement::*)()>(&ECDHBasicAgreement::GetFieldSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECDHBasicAgreement*), "GetFieldSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ECDHBasicAgreement::CalculateAgreement
// Il2CppName: CalculateAgreement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Math::BigInteger* (ECDHBasicAgreement::*)(Org::BouncyCastle::Crypto::ICipherParameters*)>(&ECDHBasicAgreement::CalculateAgreement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECDHBasicAgreement*), "CalculateAgreement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::ICipherParameters*>()});
  }
};
// Writing MetadataGetter for method: ECDHBasicAgreement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECDHBasicAgreement::*)()>(&ECDHBasicAgreement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECDHBasicAgreement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ECDHBasicAgreement::*)()>(&ECDHBasicAgreement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ECDHBasicAgreement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IDigest
#include "Org/BouncyCastle/Crypto/IDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::IDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.GetDigestSize
int Org::BouncyCastle::Crypto::IDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.GetByteLength
int Org::BouncyCastle::Crypto::IDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.Update
void Org::BouncyCastle::Crypto::IDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.BlockUpdate
void Org::BouncyCastle::Crypto::IDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.DoFinal
int Org::BouncyCastle::Crypto::IDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.IDigest.Reset
void Org::BouncyCastle::Crypto::IDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IDigest::*)()>(&IDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IDigest::*)()>(&IDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IDigest::*)()>(&IDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDigest::*)(uint8_t)>(&IDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: IDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDigest::*)(::Array<uint8_t>*, int, int)>(&IDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IDigest::*)(::Array<uint8_t>*, int)>(&IDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDigest::*)()>(&IDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Blake2bDigest
#include "Org/BouncyCastle/Crypto/Digests/Blake2bDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] blake2b_IV
::Array<uint64_t>* Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_get_blake2b_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_get_blake2b_IV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint64_t>*>("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", "blake2b_IV"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] blake2b_IV
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_set_blake2b_IV(::Array<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_set_blake2b_IV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", "blake2b_IV", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[,] blake2b_sigma
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_get_blake2b_sigma() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_get_blake2b_sigma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", "blake2b_sigma"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[,] blake2b_sigma
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_set_blake2b_sigma(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_set_blake2b_sigma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", "blake2b_sigma", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Init
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.InitializeInternalState
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::InitializeInternalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::InitializeInternalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInternalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Update
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Update(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::BlockUpdate(::Array<uint8_t>* message, int offset, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, offset, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Blake2bDigest::DoFinal(::Array<uint8_t>* output, int outOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOffset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOffset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Reset
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Compress
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Compress(::Array<uint8_t>* message, int messagePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(messagePos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, messagePos);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.G
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::G(uint64_t m1, uint64_t m2, int posA, int posB, int posC, int posD) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m1), ::il2cpp_utils::ExtractType(m2), ::il2cpp_utils::ExtractType(posA), ::il2cpp_utils::ExtractType(posB), ::il2cpp_utils::ExtractType(posC), ::il2cpp_utils::ExtractType(posD)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m1, m2, posA, posB, posC, posD);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Rotr64
uint64_t Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Rotr64(uint64_t x, int rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::Rotr64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", "Rotr64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, rot);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Blake2bDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Blake2bDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::Blake2bDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2bDigest..cctor
void Org::BouncyCastle::Crypto::Digests::Blake2bDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2bDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Blake2bDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Blake2bDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(int)>(&Blake2bDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(int)>(&Blake2bDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)()>(&Blake2bDigest::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::InitializeInternalState
// Il2CppName: InitializeInternalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)()>(&Blake2bDigest::InitializeInternalState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "InitializeInternalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(uint8_t)>(&Blake2bDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(::Array<uint8_t>*, int, int)>(&Blake2bDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2bDigest::*)(::Array<uint8_t>*, int)>(&Blake2bDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)()>(&Blake2bDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::Compress
// Il2CppName: Compress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(::Array<uint8_t>*, int)>(&Blake2bDigest::Compress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "Compress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2bDigest::*)(uint64_t, uint64_t, int, int, int, int)>(&Blake2bDigest::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::Rotr64
// Il2CppName: Rotr64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int)>(&Blake2bDigest::Rotr64)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "Rotr64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Blake2bDigest::*)()>(&Blake2bDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2bDigest::*)()>(&Blake2bDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2bDigest::*)()>(&Blake2bDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2bDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Blake2bDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2bDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Blake2sDigest
#include "Org/BouncyCastle/Crypto/Digests/Blake2sDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] blake2s_IV
::Array<uint>* Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_get_blake2s_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_get_blake2s_IV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Digests", "Blake2sDigest", "blake2s_IV"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] blake2s_IV
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_set_blake2s_IV(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_set_blake2s_IV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Blake2sDigest", "blake2s_IV", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[,] blake2s_sigma
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_get_blake2s_sigma() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_get_blake2s_sigma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Blake2sDigest", "blake2s_sigma"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[,] blake2s_sigma
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_set_blake2s_sigma(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_set_blake2s_sigma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Blake2sDigest", "blake2s_sigma", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Init
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.InitializeInternalState
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::InitializeInternalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::InitializeInternalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInternalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Update
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Update(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::BlockUpdate(::Array<uint8_t>* message, int offset, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, offset, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Blake2sDigest::DoFinal(::Array<uint8_t>* output, int outOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOffset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOffset);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Reset
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Compress
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Compress(::Array<uint8_t>* message, int messagePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(messagePos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, messagePos);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.G
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::G(uint m1, uint m2, int posA, int posB, int posC, int posD) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m1), ::il2cpp_utils::ExtractType(m2), ::il2cpp_utils::ExtractType(posA), ::il2cpp_utils::ExtractType(posB), ::il2cpp_utils::ExtractType(posC), ::il2cpp_utils::ExtractType(posD)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m1, m2, posA, posB, posC, posD);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.rotr32
uint Org::BouncyCastle::Crypto::Digests::Blake2sDigest::rotr32(uint x, int rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::rotr32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rotr32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, rot);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Blake2sDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Blake2sDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::Blake2sDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Blake2sDigest..cctor
void Org::BouncyCastle::Crypto::Digests::Blake2sDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Blake2sDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Blake2sDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Blake2sDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(int)>(&Blake2sDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(int)>(&Blake2sDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)()>(&Blake2sDigest::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::InitializeInternalState
// Il2CppName: InitializeInternalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)()>(&Blake2sDigest::InitializeInternalState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "InitializeInternalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(uint8_t)>(&Blake2sDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(::Array<uint8_t>*, int, int)>(&Blake2sDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2sDigest::*)(::Array<uint8_t>*, int)>(&Blake2sDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)()>(&Blake2sDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::Compress
// Il2CppName: Compress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(::Array<uint8_t>*, int)>(&Blake2sDigest::Compress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "Compress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Blake2sDigest::*)(uint, uint, int, int, int, int)>(&Blake2sDigest::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::rotr32
// Il2CppName: rotr32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Blake2sDigest::*)(uint, int)>(&Blake2sDigest::rotr32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "rotr32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Blake2sDigest::*)()>(&Blake2sDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2sDigest::*)()>(&Blake2sDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Blake2sDigest::*)()>(&Blake2sDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Blake2sDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Blake2sDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Blake2sDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Utilities.IMemoable
#include "Org/BouncyCastle/Utilities/IMemoable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Utilities.IMemoable.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Utilities::IMemoable::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IMemoable::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Utilities.IMemoable.Reset
void Org::BouncyCastle::Utilities::IMemoable::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Utilities::IMemoable::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: IMemoable::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (IMemoable::*)()>(&IMemoable::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMemoable*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMemoable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMemoable::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&IMemoable::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMemoable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest
#include "Org/BouncyCastle/Crypto/Digests/Dstu7564Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S0
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S0
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S0(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S1
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S1
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S1(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S2
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S2
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S2(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S3
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_get_S3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S3
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S3(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_set_S3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "S3", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::Dstu7564Digest* digest) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, digest);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Update
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::ProcessBlock(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.P
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::P(::Array<uint64_t>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::P");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "P", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Q
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Q(::Array<uint64_t>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Q");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Q", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.MixColumn
uint64_t Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::MixColumn(uint64_t c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::MixColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "MixColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.MixColumns
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::MixColumns(::Array<uint64_t>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::MixColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MixColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Rotate
uint64_t Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Rotate(int n, uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.ShiftRows
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::ShiftRows(::Array<uint64_t>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::ShiftRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.SubBytes
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::SubBytes(::Array<uint64_t>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::SubBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Dstu7564Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Dstu7564Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Dstu7564Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Dstu7564Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*)>(&Dstu7564Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*)>(&Dstu7564Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*)>(&Dstu7564Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Dstu7564Digest*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(int)>(&Dstu7564Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(int)>(&Dstu7564Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Dstu7564Digest::*)()>(&Dstu7564Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Dstu7564Digest::*)()>(&Dstu7564Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Dstu7564Digest::*)()>(&Dstu7564Digest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(uint8_t)>(&Dstu7564Digest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint8_t>*, int, int)>(&Dstu7564Digest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Dstu7564Digest::*)(::Array<uint8_t>*, int)>(&Dstu7564Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)()>(&Dstu7564Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint8_t>*, int)>(&Dstu7564Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::P
// Il2CppName: P
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint64_t>*)>(&Dstu7564Digest::P)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "P", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Q
// Il2CppName: Q
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint64_t>*)>(&Dstu7564Digest::Q)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Q", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::MixColumn
// Il2CppName: MixColumn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Dstu7564Digest::MixColumn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "MixColumn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::MixColumns
// Il2CppName: MixColumns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint64_t>*)>(&Dstu7564Digest::MixColumns)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "MixColumns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int, uint64_t)>(&Dstu7564Digest::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::ShiftRows
// Il2CppName: ShiftRows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint64_t>*)>(&Dstu7564Digest::ShiftRows)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "ShiftRows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::SubBytes
// Il2CppName: SubBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(::Array<uint64_t>*)>(&Dstu7564Digest::SubBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "SubBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Dstu7564Digest::*)()>(&Dstu7564Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Dstu7564Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Dstu7564Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: Dstu7564Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Dstu7564Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Dstu7564Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.GeneralDigest
#include "Org/BouncyCastle/Crypto/Digests/GeneralDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.CopyIn
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::CopyIn(Org::BouncyCastle::Crypto::Digests::GeneralDigest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Update
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Finish
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::GeneralDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::GeneralDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::GeneralDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::GeneralDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::GeneralDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.GeneralDigest.Reset
void Org::BouncyCastle::Crypto::Digests::GeneralDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::GeneralDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Writing MetadataGetter for method: GeneralDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(Org::BouncyCastle::Crypto::Digests::GeneralDigest*)>(&GeneralDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::GeneralDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(Org::BouncyCastle::Crypto::Digests::GeneralDigest*)>(&GeneralDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::GeneralDigest*>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(Org::BouncyCastle::Crypto::Digests::GeneralDigest*)>(&GeneralDigest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::GeneralDigest*>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(uint8_t)>(&GeneralDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(::Array<uint8_t>*, int, int)>(&GeneralDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)()>(&GeneralDigest::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)()>(&GeneralDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GeneralDigest::*)()>(&GeneralDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(::Array<uint8_t>*, int)>(&GeneralDigest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(int64_t)>(&GeneralDigest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)()>(&GeneralDigest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GeneralDigest::*)()>(&GeneralDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GeneralDigest::*)()>(&GeneralDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GeneralDigest::*)(::Array<uint8_t>*, int)>(&GeneralDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (GeneralDigest::*)()>(&GeneralDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GeneralDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&GeneralDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: GeneralDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)()>(&GeneralDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GeneralDigest::*)()>(&GeneralDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GeneralDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Gost3411Digest
#include "Org/BouncyCastle/Crypto/Digests/Gost3411Digest.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] C2
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::_get_C2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::_get_C2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", "C2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] C2
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::_set_C2(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::_set_C2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", "C2", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.MakeC
::Array<::Array<uint8_t>*>* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::MakeC() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::MakeC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", "MakeC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Array<uint8_t>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Gost3411Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.Update
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.P
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::P(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::P");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "P", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.A
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::A(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::A");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "A", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.E
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::E(::Array<uint8_t>* key, ::Array<uint8_t>* s, int sOff, ::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::E");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "E", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(sOff), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, s, sOff, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.fw
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::fw(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::fw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.processBlock
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::processBlock(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::processBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.finish
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Gost3411Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.sumByteArray
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::sumByteArray(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::sumByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sumByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.cpyBytesToShort
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::cpyBytesToShort(::Array<uint8_t>* S, ::Array<int16_t>* wS) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::cpyBytesToShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", "cpyBytesToShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(wS)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, S, wS);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.cpyShortToBytes
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::cpyShortToBytes(::Array<int16_t>* wS, ::Array<uint8_t>* S) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::cpyShortToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", "cpyShortToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wS), ::il2cpp_utils::ExtractType(S)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, wS, S);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::Gost3411Digest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Gost3411Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Gost3411Digest::MakeC
// Il2CppName: MakeC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Array<uint8_t>*>* (*)()>(&Gost3411Digest::MakeC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "MakeC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411Digest*)>(&Gost3411Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411Digest*)>(&Gost3411Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411Digest*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Gost3411Digest::*)()>(&Gost3411Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411Digest::*)()>(&Gost3411Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(uint8_t)>(&Gost3411Digest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(::Array<uint8_t>*, int, int)>(&Gost3411Digest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::P
// Il2CppName: P
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Gost3411Digest::*)(::Array<uint8_t>*)>(&Gost3411Digest::P)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "P", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::A
// Il2CppName: A
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Gost3411Digest::*)(::Array<uint8_t>*)>(&Gost3411Digest::A)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "A", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::E
// Il2CppName: E
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*, int)>(&Gost3411Digest::E)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "E", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::fw
// Il2CppName: fw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(::Array<uint8_t>*)>(&Gost3411Digest::fw)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "fw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::processBlock
// Il2CppName: processBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(::Array<uint8_t>*, int)>(&Gost3411Digest::processBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "processBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::finish
// Il2CppName: finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)()>(&Gost3411Digest::finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411Digest::*)(::Array<uint8_t>*, int)>(&Gost3411Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)()>(&Gost3411Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::sumByteArray
// Il2CppName: sumByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(::Array<uint8_t>*)>(&Gost3411Digest::sumByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "sumByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::cpyBytesToShort
// Il2CppName: cpyBytesToShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*, ::Array<int16_t>*)>(&Gost3411Digest::cpyBytesToShort)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "cpyBytesToShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::cpyShortToBytes
// Il2CppName: cpyShortToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<int16_t>*, ::Array<uint8_t>*)>(&Gost3411Digest::cpyShortToBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "cpyShortToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411Digest::*)()>(&Gost3411Digest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Gost3411Digest::*)()>(&Gost3411Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Gost3411Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Gost3411Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)()>(&Gost3411Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411Digest::*)()>(&Gost3411Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest
#include "Org/BouncyCastle/Crypto/Digests/Gost3411_2012Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[][] C
::Array<::Array<uint8_t>*>* Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<uint8_t>*>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "C"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[][] C
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_C(::Array<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "C", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Zero
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Zero
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_Zero(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[][] T
::Array<::Array<uint64_t>*>* Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_T() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_get_T");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<uint64_t>*>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "T"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[][] T
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_T(::Array<::Array<uint64_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_set_T");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", "T", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.Update
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.F
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::F(::Array<uint8_t>* V) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(V)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, V);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.xor512
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::xor512(::Array<uint8_t>* A, ::Array<uint8_t>* B) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::xor512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "xor512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, A, B);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.E
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::E(::Array<uint8_t>* K, ::Array<uint8_t>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::E");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "E", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(K), ::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, K, m);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.g_N
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::g_N(::Array<uint8_t>* h, ::Array<uint8_t>* N, ::Array<uint8_t>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::g_N");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "g_N", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(N), ::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, h, N, m);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.addMod512
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::addMod512(::Array<uint8_t>* A, int num) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::addMod512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addMod512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(num)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, A, num);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.addMod512
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::addMod512(::Array<uint8_t>* A, ::Array<uint8_t>* B) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::addMod512");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addMod512", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, A, B);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest.reverse
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::reverse(::Array<uint8_t>* src, ::Array<uint8_t>* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dst);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Gost3411_2012Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*)>(&Gost3411_2012Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*)>(&Gost3411_2012Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Gost3411_2012Digest::*)()>(&Gost3411_2012Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Gost3411_2012Digest::*)()>(&Gost3411_2012Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012Digest::*)(::Array<uint8_t>*, int)>(&Gost3411_2012Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012Digest::*)()>(&Gost3411_2012Digest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012Digest::*)()>(&Gost3411_2012Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)()>(&Gost3411_2012Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Gost3411_2012Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(uint8_t)>(&Gost3411_2012Digest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, int, int)>(&Gost3411_2012Digest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*)>(&Gost3411_2012Digest::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::xor512
// Il2CppName: xor512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&Gost3411_2012Digest::xor512)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "xor512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::E
// Il2CppName: E
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&Gost3411_2012Digest::E)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "E", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::g_N
// Il2CppName: g_N
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&Gost3411_2012Digest::g_N)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "g_N", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::addMod512
// Il2CppName: addMod512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, int)>(&Gost3411_2012Digest::addMod512)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "addMod512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::addMod512
// Il2CppName: addMod512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&Gost3411_2012Digest::addMod512)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "addMod512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::reverse
// Il2CppName: reverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012Digest::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&Gost3411_2012Digest::reverse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), "reverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Gost3411_2012Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest
#include "Org/BouncyCastle/Crypto/Digests/Gost3411_2012_256Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] IV
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::_get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::_get_IV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_256Digest", "IV"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] IV
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::_set_IV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::_set_IV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_256Digest", "IV", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_256Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Gost3411_2012_256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_256Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest*)>(&Gost3411_2012_256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_256Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest*)>(&Gost3411_2012_256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411_2012_256Digest*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Gost3411_2012_256Digest::*)()>(&Gost3411_2012_256Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_256Digest::*)()>(&Gost3411_2012_256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_256Digest::*)()>(&Gost3411_2012_256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012_256Digest::*)()>(&Gost3411_2012_256Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012_256Digest::*)(::Array<uint8_t>*, int)>(&Gost3411_2012_256Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Gost3411_2012_256Digest::*)()>(&Gost3411_2012_256Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_256Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Gost3411_2012_256Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_256Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest
#include "Org/BouncyCastle/Crypto/Digests/Gost3411_2012_512Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] IV
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::_get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::_get_IV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_512Digest", "IV"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] IV
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::_set_IV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::_set_IV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_512Digest", "IV", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Gost3411_2012_512Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Gost3411_2012_512Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_512Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest*)>(&Gost3411_2012_512Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_512Digest::*)(Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest*)>(&Gost3411_2012_512Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Gost3411_2012_512Digest*>()});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_512Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Gost3411_2012_512Digest::*)()>(&Gost3411_2012_512Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_512Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_512Digest::*)()>(&Gost3411_2012_512Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Gost3411_2012_512Digest::*)()>(&Gost3411_2012_512Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_512Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Gost3411_2012_512Digest::*)()>(&Gost3411_2012_512Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_512Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Gost3411_2012_512Digest::*)()>(&Gost3411_2012_512Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Gost3411_2012_512Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Gost3411_2012_512Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Gost3411_2012_512Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.KeccakDigest
#include "Org/BouncyCastle/Crypto/Digests/KeccakDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64[] KeccakRoundConstants
::Array<uint64_t>* Org::BouncyCastle::Crypto::Digests::KeccakDigest::_get_KeccakRoundConstants() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::_get_KeccakRoundConstants");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint64_t>*>("Org.BouncyCastle.Crypto.Digests", "KeccakDigest", "KeccakRoundConstants"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64[] KeccakRoundConstants
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::_set_KeccakRoundConstants(::Array<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::_set_KeccakRoundConstants");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "KeccakDigest", "KeccakRoundConstants", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.CopyIn
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::CopyIn(Org::BouncyCastle::Crypto::Digests::KeccakDigest* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::KeccakDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::KeccakDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Update
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::KeccakDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::KeccakDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Init
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Init(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.InitSponge
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::InitSponge(int rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::InitSponge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitSponge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rate);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Absorb(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Absorb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Absorb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Absorb
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Absorb(::Array<uint8_t>* data, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Absorb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Absorb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, off, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.AbsorbBits
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::AbsorbBits(int data, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::AbsorbBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbsorbBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, bits);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.PadAndSwitchToSqueezingPhase
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::PadAndSwitchToSqueezingPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::PadAndSwitchToSqueezingPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadAndSwitchToSqueezingPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Squeeze
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Squeeze(::Array<uint8_t>* output, int offset, int64_t outputLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Squeeze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Squeeze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(outputLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output, offset, outputLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.KeccakAbsorb
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakAbsorb(::Array<uint8_t>* data, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakAbsorb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeccakAbsorb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(off)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.KeccakExtract
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakExtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeccakExtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.KeccakPermutation
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakPermutation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::KeccakPermutation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeccakPermutation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::KeccakDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest.Reset
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.KeccakDigest..cctor
void Org::BouncyCastle::Crypto::Digests::KeccakDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::KeccakDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "KeccakDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: KeccakDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(int)>(&KeccakDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(int)>(&KeccakDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(Org::BouncyCastle::Crypto::Digests::KeccakDigest*)>(&KeccakDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::KeccakDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(Org::BouncyCastle::Crypto::Digests::KeccakDigest*)>(&KeccakDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::KeccakDigest*>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(Org::BouncyCastle::Crypto::Digests::KeccakDigest*)>(&KeccakDigest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::KeccakDigest*>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (KeccakDigest::*)()>(&KeccakDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (KeccakDigest::*)()>(&KeccakDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(uint8_t)>(&KeccakDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(::Array<uint8_t>*, int, int)>(&KeccakDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (KeccakDigest::*)(::Array<uint8_t>*, int)>(&KeccakDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)()>(&KeccakDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (KeccakDigest::*)()>(&KeccakDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(int)>(&KeccakDigest::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::InitSponge
// Il2CppName: InitSponge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(int)>(&KeccakDigest::InitSponge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "InitSponge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Absorb
// Il2CppName: Absorb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(uint8_t)>(&KeccakDigest::Absorb)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Absorb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Absorb
// Il2CppName: Absorb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(::Array<uint8_t>*, int, int)>(&KeccakDigest::Absorb)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Absorb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::AbsorbBits
// Il2CppName: AbsorbBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(int, int)>(&KeccakDigest::AbsorbBits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "AbsorbBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::PadAndSwitchToSqueezingPhase
// Il2CppName: PadAndSwitchToSqueezingPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)()>(&KeccakDigest::PadAndSwitchToSqueezingPhase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "PadAndSwitchToSqueezingPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Squeeze
// Il2CppName: Squeeze
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(::Array<uint8_t>*, int, int64_t)>(&KeccakDigest::Squeeze)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Squeeze", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::KeccakAbsorb
// Il2CppName: KeccakAbsorb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(::Array<uint8_t>*, int)>(&KeccakDigest::KeccakAbsorb)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "KeccakAbsorb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::KeccakExtract
// Il2CppName: KeccakExtract
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)()>(&KeccakDigest::KeccakExtract)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "KeccakExtract", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::KeccakPermutation
// Il2CppName: KeccakPermutation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)()>(&KeccakDigest::KeccakPermutation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "KeccakPermutation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (KeccakDigest::*)()>(&KeccakDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeccakDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KeccakDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&KeccakDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: KeccakDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&KeccakDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeccakDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.LongDigest
#include "Org/BouncyCastle/Crypto/Digests/LongDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt64[] K
::Array<uint64_t>* Org::BouncyCastle::Crypto::Digests::LongDigest::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint64_t>*>("Org.BouncyCastle.Crypto.Digests", "LongDigest", "K"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt64[] K
void Org::BouncyCastle::Crypto::Digests::LongDigest::_set_K(::Array<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "LongDigest", "K", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.CopyIn
void Org::BouncyCastle::Crypto::Digests::LongDigest::CopyIn(Org::BouncyCastle::Crypto::Digests::LongDigest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Update
void Org::BouncyCastle::Crypto::Digests::LongDigest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::LongDigest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Finish
void Org::BouncyCastle::Crypto::Digests::LongDigest::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Reset
void Org::BouncyCastle::Crypto::Digests::LongDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.AdjustByteCounts
void Org::BouncyCastle::Crypto::Digests::LongDigest::AdjustByteCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::AdjustByteCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustByteCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessLength(int64_t lowW, int64_t hiW) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowW), ::il2cpp_utils::ExtractType(hiW)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lowW, hiW);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Ch
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Ch(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Maj
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Maj(uint64_t x, uint64_t y, uint64_t z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Sum0
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Sum0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Sum0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Sum0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Sum1
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Sum1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Sum1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Sum1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Sigma0
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Sigma0(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Sigma0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Sigma0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Sigma1
uint64_t Org::BouncyCastle::Crypto::Digests::LongDigest::Sigma1(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Sigma1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", "Sigma1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::LongDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::LongDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::LongDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::LongDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::LongDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest.Reset
void Org::BouncyCastle::Crypto::Digests::LongDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.LongDigest..cctor
void Org::BouncyCastle::Crypto::Digests::LongDigest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::LongDigest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "LongDigest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: LongDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(Org::BouncyCastle::Crypto::Digests::LongDigest*)>(&LongDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::LongDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(Org::BouncyCastle::Crypto::Digests::LongDigest*)>(&LongDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::LongDigest*>()});
  }
};
// Writing MetadataGetter for method: LongDigest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(Org::BouncyCastle::Crypto::Digests::LongDigest*)>(&LongDigest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::LongDigest*>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(uint8_t)>(&LongDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(::Array<uint8_t>*, int, int)>(&LongDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(::Array<uint8_t>*, int)>(&LongDigest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LongDigest::AdjustByteCounts
// Il2CppName: AdjustByteCounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::AdjustByteCounts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "AdjustByteCounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(int64_t, int64_t)>(&LongDigest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::Ch
// Il2CppName: Ch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, uint64_t)>(&LongDigest::Ch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Ch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Maj
// Il2CppName: Maj
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, uint64_t)>(&LongDigest::Maj)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Maj", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Sum0
// Il2CppName: Sum0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&LongDigest::Sum0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Sum0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Sum1
// Il2CppName: Sum1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&LongDigest::Sum1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Sum1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Sigma0
// Il2CppName: Sigma0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&LongDigest::Sigma0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Sigma0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Sigma1
// Il2CppName: Sigma1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&LongDigest::Sigma1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Sigma1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: LongDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LongDigest::*)()>(&LongDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LongDigest::*)()>(&LongDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LongDigest::*)()>(&LongDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LongDigest::*)(::Array<uint8_t>*, int)>(&LongDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LongDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (LongDigest::*)()>(&LongDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&LongDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: LongDigest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LongDigest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongDigest::*)()>(&LongDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.MD2Digest
#include "Org/BouncyCastle/Crypto/Digests/MD2Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] S
::Array<uint8_t>* Org::BouncyCastle::Crypto::Digests::MD2Digest::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Digests", "MD2Digest", "S"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] S
void Org::BouncyCastle::Crypto::Digests::MD2Digest::_set_S(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD2Digest", "S", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::MD2Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::MD2Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::MD2Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::MD2Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::MD2Digest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::MD2Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD2Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.Update
void Org::BouncyCastle::Crypto::Digests::MD2Digest::Update(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::MD2Digest::BlockUpdate(::Array<uint8_t>* input, int inOff, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff, length);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.ProcessChecksum
void Org::BouncyCastle::Crypto::Digests::MD2Digest::ProcessChecksum(::Array<uint8_t>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::ProcessChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::MD2Digest::ProcessBlock(::Array<uint8_t>* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::MD2Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD2Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD2Digest..cctor
void Org::BouncyCastle::Crypto::Digests::MD2Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD2Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD2Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MD2Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(Org::BouncyCastle::Crypto::Digests::MD2Digest*)>(&MD2Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD2Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(Org::BouncyCastle::Crypto::Digests::MD2Digest*)>(&MD2Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD2Digest*>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(Org::BouncyCastle::Crypto::Digests::MD2Digest*)>(&MD2Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD2Digest*>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MD2Digest::*)()>(&MD2Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD2Digest::*)()>(&MD2Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD2Digest::*)()>(&MD2Digest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD2Digest::*)(::Array<uint8_t>*, int)>(&MD2Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)()>(&MD2Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(uint8_t)>(&MD2Digest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(::Array<uint8_t>*, int, int)>(&MD2Digest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::ProcessChecksum
// Il2CppName: ProcessChecksum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(::Array<uint8_t>*)>(&MD2Digest::ProcessChecksum)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "ProcessChecksum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(::Array<uint8_t>*)>(&MD2Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (MD2Digest::*)()>(&MD2Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&MD2Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Writing MetadataGetter for method: MD2Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MD2Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)()>(&MD2Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Digest::*)()>(&MD2Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.MD4Digest
#include "Org/BouncyCastle/Crypto/Digests/MD4Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::MD4Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::MD4Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::MD4Digest::UnpackWord(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.RotateLeft
int Org::BouncyCastle::Crypto::Digests::MD4Digest::RotateLeft(int x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.F
int Org::BouncyCastle::Crypto::Digests::MD4Digest::F(int u, int v, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.G
int Org::BouncyCastle::Crypto::Digests::MD4Digest::G(int u, int v, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.H
int Org::BouncyCastle::Crypto::Digests::MD4Digest::H(int u, int v, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::MD4Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::MD4Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::MD4Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD4Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::MD4Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD4Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD4Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD4Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: MD4Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(Org::BouncyCastle::Crypto::Digests::MD4Digest*)>(&MD4Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD4Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(Org::BouncyCastle::Crypto::Digests::MD4Digest*)>(&MD4Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD4Digest*>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(Org::BouncyCastle::Crypto::Digests::MD4Digest*)>(&MD4Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD4Digest*>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(int, ::Array<uint8_t>*, int)>(&MD4Digest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)(int, int)>(&MD4Digest::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)(int, int, int)>(&MD4Digest::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)(int, int, int)>(&MD4Digest::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::H
// Il2CppName: H
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)(int, int, int)>(&MD4Digest::H)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "H", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)()>(&MD4Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)()>(&MD4Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MD4Digest::*)()>(&MD4Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)()>(&MD4Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(::Array<uint8_t>*, int)>(&MD4Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(int64_t)>(&MD4Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD4Digest::*)(::Array<uint8_t>*, int)>(&MD4Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)()>(&MD4Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)()>(&MD4Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (MD4Digest::*)()>(&MD4Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&MD4Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.MD5Digest
#include "Org/BouncyCastle/Crypto/Digests/MD5Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S11
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S11() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S11"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S11
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S11(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S11", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S12
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S12() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S12"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S12
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S12(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S12", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S13
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S13() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S13"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S13
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S13(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S13", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S14
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S14() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S14"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S14
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S14(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S14", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S21
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S21() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S21");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S21"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S21
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S21(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S21");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S21", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S22
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S22() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S22");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S22"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S22
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S22(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S22");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S22", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S23
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S23() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S23");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S23"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S23
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S23(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S23");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S23", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S24
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S24() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S24"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S24
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S24(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S24", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S31
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S31() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S31");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S31"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S31
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S31(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S31");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S31", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S32
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S32
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S33
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S33() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S33");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S33"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S33
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S33(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S33");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S33", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S34
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S34() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S34"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S34
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S34(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S34", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S41
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S41() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S41");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S41"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S41
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S41(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S41");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S41", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S42
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S42() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S42");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S42"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S42
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S42(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S42");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S42", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S43
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S43() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S43");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S43"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S43
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S43(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S43");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S43", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 S44
int Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S44() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_get_S44");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S44"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 S44
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S44(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::_set_S44");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "S44", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::MD5Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::MD5Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.RotateLeft
uint Org::BouncyCastle::Crypto::Digests::MD5Digest::RotateLeft(uint x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::RotateLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "RotateLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.F
uint Org::BouncyCastle::Crypto::Digests::MD5Digest::F(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.G
uint Org::BouncyCastle::Crypto::Digests::MD5Digest::G(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.H
uint Org::BouncyCastle::Crypto::Digests::MD5Digest::H(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.K
uint Org::BouncyCastle::Crypto::Digests::MD5Digest::K(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::K");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", "K", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest..cctor
void Org::BouncyCastle::Crypto::Digests::MD5Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "MD5Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::MD5Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::MD5Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::MD5Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD5Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::MD5Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.MD5Digest.Reset
void Org::BouncyCastle::Crypto::Digests::MD5Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::MD5Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: MD5Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(Org::BouncyCastle::Crypto::Digests::MD5Digest*)>(&MD5Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD5Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(Org::BouncyCastle::Crypto::Digests::MD5Digest*)>(&MD5Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD5Digest*>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(Org::BouncyCastle::Crypto::Digests::MD5Digest*)>(&MD5Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::MD5Digest*>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::RotateLeft
// Il2CppName: RotateLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, int)>(&MD5Digest::RotateLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "RotateLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&MD5Digest::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&MD5Digest::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::H
// Il2CppName: H
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&MD5Digest::H)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "H", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::K
// Il2CppName: K
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&MD5Digest::K)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "K", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MD5Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)()>(&MD5Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)()>(&MD5Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MD5Digest::*)()>(&MD5Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD5Digest::*)()>(&MD5Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(::Array<uint8_t>*, int)>(&MD5Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(int64_t)>(&MD5Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MD5Digest::*)(::Array<uint8_t>*, int)>(&MD5Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)()>(&MD5Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)()>(&MD5Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (MD5Digest::*)()>(&MD5Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&MD5Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.NullDigest
#include "Org/BouncyCastle/Crypto/Digests/NullDigest.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::NullDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.GetByteLength
int Org::BouncyCastle::Crypto::Digests::NullDigest::GetByteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::GetByteLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::NullDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.Update
void Org::BouncyCastle::Crypto::Digests::NullDigest::Update(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.BlockUpdate
void Org::BouncyCastle::Crypto::Digests::NullDigest::BlockUpdate(::Array<uint8_t>* inBytes, int inOff, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::BlockUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBytes), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inBytes, inOff, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::NullDigest::DoFinal(::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.NullDigest.Reset
void Org::BouncyCastle::Crypto::Digests::NullDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::NullDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NullDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NullDigest::*)()>(&NullDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NullDigest::GetByteLength
// Il2CppName: GetByteLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NullDigest::*)()>(&NullDigest::GetByteLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "GetByteLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NullDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NullDigest::*)()>(&NullDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NullDigest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NullDigest::*)(uint8_t)>(&NullDigest::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: NullDigest::BlockUpdate
// Il2CppName: BlockUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NullDigest::*)(::Array<uint8_t>*, int, int)>(&NullDigest::BlockUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "BlockUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NullDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NullDigest::*)(::Array<uint8_t>*, int)>(&NullDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NullDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NullDigest::*)()>(&NullDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NullDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NullDigest::*)()>(&NullDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NullDigest::*)()>(&NullDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NullDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest
#include "Org/BouncyCastle/Crypto/Digests/RipeMD128Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::RipeMD128Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::UnpackWord(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.RL
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::RL(int x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::RL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F1(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F2(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F3(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F4(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F1(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F2(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F3(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F4(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.FF1
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF1(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.FF2
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF2(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.FF3
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF3(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.FF4
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF4(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::FF4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD128Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: RipeMD128Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*)>(&RipeMD128Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*)>(&RipeMD128Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*)>(&RipeMD128Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD128Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(int, ::Array<uint8_t>*, int)>(&RipeMD128Digest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::RL
// Il2CppName: RL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int)>(&RipeMD128Digest::RL)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "RL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int)>(&RipeMD128Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int)>(&RipeMD128Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int)>(&RipeMD128Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int)>(&RipeMD128Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::FF1
// Il2CppName: FF1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::FF1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "FF1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::FF2
// Il2CppName: FF2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::FF2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "FF2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::FF3
// Il2CppName: FF3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::FF3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "FF3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::FF4
// Il2CppName: FF4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(int, int, int, int, int, int)>(&RipeMD128Digest::FF4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "FF4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)()>(&RipeMD128Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)()>(&RipeMD128Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RipeMD128Digest::*)()>(&RipeMD128Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)()>(&RipeMD128Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(::Array<uint8_t>*, int)>(&RipeMD128Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(int64_t)>(&RipeMD128Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD128Digest::*)(::Array<uint8_t>*, int)>(&RipeMD128Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)()>(&RipeMD128Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)()>(&RipeMD128Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (RipeMD128Digest::*)()>(&RipeMD128Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD128Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD128Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&RipeMD128Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD128Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest
#include "Org/BouncyCastle/Crypto/Digests/RipeMD160Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::RipeMD160Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::UnpackWord(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.RL
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::RL(int x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::RL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F1(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F2(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F3(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F4(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.F5
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F5(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::F5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD160Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: RipeMD160Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*)>(&RipeMD160Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*)>(&RipeMD160Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*)>(&RipeMD160Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD160Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(int, ::Array<uint8_t>*, int)>(&RipeMD160Digest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::RL
// Il2CppName: RL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int)>(&RipeMD160Digest::RL)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "RL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int, int)>(&RipeMD160Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int, int)>(&RipeMD160Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int, int)>(&RipeMD160Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int, int)>(&RipeMD160Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::F5
// Il2CppName: F5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(int, int, int)>(&RipeMD160Digest::F5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "F5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)()>(&RipeMD160Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)()>(&RipeMD160Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RipeMD160Digest::*)()>(&RipeMD160Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)()>(&RipeMD160Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(::Array<uint8_t>*, int)>(&RipeMD160Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(int64_t)>(&RipeMD160Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD160Digest::*)(::Array<uint8_t>*, int)>(&RipeMD160Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)()>(&RipeMD160Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)()>(&RipeMD160Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (RipeMD160Digest::*)()>(&RipeMD160Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD160Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD160Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&RipeMD160Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD160Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest
#include "Org/BouncyCastle/Crypto/Digests/RipeMD256Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::RipeMD256Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::UnpackWord(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.RL
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::RL(int x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::RL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F1(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F2(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F3(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F4(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F1(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F2(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F3(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F4(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.FF1
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF1(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.FF2
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF2(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.FF3
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF3(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.FF4
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF4(int a, int b, int c, int d, int x, int s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::FF4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD256Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: RipeMD256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*)>(&RipeMD256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*)>(&RipeMD256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*)>(&RipeMD256Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD256Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(int, ::Array<uint8_t>*, int)>(&RipeMD256Digest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::RL
// Il2CppName: RL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int)>(&RipeMD256Digest::RL)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "RL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int)>(&RipeMD256Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int)>(&RipeMD256Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int)>(&RipeMD256Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int)>(&RipeMD256Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::FF1
// Il2CppName: FF1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::FF1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "FF1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::FF2
// Il2CppName: FF2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::FF2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "FF2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::FF3
// Il2CppName: FF3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::FF3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "FF3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::FF4
// Il2CppName: FF4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(int, int, int, int, int, int)>(&RipeMD256Digest::FF4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "FF4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RipeMD256Digest::*)()>(&RipeMD256Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)()>(&RipeMD256Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)()>(&RipeMD256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)()>(&RipeMD256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(::Array<uint8_t>*, int)>(&RipeMD256Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(int64_t)>(&RipeMD256Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD256Digest::*)(::Array<uint8_t>*, int)>(&RipeMD256Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)()>(&RipeMD256Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)()>(&RipeMD256Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (RipeMD256Digest::*)()>(&RipeMD256Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD256Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD256Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&RipeMD256Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD256Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest
#include "Org/BouncyCastle/Crypto/Digests/RipeMD320Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::RipeMD320Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.UnpackWord
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::UnpackWord(int word, ::Array<uint8_t>* outBytes, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::UnpackWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(outBytes), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, outBytes, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.RL
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::RL(int x, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::RL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.F1
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F1(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.F2
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F2(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.F3
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F3(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.F4
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F4(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.F5
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F5(int x, int y, int z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::F5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.Reset
void Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::RipeMD320Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: RipeMD320Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*)>(&RipeMD320Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*)>(&RipeMD320Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*)>(&RipeMD320Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::RipeMD320Digest*>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::UnpackWord
// Il2CppName: UnpackWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(int, ::Array<uint8_t>*, int)>(&RipeMD320Digest::UnpackWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "UnpackWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::RL
// Il2CppName: RL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int)>(&RipeMD320Digest::RL)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "RL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::F1
// Il2CppName: F1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int, int)>(&RipeMD320Digest::F1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "F1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::F2
// Il2CppName: F2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int, int)>(&RipeMD320Digest::F2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "F2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::F3
// Il2CppName: F3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int, int)>(&RipeMD320Digest::F3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "F3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::F4
// Il2CppName: F4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int, int)>(&RipeMD320Digest::F4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "F4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::F5
// Il2CppName: F5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(int, int, int)>(&RipeMD320Digest::F5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "F5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RipeMD320Digest::*)()>(&RipeMD320Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)()>(&RipeMD320Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)()>(&RipeMD320Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)()>(&RipeMD320Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(::Array<uint8_t>*, int)>(&RipeMD320Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(int64_t)>(&RipeMD320Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RipeMD320Digest::*)(::Array<uint8_t>*, int)>(&RipeMD320Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)()>(&RipeMD320Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)()>(&RipeMD320Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (RipeMD320Digest::*)()>(&RipeMD320Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RipeMD320Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RipeMD320Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&RipeMD320Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RipeMD320Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha1Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha1Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::Sha1Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.F
uint Org::BouncyCastle::Crypto::Digests::Sha1Digest::F(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha1Digest", "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.H
uint Org::BouncyCastle::Crypto::Digests::Sha1Digest::H(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha1Digest", "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.G
uint Org::BouncyCastle::Crypto::Digests::Sha1Digest::G(uint u, uint v, uint w) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha1Digest", "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, u, v, w);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha1Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha1Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha1Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha1Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha1Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha1Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha1Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha1Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha1Digest*)>(&Sha1Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha1Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha1Digest*)>(&Sha1Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha1Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha1Digest*)>(&Sha1Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha1Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha1Digest::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::H
// Il2CppName: H
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha1Digest::H)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "H", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha1Digest::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)()>(&Sha1Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)()>(&Sha1Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha1Digest::*)()>(&Sha1Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha1Digest::*)()>(&Sha1Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(::Array<uint8_t>*, int)>(&Sha1Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(int64_t)>(&Sha1Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha1Digest::*)(::Array<uint8_t>*, int)>(&Sha1Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha1Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)()>(&Sha1Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)()>(&Sha1Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha1Digest::*)()>(&Sha1Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha1Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha1Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha1Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha1Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha224Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha224Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] K
::Array<uint>* Org::BouncyCastle::Crypto::Digests::Sha224Digest::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "K"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] K
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::_set_K(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "K", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::Sha224Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Ch
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Ch(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Maj
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Maj(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Sum0
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Sum0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Sum0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Sum0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Sum1
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Sum1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Sum1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Sum1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Theta0
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Theta0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Theta0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Theta0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Theta1
uint Org::BouncyCastle::Crypto::Digests::Sha224Digest::Theta1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Theta1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", "Theta1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha224Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha224Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha224Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha224Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha224Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha224Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha224Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha224Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha224Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha224Digest*)>(&Sha224Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha224Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha224Digest*)>(&Sha224Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha224Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha224Digest*)>(&Sha224Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha224Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Ch
// Il2CppName: Ch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha224Digest::Ch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Ch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Maj
// Il2CppName: Maj
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha224Digest::Maj)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Maj", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Sum0
// Il2CppName: Sum0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha224Digest::Sum0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Sum0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Sum1
// Il2CppName: Sum1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha224Digest::Sum1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Sum1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Theta0
// Il2CppName: Theta0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha224Digest::Theta0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Theta0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Theta1
// Il2CppName: Theta1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha224Digest::Theta1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Theta1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Sha224Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)()>(&Sha224Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)()>(&Sha224Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha224Digest::*)()>(&Sha224Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha224Digest::*)()>(&Sha224Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(::Array<uint8_t>*, int)>(&Sha224Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(int64_t)>(&Sha224Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha224Digest::*)(::Array<uint8_t>*, int)>(&Sha224Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)()>(&Sha224Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)()>(&Sha224Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha224Digest::*)()>(&Sha224Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha224Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha224Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha224Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha224Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha256Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha256Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] K
::Array<uint>* Org::BouncyCastle::Crypto::Digests::Sha256Digest::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] K
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::_set_K(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "K", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.CopyIn
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::CopyIn(Org::BouncyCastle::Crypto::Digests::Sha256Digest* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::CopyIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.initHs
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::initHs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::initHs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initHs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Sum1Ch
uint Org::BouncyCastle::Crypto::Digests::Sha256Digest::Sum1Ch(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Sum1Ch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "Sum1Ch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Sum0Maj
uint Org::BouncyCastle::Crypto::Digests::Sha256Digest::Sum0Maj(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Sum0Maj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "Sum0Maj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Theta0
uint Org::BouncyCastle::Crypto::Digests::Sha256Digest::Theta0(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Theta0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "Theta0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Theta1
uint Org::BouncyCastle::Crypto::Digests::Sha256Digest::Theta1(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Theta1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", "Theta1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest..cctor
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha256Digest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha256Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha256Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.ProcessWord
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessWord(::Array<uint8_t>* input, int inOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessWord");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inOff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, inOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.ProcessLength
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessLength(int64_t bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha256Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.ProcessBlock
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::ProcessBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha256Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha256Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha256Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha256Digest*)>(&Sha256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha256Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha256Digest*)>(&Sha256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha256Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::CopyIn
// Il2CppName: CopyIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha256Digest*)>(&Sha256Digest::CopyIn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "CopyIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha256Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::initHs
// Il2CppName: initHs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)()>(&Sha256Digest::initHs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "initHs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Sum1Ch
// Il2CppName: Sum1Ch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha256Digest::Sum1Ch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Sum1Ch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Sum0Maj
// Il2CppName: Sum0Maj
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint, uint)>(&Sha256Digest::Sum0Maj)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Sum0Maj", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Theta0
// Il2CppName: Theta0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha256Digest::Theta0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Theta0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Theta1
// Il2CppName: Theta1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&Sha256Digest::Theta1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Theta1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Sha256Digest::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)()>(&Sha256Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)()>(&Sha256Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha256Digest::*)()>(&Sha256Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha256Digest::*)()>(&Sha256Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::ProcessWord
// Il2CppName: ProcessWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(::Array<uint8_t>*, int)>(&Sha256Digest::ProcessWord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "ProcessWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::ProcessLength
// Il2CppName: ProcessLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(int64_t)>(&Sha256Digest::ProcessLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "ProcessLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha256Digest::*)(::Array<uint8_t>*, int)>(&Sha256Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)()>(&Sha256Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)()>(&Sha256Digest::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha256Digest::*)()>(&Sha256Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha256Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha256Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha256Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha256Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha384Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha384Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha384Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha384Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha384Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha384Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha384Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha384Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha384Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha384Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha384Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha384Digest*)>(&Sha384Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha384Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha384Digest*)>(&Sha384Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha384Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha384Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)()>(&Sha384Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)()>(&Sha384Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha384Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha384Digest::*)()>(&Sha384Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha384Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha384Digest::*)()>(&Sha384Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha384Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha384Digest::*)(::Array<uint8_t>*, int)>(&Sha384Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha384Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)()>(&Sha384Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha384Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha384Digest::*)()>(&Sha384Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha384Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha384Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha384Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha384Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha3Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha3Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.CheckBitLength
int Org::BouncyCastle::Crypto::Digests::Sha3Digest::CheckBitLength(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::CheckBitLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha3Digest", "CheckBitLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha3Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha3Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha3Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha3Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Sha3Digest::CheckBitLength
// Il2CppName: CheckBitLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Sha3Digest::CheckBitLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), "CheckBitLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha3Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha3Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha3Digest*)>(&Sha3Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha3Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha3Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha3Digest*)>(&Sha3Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha3Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha3Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha3Digest::*)(int)>(&Sha3Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha3Digest::*)(int)>(&Sha3Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha3Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha3Digest::*)()>(&Sha3Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha3Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha3Digest::*)(::Array<uint8_t>*, int)>(&Sha3Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha3Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha3Digest::*)()>(&Sha3Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha3Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha512Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha512Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha512Digest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha512Digest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha512Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha512Digest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha512Digest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512Digest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha512Digest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512Digest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha512Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha512Digest*)>(&Sha512Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha512Digest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)(Org::BouncyCastle::Crypto::Digests::Sha512Digest*)>(&Sha512Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha512Digest*>()});
  }
};
// Writing MetadataGetter for method: Sha512Digest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)()>(&Sha512Digest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)()>(&Sha512Digest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512Digest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha512Digest::*)()>(&Sha512Digest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512Digest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha512Digest::*)()>(&Sha512Digest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512Digest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha512Digest::*)(::Array<uint8_t>*, int)>(&Sha512Digest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)()>(&Sha512Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512Digest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha512Digest::*)()>(&Sha512Digest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512Digest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512Digest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha512Digest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512Digest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha512tDigest
#include "Org/BouncyCastle/Crypto/Digests/Sha512tDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.tIvGenerate
void Org::BouncyCastle::Crypto::Digests::Sha512tDigest::tIvGenerate(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::tIvGenerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "tIvGenerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.UInt64_To_BE
void Org::BouncyCastle::Crypto::Digests::Sha512tDigest::UInt64_To_BE(uint64_t n, ::Array<uint8_t>* bs, int off, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::UInt64_To_BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha512tDigest", "UInt64_To_BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(bs), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off, max);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.UInt32_To_BE
void Org::BouncyCastle::Crypto::Digests::Sha512tDigest::UInt32_To_BE(uint n, ::Array<uint8_t>* bs, int off, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::UInt32_To_BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "Sha512tDigest", "UInt32_To_BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(bs), ::il2cpp_utils::ExtractType(off), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off, max);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha512tDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.GetDigestSize
int Org::BouncyCastle::Crypto::Digests::Sha512tDigest::GetDigestSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::GetDigestSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigestSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha512tDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha512tDigest.Reset
void Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Reset(Org::BouncyCastle::Utilities::IMemoable* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::Sha512tDigest::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Writing MetadataGetter for method: Sha512tDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(int)>(&Sha512tDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(int)>(&Sha512tDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(Org::BouncyCastle::Crypto::Digests::Sha512tDigest*)>(&Sha512tDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha512tDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(Org::BouncyCastle::Crypto::Digests::Sha512tDigest*)>(&Sha512tDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::Sha512tDigest*>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::tIvGenerate
// Il2CppName: tIvGenerate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(int)>(&Sha512tDigest::tIvGenerate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "tIvGenerate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::UInt64_To_BE
// Il2CppName: UInt64_To_BE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t, ::Array<uint8_t>*, int, int)>(&Sha512tDigest::UInt64_To_BE)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "UInt64_To_BE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::UInt32_To_BE
// Il2CppName: UInt32_To_BE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint, ::Array<uint8_t>*, int, int)>(&Sha512tDigest::UInt32_To_BE)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "UInt32_To_BE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Sha512tDigest::*)()>(&Sha512tDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::GetDigestSize
// Il2CppName: GetDigestSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha512tDigest::*)()>(&Sha512tDigest::GetDigestSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "GetDigestSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sha512tDigest::*)(::Array<uint8_t>*, int)>(&Sha512tDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)()>(&Sha512tDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (Sha512tDigest::*)()>(&Sha512tDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sha512tDigest::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sha512tDigest::*)(Org::BouncyCastle::Utilities::IMemoable*)>(&Sha512tDigest::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sha512tDigest*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Utilities::IMemoable*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.IXof
#include "Org/BouncyCastle/Crypto/IXof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.IXof.DoFinal
int Org::BouncyCastle::Crypto::IXof::DoFinal(::Array<uint8_t>* output, int outOff, int outLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::IXof::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff), ::il2cpp_utils::ExtractType(outLen)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff, outLen);
}
// Writing MetadataGetter for method: IXof::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IXof::*)(::Array<uint8_t>*, int, int)>(&IXof::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IXof*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.ShakeDigest
#include "Org/BouncyCastle/Crypto/Digests/ShakeDigest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.CheckBitLength
int Org::BouncyCastle::Crypto::Digests::ShakeDigest::CheckBitLength(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::CheckBitLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Digests", "ShakeDigest", "CheckBitLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bitLength);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoFinal(::Array<uint8_t>* output, int outOff, int outLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff), ::il2cpp_utils::ExtractType(outLen)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff, outLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoOutput
int Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoOutput(::Array<uint8_t>* output, int outOff, int outLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoOutput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff), ::il2cpp_utils::ExtractType(outLen)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff, outLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::ShakeDigest::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::get_AlgorithmName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.DoFinal
int Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoFinal(::Array<uint8_t>* output, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::DoFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(outOff)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, output, outOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.ShakeDigest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::ShakeDigest::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Org::BouncyCastle::Crypto::Digests::ShakeDigest::Copy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Utilities::IMemoable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ShakeDigest::CheckBitLength
// Il2CppName: CheckBitLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&ShakeDigest::CheckBitLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "CheckBitLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShakeDigest::*)(Org::BouncyCastle::Crypto::Digests::ShakeDigest*)>(&ShakeDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::ShakeDigest*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShakeDigest::*)(Org::BouncyCastle::Crypto::Digests::ShakeDigest*)>(&ShakeDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Org::BouncyCastle::Crypto::Digests::ShakeDigest*>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ShakeDigest::*)(::Array<uint8_t>*, int, int)>(&ShakeDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::DoOutput
// Il2CppName: DoOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ShakeDigest::*)(::Array<uint8_t>*, int, int)>(&ShakeDigest::DoOutput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "DoOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShakeDigest::*)(int)>(&ShakeDigest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShakeDigest::*)(int)>(&ShakeDigest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::get_AlgorithmName
// Il2CppName: get_AlgorithmName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ShakeDigest::*)()>(&ShakeDigest::get_AlgorithmName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "get_AlgorithmName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShakeDigest::DoFinal
// Il2CppName: DoFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ShakeDigest::*)(::Array<uint8_t>*, int)>(&ShakeDigest::DoFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "DoFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShakeDigest::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Org::BouncyCastle::Utilities::IMemoable* (ShakeDigest::*)()>(&ShakeDigest::Copy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShakeDigest*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
