// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D71B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Unknown
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Unknown
void Oculus::Platform::PermissionType::_set_Unknown(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D71F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Microphone
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Microphone
void Oculus::Platform::PermissionType::_set_Microphone(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Microphone", value));
}
// [DescriptionAttribute] Offset: 0x10D7228
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType WriteExternalStorage
::Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_WriteExternalStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_get_WriteExternalStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "WriteExternalStorage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType WriteExternalStorage
void Oculus::Platform::PermissionType::_set_WriteExternalStorage(::Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::_set_WriteExternalStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "WriteExternalStorage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PermissionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PermissionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::StringW Oculus::Platform::Core::getAppID(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::getAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::StringW Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Core::GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ApplicationLifecycle
#include "Oculus/Platform/ApplicationLifecycle.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.GetLaunchDetails
::Oculus::Platform::Models::LaunchDetails* Oculus::Platform::ApplicationLifecycle::GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchDetails*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.LogDeeplinkResult
void Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.SetLaunchIntentChangedNotificationCallback
void Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Rooms
#include "Oculus/Platform/Rooms.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Rooms.UpdateDataStore
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateDataStore(uint64_t roomID, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrent
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrentForUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers2(::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.GetModeratedRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.InviteUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::InviteUser(uint64_t roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Rooms.Join
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.Join2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join2(uint64_t roomID, ::Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.KickUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.Rooms.LaunchInvitableUserFlow
::Oculus::Platform::Request* Oculus::Platform::Rooms::LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.Leave
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.SetDescription
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::SetDescription(uint64_t roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateMembershipLockStatus
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateOwner
::Oculus::Platform::Request* Oculus::Platform::Rooms::UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdatePrivateRoomJoinPolicy
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteAcceptedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteReceivedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::RoomInviteNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetUpdateNotificationCallback
void Oculus::Platform::Rooms::SetUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::SetUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.GetNextRoomListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetNextRoomListPage(::Oculus::Platform::Models::RoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Rooms::GetNextRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetNextRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, ::System::Collections::Generic::Dictionary_2<::StringW, int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::ReportResultsInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingStats*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::StringW pool, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::StringW pool, ::StringW requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::StringW pool, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::StringW pool, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, ::Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, ::Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MatchmakingAdminSnapshot*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
::Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Oculus::Platform::Matchmaking::CustomQuery::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion[] criteria
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Platform::Matchmaking::CustomQuery::Criterion>& Oculus::Platform::Matchmaking::CustomQuery::dyn_criteria() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::dyn_criteria");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "criteria"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Matchmaking::CustomQuery::Criterion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery.ToUnmanaged
::System::IntPtr Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.MatchmakingCriterionImportance importance
[[deprecated("Use field access instead!")]] ::Oculus::Platform::MatchmakingCriterionImportance& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_importance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_importance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "importance"))->offset;
  return *reinterpret_cast<::Oculus::Platform::MatchmakingCriterionImportance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::dyn_parameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Matchmaking/Oculus.Platform.CustomQuery/Oculus.Platform.Criterion..ctor
Oculus::Platform::Matchmaking::CustomQuery::Criterion::Criterion(::StringW key_, ::Oculus::Platform::MatchmakingCriterionImportance importance_) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Matchmaking::CustomQuery::Criterion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key_), ::il2cpp_utils::ExtractType(importance_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key_, importance_);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Net
#include "Oculus/Platform/Net.hpp"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Net.ReadPacket
::Oculus::Platform::Packet* Oculus::Platform::Net::ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Packet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.SendPacket
bool Oculus::Platform::Net::SendPacket(uint64_t userID, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.Connect
void Oculus::Platform::Net::Connect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Accept
void Oculus::Platform::Net::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Close
void Oculus::Platform::Net::Close(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.IsConnected
bool Oculus::Platform::Net::IsConnected(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SendPacketToCurrentRoom
bool Oculus::Platform::Net::SendPacketToCurrentRoom(::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.AcceptForCurrentRoom
bool Oculus::Platform::Net::AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.CloseForCurrentRoom
void Oculus::Platform::Net::CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.Ping
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PingResult*>* Oculus::Platform::Net::Ping(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PingResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SetConnectionStateChangedCallback
void Oculus::Platform::Net::SetConnectionStateChangedCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPeerConnectRequestCallback
void Oculus::Platform::Net::SetPeerConnectRequestCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetPeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPingResultNotificationCallback
void Oculus::Platform::Net::SetPingResultNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PingResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Net::SetPingResultNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPingResultNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Leaderboards
#include "Oculus/Platform/Leaderboards.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetNextEntries(::Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetPreviousEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetPreviousEntries(::Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::Get(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesAfterRank
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesByIds
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntry
::Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntryWithSupplementaryMetric
::Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, forceUpdate);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextLeaderboardListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>* Oculus::Platform::Leaderboards::GetNextLeaderboardListPage(::Oculus::Platform::Models::LeaderboardList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Leaderboards::GetNextLeaderboardListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextLeaderboardListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LeaderboardList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Challenges
#include "Oculus/Platform/Challenges.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Challenges.GetNextEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetNextEntries(::Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetPreviousEntries(::Oculus::Platform::Models::ChallengeEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetNextChallenges
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetNextChallenges(::Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.GetPreviousChallenges
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetPreviousChallenges(::Oculus::Platform::Models::ChallengeList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Challenges.Create
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Create(::StringW leaderboardName, ::Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.Challenges.DeclineInvite
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Delete
::Oculus::Platform::Request* Oculus::Platform::Challenges::Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntries
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesAfterRank
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Challenges.GetEntriesByIds
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>* Oculus::Platform::Challenges::GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeEntryList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs);
}
// Autogenerated method: Oculus.Platform.Challenges.GetList
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>* Oculus::Platform::Challenges::GetList(::Oculus::Platform::ChallengeOptions* challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ChallengeList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.Challenges.Join
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.Leave
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.Challenges.UpdateInfo
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>* Oculus::Platform::Challenges::UpdateInfo(uint64_t challengeID, ::Oculus::Platform::ChallengeOptions* challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Challenges::UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Challenges", "UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Challenge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(::Oculus::Platform::VoipOptions* voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.Voip.GetMicrophoneAvailability
::Oculus::Platform::Request_1<::Oculus::Platform::Models::MicrophoneAvailabilityState*>* Oculus::Platform::Voip::GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::GetMicrophoneAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetMicrophoneAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::MicrophoneAvailabilityState*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
::Oculus::Platform::Request_1<::Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::SystemVoipState*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetVoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneAvailabilityStateUpdateNotificationCallback
void Oculus::Platform::Voip::SetMicrophoneAvailabilityStateUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetMicrophoneAvailabilityStateUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneAvailabilityStateUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetVoipStateChangeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Users
#include "Oculus/Platform/Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.UserOptions
#include "Oculus/Platform/UserOptions.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserLocale
::StringW Oculus::Platform::Users::GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.Get
::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>* Oculus::Platform::Users::Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetAccessToken
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::Users::GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUser
::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>* Oculus::Platform::Users::GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::User*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriends
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserFriendsAndRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetLoggedInUserRecentlyMetUsersAndRooms
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms(::Oculus::Platform::UserOptions* userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.Users.GetOrgScopedID
::Oculus::Platform::Request_1<::Oculus::Platform::Models::OrgScopedID*>* Oculus::Platform::Users::GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::OrgScopedID*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetSdkAccounts
::Oculus::Platform::Request_1<::Oculus::Platform::Models::SdkAccountList*>* Oculus::Platform::Users::GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::SdkAccountList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.GetUserProof
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserProof*>* Oculus::Platform::Users::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserProof*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Users.LaunchFriendRequestFlow
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*>* Oculus::Platform::Users::LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.LaunchProfile
::Oculus::Platform::Request* Oculus::Platform::Users::LaunchProfile(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::LaunchProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "LaunchProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserAndRoomListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>* Oculus::Platform::Users::GetNextUserAndRoomListPage(::Oculus::Platform::Models::UserAndRoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetNextUserAndRoomListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserAndRoomListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserAndRoomList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Users.GetNextUserListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>* Oculus::Platform::Users::GetNextUserListPage(::Oculus::Platform::Models::UserList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Users::GetNextUserListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Users", "GetNextUserListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Achievements
#include "Oculus/Platform/Achievements.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Achievements.AddCount
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.Achievements.AddFields
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllDefinitions
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllProgress
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetDefinitionsByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetDefinitionsByName(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.GetProgressByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetProgressByName(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.Unlock
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementDefinitionListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage(::Oculus::Platform::Models::AchievementDefinitionList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementProgressListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetNextAchievementProgressListPage(::Oculus::Platform::Models::AchievementProgressList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Achievements::GetNextAchievementProgressListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Application::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, ::Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Application::LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AssetFile
#include "Oculus/Platform/AssetFile.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AssetFile.Delete
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.Download
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancel
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.GetList
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetailsList*>* Oculus::Platform::AssetFile::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetailsList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.AssetFile.Status
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusById
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusByName
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.SetDownloadUpdateNotificationCallback
void Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "SetDownloadUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorage
#include "Oculus/Platform/CloudStorage.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage.Delete
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Delete(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Load
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::Load(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadBucketMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::LoadBucketMetadata(::StringW bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadConflictMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageConflictMetadata*>* Oculus::Platform::CloudStorage::LoadConflictMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageConflictMetadata*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadHandle
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::LoadHandle(::StringW handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadMetadata
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadata*>* Oculus::Platform::CloudStorage::LoadMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadata*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepLocal
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepRemote
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Save
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, int64_t counter, ::StringW extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CloudStorage.GetNextCloudStorageMetadataListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage(::Oculus::Platform::Models::CloudStorageMetadataList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "GetNextCloudStorageMetadataListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorage2
#include "Oculus/Platform/CloudStorage2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage2.GetUserDirectoryPath
::Oculus::Platform::Request_1<::StringW>* Oculus::Platform::CloudStorage2::GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorage2::GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage2", "GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Entitlements
#include "Oculus/Platform/Entitlements.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Entitlements.IsUserEntitledToApplication
::Oculus::Platform::Request* Oculus::Platform::Entitlements::IsUserEntitledToApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Entitlements::IsUserEntitledToApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Entitlements", "IsUserEntitledToApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.GroupPresence
#include "Oculus/Platform/GroupPresence.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.InviteOptions
#include "Oculus/Platform/InviteOptions.hpp"
// Including type: Oculus.Platform.RosterOptions
#include "Oculus/Platform/RosterOptions.hpp"
// Including type: Oculus.Platform.GroupPresenceOptions
#include "Oculus/Platform/GroupPresenceOptions.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.GroupPresence.Clear
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.GroupPresence.LaunchInvitePanel
::Oculus::Platform::Request_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* Oculus::Platform::GroupPresence::LaunchInvitePanel(::Oculus::Platform::InviteOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::InvitePanelResultInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.GroupPresence.LaunchRosterPanel
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::LaunchRosterPanel(::Oculus::Platform::RosterOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.GroupPresence.Set
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::Set(::Oculus::Platform::GroupPresenceOptions* groupPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupPresenceOptions);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetDestination
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetIsJoinable
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetLobbySession
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetMatchSession
::Oculus::Platform::Request* Oculus::Platform::GroupPresence::SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetInvitationsSentNotificationCallback
void Oculus::Platform::GroupPresence::SetInvitationsSentNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetInvitationsSentNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetInvitationsSentNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetJoinIntentReceivedNotificationCallback
void Oculus::Platform::GroupPresence::SetJoinIntentReceivedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetJoinIntentReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetJoinIntentReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.GroupPresence.SetLeaveIntentReceivedNotificationCallback
void Oculus::Platform::GroupPresence::SetLeaveIntentReceivedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresence::SetLeaveIntentReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "GroupPresence", "SetLeaveIntentReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IAP
#include "Oculus/Platform/IAP.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IAP.ConsumePurchase
::Oculus::Platform::Request* Oculus::Platform::IAP::ConsumePurchase(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetProductsBySKU
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetProductsBySKU(::ArrayW<::StringW> skus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skus);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchases
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchasesDurableCache
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.LaunchCheckoutFlow
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Purchase*>* Oculus::Platform::IAP::LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Purchase*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextProductListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetNextProductListPage(::Oculus::Platform::Models::ProductList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::GetNextProductListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextProductListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextPurchaseListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetNextPurchaseListPage(::Oculus::Platform::Models::PurchaseList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IAP::GetNextPurchaseListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextPurchaseListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LanguagePack
#include "Oculus/Platform/LanguagePack.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.LanguagePack.GetCurrent
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::LanguagePack::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LanguagePack::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "LanguagePack", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.LanguagePack.SetCurrent
::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::LanguagePack::SetCurrent(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LanguagePack::SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "LanguagePack", "SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Livestreaming
#include "Oculus/Platform/Livestreaming.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Livestreaming.GetStatus
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Livestreaming::GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.LaunchLivestreamingFlow
::Oculus::Platform::Request* Oculus::Platform::Livestreaming::LaunchLivestreamingFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Livestreaming::LaunchLivestreamingFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "LaunchLivestreamingFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.PauseStream
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Livestreaming::PauseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "PauseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.ResumeStream
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>* Oculus::Platform::Livestreaming::ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Livestreaming::ResumeStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "ResumeStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LivestreamingStatus*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Livestreaming.SetStatusUpdateNotificationCallback
void Oculus::Platform::Livestreaming::SetStatusUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LivestreamingStatus*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Livestreaming::SetStatusUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Livestreaming", "SetStatusUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Media
#include "Oculus/Platform/Media.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Media.ShareToFacebook
::Oculus::Platform::Request_1<::Oculus::Platform::Models::ShareMediaResult*>* Oculus::Platform::Media::ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Media::ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Media", "ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::ShareMediaResult*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSync
#include "Oculus/Platform/NetSync.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.NetSync.SetConnectionStatusChangedNotificationCallback
void Oculus::Platform::NetSync::SetConnectionStatusChangedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetSyncConnection*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSync::SetConnectionStatusChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "NetSync", "SetConnectionStatusChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.NetSync.SetSessionsChangedNotificationCallback
void Oculus::Platform::NetSync::SetSessionsChangedNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::NetSync::SetSessionsChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "NetSync", "SetSessionsChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Notifications
#include "Oculus/Platform/Notifications.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Notifications.GetRoomInviteNotifications
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomInviteNotificationList*>* Oculus::Platform::Notifications::GetRoomInviteNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Notifications::GetRoomInviteNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "GetRoomInviteNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomInviteNotificationList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Notifications.MarkAsRead
::Oculus::Platform::Request* Oculus::Platform::Notifications::MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Notifications::MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.Notifications.GetNextRoomInviteNotificationListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomInviteNotificationList*>* Oculus::Platform::Notifications::GetNextRoomInviteNotificationListPage(::Oculus::Platform::Models::RoomInviteNotificationList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Notifications::GetNextRoomInviteNotificationListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Notifications", "GetNextRoomInviteNotificationListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::RoomInviteNotificationList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Parties
#include "Oculus/Platform/Parties.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Parties.GetCurrent
::Oculus::Platform::Request_1<::Oculus::Platform::Models::Party*>* Oculus::Platform::Parties::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Parties::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Parties", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::Party*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Parties.SetPartyUpdateNotificationCallback
void Oculus::Platform::Parties::SetPartyUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PartyUpdateNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Parties::SetPartyUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Parties", "SetPartyUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RichPresence
#include "Oculus/Platform/RichPresence.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.RichPresenceOptions
#include "Oculus/Platform/RichPresenceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.RichPresence.Clear
::Oculus::Platform::Request* Oculus::Platform::RichPresence::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresence::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.RichPresence.GetDestinations
::Oculus::Platform::Request_1<::Oculus::Platform::Models::DestinationList*>* Oculus::Platform::RichPresence::GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresence::GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::DestinationList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.RichPresence.Set
::Oculus::Platform::Request* Oculus::Platform::RichPresence::Set(::Oculus::Platform::RichPresenceOptions* richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresence::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.RichPresence.GetNextDestinationListPage
::Oculus::Platform::Request_1<::Oculus::Platform::Models::DestinationList*>* Oculus::Platform::RichPresence::GetNextDestinationListPage(::Oculus::Platform::Models::DestinationList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresence::GetNextDestinationListPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "RichPresence", "GetNextDestinationListPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::DestinationList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserDataStore
#include "Oculus/Platform/UserDataStore.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateDeleteEntryByKey
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PrivateDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateGetEntries
::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Platform::UserDataStore::PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateGetEntryByKey
::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Platform::UserDataStore::PrivateGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PrivateWriteEntry
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicDeleteEntryByKey
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PublicDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicGetEntries
::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Platform::UserDataStore::PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicGetEntryByKey
::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Platform::UserDataStore::PublicGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.UserDataStore.PublicWriteEntry
::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>* Oculus::Platform::UserDataStore::PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserDataStore::PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "UserDataStore", "PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::UserDataStoreUpdateResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Vrcamera
#include "Oculus/Platform/Vrcamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Vrcamera.SetGetSurfaceUpdateNotificationCallback
void Oculus::Platform::Vrcamera::SetGetSurfaceUpdateNotificationCallback(typename ::Oculus::Platform::Message_1<::StringW>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Vrcamera::SetGetSurfaceUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Vrcamera", "SetGetSurfaceUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7260
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Success
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Success
void Oculus::Platform::PlatformInitializeResult::_set_Success(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Success", value));
}
// [DescriptionAttribute] Offset: 0x10D7298
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Uninitialized
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Uninitialized
void Oculus::Platform::PlatformInitializeResult::_set_Uninitialized(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Uninitialized", value));
}
// [DescriptionAttribute] Offset: 0x10D72D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult PreLoaded
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_PreLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_PreLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "PreLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult PreLoaded
void Oculus::Platform::PlatformInitializeResult::_set_PreLoaded(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_PreLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "PreLoaded", value));
}
// [DescriptionAttribute] Offset: 0x10D7308
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult FileInvalid
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_FileInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_FileInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "FileInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult FileInvalid
void Oculus::Platform::PlatformInitializeResult::_set_FileInvalid(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_FileInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "FileInvalid", value));
}
// [DescriptionAttribute] Offset: 0x10D7340
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult SignatureInvalid
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_SignatureInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_SignatureInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "SignatureInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult SignatureInvalid
void Oculus::Platform::PlatformInitializeResult::_set_SignatureInvalid(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_SignatureInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "SignatureInvalid", value));
}
// [DescriptionAttribute] Offset: 0x10D7378
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult UnableToVerify
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_UnableToVerify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_UnableToVerify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "UnableToVerify"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult UnableToVerify
void Oculus::Platform::PlatformInitializeResult::_set_UnableToVerify(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_UnableToVerify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "UnableToVerify", value));
}
// [DescriptionAttribute] Offset: 0x10D73B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult VersionMismatch
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_VersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_VersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "VersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult VersionMismatch
void Oculus::Platform::PlatformInitializeResult::_set_VersionMismatch(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_VersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "VersionMismatch", value));
}
// [DescriptionAttribute] Offset: 0x10D73E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult Unknown
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult Unknown
void Oculus::Platform::PlatformInitializeResult::_set_Unknown(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7420
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult InvalidCredentials
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_InvalidCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_InvalidCredentials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "InvalidCredentials"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult InvalidCredentials
void Oculus::Platform::PlatformInitializeResult::_set_InvalidCredentials(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_InvalidCredentials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "InvalidCredentials", value));
}
// [DescriptionAttribute] Offset: 0x10D7458
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInitializeResult NotEntitled
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::PlatformInitializeResult::_get_NotEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_get_NotEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInitializeResult>("Oculus.Platform", "PlatformInitializeResult", "NotEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInitializeResult NotEntitled
void Oculus::Platform::PlatformInitializeResult::_set_NotEntitled(::Oculus::Platform::PlatformInitializeResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::_set_NotEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInitializeResult", "NotEntitled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::PlatformInitializeResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInitializeResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal
#include "Oculus/Platform/PlatformInternal.hpp"
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal
#include "Oculus/Platform/PlatformInternal_MessageTypeInternal.hpp"
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.HTTP
#include "Oculus/Platform/PlatformInternal_HTTP.hpp"
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.Users
#include "Oculus/Platform/PlatformInternal_Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal.CrashApplication
void Oculus::Platform::PlatformInternal::CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformInternal.ParseMessageHandle
::Oculus::Platform::Message* Oculus::Platform::PlatformInternal::ParseMessageHandle(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageHandle, messageType);
}
// Autogenerated method: Oculus.Platform.PlatformInternal.InitializeStandaloneAsync
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::PlatformInternal::InitializeStandaloneAsync(uint64_t appID, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::InitializeStandaloneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal", "InitializeStandaloneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, accessToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal
#include "Oculus/Platform/PlatformInternal_MessageTypeInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal AbuseReport_LaunchAdvancedReportFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_AbuseReport_LaunchAdvancedReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_AbuseReport_LaunchAdvancedReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "AbuseReport_LaunchAdvancedReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal AbuseReport_LaunchAdvancedReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_AbuseReport_LaunchAdvancedReportFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_AbuseReport_LaunchAdvancedReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "AbuseReport_LaunchAdvancedReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Application_ExecuteCoordinatedLaunch
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_ExecuteCoordinatedLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_ExecuteCoordinatedLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_ExecuteCoordinatedLaunch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Application_ExecuteCoordinatedLaunch
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_ExecuteCoordinatedLaunch(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_ExecuteCoordinatedLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_ExecuteCoordinatedLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Application_GetInstalledApplications
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Application_GetInstalledApplications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_GetInstalledApplications"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Application_GetInstalledApplications
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_GetInstalledApplications(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Application_GetInstalledApplications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Application_GetInstalledApplications", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Avatar_UpdateMetaData
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Avatar_UpdateMetaData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Avatar_UpdateMetaData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Avatar_UpdateMetaData"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Avatar_UpdateMetaData
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Avatar_UpdateMetaData(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Avatar_UpdateMetaData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Avatar_UpdateMetaData", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_FinalizeApplication
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_FinalizeApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_FinalizeApplication(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_GetSuggestedApplications
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_GetSuggestedApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_GetSuggestedApplications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_GetSuggestedApplications"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_GetSuggestedApplications
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_GetSuggestedApplications(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_GetSuggestedApplications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_GetSuggestedApplications", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_ProposeApplication
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Cal_ProposeApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_ProposeApplication(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_GetCurrentMapUuid
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_GetCurrentMapUuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_GetCurrentMapUuid"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_GetCurrentMapUuid
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_GetCurrentMapUuid(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_GetCurrentMapUuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_GetCurrentMapUuid", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_RequestMap
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_RequestMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_RequestMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_RequestMap"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_RequestMap
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_RequestMap(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_RequestMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_RequestMap", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_ShareMap
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_ShareMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Colocation_ShareMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_ShareMap"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Colocation_ShareMap
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_ShareMap(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Colocation_ShareMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Colocation_ShareMap", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal GraphAPI_Get
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal GraphAPI_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Get(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal GraphAPI_Post
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_GraphAPI_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Post"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal GraphAPI_Post
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Post(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_GraphAPI_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "GraphAPI_Post", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_Get
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Get(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_GetToFile
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_GetToFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_GetToFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_GetToFile"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_GetToFile
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_GetToFile(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_GetToFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_GetToFile", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_MultiPartPost
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_MultiPartPost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_MultiPartPost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_MultiPartPost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_MultiPartPost
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_MultiPartPost(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_MultiPartPost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_MultiPartPost", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_Post
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_HTTP_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Post"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal HTTP_Post
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Post(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_HTTP_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "HTTP_Post", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_IsAllowedForApplication
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_IsAllowedForApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_IsAllowedForApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_IsAllowedForApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_IsAllowedForApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_IsAllowedForApplication(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_IsAllowedForApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_IsAllowedForApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StartPartyStream
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartPartyStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartPartyStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StartPartyStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartPartyStream(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartPartyStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartPartyStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StartStream
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StartStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StartStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartStream(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StartStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StartStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StopPartyStream
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopPartyStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopPartyStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StopPartyStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopPartyStream(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopPartyStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopPartyStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StopStream
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_StopStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_StopStream
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopStream(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_StopStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_StopStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_UpdateCommentsOverlayVisibility
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateCommentsOverlayVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateCommentsOverlayVisibility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateCommentsOverlayVisibility"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_UpdateCommentsOverlayVisibility
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateCommentsOverlayVisibility(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateCommentsOverlayVisibility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateCommentsOverlayVisibility", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_UpdateMicStatus
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateMicStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Livestreaming_UpdateMicStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateMicStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Livestreaming_UpdateMicStatus
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateMicStatus(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Livestreaming_UpdateMicStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Livestreaming_UpdateMicStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_Connect
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Connect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_Connect
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Connect(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Connect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_Disconnect
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_Disconnect
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Disconnect(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetSessions
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetSessions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetSessions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetSessions
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetSessions(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetSessions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetSessions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetVoipAttenuation
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetVoipAttenuation
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuation(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetVoipAttenuationDefault
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_GetVoipAttenuationDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuationDefault"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_GetVoipAttenuationDefault
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuationDefault(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_GetVoipAttenuationDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_GetVoipAttenuationDefault", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipAttenuation
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipAttenuation
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuation(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipAttenuationModel
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuationModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipAttenuationModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuationModel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipAttenuationModel
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuationModel(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipAttenuationModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipAttenuationModel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipChannelCfg
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipChannelCfg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipChannelCfg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipChannelCfg"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipChannelCfg
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipChannelCfg(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipChannelCfg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipChannelCfg", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipGroup
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipGroup"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipGroup
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipGroup(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipGroup", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipListentoChannels
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipListentoChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipListentoChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipListentoChannels"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipListentoChannels
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipListentoChannels(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipListentoChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipListentoChannels", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipMicSource
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipMicSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipMicSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipMicSource"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipMicSource
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipMicSource(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipMicSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipMicSource", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipSessionMuted
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSessionMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSessionMuted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSessionMuted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipSessionMuted
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSessionMuted(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSessionMuted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSessionMuted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipSpeaktoChannels
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSpeaktoChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipSpeaktoChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSpeaktoChannels"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipSpeaktoChannels
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSpeaktoChannels(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipSpeaktoChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipSpeaktoChannels", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipStreamMode
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipStreamMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_NetSync_SetVoipStreamMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipStreamMode"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal NetSync_SetVoipStreamMode
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipStreamMode(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_NetSync_SetVoipStreamMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "NetSync_SetVoipStreamMode", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Create
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Create
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Create(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_GatherInApplication
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GatherInApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GatherInApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GatherInApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_GatherInApplication
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GatherInApplication(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GatherInApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GatherInApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Get
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Get
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Get(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_GetCurrentForUser
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_GetCurrentForUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GetCurrentForUser(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Invite
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Invite
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Invite(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Invite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Join
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Join
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Join(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Leave
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Party_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Party_Leave
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Leave(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Party_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Party_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetDestination
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetDestination");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetDestination"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetDestination
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetDestination(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetDestination");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetDestination", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetIsJoinable
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetIsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetIsJoinable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetIsJoinable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetIsJoinable
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetIsJoinable(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetIsJoinable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetIsJoinable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetLobbySession
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetLobbySession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetLobbySession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetLobbySession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetLobbySession
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetLobbySession(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetLobbySession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetLobbySession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetMatchSession
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetMatchSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_RichPresence_SetMatchSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetMatchSession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal RichPresence_SetMatchSession
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetMatchSession(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_RichPresence_SetMatchSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "RichPresence_SetMatchSession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_CreateOrUpdateAndJoinNamed
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_CreateOrUpdateAndJoinNamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_CreateOrUpdateAndJoinNamed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_CreateOrUpdateAndJoinNamed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_CreateOrUpdateAndJoinNamed
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_CreateOrUpdateAndJoinNamed(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_CreateOrUpdateAndJoinNamed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_CreateOrUpdateAndJoinNamed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_GetNamedRooms
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetNamedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetNamedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetNamedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_GetNamedRooms
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetNamedRooms(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetNamedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetNamedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_GetSocialRooms
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetSocialRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_Room_GetSocialRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetSocialRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal Room_GetSocialRooms
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetSocialRooms(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_Room_GetSocialRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "Room_GetSocialRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal SystemPermissions_GetStatus
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_GetStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_GetStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal SystemPermissions_GetStatus
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_GetStatus(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_GetStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_GetStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal SystemPermissions_LaunchDeeplink
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_LaunchDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_SystemPermissions_LaunchDeeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_LaunchDeeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal SystemPermissions_LaunchDeeplink
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_LaunchDeeplink(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_SystemPermissions_LaunchDeeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "SystemPermissions_LaunchDeeplink", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_CancelRecordingForReportFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_CancelRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_CancelRecordingForReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_CancelRecordingForReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_CancelRecordingForReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_CancelRecordingForReportFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_CancelRecordingForReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_CancelRecordingForReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_GetLinkedAccounts
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_GetLinkedAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_GetLinkedAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_GetLinkedAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_GetLinkedAccounts
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_GetLinkedAccounts(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_GetLinkedAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_GetLinkedAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchBlockFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchBlockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchBlockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchBlockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchBlockFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchBlockFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchBlockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchBlockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchReportFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchReportFlow2
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchReportFlow2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchReportFlow2
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow2(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchReportFlow2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchReportFlow2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchUnblockFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchUnblockFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_LaunchUnblockFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchUnblockFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_LaunchUnblockFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchUnblockFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_LaunchUnblockFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_LaunchUnblockFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewEntitledTestUser
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewEntitledTestUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewEntitledTestUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewEntitledTestUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewEntitledTestUser(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewEntitledTestUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewEntitledTestUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewTestUser
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewTestUser
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUser(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewTestUserFriends
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_NewTestUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_NewTestUserFriends
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUserFriends(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_NewTestUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_NewTestUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StartRecordingForReportFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StartRecordingForReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StartRecordingForReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StartRecordingForReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StartRecordingForReportFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StartRecordingForReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StartRecordingForReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StopRecordingAndLaunchReportFlow
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StopRecordingAndLaunchReportFlow
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StopRecordingAndLaunchReportFlow2
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_StopRecordingAndLaunchReportFlow2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_StopRecordingAndLaunchReportFlow2
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow2(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_StopRecordingAndLaunchReportFlow2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_StopRecordingAndLaunchReportFlow2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_TestUserCreateDeviceManifest
::Oculus::Platform::PlatformInternal::MessageTypeInternal Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_TestUserCreateDeviceManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_get_User_TestUserCreateDeviceManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformInternal::MessageTypeInternal>("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_TestUserCreateDeviceManifest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PlatformInternal/Oculus.Platform.MessageTypeInternal User_TestUserCreateDeviceManifest
void Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_TestUserCreateDeviceManifest(::Oculus::Platform::PlatformInternal::MessageTypeInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::_set_User_TestUserCreateDeviceManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformInternal/MessageTypeInternal", "User_TestUserCreateDeviceManifest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::PlatformInternal::MessageTypeInternal::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::MessageTypeInternal::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.HTTP
#include "Oculus/Platform/PlatformInternal_HTTP.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal/Oculus.Platform.HTTP.SetHttpTransferUpdateCallback
void Oculus::Platform::PlatformInternal::HTTP::SetHttpTransferUpdateCallback(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::HttpTransferUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::HTTP::SetHttpTransferUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal/HTTP", "SetHttpTransferUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformInternal/Oculus.Platform.Users
#include "Oculus/Platform/PlatformInternal_Users.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.PlatformInternal/Oculus.Platform.Users.GetLinkedAccounts
::Oculus::Platform::Request_1<::Oculus::Platform::Models::LinkedAccountList*>* Oculus::Platform::PlatformInternal::Users::GetLinkedAccounts(::ArrayW<::Oculus::Platform::ServiceProvider> providers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformInternal::Users::GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformInternal/Users", "GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providers)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::LinkedAccountList*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, providers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PlatformSettings
#include "Oculus/Platform/PlatformSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.PlatformSettings instance
::Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::PlatformSettings*>("Oculus.Platform", "PlatformSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.PlatformSettings instance
void Oculus::Platform::PlatformSettings::_set_instance(::Oculus::Platform::PlatformSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PlatformSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String ovrAppID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::PlatformSettings::dyn_ovrAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::dyn_ovrAppID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrAppID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ovrMobileAppID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::PlatformSettings::dyn_ovrMobileAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::dyn_ovrMobileAppID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrMobileAppID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ovrUseStandalonePlatform
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::PlatformSettings::dyn_ovrUseStandalonePlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::dyn_ovrUseStandalonePlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrUseStandalonePlatform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_AppID
::StringW Oculus::Platform::PlatformSettings::get_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::get_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_AppID
void Oculus::Platform::PlatformSettings::set_AppID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::set_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_MobileAppID
::StringW Oculus::Platform::PlatformSettings::get_MobileAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::get_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_MobileAppID
void Oculus::Platform::PlatformSettings::set_MobileAppID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::set_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_UseStandalonePlatform
bool Oculus::Platform::PlatformSettings::get_UseStandalonePlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::get_UseStandalonePlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_UseStandalonePlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_UseStandalonePlatform
void Oculus::Platform::PlatformSettings::set_UseStandalonePlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::set_UseStandalonePlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_UseStandalonePlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.get_Instance
::Oculus::Platform::PlatformSettings* Oculus::Platform::PlatformSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PlatformSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.PlatformSettings.set_Instance
void Oculus::Platform::PlatformSettings::set_Instance(::Oculus::Platform::PlatformSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::PlatformSettings::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "PlatformSettings", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Oculus.Platform.Callback callback_
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message::Callback*& Oculus::Platform::Request::dyn_callback_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::dyn_callback_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <RequestID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Request::dyn_$RequestID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::dyn_$RequestID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Request.get_RequestID
uint64_t Oculus::Platform::Request::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Request.set_RequestID
void Oculus::Platform::Request::set_RequestID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::set_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Request.OnComplete
::Oculus::Platform::Request* Oculus::Platform::Request::OnComplete(::Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request*, false>(this, ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Request.HandleMessage
void Oculus::Platform::Request::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::HandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Request.RunCallbacks
void Oculus::Platform::Request::RunCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Request::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Request", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, limit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D74D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext Unknown
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext Unknown
void Oculus::Platform::RichPresenceExtraContext::_set_Unknown(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7508
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext None
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext None
void Oculus::Platform::RichPresenceExtraContext::_set_None(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "None", value));
}
// [DescriptionAttribute] Offset: 0x10D7540
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext CurrentCapacity
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_CurrentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_CurrentCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "CurrentCapacity"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext CurrentCapacity
void Oculus::Platform::RichPresenceExtraContext::_set_CurrentCapacity(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_CurrentCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "CurrentCapacity", value));
}
// [DescriptionAttribute] Offset: 0x10D7578
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext StartedAgo
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_StartedAgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_StartedAgo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "StartedAgo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext StartedAgo
void Oculus::Platform::RichPresenceExtraContext::_set_StartedAgo(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_StartedAgo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "StartedAgo", value));
}
// [DescriptionAttribute] Offset: 0x10D75B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext EndingIn
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_EndingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_EndingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "EndingIn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext EndingIn
void Oculus::Platform::RichPresenceExtraContext::_set_EndingIn(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_EndingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "EndingIn", value));
}
// [DescriptionAttribute] Offset: 0x10D75E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RichPresenceExtraContext LookingForAMatch
::Oculus::Platform::RichPresenceExtraContext Oculus::Platform::RichPresenceExtraContext::_get_LookingForAMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_get_LookingForAMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RichPresenceExtraContext>("Oculus.Platform", "RichPresenceExtraContext", "LookingForAMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RichPresenceExtraContext LookingForAMatch
void Oculus::Platform::RichPresenceExtraContext::_set_LookingForAMatch(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::_set_LookingForAMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RichPresenceExtraContext", "LookingForAMatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::RichPresenceExtraContext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceExtraContext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RichPresenceOptions
#include "Oculus/Platform/RichPresenceOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::RichPresenceOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetApiName
void Oculus::Platform::RichPresenceOptions::SetApiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetCurrentCapacity
void Oculus::Platform::RichPresenceOptions::SetCurrentCapacity(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetDeeplinkMessageOverride
void Oculus::Platform::RichPresenceOptions::SetDeeplinkMessageOverride(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetEndTime
void Oculus::Platform::RichPresenceOptions::SetEndTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetExtraContext
void Oculus::Platform::RichPresenceOptions::SetExtraContext(::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetInstanceId
void Oculus::Platform::RichPresenceOptions::SetInstanceId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetIsIdle
void Oculus::Platform::RichPresenceOptions::SetIsIdle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetIsJoinable
void Oculus::Platform::RichPresenceOptions::SetIsJoinable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetMaxCapacity
void Oculus::Platform::RichPresenceOptions::SetMaxCapacity(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.SetStartTime
void Oculus::Platform::RichPresenceOptions::SetStartTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RichPresenceOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::RichPresenceOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.RichPresenceOptions.Finalize
void Oculus::Platform::RichPresenceOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RichPresenceOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7620
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy None
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy None
void Oculus::Platform::RoomJoinPolicy::_set_None(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "None", value));
}
// [DescriptionAttribute] Offset: 0x10D7658
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy Everyone
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_Everyone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_Everyone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "Everyone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy Everyone
void Oculus::Platform::RoomJoinPolicy::_set_Everyone(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_Everyone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "Everyone", value));
}
// [DescriptionAttribute] Offset: 0x10D7690
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfMembers
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_FriendsOfMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_FriendsOfMembers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "FriendsOfMembers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfMembers
void Oculus::Platform::RoomJoinPolicy::_set_FriendsOfMembers(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_FriendsOfMembers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "FriendsOfMembers", value));
}
// [DescriptionAttribute] Offset: 0x10D76C8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfOwner
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_FriendsOfOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_FriendsOfOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "FriendsOfOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy FriendsOfOwner
void Oculus::Platform::RoomJoinPolicy::_set_FriendsOfOwner(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_FriendsOfOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "FriendsOfOwner", value));
}
// [DescriptionAttribute] Offset: 0x10D7700
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy InvitedUsers
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_InvitedUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "InvitedUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy InvitedUsers
void Oculus::Platform::RoomJoinPolicy::_set_InvitedUsers(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_InvitedUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "InvitedUsers", value));
}
// [DescriptionAttribute] Offset: 0x10D7738
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinPolicy Unknown
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::RoomJoinPolicy::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinPolicy>("Oculus.Platform", "RoomJoinPolicy", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinPolicy Unknown
void Oculus::Platform::RoomJoinPolicy::_set_Unknown(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinPolicy", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::RoomJoinPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7770
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability Unknown
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability Unknown
void Oculus::Platform::RoomJoinability::_set_Unknown(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D77A8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability AreIn
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_AreIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_AreIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "AreIn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability AreIn
void Oculus::Platform::RoomJoinability::_set_AreIn(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_AreIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "AreIn", value));
}
// [DescriptionAttribute] Offset: 0x10D77E0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability AreKicked
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_AreKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_AreKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "AreKicked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability AreKicked
void Oculus::Platform::RoomJoinability::_set_AreKicked(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_AreKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "AreKicked", value));
}
// [DescriptionAttribute] Offset: 0x10D7818
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability CanJoin
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_CanJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_CanJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "CanJoin"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability CanJoin
void Oculus::Platform::RoomJoinability::_set_CanJoin(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_CanJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "CanJoin", value));
}
// [DescriptionAttribute] Offset: 0x10D7850
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability IsFull
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_IsFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "IsFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability IsFull
void Oculus::Platform::RoomJoinability::_set_IsFull(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_IsFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "IsFull", value));
}
// [DescriptionAttribute] Offset: 0x10D7888
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability NoViewer
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_NoViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_NoViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "NoViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability NoViewer
void Oculus::Platform::RoomJoinability::_set_NoViewer(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_NoViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "NoViewer", value));
}
// [DescriptionAttribute] Offset: 0x10D78C0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomJoinability PolicyPrevents
::Oculus::Platform::RoomJoinability Oculus::Platform::RoomJoinability::_get_PolicyPrevents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_get_PolicyPrevents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomJoinability>("Oculus.Platform", "RoomJoinability", "PolicyPrevents"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomJoinability PolicyPrevents
void Oculus::Platform::RoomJoinability::_set_PolicyPrevents(::Oculus::Platform::RoomJoinability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::_set_PolicyPrevents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomJoinability", "PolicyPrevents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::RoomJoinability::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomJoinability::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D78F8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Unknown
::Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Unknown
void Oculus::Platform::RoomMembershipLockStatus::_set_Unknown(::Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7930
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Lock
::Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_get_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Lock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Lock
void Oculus::Platform::RoomMembershipLockStatus::_set_Lock(::Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_set_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Lock", value));
}
// [DescriptionAttribute] Offset: 0x10D7968
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Unlock
::Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_get_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Unlock
void Oculus::Platform::RoomMembershipLockStatus::_set_Unlock(::Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::_set_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Unlock", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::RoomMembershipLockStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomMembershipLockStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::RoomOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetDataStore
void Oculus::Platform::RoomOptions::SetDataStore(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.ClearDataStore
void Oculus::Platform::RoomOptions::ClearDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetExcludeRecentlyMet
void Oculus::Platform::RoomOptions::SetExcludeRecentlyMet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetMaxUserResults
void Oculus::Platform::RoomOptions::SetMaxUserResults(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetOrdering
void Oculus::Platform::RoomOptions::SetOrdering(::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetRecentlyMetTimeWindow
void Oculus::Platform::RoomOptions::SetRecentlyMetTimeWindow(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetRoomId
void Oculus::Platform::RoomOptions::SetRoomId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetTurnOffUpdates
void Oculus::Platform::RoomOptions::SetTurnOffUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::RoomOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.RoomOptions.Finalize
void Oculus::Platform::RoomOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D79A0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Unknown
::Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Unknown
void Oculus::Platform::RoomType::_set_Unknown(::Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D79D8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Matchmaking
::Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_get_Matchmaking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Matchmaking"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Matchmaking
void Oculus::Platform::RoomType::_set_Matchmaking(::Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_set_Matchmaking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Matchmaking", value));
}
// [DescriptionAttribute] Offset: 0x10D7A10
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Moderated
::Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Moderated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_get_Moderated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Moderated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Moderated
void Oculus::Platform::RoomType::_set_Moderated(::Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_set_Moderated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Moderated", value));
}
// [DescriptionAttribute] Offset: 0x10D7A48
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Private
::Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Private
void Oculus::Platform::RoomType::_set_Private(::Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Private", value));
}
// [DescriptionAttribute] Offset: 0x10D7A80
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Solo
::Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Solo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_get_Solo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Solo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Solo
void Oculus::Platform::RoomType::_set_Solo(::Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::_set_Solo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Solo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::RoomType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RoomType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RosterOptions
#include "Oculus/Platform/RosterOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::RosterOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RosterOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.RosterOptions.AddSuggestedUser
void Oculus::Platform::RosterOptions::AddSuggestedUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RosterOptions::AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.RosterOptions.ClearSuggestedUsers
void Oculus::Platform::RosterOptions::ClearSuggestedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RosterOptions::ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.RosterOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::RosterOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.RosterOptions.Finalize
void Oculus::Platform::RosterOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::RosterOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7AB8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType Unknown
::Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType Unknown
void Oculus::Platform::SdkAccountType::_set_Unknown(::Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7AF0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType Oculus
::Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType Oculus
void Oculus::Platform::SdkAccountType::_set_Oculus(::Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "Oculus", value));
}
// [DescriptionAttribute] Offset: 0x10D7B28
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType FacebookGameroom
::Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_FacebookGameroom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_get_FacebookGameroom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "FacebookGameroom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType FacebookGameroom
void Oculus::Platform::SdkAccountType::_set_FacebookGameroom(::Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::_set_FacebookGameroom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "FacebookGameroom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::SdkAccountType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SdkAccountType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7B60
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Unreliable
::Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_get_Unreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Unreliable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Unreliable
void Oculus::Platform::SendPolicy::_set_Unreliable(::Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_set_Unreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Unreliable", value));
}
// [DescriptionAttribute] Offset: 0x10D7B98
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Reliable
::Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_get_Reliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Reliable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Reliable
void Oculus::Platform::SendPolicy::_set_Reliable(::Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_set_Reliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Reliable", value));
}
// [DescriptionAttribute] Offset: 0x10D7BD0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Unknown
::Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Unknown
void Oculus::Platform::SendPolicy::_set_Unknown(::Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::SendPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SendPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7C08
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Unknown
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Unknown
void Oculus::Platform::ServiceProvider::_set_Unknown(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7C40
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Dropbox
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Dropbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_Dropbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Dropbox"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Dropbox
void Oculus::Platform::ServiceProvider::_set_Dropbox(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_Dropbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Dropbox", value));
}
// [DescriptionAttribute] Offset: 0x10D7C78
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Facebook
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Facebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_Facebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Facebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Facebook
void Oculus::Platform::ServiceProvider::_set_Facebook(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_Facebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Facebook", value));
}
// [DescriptionAttribute] Offset: 0x10D7CB0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Google
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Google() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_Google");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Google"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Google
void Oculus::Platform::ServiceProvider::_set_Google(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_Google");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Google", value));
}
// [DescriptionAttribute] Offset: 0x10D7CE8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Instagram
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Instagram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_Instagram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Instagram"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Instagram
void Oculus::Platform::ServiceProvider::_set_Instagram(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_Instagram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Instagram", value));
}
// [DescriptionAttribute] Offset: 0x10D7D20
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider RemoteMedia
::Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_RemoteMedia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_get_RemoteMedia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "RemoteMedia"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider RemoteMedia
void Oculus::Platform::ServiceProvider::_set_RemoteMedia(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::_set_RemoteMedia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "RemoteMedia", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ServiceProvider::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ServiceProvider::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7D58
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Unknown
::Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Unknown
void Oculus::Platform::ShareMediaStatus::_set_Unknown(::Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7D90
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Shared
::Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_get_Shared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Shared"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Shared
void Oculus::Platform::ShareMediaStatus::_set_Shared(::Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_set_Shared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Shared", value));
}
// [DescriptionAttribute] Offset: 0x10D7DC8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Canceled
::Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Canceled
void Oculus::Platform::ShareMediaStatus::_set_Canceled(::Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Canceled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ShareMediaStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ShareMediaStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.StandalonePlatform
#include "Oculus/Platform/StandalonePlatform.hpp"
// Including type: Oculus.Platform.StandalonePlatform/Oculus.Platform.UnityLogDelegate
#include "Oculus/Platform/StandalonePlatform_UnityLogDelegate.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatform.InitializeInEditor
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::StandalonePlatform::InitializeInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatform::InitializeInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::StandalonePlatform::AsyncInitialize(uint64_t appID, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appID, accessToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.StandalonePlatform/Oculus.Platform.UnityLogDelegate
#include "Oculus/Platform/StandalonePlatform_UnityLogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatform/Oculus.Platform.UnityLogDelegate.Invoke
void Oculus::Platform::StandalonePlatform::UnityLogDelegate::Invoke(::System::IntPtr tag, ::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatform::UnityLogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, msg);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform/Oculus.Platform.UnityLogDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Platform::StandalonePlatform::UnityLogDelegate::BeginInvoke(::System::IntPtr tag, ::System::IntPtr msg, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatform::UnityLogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, tag, msg, callback, object);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform/Oculus.Platform.UnityLogDelegate.EndInvoke
void Oculus::Platform::StandalonePlatform::UnityLogDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatform::UnityLogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.StandalonePlatformSettings
#include "Oculus/Platform/StandalonePlatformSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserEmail
::StringW Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserEmail
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserEmail(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserPassword
::StringW Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserPassword
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserPassword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserAccessToken
::StringW Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserAccessToken
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7E00
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Unknown
::Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Unknown
void Oculus::Platform::SystemVoipStatus::_set_Unknown(::Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7E38
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Unavailable
::Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Unavailable
void Oculus::Platform::SystemVoipStatus::_set_Unavailable(::Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Unavailable", value));
}
// [DescriptionAttribute] Offset: 0x10D7E70
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Suppressed
::Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Suppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_get_Suppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Suppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Suppressed
void Oculus::Platform::SystemVoipStatus::_set_Suppressed(::Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_set_Suppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Suppressed", value));
}
// [DescriptionAttribute] Offset: 0x10D7EA8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Active
::Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Active"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Active
void Oculus::Platform::SystemVoipStatus::_set_Active(::Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::SystemVoipStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::SystemVoipStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D7EE0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow Unknown
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow Unknown
void Oculus::Platform::TimeWindow::_set_Unknown(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D7F18
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneHour
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_OneHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneHour"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneHour
void Oculus::Platform::TimeWindow::_set_OneHour(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_OneHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneHour", value));
}
// [DescriptionAttribute] Offset: 0x10D7F50
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneDay
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_OneDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneDay"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneDay
void Oculus::Platform::TimeWindow::_set_OneDay(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_OneDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneDay", value));
}
// [DescriptionAttribute] Offset: 0x10D7F88
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneWeek
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_OneWeek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneWeek"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneWeek
void Oculus::Platform::TimeWindow::_set_OneWeek(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_OneWeek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneWeek", value));
}
// [DescriptionAttribute] Offset: 0x10D7FC0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow ThirtyDays
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_ThirtyDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_ThirtyDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "ThirtyDays"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow ThirtyDays
void Oculus::Platform::TimeWindow::_set_ThirtyDays(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_ThirtyDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "ThirtyDays", value));
}
// [DescriptionAttribute] Offset: 0x10D7FF8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow NinetyDays
::Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_NinetyDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_get_NinetyDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "NinetyDays"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow NinetyDays
void Oculus::Platform::TimeWindow::_set_NinetyDays(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::_set_NinetyDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "NinetyDays", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::TimeWindow::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::TimeWindow::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserOptions
#include "Oculus/Platform/UserOptions.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::UserOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.UserOptions.SetMaxUsers
void Oculus::Platform::UserOptions::SetMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.AddServiceProvider
void Oculus::Platform::UserOptions::AddServiceProvider(::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.ClearServiceProviders
void Oculus::Platform::UserOptions::ClearServiceProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.UserOptions.SetTimeWindow
void Oculus::Platform::UserOptions::SetTimeWindow(::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::UserOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.UserOptions.Finalize
void Oculus::Platform::UserOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D8030
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering Unknown
::Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering Unknown
void Oculus::Platform::UserOrdering::_set_Unknown(::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D8068
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering None
::Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering None
void Oculus::Platform::UserOrdering::_set_None(::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "None", value));
}
// [DescriptionAttribute] Offset: 0x10D80A0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering PresenceAlphabetical
::Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_PresenceAlphabetical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_get_PresenceAlphabetical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "PresenceAlphabetical"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering PresenceAlphabetical
void Oculus::Platform::UserOrdering::_set_PresenceAlphabetical(::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::_set_PresenceAlphabetical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "PresenceAlphabetical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::UserOrdering::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserOrdering::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D80D8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Unknown
::Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Unknown
void Oculus::Platform::UserPresenceStatus::_set_Unknown(::Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D8110
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Online
::Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Online
void Oculus::Platform::UserPresenceStatus::_set_Online(::Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Online", value));
}
// [DescriptionAttribute] Offset: 0x10D8148
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Offline
::Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Offline
void Oculus::Platform::UserPresenceStatus::_set_Offline(::Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::UserPresenceStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::UserPresenceStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipAudioSourceHiLevel
#include "Oculus/Platform/VoipAudioSourceHiLevel.hpp"
// Including type: Oculus.Platform.VoipAudioSourceHiLevel/Oculus.Platform.FilterReadDelegate
#include "Oculus/Platform/VoipAudioSourceHiLevel_FilterReadDelegate.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 audioSystemPlaybackFrequency
int Oculus::Platform::VoipAudioSourceHiLevel::_get_audioSystemPlaybackFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::_get_audioSystemPlaybackFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "VoipAudioSourceHiLevel", "audioSystemPlaybackFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 audioSystemPlaybackFrequency
void Oculus::Platform::VoipAudioSourceHiLevel::_set_audioSystemPlaybackFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::_set_audioSystemPlaybackFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipAudioSourceHiLevel", "audioSystemPlaybackFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean verboseLogging
bool Oculus::Platform::VoipAudioSourceHiLevel::_get_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::_get_verboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "VoipAudioSourceHiLevel", "verboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean verboseLogging
void Oculus::Platform::VoipAudioSourceHiLevel::_set_verboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::_set_verboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipAudioSourceHiLevel", "verboseLogging", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 initialPlaybackDelayMS
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipAudioSourceHiLevel::dyn_initialPlaybackDelayMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::dyn_initialPlaybackDelayMS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialPlaybackDelayMS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Oculus::Platform::VoipAudioSourceHiLevel::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single peakAmplitude
[[deprecated("Use field access instead!")]] float& Oculus::Platform::VoipAudioSourceHiLevel::dyn_peakAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::dyn_peakAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peakAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Oculus.Platform.IVoipPCMSource pcmSource
[[deprecated("Use field access instead!")]] ::Oculus::Platform::IVoipPCMSource*& Oculus::Platform::VoipAudioSourceHiLevel::dyn_pcmSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::dyn_pcmSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pcmSource"))->offset;
  return *reinterpret_cast<::Oculus::Platform::IVoipPCMSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.set_senderID
void Oculus::Platform::VoipAudioSourceHiLevel::set_senderID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::set_senderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_senderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel..cctor
void Oculus::Platform::VoipAudioSourceHiLevel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "VoipAudioSourceHiLevel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Stop
void Oculus::Platform::VoipAudioSourceHiLevel::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.SampleRateToEnum
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipAudioSourceHiLevel::SampleRateToEnum(int rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::SampleRateToEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRateToEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipSampleRate, false>(this, ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Awake
void Oculus::Platform::VoipAudioSourceHiLevel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Start
void Oculus::Platform::VoipAudioSourceHiLevel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.CreatePCMSource
void Oculus::Platform::VoipAudioSourceHiLevel::CreatePCMSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::CreatePCMSource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePCMSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.MSToElements
int Oculus::Platform::VoipAudioSourceHiLevel::MSToElements(int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::MSToElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "VoipAudioSourceHiLevel", "MSToElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ms);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Update
void Oculus::Platform::VoipAudioSourceHiLevel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipAudioSourceHiLevel/Oculus.Platform.FilterReadDelegate
#include "Oculus/Platform/VoipAudioSourceHiLevel_FilterReadDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.VoipAudioSourceHiLevel parent
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipAudioSourceHiLevel*& Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipAudioSourceHiLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] scratchBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::dyn_scratchBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::dyn_scratchBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scratchBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/Oculus.Platform.FilterReadDelegate.Awake
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/Oculus.Platform.FilterReadDelegate.OnAudioFilterRead
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D8180
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate Unknown
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate Unknown
void Oculus::Platform::VoipBitrate::_set_Unknown(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D81B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B16000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B16000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B16000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B16000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B16000
void Oculus::Platform::VoipBitrate::_set_B16000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B16000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B16000", value));
}
// [DescriptionAttribute] Offset: 0x10D81F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B24000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B24000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B24000
void Oculus::Platform::VoipBitrate::_set_B24000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B24000", value));
}
// [DescriptionAttribute] Offset: 0x10D8228
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B32000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B32000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B32000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B32000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B32000
void Oculus::Platform::VoipBitrate::_set_B32000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B32000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B32000", value));
}
// [DescriptionAttribute] Offset: 0x10D8260
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B64000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B64000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B64000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B64000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B64000
void Oculus::Platform::VoipBitrate::_set_B64000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B64000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B64000", value));
}
// [DescriptionAttribute] Offset: 0x10D8298
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B96000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B96000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B96000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B96000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B96000
void Oculus::Platform::VoipBitrate::_set_B96000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B96000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B96000", value));
}
// [DescriptionAttribute] Offset: 0x10D82D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B128000
::Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B128000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_get_B128000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B128000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B128000
void Oculus::Platform::VoipBitrate::_set_B128000(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::_set_B128000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B128000", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipBitrate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipBitrate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D8308
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Unknown
::Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Unknown
void Oculus::Platform::VoipDtxState::_set_Unknown(::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D8340
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Enabled
::Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Enabled
void Oculus::Platform::VoipDtxState::_set_Enabled(::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Enabled", value));
}
// [DescriptionAttribute] Offset: 0x10D8378
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Disabled
::Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Disabled
void Oculus::Platform::VoipDtxState::_set_Disabled(::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipDtxState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipDtxState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D83B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unknown
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unknown
void Oculus::Platform::VoipMuteState::_set_Unknown(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D83E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Muted
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Muted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Muted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Muted
void Oculus::Platform::VoipMuteState::_set_Muted(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Muted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Muted", value));
}
// [DescriptionAttribute] Offset: 0x10D8420
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unmuted
::Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unmuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_get_Unmuted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unmuted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unmuted
void Oculus::Platform::VoipMuteState::_set_Unmuted(::Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::_set_Unmuted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unmuted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipMuteState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipMuteState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::VoipOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipOptions.SetBitrateForNewConnections
void Oculus::Platform::VoipOptions::SetBitrateForNewConnections(::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.SetCreateNewConnectionUseDtx
void Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx(::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::VoipOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.VoipOptions.Finalize
void Oculus::Platform::VoipOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipPCMSourceNative
#include "Oculus/Platform/VoipPCMSourceNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 senderID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::VoipPCMSourceNative::dyn_senderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::dyn_senderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "senderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.GetPCM
int Oculus::Platform::VoipPCMSourceNative::GetPCM(::ArrayW<float> dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::GetPCM");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.SetSenderID
void Oculus::Platform::VoipPCMSourceNative::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::SetSenderID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.PeekSizeElements
int Oculus::Platform::VoipPCMSourceNative::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSizeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.Update
void Oculus::Platform::VoipPCMSourceNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipPCMSourceNative::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x10D8458
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate Unknown
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate Unknown
void Oculus::Platform::VoipSampleRate::_set_Unknown(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x10D8490
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ24000
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ24000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ24000
void Oculus::Platform::VoipSampleRate::_set_HZ24000(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ24000", value));
}
// [DescriptionAttribute] Offset: 0x10D84C8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ44100
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ44100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ44100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ44100"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ44100
void Oculus::Platform::VoipSampleRate::_set_HZ44100(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ44100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ44100", value));
}
// [DescriptionAttribute] Offset: 0x10D8500
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ48000
::Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ48000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_get_HZ48000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ48000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ48000
void Oculus::Platform::VoipSampleRate::_set_HZ48000(::Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::_set_HZ48000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ48000", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::VoipSampleRate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::VoipSampleRate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.WindowsPlatform
#include "Oculus/Platform/WindowsPlatform.hpp"
// Including type: Oculus.Platform.WindowsPlatform/Oculus.Platform.UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform.CPPLogCallback
void Oculus::Platform::WindowsPlatform::CPPLogCallback(::System::IntPtr tag, ::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::CPPLogCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CPPLogCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.getCallbackPointer
::System::IntPtr Oculus::Platform::WindowsPlatform::getCallbackPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::getCallbackPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCallbackPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.Initialize
bool Oculus::Platform::WindowsPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::WindowsPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform/Oculus.Platform.UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform/Oculus.Platform.UnityLogDelegate.Invoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke(::System::IntPtr tag, ::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, msg);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/Oculus.Platform.UnityLogDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke(::System::IntPtr tag, ::System::IntPtr msg, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, tag, msg, callback, object);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/Oculus.Platform.UnityLogDelegate.EndInvoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String RecordingUuid
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AbuseReportRecording::dyn_RecordingUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AbuseReportRecording::dyn_RecordingUuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecordingUuid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.AchievementType Type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::AchievementType& Oculus::Platform::Models::AchievementDefinition::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::AchievementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementDefinition::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 BitfieldLength
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::AchievementDefinition::dyn_BitfieldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_BitfieldLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BitfieldLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 Target
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AchievementDefinition::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementDefinition::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Bitfield
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementProgress::dyn_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Bitfield");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bitfield"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 Count
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AchievementProgress::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsUnlocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AchievementProgress::dyn_IsUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_IsUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementProgress::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime UnlockTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::AchievementProgress::dyn_UnlockTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementProgress::dyn_UnlockTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnlockTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean JustUnlocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AchievementUpdate::dyn_JustUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementUpdate::dyn_JustUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JustUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AchievementUpdate::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AchievementUpdate::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CurrentCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ApplicationVersion::dyn_CurrentCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_CurrentCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String CurrentName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationVersion::dyn_CurrentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_CurrentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LatestCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ApplicationVersion::dyn_LatestCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_LatestCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LatestName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ApplicationVersion::dyn_LatestName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ApplicationVersion::dyn_LatestName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetDetails::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String AssetType
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_AssetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_AssetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DownloadStatus
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_DownloadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_DownloadStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DownloadStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String IapStatus
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_IapStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_IapStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IapStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.LanguagePackInfo LanguageOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::LanguagePackInfo*& Oculus::Platform::Models::AssetDetails::dyn_LanguageOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_LanguageOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LanguageOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::LanguagePackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.LanguagePackInfo Language
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::LanguagePackInfo*& Oculus::Platform::Models::AssetDetails::dyn_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Language"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::LanguagePackInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Metadata
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetDetails::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetDetails::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDeleteResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDeleteResult::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDeleteResult::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadCancelResult::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadResult::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadResult::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Filepath
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::AssetFileDownloadResult::dyn_Filepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadResult::dyn_Filepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filepath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetFileId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetFileId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetFileId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetFileId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 AssetId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_AssetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 BytesTotal
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTotal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesTotal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 BytesTransferred
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_BytesTransferred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesTransferred"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Completed
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::AssetFileDownloadUpdate::dyn_Completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CountdownMS
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::CalApplicationFinalized::dyn_CountdownMS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationFinalized::dyn_CountdownMS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CountdownMS"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::CalApplicationFinalized::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationFinalized::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LaunchDetails
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CalApplicationFinalized::dyn_LaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationFinalized::dyn_LaunchDetails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaunchDetails"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::CalApplicationProposed::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationProposed::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationSuggestion
#include "Oculus/Platform/Models/CalApplicationSuggestion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::CalApplicationSuggestion::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationSuggestion::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SocialContext
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CalApplicationSuggestion::dyn_SocialContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CalApplicationSuggestion::dyn_SocialContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SocialContext"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestion
#include "Oculus/Platform/Models/CalApplicationSuggestion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ChallengeCreationType CreationType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ChallengeCreationType& Oculus::Platform::Models::Challenge::dyn_CreationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_CreationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ChallengeCreationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Challenge::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime EndDate
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Challenge::dyn_EndDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_EndDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Challenge::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Leaderboard Leaderboard
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Leaderboard*& Oculus::Platform::Models::Challenge::dyn_Leaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Leaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leaderboard"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Leaderboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList ParticipantsOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_ParticipantsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_ParticipantsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParticipantsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Participants
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Challenge::dyn_Participants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Participants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Participants"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime StartDate
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Challenge::dyn_StartDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_StartDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Title
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Challenge::dyn_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ChallengeVisibility Visibility
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ChallengeVisibility& Oculus::Platform::Models::Challenge::dyn_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Challenge::dyn_Visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visibility"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ChallengeVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ChallengeList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayScore
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::ChallengeEntry::dyn_DisplayScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_DisplayScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayScore"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] ExtraData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::ChallengeEntry::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Rank
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::ChallengeEntry::dyn_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Score
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::ChallengeEntry::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime Timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::ChallengeEntry::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::ChallengeEntry::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntry::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::ChallengeEntryList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ChallengeEntryList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.CloudStorageMetadata Local
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::CloudStorageMetadata*& Oculus::Platform::Models::CloudStorageConflictMetadata::dyn_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageConflictMetadata::dyn_Local");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Local"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::CloudStorageMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.CloudStorageMetadata Remote
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::CloudStorageMetadata*& Oculus::Platform::Models::CloudStorageConflictMetadata::dyn_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageConflictMetadata::dyn_Remote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Remote"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::CloudStorageMetadata**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Bucket
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageData::dyn_Bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageData::dyn_Bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bucket"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] Data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::CloudStorageData::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageData::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 DataSize
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::CloudStorageData::dyn_DataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageData::dyn_DataSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Key
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageData::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageData::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Bucket
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageMetadata::dyn_Bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_Bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bucket"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Counter
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::CloudStorageMetadata::dyn_Counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_Counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Counter"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 DataSize
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::CloudStorageMetadata::dyn_DataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_DataSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ExtraData
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageMetadata::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Key
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageMetadata::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SaveTime
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::CloudStorageMetadata::dyn_SaveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_SaveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SaveTime"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.CloudStorageDataStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::CloudStorageDataStatus& Oculus::Platform::Models::CloudStorageMetadata::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::CloudStorageDataStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VersionHandle
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageMetadata::dyn_VersionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageMetadata::dyn_VersionHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionHandle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Bucket
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bucket"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Key
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.CloudStorageUpdateStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::CloudStorageUpdateStatus& Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::CloudStorageUpdateStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VersionHandle
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_VersionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::CloudStorageUpdateResponse::dyn_VersionHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionHandle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_ApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_ApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Destination::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Destination::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Code
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Error::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 HttpCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Error::dyn_HttpCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_HttpCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Error::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Error::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_LobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_LobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String MatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_MatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceJoinIntent::dyn_MatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_LobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_LobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String MatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_MatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::GroupPresenceLeaveIntent::dyn_MatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::HttpTransferUpdate::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] Payload
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::HttpTransferUpdate::dyn_Payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_Payload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Payload"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsCompleted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::HttpTransferUpdate::dyn_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::HttpTransferUpdate::dyn_IsCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsCompleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApplicationId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_ApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_ApplicationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PackageName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_PackageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_PackageName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PackageName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Status
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 VersionCode
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::InstalledApplication::dyn_VersionCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_VersionCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VersionName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::InstalledApplication::dyn_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InstalledApplication::dyn_VersionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean InvitesSent
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::InvitePanelResultInfo::dyn_InvitesSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::InvitePanelResultInfo::dyn_InvitesSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitesSent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String EnglishName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_EnglishName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_EnglishName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnglishName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String NativeName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_NativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_NativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NativeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Tag
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LanguagePackInfo::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LanguagePackInfo::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidBlock
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidBlock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchBlockFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_DeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_DeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String DestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_DestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_DestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String LaunchSource
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_LaunchSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_LaunchSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaunchSource"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LaunchType LaunchType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LaunchType& Oculus::Platform::Models::LaunchDetails::dyn_LaunchType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_LaunchType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaunchType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LaunchType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LaunchDetails::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TrackingID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LaunchDetails::dyn_TrackingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_TrackingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchDetails::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchDetails::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchDetails::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidSendRequest
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidSendRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchFriendRequestFlowResult::dyn_DidSendRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidSendRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::LaunchInvitePanelFlowResult::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchInvitePanelFlowResult::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchReportFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchReportFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserReportId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LaunchReportFlowResult::dyn_UserReportId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchReportFlowResult::dyn_UserReportId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserReportId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidUnblock
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LaunchUnblockFlowResult::dyn_DidUnblock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidUnblock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Leaderboard::dyn_ApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_ApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination DestinationOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::Leaderboard::dyn_DestinationOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_DestinationOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Destination Destination
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Destination*& Oculus::Platform::Models::Leaderboard::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Destination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Leaderboard::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Leaderboard::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayScore
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LeaderboardEntry::dyn_DisplayScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_DisplayScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayScore"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] ExtraData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Models::LeaderboardEntry::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Rank
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LeaderboardEntry::dyn_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Score
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::LeaderboardEntry::dyn_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Score"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.SupplementaryMetric SupplementaryMetricOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::SupplementaryMetric*& Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetricOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetricOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupplementaryMetricOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::SupplementaryMetric**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.SupplementaryMetric SupplementaryMetric
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::SupplementaryMetric*& Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_SupplementaryMetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupplementaryMetric"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::SupplementaryMetric**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime Timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::LeaderboardEntry::dyn_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_Timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::LeaderboardEntry::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntry::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 TotalCount
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::LeaderboardEntryList::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LeaderboardEntryList::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String AccessToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_AccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_AccessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ServiceProvider ServiceProvider
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ServiceProvider& Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServiceProvider"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ServiceProvider*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean StreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LivestreamingStartStatus StreamingResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LivestreamingStartStatus& Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LivestreamingStartStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CommentsVisible
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsPaused
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean LivestreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LivestreamingType
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CommentCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ReactionCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TotalViews
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalViews"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList Candidates
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList*& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Candidates"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CanMatch
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TraceId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TraceId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult EnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.RoomList Rooms
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::RoomList*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rooms"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::RoomList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshotOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshotOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshot
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshot"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 AverageWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AverageWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MatchesInLastHourCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchesInLastHourCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxExpectedWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxExpectedWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Pool
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pool"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 RecentMatchPercentage
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecentMatchPercentage"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String RequestHash
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult MatchmakingEnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingEnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User UserOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 DrawCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 LossCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_LossCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_LossCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 SkillLevel
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillMean
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillMean"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillStandardDeviation
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillStandardDeviation"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 WinCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_WinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_WinCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WinCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicrophoneAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncDisconnectReason DisconnectReason
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncDisconnectReason& Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectReason"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncDisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncConnection::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncConnectionStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncConnectionStatus& Oculus::Platform::Models::NetSyncConnection::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncConnectionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ZoneId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Muted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::NetSyncSession::dyn_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VoipGroup
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoipGroup"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSessionList Sessions
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSessionList*& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sessions"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSessionList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSession Session
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSession*& Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Session"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Decibels
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decibels"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Distance
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
::Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::OrgScopedID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::OrgScopedID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Party::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User LeaderOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_LeaderOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_LeaderOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Leader
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_Leader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Leader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leader"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PartyUpdateAction Action
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PartyUpdateAction& Oculus::Platform::Models::PartyUpdateNotification::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PartyUpdateAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 PartyId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PartyId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UpdateTimestamp
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTimestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserAlias
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Id
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Pid::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Pid::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.UInt64> pingTimeUsec
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint64_t>& Oculus::Platform::Models::PingResult::dyn_pingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_pingTimeUsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTimeUsec"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PlatformInitializeResult Result
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PlatformInitializeResult& Oculus::Platform::Models::PlatformInitialize::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PlatformInitialize::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PlatformInitializeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String FormattedPrice
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_FormattedPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_FormattedPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormattedPrice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime ExpirationTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime GrantTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_GrantTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_GrantTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrantTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ApplicationID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ApplicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ApplicationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> DataStore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::Room::dyn_DataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_DataStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataStore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsMembershipLocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::Room::dyn_IsMembershipLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_IsMembershipLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsMembershipLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinPolicy JoinPolicy
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinPolicy& Oculus::Platform::Models::Room::dyn_JoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_JoinPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinPolicy"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinability Joinability
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinability& Oculus::Platform::Models::Room::dyn_Joinability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Joinability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joinability"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinability*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxUsers
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User OwnerOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_OwnerOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_OwnerOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Owner
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Owner"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList TeamsOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_TeamsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_TeamsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList Teams
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_Teams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Teams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teams"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomType Type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomType& Oculus::Platform::Models::Room::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 Version
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime SentTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Metric
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_Metric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_Metric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metric"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean HasPermission
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::SystemPermission::dyn_HasPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_HasPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PermissionGrantStatus PermissionGrantStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PermissionGrantStatus& Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionGrantStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PermissionGrantStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList AssignedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Team::dyn_AssignedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_AssignedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MaxUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MinUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MinUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MinUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Team::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String InviteToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_InviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_InviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceLobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceLobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceLobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceLobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceMatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceMatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceMatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceMatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::UserAndRoom::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cameraInTrackingSpace
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraInTrackingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRComposition::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean usingLastAttachedNodePose
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingLastAttachedNodePose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRPose lastAttachedNodePose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPose& GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttachedNodePose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy_(ByRef<::UnityEngine::GameObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(obj));
}
// Autogenerated method: OVRCompositionUtil.ConvertCameraDevice
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice(::GlobalNamespace::OVRManager_CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ConvertCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::CameraDevice, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRCompositionUtil.ToBoundaryType
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRCompositionUtil::ToBoundaryType(::GlobalNamespace::OVRManager_VirtualGreenScreenType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ToBoundaryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ToBoundaryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Camera* camera, ::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(::UnityEngine::Camera* camera, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
::UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(topY), ::il2cpp_utils::ExtractType(bottomY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject foregroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera foregroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backgroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera backgroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean renderCombinedFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderCombinedFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioListener audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& GlobalNamespace::OVRExternalComposition::dyn_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRMRAudioFilter audioFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMRAudioFilter*& GlobalNamespace::OVRExternalComposition::dyn_audioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMRAudioFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_frameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_frameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastMrcEncodeFrameSyncId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMrcEncodeFrameSyncId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcForegroundRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcForegroundRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double[] cameraPoseTimeArray
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraPoseTimeArray"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] cachedAudioDataArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioDataArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object audioDataLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRExternalComposition::dyn_audioDataLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioDataLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDataLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> cachedAudioData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cachedChannels
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_cachedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera, configuration);
}
// Autogenerated method: OVRExternalComposition.RefreshAudioFilter
void GlobalNamespace::OVRExternalComposition::RefreshAudioFilter(::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainCamera);
}
// Autogenerated method: OVRExternalComposition.CastMrcFrame
int GlobalNamespace::OVRExternalComposition::CastMrcFrame(int castTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CastMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(castTextureIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, castTextureIndex);
}
// Autogenerated method: OVRExternalComposition.SetCameraTargetTexture
void GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture(int drawTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraTargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drawTextureIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawTextureIndex);
}
// Autogenerated method: OVRExternalComposition.CleanupAudioFilter
void GlobalNamespace::OVRExternalComposition::CleanupAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CleanupAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(ByRef<::ArrayW<float>> audioData, ByRef<int> audioFrames, ByRef<int> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(audioData), byref(audioFrames), byref(channels));
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean running
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRMRAudioFilter::dyn_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRExternalComposition composition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRExternalComposition*& GlobalNamespace::OVRMRAudioFilter::dyn_composition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_composition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "composition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRExternalComposition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRMRAudioFilter.Start
void GlobalNamespace::OVRMRAudioFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMRAudioFilter.OnAudioFilterRead
void GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::ArrayW<float> GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRBoundary::dyn_cachedGeometryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::dyn_cachedGeometryList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedGeometryList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(::GlobalNamespace::OVRBoundary::Node node, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(::UnityEngine::Vector3 point, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVRBoundary::GetGeometry(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
::UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackingSpace>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingSpace>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <centerEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRCameraRig> UpdatedAnchors
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRCameraRig*>*& GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedAnchors"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRCameraRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePerEyeCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePerEyeCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedUpdateForTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedUpdateForTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableEyeAnchorCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableEyeAnchorCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _skipUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn__skipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__skipUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackingSpaceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingSpaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String centerEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _centerEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _leftEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _rightEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::UpdateAnchors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateEyeAnchors), ::il2cpp_utils::ExtractType(updateHandAnchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRenderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseUpdatedAnchorsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureGameObjectIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(::UnityEngine::Transform* root, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ConfigureAnchor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeTrackReferenceMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose, mainCamera);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(isLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(::UnityEngine::Transform* t, ::GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(::GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
::UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(::GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
::GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector4f
::UnityEngine::Vector4 GlobalNamespace::OVRExtensions::FromVector4f(::GlobalNamespace::OVRPlugin::Vector4f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector4f
::GlobalNamespace::OVRPlugin::Vector4f GlobalNamespace::OVRExtensions::ToVector4f(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector4f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
::OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
::UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated method: OVRExtensions.Equals
bool GlobalNamespace::OVRExtensions::Equals(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated method: OVRExtensions.CopyFrom
void GlobalNamespace::OVRExtensions::CopyFrom(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NodeStatePropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(::UnityEngine::XR::XRNode nodeType, ByRef<::UnityEngine::XR::XRNodeState> requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(requestedNodeState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, byref(requestedNodeState));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retQuat));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRPose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRPose::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPose.get_identity
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
::GlobalNamespace::OVRPose GlobalNamespace::operator*(const ::GlobalNamespace::OVRPose& lhs, const ::GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRNativeBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numBytes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVRNativeBuffer::dyn_m_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
::System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowPitchLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowPitchLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowYawLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowYawLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertPitch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertPitch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_PitchDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_PitchDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_YawDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_YawDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ForwardSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForwardSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrafeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrafeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRDebugHeadController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean needsConfigureTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsConfigureTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRDisplay/EyeRenderDesc[] eyeDescs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>& GlobalNamespace::OVRDisplay::dyn_eyeDescs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_eyeDescs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeDescs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recenterRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_recenterRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 recenterRequestedFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequestedFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localTrackingSpaceRecenterCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpaceRecenterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RecenteredPose
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRDisplay::dyn_RecenteredPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_RecenteredPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecenteredPose"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDisplay.get_acceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_latency
::GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
::GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*>>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHaptics/OVRHapticsOutput m_output
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHaptics::OVRHapticsOutput*& GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_output"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHaptics::OVRHapticsOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_lowLatencyMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lowLatencyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_paddingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_prevSamplesQueued
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueued"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_prevSamplesQueuedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueuedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionMisses
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionMisses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numUnderruns
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numUnderruns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_controller
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRNativeBuffer m_nativeBuffer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRNativeBuffer*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nativeBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRNativeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip m_paddingClip
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingClip"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
