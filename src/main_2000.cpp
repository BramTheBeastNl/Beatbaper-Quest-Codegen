// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_RawData
::Array<uint8_t>* LiteNetLib::Utils::NetDataReader::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_RawDataSize
int LiteNetLib::Utils::NetDataReader::get_RawDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_RawDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_UserDataOffset
int LiteNetLib::Utils::NetDataReader::get_UserDataOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_UserDataOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDataOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_UserDataSize
int LiteNetLib::Utils::NetDataReader::get_UserDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_UserDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_IsNull
bool LiteNetLib::Utils::NetDataReader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_Position
int LiteNetLib::Utils::NetDataReader::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_EndOfData
bool LiteNetLib::Utils::NetDataReader::get_EndOfData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_EndOfData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.get_AvailableBytes
int LiteNetLib::Utils::NetDataReader::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SkipBytes
void LiteNetLib::Utils::NetDataReader::SkipBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SkipBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(LiteNetLib::Utils::NetDataWriter* dataWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataWriter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataWriter);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::Array<uint8_t>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::Array<uint8_t>* source, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, offset);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.SetSource
void LiteNetLib::Utils::NetDataReader::SetSource(::Array<uint8_t>* source, int offset, int maxSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::SetSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(maxSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, offset, maxSize);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetNetEndPoint
System::Net::IPEndPoint* LiteNetLib::Utils::NetDataReader::GetNetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetNetEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetByte
uint8_t LiteNetLib::Utils::NetDataReader::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetSByte
int8_t LiteNetLib::Utils::NetDataReader::GetSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBoolArray
::Array<bool>* LiteNetLib::Utils::NetDataReader::GetBoolArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBoolArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUShortArray
::Array<uint16_t>* LiteNetLib::Utils::NetDataReader::GetUShortArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint16_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetShortArray
::Array<int16_t>* LiteNetLib::Utils::NetDataReader::GetShortArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetLongArray
::Array<int64_t>* LiteNetLib::Utils::NetDataReader::GetLongArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetULongArray
::Array<uint64_t>* LiteNetLib::Utils::NetDataReader::GetULongArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetULongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetULongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint64_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetIntArray
::Array<int>* LiteNetLib::Utils::NetDataReader::GetIntArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUIntArray
::Array<uint>* LiteNetLib::Utils::NetDataReader::GetUIntArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetFloatArray
::Array<float>* LiteNetLib::Utils::NetDataReader::GetFloatArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetDoubleArray
::Array<double>* LiteNetLib::Utils::NetDataReader::GetDoubleArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetStringArray
::Array<::Il2CppString*>* LiteNetLib::Utils::NetDataReader::GetStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetStringArray
::Array<::Il2CppString*>* LiteNetLib::Utils::NetDataReader::GetStringArray(int maxStringLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxStringLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, maxStringLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBool
bool LiteNetLib::Utils::NetDataReader::GetBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetChar
::Il2CppChar LiteNetLib::Utils::NetDataReader::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUShort
uint16_t LiteNetLib::Utils::NetDataReader::GetUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetShort
int16_t LiteNetLib::Utils::NetDataReader::GetShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetLong
int64_t LiteNetLib::Utils::NetDataReader::GetLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetULong
uint64_t LiteNetLib::Utils::NetDataReader::GetULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetInt
int LiteNetLib::Utils::NetDataReader::GetInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetUInt
uint LiteNetLib::Utils::NetDataReader::GetUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetFloat
float LiteNetLib::Utils::NetDataReader::GetFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetDouble
double LiteNetLib::Utils::NetDataReader::GetDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetString
::Il2CppString* LiteNetLib::Utils::NetDataReader::GetString(int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetString
::Il2CppString* LiteNetLib::Utils::NetDataReader::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetRemainingBytesSegment
System::ArraySegment_1<uint8_t> LiteNetLib::Utils::NetDataReader::GetRemainingBytesSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetRemainingBytesSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingBytesSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::ArraySegment_1<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetRemainingBytes
::Array<uint8_t>* LiteNetLib::Utils::NetDataReader::GetRemainingBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetRemainingBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytes
void LiteNetLib::Utils::NetDataReader::GetBytes(::Array<uint8_t>* destination, int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, destination, start, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytes
void LiteNetLib::Utils::NetDataReader::GetBytes(::Array<uint8_t>* destination, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, destination, count);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetSBytesWithLength
::Array<int8_t>* LiteNetLib::Utils::NetDataReader::GetSBytesWithLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.GetBytesWithLength
::Array<uint8_t>* LiteNetLib::Utils::NetDataReader::GetBytesWithLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::GetBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekByte
uint8_t LiteNetLib::Utils::NetDataReader::PeekByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekSByte
int8_t LiteNetLib::Utils::NetDataReader::PeekSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekBool
bool LiteNetLib::Utils::NetDataReader::PeekBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekChar
::Il2CppChar LiteNetLib::Utils::NetDataReader::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekUShort
uint16_t LiteNetLib::Utils::NetDataReader::PeekUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekShort
int16_t LiteNetLib::Utils::NetDataReader::PeekShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekLong
int64_t LiteNetLib::Utils::NetDataReader::PeekLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekULong
uint64_t LiteNetLib::Utils::NetDataReader::PeekULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekInt
int LiteNetLib::Utils::NetDataReader::PeekInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekUInt
uint LiteNetLib::Utils::NetDataReader::PeekUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekFloat
float LiteNetLib::Utils::NetDataReader::PeekFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekDouble
double LiteNetLib::Utils::NetDataReader::PeekDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekString
::Il2CppString* LiteNetLib::Utils::NetDataReader::PeekString(int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.PeekString
::Il2CppString* LiteNetLib::Utils::NetDataReader::PeekString() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::PeekString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetByte
bool LiteNetLib::Utils::NetDataReader::TryGetByte(uint8_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetSByte
bool LiteNetLib::Utils::NetDataReader::TryGetSByte(int8_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int8_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetBool
bool LiteNetLib::Utils::NetDataReader::TryGetBool(bool& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetChar
bool LiteNetLib::Utils::NetDataReader::TryGetChar(::Il2CppChar& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetShort
bool LiteNetLib::Utils::NetDataReader::TryGetShort(int16_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int16_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetUShort
bool LiteNetLib::Utils::NetDataReader::TryGetUShort(uint16_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint16_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetInt
bool LiteNetLib::Utils::NetDataReader::TryGetInt(int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetUInt
bool LiteNetLib::Utils::NetDataReader::TryGetUInt(uint& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetLong
bool LiteNetLib::Utils::NetDataReader::TryGetLong(int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetULong
bool LiteNetLib::Utils::NetDataReader::TryGetULong(uint64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetFloat
bool LiteNetLib::Utils::NetDataReader::TryGetFloat(float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetDouble
bool LiteNetLib::Utils::NetDataReader::TryGetDouble(double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetString
bool LiteNetLib::Utils::NetDataReader::TryGetString(::Il2CppString*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetStringArray
bool LiteNetLib::Utils::NetDataReader::TryGetStringArray(::Array<::Il2CppString*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.TryGetBytesWithLength
bool LiteNetLib::Utils::NetDataReader::TryGetBytesWithLength(::Array<uint8_t>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::TryGetBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated method: LiteNetLib.Utils.NetDataReader.Clear
void LiteNetLib::Utils::NetDataReader::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataReader::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int LiteNetLib::Utils::NetDataWriter::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib.Utils", "NetDataWriter", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void LiteNetLib::Utils::NetDataWriter::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NetDataWriter", "InitialSize", value));
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Capacity
int LiteNetLib::Utils::NetDataWriter::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromBytes
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromBytes(::Array<uint8_t>* bytes, bool copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, copy);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromBytes
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromBytes(::Array<uint8_t>* bytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.FromString
LiteNetLib::Utils::NetDataWriter* LiteNetLib::Utils::NetDataWriter::FromString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::FromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NetDataWriter", "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.ResizeIfNeed
void LiteNetLib::Utils::NetDataWriter::ResizeIfNeed(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::ResizeIfNeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeIfNeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Reset
void LiteNetLib::Utils::NetDataWriter::Reset(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Reset
void LiteNetLib::Utils::NetDataWriter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.CopyData
::Array<uint8_t>* LiteNetLib::Utils::NetDataWriter::CopyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::CopyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Data
::Array<uint8_t>* LiteNetLib::Utils::NetDataWriter::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.get_Length
int LiteNetLib::Utils::NetDataWriter::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutSBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength(::Array<int8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutSBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength(::Array<int8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutSBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutSBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutBytesWithLength(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutBytesWithLength
void LiteNetLib::Utils::NetDataWriter::PutBytesWithLength(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutBytesWithLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutBytesWithLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(System::Array* arr, int sz) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(sz)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arr, sz);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.PutArray
void LiteNetLib::Utils::NetDataWriter::PutArray(::Array<::Il2CppString*>* value, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::PutArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, maxLength);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NetDataWriter.Put
void LiteNetLib::Utils::NetDataWriter::Put(::Il2CppString* value, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetDataWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, maxLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetPacketProcessor
#include "LiteNetLib/Utils/NetPacketProcessor.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/HashCache`1
#include "LiteNetLib/Utils/NetPacketProcessor_HashCache_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/SubscribeDelegate
#include "LiteNetLib/Utils/NetPacketProcessor_SubscribeDelegate.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass25_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass25_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass26_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass26_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass27_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass27_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass28_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass28_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass29_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass29_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass30_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass30_0_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass31_0`2
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass31_0_2.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor/<>c__DisplayClass32_0`1
#include "LiteNetLib/Utils/NetPacketProcessor_--c__DisplayClass32_0_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer
#include "LiteNetLib/Utils/NetSerializer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.GetCallbackFromData
LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate* LiteNetLib::Utils::NetPacketProcessor::GetCallbackFromData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::GetCallbackFromData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCallbackFromData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate*, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadAllPackets
void LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAllPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadAllPackets
void LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadAllPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAllPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadPacket
void LiteNetLib::Utils::NetPacketProcessor::ReadPacket(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor.ReadPacket
void LiteNetLib::Utils::NetPacketProcessor::ReadPacket(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetPacketProcessor/SubscribeDelegate
#include "LiteNetLib/Utils/NetPacketProcessor_SubscribeDelegate.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/SubscribeDelegate.Invoke
void LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::Invoke(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader, userData);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/SubscribeDelegate.BeginInvoke
System::IAsyncResult* LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::BeginInvoke(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppObject* userData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, reader, userData, callback, object);
}
// Autogenerated method: LiteNetLib.Utils.NetPacketProcessor/SubscribeDelegate.EndInvoke
void LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NetPacketProcessor::SubscribeDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.InvalidTypeException
#include "LiteNetLib/Utils/InvalidTypeException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.ParseException
#include "LiteNetLib/Utils/ParseException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NetSerializer
#include "LiteNetLib/Utils/NetSerializer.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCall`1
#include "LiteNetLib/Utils/NetSerializer_FastCall_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallSpecific`2
#include "LiteNetLib/Utils/NetSerializer_FastCallSpecific_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallSpecificAuto`2
#include "LiteNetLib/Utils/NetSerializer_FastCallSpecificAuto_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallStatic`2
#include "LiteNetLib/Utils/NetSerializer_FastCallStatic_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallStruct`2
#include "LiteNetLib/Utils/NetSerializer_FastCallStruct_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCallClass`2
#include "LiteNetLib/Utils/NetSerializer_FastCallClass_2.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/IntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_IntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/UIntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_UIntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/ShortSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ShortSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/UShortSerializer`1
#include "LiteNetLib/Utils/NetSerializer_UShortSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/LongSerializer`1
#include "LiteNetLib/Utils/NetSerializer_LongSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/ULongSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ULongSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/ByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_ByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/SByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_SByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FloatSerializer`1
#include "LiteNetLib/Utils/NetSerializer_FloatSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/DoubleSerializer`1
#include "LiteNetLib/Utils/NetSerializer_DoubleSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/BoolSerializer`1
#include "LiteNetLib/Utils/NetSerializer_BoolSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/CharSerializer`1
#include "LiteNetLib/Utils/NetSerializer_CharSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/IPEndPointSerializer`1
#include "LiteNetLib/Utils/NetSerializer_IPEndPointSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/StringSerializer`1
#include "LiteNetLib/Utils/NetSerializer_StringSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/EnumByteSerializer`1
#include "LiteNetLib/Utils/NetSerializer_EnumByteSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/EnumIntSerializer`1
#include "LiteNetLib/Utils/NetSerializer_EnumIntSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/ClassInfo`1
#include "LiteNetLib/Utils/NetSerializer_ClassInfo_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/CustomType
#include "LiteNetLib/Utils/NetSerializer_CustomType.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/CustomTypeStruct`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeStruct_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/CustomTypeClass`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeClass_1.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/CustomTypeStatic`1
#include "LiteNetLib/Utils/NetSerializer_CustomTypeStatic_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NetSerializer/CustomType
#include "LiteNetLib/Utils/NetSerializer_CustomType.hpp"
// Including type: LiteNetLib.Utils.NetSerializer/FastCall`1
#include "LiteNetLib/Utils/NetSerializer_FastCall_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NtpPacket
#include "LiteNetLib/Utils/NtpPacket.hpp"
// Including type: LiteNetLib.Utils.NtpLeapIndicator
#include "LiteNetLib/Utils/NtpLeapIndicator.hpp"
// Including type: LiteNetLib.Utils.NtpMode
#include "LiteNetLib/Utils/NtpMode.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime Epoch
System::DateTime LiteNetLib::Utils::NtpPacket::_get_Epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::_get_Epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("LiteNetLib.Utils", "NtpPacket", "Epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime Epoch
void LiteNetLib::Utils::NtpPacket::_set_Epoch(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::_set_Epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpPacket", "Epoch", value));
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Bytes
::Array<uint8_t>* LiteNetLib::Utils::NtpPacket::get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_Bytes
void LiteNetLib::Utils::NtpPacket::set_Bytes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_Bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_LeapIndicator
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpPacket::get_LeapIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_LeapIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeapIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpLeapIndicator, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_VersionNumber
int LiteNetLib::Utils::NtpPacket::get_VersionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_VersionNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VersionNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_VersionNumber
void LiteNetLib::Utils::NtpPacket::set_VersionNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_VersionNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VersionNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Mode
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpPacket::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpMode, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_Mode
void LiteNetLib::Utils::NtpPacket::set_Mode(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Stratum
int LiteNetLib::Utils::NtpPacket::get_Stratum() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Stratum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stratum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Poll
int LiteNetLib::Utils::NtpPacket::get_Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Poll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_Precision
int LiteNetLib::Utils::NtpPacket::get_Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_Precision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RootDelay
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RootDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RootDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RootDispersion
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RootDispersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RootDispersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootDispersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReferenceId
uint LiteNetLib::Utils::NtpPacket::get_ReferenceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReferenceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReferenceTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_ReferenceTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReferenceTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_OriginTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_OriginTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_OriginTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_ReceiveTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_ReceiveTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_ReceiveTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiveTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_TransmitTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_TransmitTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_TransmitTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransmitTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_TransmitTimestamp
void LiteNetLib::Utils::NtpPacket::set_TransmitTimestamp(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_TransmitTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransmitTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_DestinationTimestamp
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::get_DestinationTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_DestinationTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestinationTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.set_DestinationTimestamp
void LiteNetLib::Utils::NtpPacket::set_DestinationTimestamp(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::set_DestinationTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DestinationTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_RoundTripTime
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_RoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_RoundTripTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoundTripTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.get_CorrectionOffset
System::TimeSpan LiteNetLib::Utils::NtpPacket::get_CorrectionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::get_CorrectionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CorrectionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.FromServerResponse
LiteNetLib::Utils::NtpPacket* LiteNetLib::Utils::NtpPacket::FromServerResponse(::Array<uint8_t>* bytes, System::DateTime destinationTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::FromServerResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "FromServerResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(destinationTimestamp)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpPacket*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, destinationTimestamp);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.ValidateRequest
void LiteNetLib::Utils::NtpPacket::ValidateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::ValidateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.ValidateReply
void LiteNetLib::Utils::NtpPacket::ValidateReply() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::ValidateReply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateReply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.CheckTimestamps
void LiteNetLib::Utils::NtpPacket::CheckTimestamps() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::CheckTimestamps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTimestamps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetDateTime64
System::Nullable_1<System::DateTime> LiteNetLib::Utils::NtpPacket::GetDateTime64(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetDateTime64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDateTime64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SetDateTime64
void LiteNetLib::Utils::NtpPacket::SetDateTime64(int offset, System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SetDateTime64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDateTime64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetTimeSpan32
System::TimeSpan LiteNetLib::Utils::NtpPacket::GetTimeSpan32(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetTimeSpan32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeSpan32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetUInt64BE
uint64_t LiteNetLib::Utils::NtpPacket::GetUInt64BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetUInt64BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt64BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SetUInt64BE
void LiteNetLib::Utils::NtpPacket::SetUInt64BE(int offset, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SetUInt64BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUInt64BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, value);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetInt32BE
int LiteNetLib::Utils::NtpPacket::GetInt32BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetInt32BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.GetUInt32BE
uint LiteNetLib::Utils::NtpPacket::GetUInt32BE(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::GetUInt32BE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt32BE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, offset);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SwapEndianness
uint LiteNetLib::Utils::NtpPacket::SwapEndianness(uint x) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket.SwapEndianness
uint64_t LiteNetLib::Utils::NtpPacket::SwapEndianness(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: LiteNetLib.Utils.NtpPacket..cctor
void LiteNetLib::Utils::NtpPacket::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpPacket::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpPacket", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpLeapIndicator
#include "LiteNetLib/Utils/NtpLeapIndicator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator NoWarning
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_NoWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_NoWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "NoWarning"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator NoWarning
void LiteNetLib::Utils::NtpLeapIndicator::_set_NoWarning(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_NoWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "NoWarning", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas61Seconds
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas61Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas61Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas61Seconds"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas61Seconds
void LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas61Seconds(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas61Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas61Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas59Seconds
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas59Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_LastMinuteHas59Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas59Seconds"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator LastMinuteHas59Seconds
void LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas59Seconds(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_LastMinuteHas59Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "LastMinuteHas59Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpLeapIndicator AlarmCondition
LiteNetLib::Utils::NtpLeapIndicator LiteNetLib::Utils::NtpLeapIndicator::_get_AlarmCondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_get_AlarmCondition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpLeapIndicator>("LiteNetLib.Utils", "NtpLeapIndicator", "AlarmCondition"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpLeapIndicator AlarmCondition
void LiteNetLib::Utils::NtpLeapIndicator::_set_AlarmCondition(LiteNetLib::Utils::NtpLeapIndicator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpLeapIndicator::_set_AlarmCondition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpLeapIndicator", "AlarmCondition", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.Utils.NtpMode
#include "LiteNetLib/Utils/NtpMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpMode Client
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpMode>("LiteNetLib.Utils", "NtpMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpMode Client
void LiteNetLib::Utils::NtpMode::_set_Client(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLib.Utils.NtpMode Server
LiteNetLib::Utils::NtpMode LiteNetLib::Utils::NtpMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NtpMode>("LiteNetLib.Utils", "NtpMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLib.Utils.NtpMode Server
void LiteNetLib::Utils::NtpMode::_set_Server(LiteNetLib::Utils::NtpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpMode", "Server", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Utils.NtpRequest
#include "LiteNetLib/Utils/NtpRequest.hpp"
// Including type: LiteNetLib.NetSocket
#include "LiteNetLib/NetSocket.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LiteNetLib.Utils.NtpPacket
#include "LiteNetLib/Utils/NtpPacket.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultPort
int LiteNetLib::Utils::NtpRequest::_get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::_get_DefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib.Utils", "NtpRequest", "DefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultPort
void LiteNetLib::Utils::NtpRequest::_set_DefaultPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::_set_DefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib.Utils", "NtpRequest", "DefaultPort", value));
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(System::Net::IPEndPoint* endPoint, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, endPoint, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(System::Net::IPAddress* ipAddress, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ipAddress, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(::Il2CppString* ntpServerAddress, int port, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ntpServerAddress), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ntpServerAddress, port, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Create
LiteNetLib::Utils::NtpRequest* LiteNetLib::Utils::NtpRequest::Create(::Il2CppString* ntpServerAddress, System::Action_1<LiteNetLib::Utils::NtpPacket*>* onRequestComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LiteNetLib.Utils", "NtpRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ntpServerAddress), ::il2cpp_utils::ExtractType(onRequestComplete)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NtpRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ntpServerAddress, onRequestComplete);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Send
void LiteNetLib::Utils::NtpRequest::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.Close
void LiteNetLib::Utils::NtpRequest::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.Utils.NtpRequest.LiteNetLib.INetSocketListener.OnMessageReceived
void LiteNetLib::Utils::NtpRequest::LiteNetLib_INetSocketListener_OnMessageReceived(::Array<uint8_t>* data, int length, System::Net::Sockets::SocketError errorCode, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Utils::NtpRequest::LiteNetLib.INetSocketListener.OnMessageReceived");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetSocketListener.OnMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, length, errorCode, remoteEndPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Layers.Crc32cLayer
#include "LiteNetLib/Layers/Crc32cLayer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Layers.Crc32cLayer.ProcessInboundPacket
void LiteNetLib::Layers::Crc32cLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::Crc32cLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated method: LiteNetLib.Layers.Crc32cLayer.ProcessOutBoundPacket
void LiteNetLib::Layers::Crc32cLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::Crc32cLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Layers.PacketLayerBase
#include "LiteNetLib/Layers/PacketLayerBase.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Layers.PacketLayerBase.ProcessInboundPacket
void LiteNetLib::Layers::PacketLayerBase::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::PacketLayerBase::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated method: LiteNetLib.Layers.PacketLayerBase.ProcessOutBoundPacket
void LiteNetLib::Layers::PacketLayerBase::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::PacketLayerBase::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.Layers.XorEncryptLayer
#include "LiteNetLib/Layers/XorEncryptLayer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.SetKey
void LiteNetLib::Layers::XorEncryptLayer::SetKey(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.SetKey
void LiteNetLib::Layers::XorEncryptLayer::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.ProcessInboundPacket
void LiteNetLib::Layers::XorEncryptLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated method: LiteNetLib.Layers.XorEncryptLayer.ProcessOutBoundPacket
void LiteNetLib::Layers::XorEncryptLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("LiteNetLib::Layers::XorEncryptLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.HelpAttribute
#include "LIV/SDK/Unity/HelpAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentShaderWarmup
#include "GlobalNamespace/EnvironmentShaderWarmup.hpp"
// Including type: EnvironmentShaderWarmup/<HideAfterFrames>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-HideAfterFrames-d__6.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfColumns
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfColumns"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfColumns
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfColumns", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfRows
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfRows"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfRows
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfRows", value));
}
// Autogenerated method: EnvironmentShaderWarmup.Start
void GlobalNamespace::EnvironmentShaderWarmup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup.HideAfterFrames
System::Collections::IEnumerator* GlobalNamespace::EnvironmentShaderWarmup::HideAfterFrames(int numberOfFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::HideAfterFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAfterFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfFrames)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, numberOfFrames);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentShaderWarmup/<HideAfterFrames>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-HideAfterFrames-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentShaderWarmup/<HideAfterFrames>d__6.System.IDisposable.Dispose
void GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<HideAfterFrames>d__6.MoveNext
bool GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<HideAfterFrames>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<HideAfterFrames>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<HideAfterFrames>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentShaderWarmup::$HideAfterFrames$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacter.get_characterName
::Il2CppString* GlobalNamespace::BTSCharacter::get_characterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_characterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController* GlobalNamespace::BTSCharacter::get_materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_materialPropertyBlockController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPropertyBlockController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MaterialPropertyBlockController*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_animator
UnityEngine::Animator* GlobalNamespace::BTSCharacter::get_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_animator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_headTransform
UnityEngine::Transform* GlobalNamespace::BTSCharacter::get_headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::get_headTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.SetAlternativeAnimationAndMaterial
void GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial(UnityEngine::AnimationClip* animation, bool alternativeMaterialOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlternativeAnimationAndMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(alternativeMaterialOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animation, alternativeMaterialOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterDataModel.get_prefabsWithIds
::Array<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>* GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel.get_animationClipsWithIds
::Array<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>* GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClipsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_prefab
GlobalNamespace::BTSCharacter* GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BTSCharacter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_animationClip
UnityEngine::AnimationClip* GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterMaterialSwitcher.SwapMaterials
void GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials(bool alternative) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alternative)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alternative);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_renderer
UnityEngine::Renderer* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_materialPairs
System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterResultAnimationController
#include "GlobalNamespace/BTSCharacterResultAnimationController.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
// Including type: MaterialPropertyBlockFloatAnimator
#include "GlobalNamespace/MaterialPropertyBlockFloatAnimator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterResultAnimationController.SetCharacter
void GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter(GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterResultAnimationController.StopAnimation
void GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacterSpawnAnimationController
#include "GlobalNamespace/BTSCharacterSpawnAnimationController.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: JumpReceiver
#include "GlobalNamespace/JumpReceiver.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
// Including type: MaterialPropertyBlockFloatAnimator
#include "GlobalNamespace/MaterialPropertyBlockFloatAnimator.hpp"
// Including type: SongSpeedData
#include "GlobalNamespace/SongSpeedData.hpp"
// Including type: UnityEngine.Timeline.ActivationTrack
#include "UnityEngine/Timeline/ActivationTrack.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCharacterActivationStreamName
::Il2CppString* GlobalNamespace::BTSCharacterSpawnAnimationController::_get_kCharacterActivationStreamName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::_get_kCharacterActivationStreamName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BTSCharacterSpawnAnimationController", "kCharacterActivationStreamName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCharacterActivationStreamName
void GlobalNamespace::BTSCharacterSpawnAnimationController::_set_kCharacterActivationStreamName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::_set_kCharacterActivationStreamName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnAnimationController", "kCharacterActivationStreamName", value));
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_isCharacterVisible
bool GlobalNamespace::BTSCharacterSpawnAnimationController::get_isCharacterVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::get_isCharacterVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCharacterVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_duration
float GlobalNamespace::BTSCharacterSpawnAnimationController::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_characterActivationTrack
UnityEngine::Timeline::ActivationTrack* GlobalNamespace::BTSCharacterSpawnAnimationController::get_characterActivationTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::get_characterActivationTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterActivationTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ActivationTrack*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.PlayAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::PlayAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::PlayAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.EndEarlyAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::EndEarlyAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::EndEarlyAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndEarlyAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.StopAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::StopAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.SetCharacter
void GlobalNamespace::BTSCharacterSpawnAnimationController::SetCharacter(GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.WillResumeAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::WillResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::WillResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.ResumeAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::ResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::ResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.PauseAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::PauseAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnAnimationController::PauseAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnController
#include "GlobalNamespace/BTSCharacterSpawnController.hpp"
// Including type: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19
#include "GlobalNamespace/BTSCharacterSpawnController_-TimelineStoppedDelayed-d__19.hpp"
// Including type: BTSCharacterSpawnAnimationController
#include "GlobalNamespace/BTSCharacterSpawnAnimationController.hpp"
// Including type: BTSCharacterSpawnEventEffect
#include "GlobalNamespace/BTSCharacterSpawnEventEffect.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterSpawnController.get_isCharacterVisible
bool GlobalNamespace::BTSCharacterSpawnController::get_isCharacterVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::get_isCharacterVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCharacterVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.get_isSpawned
bool GlobalNamespace::BTSCharacterSpawnController::get_isSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::get_isSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.Start
void GlobalNamespace::BTSCharacterSpawnController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.OnDestroy
void GlobalNamespace::BTSCharacterSpawnController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleStartCharacterAnimation
void GlobalNamespace::BTSCharacterSpawnController::HandleStartCharacterAnimation(GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::HandleStartCharacterAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartCharacterAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseDidPause
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseWillResume
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseWillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseWillResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseWillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseDidResume
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleLevelEndActionsLevelFailed
void GlobalNamespace::BTSCharacterSpawnController::HandleLevelEndActionsLevelFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::HandleLevelEndActionsLevelFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelEndActionsLevelFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.TimelineStoppedDelayed
System::Collections::IEnumerator* GlobalNamespace::BTSCharacterSpawnController::TimelineStoppedDelayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::TimelineStoppedDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimelineStoppedDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19
#include "GlobalNamespace/BTSCharacterSpawnController_-TimelineStoppedDelayed-d__19.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.IDisposable.Dispose
void GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.MoveNext
bool GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventEffect
#include "GlobalNamespace/BTSCharacterSpawnEventEffect.hpp"
// Including type: BTSCharacterSpawnEventEffect/PrefabWithId
#include "GlobalNamespace/BTSCharacterSpawnEventEffect_PrefabWithId.hpp"
// Including type: BTSCharacterSpawnEventEffect/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterSpawnEventEffect_AnimationClipWithId.hpp"
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BeatmapEventType kCharacterDisplayEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::BTSCharacterSpawnEventEffect::_get_kCharacterDisplayEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::_get_kCharacterDisplayEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BTSCharacterSpawnEventEffect", "kCharacterDisplayEventType"));
}
// Autogenerated static field setter
// Set static field: static private BeatmapEventType kCharacterDisplayEventType
void GlobalNamespace::BTSCharacterSpawnEventEffect::_set_kCharacterDisplayEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::_set_kCharacterDisplayEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventEffect", "kCharacterDisplayEventType", value));
}
// Autogenerated method: BTSCharacterSpawnEventEffect.add_startCharacterAnimationEvent
void GlobalNamespace::BTSCharacterSpawnEventEffect::add_startCharacterAnimationEvent(System::Action_1<GlobalNamespace::BTSCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::add_startCharacterAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startCharacterAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.remove_startCharacterAnimationEvent
void GlobalNamespace::BTSCharacterSpawnEventEffect::remove_startCharacterAnimationEvent(System::Action_1<GlobalNamespace::BTSCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::remove_startCharacterAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startCharacterAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.get_isInitialized
bool GlobalNamespace::BTSCharacterSpawnEventEffect::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.Start
void GlobalNamespace::BTSCharacterSpawnEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.OnDestroy
void GlobalNamespace::BTSCharacterSpawnEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::BTSCharacterSpawnEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.GetCharacterWithAnimationClip
System::Tuple_2<GlobalNamespace::BTSCharacter*, UnityEngine::AnimationClip*>* GlobalNamespace::BTSCharacterSpawnEventEffect::GetCharacterWithAnimationClip(System::Collections::Generic::Dictionary_2<int, GlobalNamespace::BTSCharacter*>* charDictionary, System::Collections::Generic::Dictionary_2<int, UnityEngine::AnimationClip*>* animDictionary, int prefabId, int animationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::GetCharacterWithAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventEffect", "GetCharacterWithAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDictionary), ::il2cpp_utils::ExtractType(animDictionary), ::il2cpp_utils::ExtractType(prefabId), ::il2cpp_utils::ExtractType(animationId)})));
  return ::il2cpp_utils::RunMethodThrow<System::Tuple_2<GlobalNamespace::BTSCharacter*, UnityEngine::AnimationClip*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charDictionary, animDictionary, prefabId, animationId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventEffect/PrefabWithId
#include "GlobalNamespace/BTSCharacterSpawnEventEffect_PrefabWithId.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterSpawnEventEffect/PrefabWithId.get_id
int GlobalNamespace::BTSCharacterSpawnEventEffect::PrefabWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::PrefabWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect/PrefabWithId.get_prefab
GlobalNamespace::BTSCharacter* GlobalNamespace::BTSCharacterSpawnEventEffect::PrefabWithId::get_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::PrefabWithId::get_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BTSCharacter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventEffect/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterSpawnEventEffect_AnimationClipWithId.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSCharacterSpawnEventEffect/AnimationClipWithId.get_id
int GlobalNamespace::BTSCharacterSpawnEventEffect::AnimationClipWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::AnimationClipWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect/AnimationClipWithId.get_animationClip
UnityEngine::AnimationClip* GlobalNamespace::BTSCharacterSpawnEventEffect::AnimationClipWithId::get_animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventEffect::AnimationClipWithId::get_animationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventValueParser
#include "GlobalNamespace/BTSCharacterSpawnEventValueParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kPrefabMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kPrefabMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPrefabMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kPrefabMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPrefabBitOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kPrefabBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPrefabBitOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kPrefabBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAnimationMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAnimationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAnimationMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAnimationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAnimationBitOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAnimationBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAnimationBitOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAnimationBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAlternativeMaterialMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAlternativeMaterialMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAlternativeMaterialOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAlternativeMaterialOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialOffset", value));
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetPrefabId
int GlobalNamespace::BTSCharacterSpawnEventValueParser::GetPrefabId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::GetPrefabId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetPrefabId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetAnimationId
int GlobalNamespace::BTSCharacterSpawnEventValueParser::GetAnimationId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::GetAnimationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetAnimationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetIsAlternativeMaterial
bool GlobalNamespace::BTSCharacterSpawnEventValueParser::GetIsAlternativeMaterial(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::GetIsAlternativeMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetIsAlternativeMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.MergeValuesIntoOneInt
int GlobalNamespace::BTSCharacterSpawnEventValueParser::MergeValuesIntoOneInt(int prefabId, int animationId, bool isAlternativeMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSCharacterSpawnEventValueParser::MergeValuesIntoOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "MergeValuesIntoOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabId), ::il2cpp_utils::ExtractType(animationId), ::il2cpp_utils::ExtractType(isAlternativeMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefabId, animationId, isAlternativeMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAnimationName
::Il2CppString* GlobalNamespace::BTSStarTextEffectController::_get_kAnimationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectController::_get_kAnimationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BTSStarTextEffectController", "kAnimationName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAnimationName
void GlobalNamespace::BTSStarTextEffectController::_set_kAnimationName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectController::_set_kAnimationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectController", "kAnimationName", value));
}
// Autogenerated method: BTSStarTextEffectController.get_animationDuration
float GlobalNamespace::BTSStarTextEffectController::get_animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectController::get_animationDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectController.Reinitialize
void GlobalNamespace::BTSStarTextEffectController::Reinitialize(UnityEngine::Sprite* sprite, UnityEngine::Transform* parentTransform, float desiredAnimationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectController::Reinitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(desiredAnimationLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sprite, parentTransform, desiredAnimationLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEffectController/Pool.Reinitialize
void GlobalNamespace::BTSStarTextEffectController::Pool::Reinitialize(UnityEngine::Sprite* sprite, UnityEngine::Transform* transform, float desiredAnimationLength, GlobalNamespace::BTSStarTextEffectController* starTextEffectController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectController::Pool::Reinitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(desiredAnimationLength), ::il2cpp_utils::ExtractType(starTextEffectController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sprite, transform, desiredAnimationLength, starTextEffectController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectValueParser
#include "GlobalNamespace/BTSStarTextEffectValueParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kTextMask
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kTextMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTextMask
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kTextMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kTextBitOffset
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kTextBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTextBitOffset
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kTextBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPositionMask
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kPositionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPositionMask
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kPositionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPositionBitOffset
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kPositionBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPositionBitOffset
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kPositionBitOffset", value));
}
// Autogenerated method: BTSStarTextEffectValueParser.GetTextId
int GlobalNamespace::BTSStarTextEffectValueParser::GetTextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::GetTextId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "GetTextId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSStarTextEffectValueParser.GetPositionId
int GlobalNamespace::BTSStarTextEffectValueParser::GetPositionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::GetPositionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "GetPositionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSStarTextEffectValueParser.MergeValuesIntoOneInt
int GlobalNamespace::BTSStarTextEffectValueParser::MergeValuesIntoOneInt(int textId, int positionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectValueParser::MergeValuesIntoOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "MergeValuesIntoOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textId), ::il2cpp_utils::ExtractType(positionId)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textId, positionId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectsManager
#include "GlobalNamespace/BTSStarTextEffectsManager.hpp"
// Including type: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5
#include "GlobalNamespace/BTSStarTextEffectsManager_-DespawnEffectDelayed-d__5.hpp"
// Including type: BTSStarTextEventEffect
#include "GlobalNamespace/BTSStarTextEventEffect.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEffectsManager.Start
void GlobalNamespace::BTSStarTextEffectsManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager.OnDestroy
void GlobalNamespace::BTSStarTextEffectsManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager.HandleBTSStarTextEventEffect
void GlobalNamespace::BTSStarTextEffectsManager::HandleBTSStarTextEventEffect(UnityEngine::Sprite* sprite, UnityEngine::Transform* parentTransform, float desiredAnimationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::HandleBTSStarTextEventEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBTSStarTextEventEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(desiredAnimationLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sprite, parentTransform, desiredAnimationLength);
}
// Autogenerated method: BTSStarTextEffectsManager.DespawnEffectDelayed
System::Collections::IEnumerator* GlobalNamespace::BTSStarTextEffectsManager::DespawnEffectDelayed(GlobalNamespace::BTSStarTextEffectController* effectController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::DespawnEffectDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnEffectDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectController)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, effectController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5
#include "GlobalNamespace/BTSStarTextEffectsManager_-DespawnEffectDelayed-d__5.hpp"
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.IDisposable.Dispose
void GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.MoveNext
bool GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSStarTextEventEffect
#include "GlobalNamespace/BTSStarTextEventEffect.hpp"
// Including type: BTSStarTextEventEffect/StarTextSprite
#include "GlobalNamespace/BTSStarTextEventEffect_StarTextSprite.hpp"
// Including type: BTSStarTextEventEffect/StartTextPosition
#include "GlobalNamespace/BTSStarTextEventEffect_StartTextPosition.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BeatmapEventType kStarTextAppearEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::BTSStarTextEventEffect::_get_kStarTextAppearEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::_get_kStarTextAppearEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BTSStarTextEventEffect", "kStarTextAppearEventType"));
}
// Autogenerated static field setter
// Set static field: static private BeatmapEventType kStarTextAppearEventType
void GlobalNamespace::BTSStarTextEventEffect::_set_kStarTextAppearEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::_set_kStarTextAppearEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEventEffect", "kStarTextAppearEventType", value));
}
// Autogenerated method: BTSStarTextEventEffect.add_startStarTextAnimationEvent
void GlobalNamespace::BTSStarTextEventEffect::add_startStarTextAnimationEvent(System::Action_3<UnityEngine::Sprite*, UnityEngine::Transform*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::add_startStarTextAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startStarTextAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSStarTextEventEffect.remove_startStarTextAnimationEvent
void GlobalNamespace::BTSStarTextEventEffect::remove_startStarTextAnimationEvent(System::Action_3<UnityEngine::Sprite*, UnityEngine::Transform*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::remove_startStarTextAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startStarTextAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSStarTextEventEffect.Start
void GlobalNamespace::BTSStarTextEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect.OnDestroy
void GlobalNamespace::BTSStarTextEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::BTSStarTextEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventEffect/StarTextSprite
#include "GlobalNamespace/BTSStarTextEventEffect_StarTextSprite.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_id
int GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_starTextSprite
UnityEngine::Sprite* GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_starTextSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_starTextSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_starTextSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_animationLength
float GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_animationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_animationLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventEffect/StartTextPosition
#include "GlobalNamespace/BTSStarTextEventEffect_StartTextPosition.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEventEffect/StartTextPosition.get_id
int GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StartTextPosition.get_transform
UnityEngine::Transform* GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventInstaller
#include "GlobalNamespace/BTSStarTextEventInstaller.hpp"
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEventInstaller.InstallBindings
void GlobalNamespace::BTSStarTextEventInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BTSStarTextEventInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidancePathEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidancePathEvaluator.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectAvoidancePathEvaluator.GetCurrentPathPosition
UnityEngine::Vector3 GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::GetCurrentPathPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::GetCurrentPathPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPathPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidanceTiltEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceTiltEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLookAheadTime
float GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_get_kLookAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_get_kLookAheadTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectAvoidanceTiltEvaluator", "kLookAheadTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLookAheadTime
void GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_set_kLookAheadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_set_kLookAheadTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceTiltEvaluator", "kLookAheadTime", value));
}
// Autogenerated method: BeatmapObjectAvoidanceTiltEvaluator.GetTiltAngle
float GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::GetTiltAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::GetTiltAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTiltAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kYJumpOffsetBufferLength
int GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kYJumpOffsetBufferLength
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
float GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferSongTimeInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferSongTimeInitValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferSongTimeInitValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferSongTimeInitValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferSongTimeInitValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferSongTimeInitValue", value));
}
// Autogenerated method: BeatmapObjectAvoidanceYOffsetEvaluator.ManualUpdate
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectAvoidanceYOffsetEvaluator.GetJumpOffsetYAtJumpStartSongTime
float GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::GetJumpOffsetYAtJumpStartSongTime(float lastDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::GetJumpOffsetYAtJumpStartSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJumpOffsetYAtJumpStartSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastDeltaTime)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lastDeltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator/BufferData
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsAvoidance
#include "GlobalNamespace/BeatmapObjectsAvoidance.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
// Including type: BeatmapObjectAvoidancePathEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidancePathEvaluator.hpp"
// Including type: BeatmapObjectAvoidanceTiltEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceTiltEvaluator.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: OffsetDirection
#include "GlobalNamespace/OffsetDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectsAvoidance.Awake
void GlobalNamespace::BeatmapObjectsAvoidance::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.Start
void GlobalNamespace::BeatmapObjectsAvoidance::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.OnDestroy
void GlobalNamespace::BeatmapObjectsAvoidance::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.Update
void GlobalNamespace::BeatmapObjectsAvoidance::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.SetupAndRun
void GlobalNamespace::BeatmapObjectsAvoidance::SetupAndRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::SetupAndRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupAndRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.BuildAnimationCurvePath
bool GlobalNamespace::BeatmapObjectsAvoidance::BuildAnimationCurvePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::BuildAnimationCurvePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildAnimationCurvePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.AdjustPositionWithOffsetDirection
void GlobalNamespace::BeatmapObjectsAvoidance::AdjustPositionWithOffsetDirection(UnityEngine::Vector2& position, int lineIndex, GlobalNamespace::OffsetDirection offsetDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::AdjustPositionWithOffsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustPositionWithOffsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(offsetDirection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, lineIndex, offsetDirection);
}
// Autogenerated method: BeatmapObjectsAvoidance.HandleBeatmapObjectSpawnControllerDidInit
void GlobalNamespace::BeatmapObjectsAvoidance::HandleBeatmapObjectSpawnControllerDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsAvoidance::HandleBeatmapObjectSpawnControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectSpawnControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BtsResultsEnvironmentController
#include "GlobalNamespace/BtsResultsEnvironmentController.hpp"
// Including type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
#include "GlobalNamespace/BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimation.hpp"
// Including type: BtsResultsEnvironmentController/<>c__DisplayClass5_0
#include "GlobalNamespace/BtsResultsEnvironmentController_--c__DisplayClass5_0.hpp"
// Including type: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8
#include "GlobalNamespace/BtsResultsEnvironmentController_-DestroyCharactersDelayed-d__8.hpp"
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BeatmapEventType kCharacterDisplayEventType
GlobalNamespace::BeatmapEventType GlobalNamespace::BtsResultsEnvironmentController::_get_kCharacterDisplayEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::_get_kCharacterDisplayEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BtsResultsEnvironmentController", "kCharacterDisplayEventType"));
}
// Autogenerated static field setter
// Set static field: static private BeatmapEventType kCharacterDisplayEventType
void GlobalNamespace::BtsResultsEnvironmentController::_set_kCharacterDisplayEventType(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::_set_kCharacterDisplayEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BtsResultsEnvironmentController", "kCharacterDisplayEventType", value));
}
// Autogenerated method: BtsResultsEnvironmentController.DestroyCharactersDelayed
System::Collections::IEnumerator* GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersDelayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCharactersDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController.DestroyCharactersAndStopAnimations
void GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersAndStopAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersAndStopAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCharactersAndStopAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController.Setup
void GlobalNamespace::BtsResultsEnvironmentController::Setup(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::Setup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: BtsResultsEnvironmentController.Activate
void GlobalNamespace::BtsResultsEnvironmentController::Activate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BtsResultsEnvironmentController.Deactivate
void GlobalNamespace::BtsResultsEnvironmentController::Deactivate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
#include "GlobalNamespace/BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BTSCharacterResultAnimationController
#include "GlobalNamespace/BTSCharacterResultAnimationController.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.get_name
::Il2CppString* GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.Clean
void GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.SetCharacter
void GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter(GlobalNamespace::BTSCharacter* btsCharacter, bool alternativeMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter), ::il2cpp_utils::ExtractType(alternativeMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, btsCharacter, alternativeMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BtsResultsEnvironmentController/<>c__DisplayClass5_0
#include "GlobalNamespace/BtsResultsEnvironmentController_--c__DisplayClass5_0.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
#include "GlobalNamespace/BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BtsResultsEnvironmentController/<>c__DisplayClass5_0.<Setup>b__0
bool GlobalNamespace::BtsResultsEnvironmentController::$$c__DisplayClass5_0::$Setup$b__0(GlobalNamespace::BTSCharacterDataModel::PrefabWithId* prefabWithId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$$c__DisplayClass5_0::<Setup>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabWithId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, prefabWithId);
}
// Autogenerated method: BtsResultsEnvironmentController/<>c__DisplayClass5_0.<Setup>b__1
bool GlobalNamespace::BtsResultsEnvironmentController::$$c__DisplayClass5_0::$Setup$b__1(GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation* placeWithAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$$c__DisplayClass5_0::<Setup>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(placeWithAnimation)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, placeWithAnimation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8
#include "GlobalNamespace/BtsResultsEnvironmentController_-DestroyCharactersDelayed-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8.System.IDisposable.Dispose
void GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8.MoveNext
bool GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierCurve
#include "GlobalNamespace/BezierCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: BezierSpline/ComputeControlPointsResults
#include "GlobalNamespace/BezierSpline_ComputeControlPointsResults.hpp"
// Including type: BezierSpline/<>c
#include "GlobalNamespace/BezierSpline_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BezierSpline.get_segments
System::Collections::Generic::List_1<GlobalNamespace::BezierCurve>* GlobalNamespace::BezierSpline::get_segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::get_segments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_segments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BezierCurve>*, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.AddPoint
void GlobalNamespace::BezierSpline::AddPoint(float distance, UnityEngine::Vector2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::AddPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance, point);
}
// Autogenerated method: BezierSpline.SortSourceData
void GlobalNamespace::BezierSpline::SortSourceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::SortSourceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortSourceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.AddArtificialStartAndFinishPoint
void GlobalNamespace::BezierSpline::AddArtificialStartAndFinishPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::AddArtificialStartAndFinishPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArtificialStartAndFinishPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.ComputeControlPoints
void GlobalNamespace::BezierSpline::ComputeControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::ComputeControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.Clear
void GlobalNamespace::BezierSpline::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.ComputeControlPoints
GlobalNamespace::BezierSpline::ComputeControlPointsResults GlobalNamespace::BezierSpline::ComputeControlPoints(System::Collections::Generic::List_1<float>* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::ComputeControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BezierSpline::ComputeControlPointsResults, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BezierSpline/ComputeControlPointsResults
#include "GlobalNamespace/BezierSpline_ComputeControlPointsResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSpline/<>c
#include "GlobalNamespace/BezierSpline_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BezierSpline/<>c <>9
GlobalNamespace::BezierSpline::$$c* GlobalNamespace::BezierSpline::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BezierSpline::$$c*>("", "BezierSpline/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BezierSpline/<>c <>9
void GlobalNamespace::BezierSpline::$$c::_set_$$9(GlobalNamespace::BezierSpline::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Vector3> <>9__6_0
System::Comparison_1<UnityEngine::Vector3>* GlobalNamespace::BezierSpline::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Vector3>*>("", "BezierSpline/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Vector3> <>9__6_0
void GlobalNamespace::BezierSpline::$$c::_set_$$9__6_0(System::Comparison_1<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_0
System::Func_2<UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_0
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_0(System::Func_2<UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_1
System::Func_2<UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_1
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_1(System::Func_2<UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_2
System::Func_2<UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_get_$$9__8_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_2
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_2(System::Func_2<UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::_set_$$9__8_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_2", value)));
}
// Autogenerated method: BezierSpline/<>c..cctor
void GlobalNamespace::BezierSpline::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSpline/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BezierSpline/<>c.<SortSourceData>b__6_0
int GlobalNamespace::BezierSpline::$$c::$SortSourceData$b__6_0(UnityEngine::Vector3 point1, UnityEngine::Vector3 point2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::<SortSourceData>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortSourceData>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, point1, point2);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_0
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_0(UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_1
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_1(UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_2
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_2(UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: BezierSplineEvaluator/CubicSolveResult
#include "GlobalNamespace/BezierSplineEvaluator_CubicSolveResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSlightAboveOne
float GlobalNamespace::BezierSplineEvaluator::_get_kSlightAboveOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::_get_kSlightAboveOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierSplineEvaluator", "kSlightAboveOne"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSlightAboveOne
void GlobalNamespace::BezierSplineEvaluator::_set_kSlightAboveOne(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::_set_kSlightAboveOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierSplineEvaluator", "kSlightAboveOne", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSlightBelowZero
float GlobalNamespace::BezierSplineEvaluator::_get_kSlightBelowZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::_get_kSlightBelowZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierSplineEvaluator", "kSlightBelowZero"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSlightBelowZero
void GlobalNamespace::BezierSplineEvaluator::_set_kSlightBelowZero(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::_set_kSlightBelowZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierSplineEvaluator", "kSlightBelowZero", value));
}
// Autogenerated method: BezierSplineEvaluator.EvaluatePosition
UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluatePosition(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::EvaluatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.Evaluate
UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::Evaluate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.EvaluateFirstDerivation
UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluateFirstDerivation(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::EvaluateFirstDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateFirstDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.EvaluateSecondDerivation
UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluateSecondDerivation(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::EvaluateSecondDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateSecondDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.OffsetSegmentAndGetT
float GlobalNamespace::BezierSplineEvaluator::OffsetSegmentAndGetT(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::OffsetSegmentAndGetT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffsetSegmentAndGetT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.GetTForSegment
float GlobalNamespace::BezierSplineEvaluator::GetTForSegment(int segmentIndex, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::GetTForSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTForSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, segmentIndex, time);
}
// Autogenerated method: BezierSplineEvaluator.GetTimeValuesForSegment
void GlobalNamespace::BezierSplineEvaluator::GetTimeValuesForSegment(int segmentIndex, float& t0Value, float& t1Value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::GetTimeValuesForSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeValuesForSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentIndex, t0Value, t1Value);
}
// Autogenerated method: BezierSplineEvaluator.OffsetStartIndexToDistance
void GlobalNamespace::BezierSplineEvaluator::OffsetStartIndexToDistance(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::OffsetStartIndexToDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffsetStartIndexToDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.CubeRoot
float GlobalNamespace::BezierSplineEvaluator::CubeRoot(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::CubeRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSplineEvaluator", "CubeRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: BezierSplineEvaluator.SolveCubic
GlobalNamespace::BezierSplineEvaluator::CubicSolveResult GlobalNamespace::BezierSplineEvaluator::SolveCubic(float a, float b, float c, float d) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BezierSplineEvaluator::SolveCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSplineEvaluator", "SolveCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BezierSplineEvaluator::CubicSolveResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, c, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSplineEvaluator/CubicSolveResult
#include "GlobalNamespace/BezierSplineEvaluator_CubicSolveResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WaypointsTestMenuViewController
#include "GlobalNamespace/WaypointsTestMenuViewController.hpp"
// Including type: WaypointsTestMenuViewController/<CheckBeatmaps>d__13
#include "GlobalNamespace/WaypointsTestMenuViewController_-CheckBeatmaps-d__13.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WaypointsTestMenuViewController.Start
void GlobalNamespace::WaypointsTestMenuViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.OnDestroy
void GlobalNamespace::WaypointsTestMenuViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.CheckBeatmaps
System::Collections::IEnumerator* GlobalNamespace::WaypointsTestMenuViewController::CheckBeatmaps(System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelSO*>* levels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::CheckBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levels)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, levels);
}
// Autogenerated method: WaypointsTestMenuViewController.HandleMainGameSceneDidFinish
void GlobalNamespace::WaypointsTestMenuViewController::HandleMainGameSceneDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* data, GlobalNamespace::LevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::HandleMainGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, results);
}
// Autogenerated method: WaypointsTestMenuViewController.<Start>b__11_0
void GlobalNamespace::WaypointsTestMenuViewController::$Start$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.<Start>b__11_1
void GlobalNamespace::WaypointsTestMenuViewController::$Start$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::<Start>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.<HandleMainGameSceneDidFinish>b__14_0
void GlobalNamespace::WaypointsTestMenuViewController::$HandleMainGameSceneDidFinish$b__14_0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::<HandleMainGameSceneDidFinish>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainGameSceneDidFinish>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: WaypointsTestMenuViewController/<CheckBeatmaps>d__13
#include "GlobalNamespace/WaypointsTestMenuViewController_-CheckBeatmaps-d__13.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.IDisposable.Dispose
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.MoveNext
bool GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally1
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally2
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally3
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
