// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.CollectionTally
#include "NUnit/Framework/Constraints/CollectionTally.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer
#include "NUnit/Framework/Constraints/NUnitEqualityComparer.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.CollectionTally..ctor
NUnit::Framework::Constraints::CollectionTally* NUnit::Framework::Constraints::CollectionTally::New_ctor(NUnit::Framework::Constraints::NUnitEqualityComparer* comparer, System::Collections::IEnumerable* c) {
  return THROW_UNLESS(il2cpp_utils::New<CollectionTally*>(comparer, c));
}
// Autogenerated method: NUnit.Framework.Constraints.CollectionTally.get_Count
int NUnit::Framework::Constraints::CollectionTally::get_Count() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_Count"));
}
// Autogenerated method: NUnit.Framework.Constraints.CollectionTally.ItemsEqual
bool NUnit::Framework::Constraints::CollectionTally::ItemsEqual(::Il2CppObject* expected, ::Il2CppObject* actual) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ItemsEqual", expected, actual));
}
// Autogenerated method: NUnit.Framework.Constraints.CollectionTally.TryRemove
bool NUnit::Framework::Constraints::CollectionTally::TryRemove(::Il2CppObject* o) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryRemove", o));
}
// Autogenerated method: NUnit.Framework.Constraints.CollectionTally.TryRemove
bool NUnit::Framework::Constraints::CollectionTally::TryRemove(System::Collections::IEnumerable* c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryRemove", c));
}
