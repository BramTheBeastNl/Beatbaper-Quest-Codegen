// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.EqualConstraint
#include "NUnit/Framework/Constraints/EqualConstraint.hpp"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
// Including type: NUnit.Framework.Constraints.ConstraintResult
#include "NUnit/Framework/Constraints/ConstraintResult.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint
#include "NUnit/Framework/Constraints/NUnitEqualityComparer_FailurePoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.get_Tolerance
NUnit::Framework::Constraints::Tolerance* NUnit::Framework::Constraints::EqualConstraint::get_Tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("get_Tolerance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Tolerance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::Tolerance*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.get_CaseInsensitive
bool NUnit::Framework::Constraints::EqualConstraint::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.get_ClipStrings
bool NUnit::Framework::Constraints::EqualConstraint::get_ClipStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("get_ClipStrings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ClipStrings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.set_ClipStrings
void NUnit::Framework::Constraints::EqualConstraint::set_ClipStrings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("set_ClipStrings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ClipStrings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.get_FailurePoints
System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* NUnit::Framework::Constraints::EqualConstraint::get_FailurePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("get_FailurePoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FailurePoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.ApplyTo
NUnit::Framework::Constraints::ConstraintResult* NUnit::Framework::Constraints::EqualConstraint::ApplyTo(::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("ApplyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(actual)));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ConstraintResult*, false>(this, ___internal__method, actual);
}
// Autogenerated method: NUnit.Framework.Constraints.EqualConstraint.get_Description
::Il2CppString* NUnit::Framework::Constraints::EqualConstraint::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("EqualConstraint").WithContext("get_Description");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
