// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer
#include "NUnit/Framework/Constraints/NUnitEqualityComparer.hpp"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint
#include "NUnit/Framework/Constraints/NUnitEqualityComparer_FailurePoint.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Constraints.EqualityAdapter
#include "NUnit/Framework/Constraints/EqualityAdapter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BUFFER_SIZE
int NUnit::Framework::Constraints::NUnitEqualityComparer::_get_BUFFER_SIZE() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("_get_BUFFER_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Constraints", "NUnitEqualityComparer", "BUFFER_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BUFFER_SIZE
void NUnit::Framework::Constraints::NUnitEqualityComparer::_set_BUFFER_SIZE(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("_set_BUFFER_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "NUnitEqualityComparer", "BUFFER_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type GameObjectType
System::Type* NUnit::Framework::Constraints::NUnitEqualityComparer::_get_GameObjectType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("_get_GameObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GameObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type GameObjectType
void NUnit::Framework::Constraints::NUnitEqualityComparer::_set_GameObjectType(System::Type* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("_set_GameObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GameObjectType", value));
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_IgnoreCase
bool NUnit::Framework::Constraints::NUnitEqualityComparer::get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("get_IgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_FailurePoints
System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* NUnit::Framework::Constraints::NUnitEqualityComparer::get_FailurePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("get_FailurePoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FailurePoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_WithSameOffset
bool NUnit::Framework::Constraints::NUnitEqualityComparer::get_WithSameOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("get_WithSameOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WithSameOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.AreEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::AreEqual(::Il2CppObject* x, ::Il2CppObject* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("AreEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AreEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, tolerance)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.FirstImplementsIEquatableOfSecond
System::Reflection::MethodInfo* NUnit::Framework::Constraints::NUnitEqualityComparer::FirstImplementsIEquatableOfSecond(System::Type* first, System::Type* second) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("FirstImplementsIEquatableOfSecond");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "FirstImplementsIEquatableOfSecond", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(first, second)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.GetEquatableGenericArguments
System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<System::Type*, System::Reflection::MethodInfo*>>* NUnit::Framework::Constraints::NUnitEqualityComparer::GetEquatableGenericArguments(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("GetEquatableGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GetEquatableGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<System::Type*, System::Reflection::MethodInfo*>>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.InvokeFirstIEquatableEqualsSecond
bool NUnit::Framework::Constraints::NUnitEqualityComparer::InvokeFirstIEquatableEqualsSecond(::Il2CppObject* first, ::Il2CppObject* second, System::Reflection::MethodInfo* equals) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("InvokeFirstIEquatableEqualsSecond");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "InvokeFirstIEquatableEqualsSecond", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(first, second, equals)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second, equals);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.GetExternalComparer
NUnit::Framework::Constraints::EqualityAdapter* NUnit::Framework::Constraints::NUnitEqualityComparer::GetExternalComparer(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("GetExternalComparer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExternalComparer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::EqualityAdapter*, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.ArraysEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::ArraysEqual(System::Array* x, System::Array* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("ArraysEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ArraysEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, tolerance)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DictionariesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DictionariesEqual(System::Collections::IDictionary* x, System::Collections::IDictionary* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("DictionariesEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DictionariesEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, tolerance)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DictionaryEntriesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DictionaryEntriesEqual(System::Collections::DictionaryEntry x, System::Collections::DictionaryEntry y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("DictionaryEntriesEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DictionaryEntriesEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, tolerance)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.StringsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::StringsEqual(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("StringsEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StringsEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.CharsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::CharsEqual(::Il2CppChar x, ::Il2CppChar y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("CharsEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CharsEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.EnumerablesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::EnumerablesEqual(System::Collections::IEnumerable* x, System::Collections::IEnumerable* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("EnumerablesEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnumerablesEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, tolerance)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DirectoriesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DirectoriesEqual(System::IO::DirectoryInfo* x, System::IO::DirectoryInfo* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("DirectoriesEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "DirectoriesEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.StreamsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::StreamsEqual(System::IO::Stream* x, System::IO::Stream* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext("StreamsEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StreamsEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer..cctor
void NUnit::Framework::Constraints::NUnitEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("NUnit::Framework::Constraints").WithContext("NUnitEqualityComparer").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
