// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.CipherUtilities
#include "Org/BouncyCastle/Security/CipherUtilities.hpp"
// Including type: Org.BouncyCastle.Security.CipherUtilities/CipherAlgorithm
#include "Org/BouncyCastle/Security/CipherUtilities_CipherAlgorithm.hpp"
// Including type: Org.BouncyCastle.Security.CipherUtilities/CipherMode
#include "Org/BouncyCastle/Security/CipherUtilities_CipherMode.hpp"
// Including type: Org.BouncyCastle.Security.CipherUtilities/CipherPadding
#include "Org/BouncyCastle/Security/CipherUtilities_CipherPadding.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Org.BouncyCastle.Crypto.IBufferedCipher
#include "Org/BouncyCastle/Crypto/IBufferedCipher.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary algorithms
System::Collections::IDictionary* Org::BouncyCastle::Security::CipherUtilities::_get_algorithms() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "CipherUtilities", "algorithms"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary algorithms
void Org::BouncyCastle::Security::CipherUtilities::_set_algorithms(System::Collections::IDictionary* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "CipherUtilities", "algorithms", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.IDictionary oids
System::Collections::IDictionary* Org::BouncyCastle::Security::CipherUtilities::_get_oids() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IDictionary*>("Org.BouncyCastle.Security", "CipherUtilities", "oids"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.IDictionary oids
void Org::BouncyCastle::Security::CipherUtilities::_set_oids(System::Collections::IDictionary* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Security", "CipherUtilities", "oids", value));
}
// Autogenerated method: Org.BouncyCastle.Security.CipherUtilities..cctor
void Org::BouncyCastle::Security::CipherUtilities::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Security", "CipherUtilities", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Security.CipherUtilities.GetCipher
Org::BouncyCastle::Crypto::IBufferedCipher* Org::BouncyCastle::Security::CipherUtilities::GetCipher(Org::BouncyCastle::Asn1::DerObjectIdentifier* oid) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::IBufferedCipher*>("Org.BouncyCastle.Security", "CipherUtilities", "GetCipher", oid));
}
// Autogenerated method: Org.BouncyCastle.Security.CipherUtilities.GetCipher
Org::BouncyCastle::Crypto::IBufferedCipher* Org::BouncyCastle::Security::CipherUtilities::GetCipher(::Il2CppString* algorithm) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::IBufferedCipher*>("Org.BouncyCastle.Security", "CipherUtilities", "GetCipher", algorithm));
}
// Autogenerated method: Org.BouncyCastle.Security.CipherUtilities.GetDigitIndex
int Org::BouncyCastle::Security::CipherUtilities::GetDigitIndex(::Il2CppString* s) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Security", "CipherUtilities", "GetDigitIndex", s));
}
// Autogenerated method: Org.BouncyCastle.Security.CipherUtilities.CreateBlockCipher
Org::BouncyCastle::Crypto::IBlockCipher* Org::BouncyCastle::Security::CipherUtilities::CreateBlockCipher(Org::BouncyCastle::Security::CipherUtilities::CipherAlgorithm cipherAlgorithm) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::IBlockCipher*>("Org.BouncyCastle.Security", "CipherUtilities", "CreateBlockCipher", cipherAlgorithm));
}
