// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Security.PrivateKeyFactory
#include "Org/BouncyCastle/Security/PrivateKeyFactory.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricKeyParameter
#include "Org/BouncyCastle/Crypto/AsymmetricKeyParameter.hpp"
// Including type: Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo
#include "Org/BouncyCastle/Asn1/Pkcs/PrivateKeyInfo.hpp"
// Including type: Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo
#include "Org/BouncyCastle/Asn1/Pkcs/EncryptedPrivateKeyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.CreateKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PrivateKeyFactory::CreateKey(Org::BouncyCastle::Asn1::Pkcs::PrivateKeyInfo* keyInfo) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*>("Org.BouncyCastle.Security", "PrivateKeyFactory", "CreateKey", keyInfo));
}
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.GetRawKey
::Array<uint8_t>* Org::BouncyCastle::Security::PrivateKeyFactory::GetRawKey(Org::BouncyCastle::Asn1::Pkcs::PrivateKeyInfo* keyInfo, int expectedSize) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.Security", "PrivateKeyFactory", "GetRawKey", keyInfo, expectedSize));
}
// Autogenerated method: Org.BouncyCastle.Security.PrivateKeyFactory.DecryptKey
Org::BouncyCastle::Crypto::AsymmetricKeyParameter* Org::BouncyCastle::Security::PrivateKeyFactory::DecryptKey(::Array<::Il2CppChar>* passPhrase, Org::BouncyCastle::Asn1::Pkcs::EncryptedPrivateKeyInfo* encInfo) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::AsymmetricKeyParameter*>("Org.BouncyCastle.Security", "PrivateKeyFactory", "DecryptKey", passPhrase, encInfo));
}
