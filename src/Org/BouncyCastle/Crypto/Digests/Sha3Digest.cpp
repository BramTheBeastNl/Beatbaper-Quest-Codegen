// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Digests.Sha3Digest
#include "Org/BouncyCastle/Crypto/Digests/Sha3Digest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.CheckBitLength
int Org::BouncyCastle::Crypto::Digests::Sha3Digest::CheckBitLength(int bitLength) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Crypto.Digests", "Sha3Digest", "CheckBitLength", bitLength));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest..ctor
Org::BouncyCastle::Crypto::Digests::Sha3Digest* Org::BouncyCastle::Crypto::Digests::Sha3Digest::New_ctor(Org::BouncyCastle::Crypto::Digests::Sha3Digest* source) {
  return THROW_UNLESS(il2cpp_utils::New<Sha3Digest*>(source));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest..ctor
Org::BouncyCastle::Crypto::Digests::Sha3Digest* Org::BouncyCastle::Crypto::Digests::Sha3Digest::New_ctor(int bitLength) {
  return THROW_UNLESS(il2cpp_utils::New<Sha3Digest*>(bitLength));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Digests::Sha3Digest::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.DoFinal
int Org::BouncyCastle::Crypto::Digests::Sha3Digest::DoFinal(::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "DoFinal", output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Digests.Sha3Digest.Copy
Org::BouncyCastle::Utilities::IMemoable* Org::BouncyCastle::Crypto::Digests::Sha3Digest::Copy() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Utilities::IMemoable*>(this, "Copy"));
}
