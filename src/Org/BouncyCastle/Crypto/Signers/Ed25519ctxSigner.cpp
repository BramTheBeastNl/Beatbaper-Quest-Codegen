// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner
#include "Org/BouncyCastle/Crypto/Signers/Ed25519ctxSigner.hpp"
// Including type: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner/Buffer
#include "Org/BouncyCastle/Crypto/Signers/Ed25519ctxSigner_Buffer.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/Ed25519PrivateKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/Ed25519PublicKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner..ctor
Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner* Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner::New_ctor(::Array<uint8_t>* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Signers").WithContext("Ed25519ctxSigner").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Ed25519ctxSigner*>(context));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner.Init
void Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner::Init(bool forSigning, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Signers").WithContext("Ed25519ctxSigner").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Init", {}, ::il2cpp_utils::ExtractTypes(forSigning, parameters)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forSigning, parameters);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner.BlockUpdate
void Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner::BlockUpdate(::Array<uint8_t>* buf, int off, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Signers").WithContext("Ed25519ctxSigner").WithContext("BlockUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BlockUpdate", {}, ::il2cpp_utils::ExtractTypes(buf, off, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buf, off, len);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner.GenerateSignature
::Array<uint8_t>* Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner::GenerateSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Signers").WithContext("Ed25519ctxSigner").WithContext("GenerateSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "GenerateSignature", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner.Reset
void Org::BouncyCastle::Crypto::Signers::Ed25519ctxSigner::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Signers").WithContext("Ed25519ctxSigner").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Reset", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
