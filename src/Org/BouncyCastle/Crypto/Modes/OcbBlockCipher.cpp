// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher
#include "Org/BouncyCastle/Crypto/Modes/OcbBlockCipher.hpp"
// Including type: Org.BouncyCastle.Crypto.IBlockCipher
#include "Org/BouncyCastle/Crypto/IBlockCipher.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher..ctor
Org::BouncyCastle::Crypto::Modes::OcbBlockCipher* Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::New_ctor(Org::BouncyCastle::Crypto::IBlockCipher* hashCipher, Org::BouncyCastle::Crypto::IBlockCipher* mainCipher) {
  return THROW_UNLESS(il2cpp_utils::New<OcbBlockCipher*>(hashCipher, mainCipher));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessNonce
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ProcessNonce(::Array<uint8_t>* N) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessNonce", N));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessAadBytes
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ProcessAadBytes(::Array<uint8_t>* input, int off, int len) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessAadBytes", input, off, len));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Clear
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::Clear(::Array<uint8_t>* bs) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Clear", bs));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetLSub
::Array<uint8_t>* Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::GetLSub(int n) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "GetLSub", n));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessHashBlock
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ProcessHashBlock() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessHashBlock"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessMainBlock
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ProcessMainBlock(::Array<uint8_t>* output, int outOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessMainBlock", output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::Reset(bool clearMac) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset", clearMac));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.UpdateHASH
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::UpdateHASH(::Array<uint8_t>* LSub) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateHASH", LSub));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_double
::Array<uint8_t>* Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::OCB_double(::Array<uint8_t>* block) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Modes", "OcbBlockCipher", "OCB_double", block));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_extend
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::OCB_extend(::Array<uint8_t>* block, int pos) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Modes", "OcbBlockCipher", "OCB_extend", block, pos));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.OCB_ntz
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::OCB_ntz(int64_t x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Crypto.Modes", "OcbBlockCipher", "OCB_ntz", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ShiftLeft
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ShiftLeft(::Array<uint8_t>* block, ::Array<uint8_t>* output) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Crypto.Modes", "OcbBlockCipher", "ShiftLeft", block, output));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Xor
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::Xor(::Array<uint8_t>* block, ::Array<uint8_t>* val) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Modes", "OcbBlockCipher", "Xor", block, val));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Init
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetBlockSize
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetOutputSize
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::GetOutputSize(int len) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetOutputSize", len));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.GetUpdateOutputSize
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::GetUpdateOutputSize(int len) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetUpdateOutputSize", len));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.ProcessBytes
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::ProcessBytes(::Array<uint8_t>* input, int inOff, int len, ::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBytes", input, inOff, len, output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.DoFinal
int Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::DoFinal(::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "DoFinal", output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.OcbBlockCipher.Reset
void Org::BouncyCastle::Crypto::Modes::OcbBlockCipher::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
