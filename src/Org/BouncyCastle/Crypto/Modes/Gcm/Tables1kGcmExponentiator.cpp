// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator
#include "Org/BouncyCastle/Crypto/Modes/Gcm/Tables1kGcmExponentiator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator.EnsureAvailable
void Org::BouncyCastle::Crypto::Modes::Gcm::Tables1kGcmExponentiator::EnsureAvailable(int bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Modes::Gcm").WithContext("Tables1kGcmExponentiator").WithContext("EnsureAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bit)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator.Init
void Org::BouncyCastle::Crypto::Modes::Gcm::Tables1kGcmExponentiator::Init(::Array<uint8_t>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Modes::Gcm").WithContext("Tables1kGcmExponentiator").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator.ExponentiateX
void Org::BouncyCastle::Crypto::Modes::Gcm::Tables1kGcmExponentiator::ExponentiateX(int64_t pow, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Modes::Gcm").WithContext("Tables1kGcmExponentiator").WithContext("ExponentiateX");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExponentiateX", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pow, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pow, output);
}
