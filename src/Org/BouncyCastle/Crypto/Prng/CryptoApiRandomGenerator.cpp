// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator
#include "Org/BouncyCastle/Crypto/Prng/CryptoApiRandomGenerator.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator..ctor
Org::BouncyCastle::Crypto::Prng::CryptoApiRandomGenerator* Org::BouncyCastle::Crypto::Prng::CryptoApiRandomGenerator::New_ctor(System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Prng").WithContext("CryptoApiRandomGenerator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CryptoApiRandomGenerator*>(rng));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator..ctor
Org::BouncyCastle::Crypto::Prng::CryptoApiRandomGenerator* Org::BouncyCastle::Crypto::Prng::CryptoApiRandomGenerator::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Prng").WithContext("CryptoApiRandomGenerator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CryptoApiRandomGenerator*>());
}
// Autogenerated method: Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator.NextBytes
void Org::BouncyCastle::Crypto::Prng::CryptoApiRandomGenerator::NextBytes(::Array<uint8_t>* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Prng").WithContext("CryptoApiRandomGenerator").WithContext("NextBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "NextBytes", {}, ::il2cpp_utils::ExtractTypes(bytes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bytes);
}
