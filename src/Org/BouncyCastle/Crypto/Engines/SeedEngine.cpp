// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SeedEngine
#include "Org/BouncyCastle/Crypto/Engines/SeedEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS0
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS0() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS0
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS0(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS1
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS1() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS1
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS1(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS2
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS2() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS2
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS2(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] SS3
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_SS3() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] SS3
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_SS3(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "SS3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] KC
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SeedEngine::_get_KC() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "KC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] KC
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_set_KC(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SeedEngine", "KC", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.createWorkingKey
::Array<int>* Org::BouncyCastle::Crypto::Engines::SeedEngine::createWorkingKey(::Array<uint8_t>* inKey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "createWorkingKey", inKey));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.extractW1
int Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW1(int64_t lVal) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "extractW1", lVal));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.extractW0
int Org::BouncyCastle::Crypto::Engines::SeedEngine::extractW0(int64_t lVal) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "extractW0", lVal));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.rotateLeft8
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateLeft8(int64_t x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "rotateLeft8", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.rotateRight8
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::rotateRight8(int64_t x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "rotateRight8", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.bytesToLong
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::bytesToLong(::Array<uint8_t>* src, int srcOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "bytesToLong", src, srcOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.longToBytes
void Org::BouncyCastle::Crypto::Engines::SeedEngine::longToBytes(::Array<uint8_t>* dest, int destOff, int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "longToBytes", dest, destOff, value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.G
int Org::BouncyCastle::Crypto::Engines::SeedEngine::G(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "G", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.F
int64_t Org::BouncyCastle::Crypto::Engines::SeedEngine::F(int ki0, int ki1, int64_t r) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "F", ki0, ki1, r));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.phaseCalc1
int Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc1(int r0, int ki0, int r1, int ki1) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "phaseCalc1", r0, ki0, r1, ki1));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.phaseCalc2
int Org::BouncyCastle::Crypto::Engines::SeedEngine::phaseCalc2(int r0, int ki0, int r1, int ki1) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "phaseCalc2", r0, ki0, r1, ki1));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine..cctor
void Org::BouncyCastle::Crypto::Engines::SeedEngine::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Engines", "SeedEngine", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.Init
void Org::BouncyCastle::Crypto::Engines::SeedEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SeedEngine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SeedEngine::get_IsPartialBlockOkay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsPartialBlockOkay"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SeedEngine::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SeedEngine::ProcessBlock(::Array<uint8_t>* inBuf, int inOff, ::Array<uint8_t>* outBuf, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBlock", inBuf, inOff, outBuf, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine.Reset
void Org::BouncyCastle::Crypto::Engines::SeedEngine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SeedEngine..ctor
Org::BouncyCastle::Crypto::Engines::SeedEngine* Org::BouncyCastle::Crypto::Engines::SeedEngine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SeedEngine*>());
}
