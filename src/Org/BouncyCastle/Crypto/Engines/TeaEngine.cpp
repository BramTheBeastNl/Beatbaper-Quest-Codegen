// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.TeaEngine
#include "Org/BouncyCastle/Crypto/Engines/TeaEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.setKey
void Org::BouncyCastle::Crypto::Engines::TeaEngine::setKey(::Array<uint8_t>* key) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "setKey", key));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.encryptBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::encryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "encryptBlock", inBytes, inOff, outBytes, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.decryptBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::decryptBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "decryptBlock", inBytes, inOff, outBytes, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine..ctor
Org::BouncyCastle::Crypto::Engines::TeaEngine* Org::BouncyCastle::Crypto::Engines::TeaEngine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<TeaEngine*>());
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::TeaEngine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::TeaEngine::get_IsPartialBlockOkay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsPartialBlockOkay"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::TeaEngine::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.Init
void Org::BouncyCastle::Crypto::Engines::TeaEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::TeaEngine::ProcessBlock(::Array<uint8_t>* inBytes, int inOff, ::Array<uint8_t>* outBytes, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBlock", inBytes, inOff, outBytes, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TeaEngine.Reset
void Org::BouncyCastle::Crypto::Engines::TeaEngine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
