// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.Salsa20Engine
#include "Org/BouncyCastle/Crypto/Engines/Salsa20Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 DEFAULT_ROUNDS
int Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_DEFAULT_ROUNDS() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "DEFAULT_ROUNDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 DEFAULT_ROUNDS
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_DEFAULT_ROUNDS(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "DEFAULT_ROUNDS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] TAU_SIGMA
::Array<uint>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_TAU_SIGMA() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "TAU_SIGMA"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] TAU_SIGMA
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_TAU_SIGMA(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "TAU_SIGMA", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Byte[] sigma
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_sigma() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "sigma"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Byte[] sigma
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_sigma(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "sigma", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Byte[] tau
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_get_tau() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "tau"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Byte[] tau
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_set_tau(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "tau", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.PackTauOrSigma
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::PackTauOrSigma(int keyLength, ::Array<uint>* state, int stateOffset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PackTauOrSigma", keyLength, state, stateOffset));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine..ctor
Org::BouncyCastle::Crypto::Engines::Salsa20Engine* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::New_ctor(int rounds) {
  return THROW_UNLESS(il2cpp_utils::New<Salsa20Engine*>(rounds));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.get_NonceSize
int Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_NonceSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_NonceSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.AdvanceCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::AdvanceCounter() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AdvanceCounter"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ResetCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetCounter() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetCounter"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.SetKey
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SetKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetKey", keyBytes, ivBytes));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.GenerateKeyStream
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::GenerateKeyStream(::Array<uint8_t>* output) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateKeyStream", output));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.SalsaCore
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::SalsaCore(int rounds, ::Array<uint>* input, ::Array<uint>* x) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", "SalsaCore", rounds, input, x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ResetLimitCounter
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ResetLimitCounter() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetLimitCounter"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.LimitExceeded
bool Org::BouncyCastle::Crypto::Engines::Salsa20Engine::LimitExceeded(uint len) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "LimitExceeded", len));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine..cctor
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Engines", "Salsa20Engine", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine..ctor
Org::BouncyCastle::Crypto::Engines::Salsa20Engine* Org::BouncyCastle::Crypto::Engines::Salsa20Engine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<Salsa20Engine*>());
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.Init
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.ProcessBytes
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::ProcessBytes(::Array<uint8_t>* inBytes, int inOff, int len, ::Array<uint8_t>* outBytes, int outOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessBytes", inBytes, inOff, len, outBytes, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.Salsa20Engine.Reset
void Org::BouncyCastle::Crypto::Engines::Salsa20Engine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
