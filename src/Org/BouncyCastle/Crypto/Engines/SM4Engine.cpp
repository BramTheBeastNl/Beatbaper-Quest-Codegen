// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.SM4Engine
#include "Org/BouncyCastle/Crypto/Engines/SM4Engine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] Sbox
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_Sbox() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "Sbox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] Sbox
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_Sbox(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "Sbox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] CK
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_CK() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "CK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] CK
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_CK(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "CK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] FK
::Array<uint>* Org::BouncyCastle::Crypto::Engines::SM4Engine::_get_FK() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "FK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] FK
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_set_FK(::Array<uint>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "FK", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.tau
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::tau(uint A) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "tau", A));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.L_ap
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::L_ap(uint B) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "L_ap", B));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.T_ap
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::T_ap(uint Z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "T_ap", Z));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.ExpandKey
void Org::BouncyCastle::Crypto::Engines::SM4Engine::ExpandKey(bool forEncryption, ::Array<uint8_t>* key) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExpandKey", forEncryption, key));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.L
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::L(uint B) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "L", B));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.T
uint Org::BouncyCastle::Crypto::Engines::SM4Engine::T(uint Z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Crypto.Engines", "SM4Engine", "T", Z));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine..cctor
void Org::BouncyCastle::Crypto::Engines::SM4Engine::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Engines", "SM4Engine", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.Init
void Org::BouncyCastle::Crypto::Engines::SM4Engine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::SM4Engine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::SM4Engine::get_IsPartialBlockOkay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsPartialBlockOkay"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::SM4Engine::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::SM4Engine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBlock", input, inOff, output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine.Reset
void Org::BouncyCastle::Crypto::Engines::SM4Engine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.SM4Engine..ctor
Org::BouncyCastle::Crypto::Engines::SM4Engine* Org::BouncyCastle::Crypto::Engines::SM4Engine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SM4Engine*>());
}
