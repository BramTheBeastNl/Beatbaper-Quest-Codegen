// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.ChaChaEngine
#include "Org/BouncyCastle/Crypto/Engines/ChaChaEngine.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.ChachaCore
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ChachaCore(int rounds, ::Array<uint>* input, ::Array<uint>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("ChachaCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Engines", "ChaChaEngine", "ChachaCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rounds, input, x)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rounds, input, x);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::ChaChaEngine::get_AlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("get_AlgorithmName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AlgorithmName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.AdvanceCounter
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::AdvanceCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("AdvanceCounter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdvanceCounter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.ResetCounter
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::ResetCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("ResetCounter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetCounter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::SetKey(::Array<uint8_t>* keyBytes, ::Array<uint8_t>* ivBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("SetKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBytes, ivBytes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyBytes, ivBytes);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.ChaChaEngine.GenerateKeyStream
void Org::BouncyCastle::Crypto::Engines::ChaChaEngine::GenerateKeyStream(::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Engines").WithContext("ChaChaEngine").WithContext("GenerateKeyStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateKeyStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output);
}
