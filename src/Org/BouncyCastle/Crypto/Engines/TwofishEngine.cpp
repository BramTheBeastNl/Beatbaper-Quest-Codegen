// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.TwofishEngine
#include "Org/BouncyCastle/Crypto/Engines/TwofishEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[,] P
::Array<uint8_t>* Org::BouncyCastle::Crypto::Engines::TwofishEngine::_get_P() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", "P"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[,] P
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::_set_P(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", "P", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.SetKey
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::SetKey(::Array<uint8_t>* key) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetKey", key));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.EncryptBlock
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::EncryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EncryptBlock", src, srcIndex, dst, dstIndex));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.DecryptBlock
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::DecryptBlock(::Array<uint8_t>* src, int srcIndex, ::Array<uint8_t>* dst, int dstIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DecryptBlock", src, srcIndex, dst, dstIndex));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.F32
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::F32(int x, ::Array<int>* k32) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "F32", x, k32));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_MDS_Encode
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_MDS_Encode(int k0, int k1) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "RS_MDS_Encode", k0, k1));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_rem
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::RS_rem(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "RS_rem", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.LFSR1
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR1(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "LFSR1", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.LFSR2
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::LFSR2(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "LFSR2", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Mx_X
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_X(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Mx_X", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Mx_Y
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Mx_Y(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Mx_Y", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b0
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b0(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "M_b0", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b1
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b1(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "M_b1", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b2
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b2(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "M_b2", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.M_b3
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::M_b3(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "M_b3", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Fe32_0
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_0(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Fe32_0", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Fe32_3
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::Fe32_3(int x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Fe32_3", x));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.BytesTo32Bits
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::BytesTo32Bits(::Array<uint8_t>* b, int p) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "BytesTo32Bits", b, p));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Bits32ToBytes
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Bits32ToBytes(int inData, ::Array<uint8_t>* b, int offset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Bits32ToBytes", inData, b, offset));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine..cctor
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Engines", "TwofishEngine", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine..ctor
Org::BouncyCastle::Crypto::Engines::TwofishEngine* Org::BouncyCastle::Crypto::Engines::TwofishEngine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<TwofishEngine*>());
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Init
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.get_IsPartialBlockOkay
bool Org::BouncyCastle::Crypto::Engines::TwofishEngine::get_IsPartialBlockOkay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsPartialBlockOkay"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBlock", input, inOff, output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.Reset
void Org::BouncyCastle::Crypto::Engines::TwofishEngine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.TwofishEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::TwofishEngine::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
