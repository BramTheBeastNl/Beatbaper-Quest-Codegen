// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Engines.DesEdeEngine
#include "Org/BouncyCastle/Crypto/Engines/DesEdeEngine.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init
void Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Init(bool forEncryption, Org::BouncyCastle::Crypto::ICipherParameters* parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", forEncryption, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Engines::DesEdeEngine::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.GetBlockSize
int Org::BouncyCastle::Crypto::Engines::DesEdeEngine::GetBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBlockSize"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.ProcessBlock
int Org::BouncyCastle::Crypto::Engines::DesEdeEngine::ProcessBlock(::Array<uint8_t>* input, int inOff, ::Array<uint8_t>* output, int outOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ProcessBlock", input, inOff, output, outOff));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Reset
void Org::BouncyCastle::Crypto::Engines::DesEdeEngine::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Engines.DesEdeEngine..ctor
Org::BouncyCastle::Crypto::Engines::DesEdeEngine* Org::BouncyCastle::Crypto::Engines::DesEdeEngine::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<DesEdeEngine*>());
}
