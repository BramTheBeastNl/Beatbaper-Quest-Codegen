// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Utilities.Pack
#include "Org/BouncyCastle/Crypto/Utilities/Pack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_BE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_BE(uint n, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_BE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_BE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_BE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_BE(::Array<uint>* ns, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_BE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_BE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ns, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ns, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.BE_To_UInt32
uint Org::BouncyCastle::Crypto::Utilities::Pack::BE_To_UInt32(::Array<uint8_t>* bs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("BE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "BE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.BE_To_UInt32
uint Org::BouncyCastle::Crypto::Utilities::Pack::BE_To_UInt32(::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("BE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "BE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.BE_To_UInt32
void Org::BouncyCastle::Crypto::Utilities::Pack::BE_To_UInt32(::Array<uint8_t>* bs, int off, ::Array<uint>* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("BE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "BE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off, ns)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off, ns);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.BE_To_UInt32
void Org::BouncyCastle::Crypto::Utilities::Pack::BE_To_UInt32(::Array<uint8_t>* bs, int bsOff, ::Array<uint>* ns, int nsOff, int nsLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("BE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "BE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, bsOff, ns, nsOff, nsLen)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, bsOff, ns, nsOff, nsLen);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt64_To_BE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt64_To_BE(uint64_t n, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt64_To_BE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt64_To_BE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.BE_To_UInt64
uint64_t Org::BouncyCastle::Crypto::Utilities::Pack::BE_To_UInt64(::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("BE_To_UInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "BE_To_UInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_LE
::Array<uint8_t>* Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_LE(uint n) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_LE(uint n, ::Array<uint8_t>* bs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_LE(uint n, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt32_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt32_To_LE(::Array<uint>* ns, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt32_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt32_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ns, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ns, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.LE_To_UInt32
uint Org::BouncyCastle::Crypto::Utilities::Pack::LE_To_UInt32(::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("LE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "LE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.LE_To_UInt32
void Org::BouncyCastle::Crypto::Utilities::Pack::LE_To_UInt32(::Array<uint8_t>* bs, int bOff, ::Array<uint>* ns, int nOff, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("LE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "LE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, bOff, ns, nOff, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, bOff, ns, nOff, count);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.LE_To_UInt32
::Array<uint>* Org::BouncyCastle::Crypto::Utilities::Pack::LE_To_UInt32(::Array<uint8_t>* bs, int off, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("LE_To_UInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "LE_To_UInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off, count);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt64_To_LE
::Array<uint8_t>* Org::BouncyCastle::Crypto::Utilities::Pack::UInt64_To_LE(uint64_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt64_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt64_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt64_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt64_To_LE(uint64_t n, ::Array<uint8_t>* bs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt64_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt64_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt64_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt64_To_LE(uint64_t n, ::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt64_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt64_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n, bs, off)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, bs, off);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.UInt64_To_LE
void Org::BouncyCastle::Crypto::Utilities::Pack::UInt64_To_LE(::Array<uint64_t>* ns, int nsOff, int nsLen, ::Array<uint8_t>* bs, int bsOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("UInt64_To_LE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "UInt64_To_LE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ns, nsOff, nsLen, bs, bsOff)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ns, nsOff, nsLen, bs, bsOff);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Utilities.Pack.LE_To_UInt64
uint64_t Org::BouncyCastle::Crypto::Utilities::Pack::LE_To_UInt64(::Array<uint8_t>* bs, int off) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Utilities").WithContext("Pack").WithContext("LE_To_UInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Utilities", "Pack", "LE_To_UInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bs, off)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bs, off);
}
