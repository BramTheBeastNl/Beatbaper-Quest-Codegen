// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities
#include "Org/BouncyCastle/Crypto/Tls/TlsEccUtilities.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECDomainParameters.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECCurve
#include "Org/BouncyCastle/Math/EC/ECCurve.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPublicKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair
#include "Org/BouncyCastle/Crypto/AsymmetricCipherKeyPair.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPrivateKeyParameters.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] CurveNames
::Array<::Il2CppString*>* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::_get_CurveNames() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("_get_CurveNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", "CurveNames"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] CurveNames
void Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::_set_CurveNames(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("_set_CurveNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", "CurveNames", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.GetNameOfNamedCurve
::Il2CppString* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::GetNameOfNamedCurve(int namedCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("GetNameOfNamedCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetNameOfNamedCurve", {}, ::il2cpp_utils::ExtractTypes(namedCurve)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, namedCurve);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.GetParametersForNamedCurve
Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::GetParametersForNamedCurve(int namedCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("GetParametersForNamedCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*>(), "GetParametersForNamedCurve", {}, ::il2cpp_utils::ExtractTypes(namedCurve)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, namedCurve);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.IsSupportedNamedCurve
bool Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::IsSupportedNamedCurve(int namedCurve) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("IsSupportedNamedCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<bool>(), "IsSupportedNamedCurve", {}, ::il2cpp_utils::ExtractTypes(namedCurve)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, namedCurve);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.IsCompressionPreferred
bool Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::IsCompressionPreferred(::Array<uint8_t>* ecPointFormats, uint8_t compressionFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("IsCompressionPreferred");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<bool>(), "IsCompressionPreferred", {}, ::il2cpp_utils::ExtractTypes(ecPointFormats, compressionFormat)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecPointFormats, compressionFormat);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.SerializeECPoint
::Array<uint8_t>* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::SerializeECPoint(::Array<uint8_t>* ecPointFormats, Org::BouncyCastle::Math::EC::ECPoint* point) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("SerializeECPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "SerializeECPoint", {}, ::il2cpp_utils::ExtractTypes(ecPointFormats, point)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecPointFormats, point);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.DeserializeECPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::DeserializeECPoint(::Array<uint8_t>* ecPointFormats, Org::BouncyCastle::Math::EC::ECCurve* curve, ::Array<uint8_t>* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("DeserializeECPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Math::EC::ECPoint*>(), "DeserializeECPoint", {}, ::il2cpp_utils::ExtractTypes(ecPointFormats, curve, encoding)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecPointFormats, curve, encoding);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.DeserializeECPublicKey
Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::DeserializeECPublicKey(::Array<uint8_t>* ecPointFormats, Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* curve_params, ::Array<uint8_t>* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("DeserializeECPublicKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters*>(), "DeserializeECPublicKey", {}, ::il2cpp_utils::ExtractTypes(ecPointFormats, curve_params, encoding)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecPointFormats, curve_params, encoding);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.GenerateECKeyPair
Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::GenerateECKeyPair(Org::BouncyCastle::Security::SecureRandom* random, Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* ecParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("GenerateECKeyPair");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair*>(), "GenerateECKeyPair", {}, ::il2cpp_utils::ExtractTypes(random, ecParams)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::AsymmetricCipherKeyPair*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, random, ecParams);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.GenerateEphemeralClientKeyExchange
Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::GenerateEphemeralClientKeyExchange(Org::BouncyCastle::Security::SecureRandom* random, ::Array<uint8_t>* ecPointFormats, Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* ecParams, System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("GenerateEphemeralClientKeyExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters*>(), "GenerateEphemeralClientKeyExchange", {}, ::il2cpp_utils::ExtractTypes(random, ecPointFormats, ecParams, output)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::ECPrivateKeyParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, random, ecPointFormats, ecParams, output);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.ValidateECPublicKey
Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters* Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::ValidateECPublicKey(Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("ValidateECPublicKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters*>(), "ValidateECPublicKey", {}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Crypto::Parameters::ECPublicKeyParameters*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities.WriteECPoint
void Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::WriteECPoint(::Array<uint8_t>* ecPointFormats, Org::BouncyCastle::Math::EC::ECPoint* point, System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext("WriteECPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<void>(), "WriteECPoint", {}, ::il2cpp_utils::ExtractTypes(ecPointFormats, point, output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ecPointFormats, point, output);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Tls.TlsEccUtilities..cctor
void Org::BouncyCastle::Crypto::Tls::TlsEccUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Tls").WithContext("TlsEccUtilities").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Tls", "TlsEccUtilities", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
