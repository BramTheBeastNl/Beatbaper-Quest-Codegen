// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Parameters.RC2Parameters
#include "Org/BouncyCastle/Crypto/Parameters/RC2Parameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.RC2Parameters..ctor
Org::BouncyCastle::Crypto::Parameters::RC2Parameters* Org::BouncyCastle::Crypto::Parameters::RC2Parameters::New_ctor(::Array<uint8_t>* key, int keyOff, int keyLen, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("RC2Parameters").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RC2Parameters*>(key, keyOff, keyLen, bits));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.RC2Parameters.get_EffectiveKeyBits
int Org::BouncyCastle::Crypto::Parameters::RC2Parameters::get_EffectiveKeyBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("RC2Parameters").WithContext("get_EffectiveKeyBits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_EffectiveKeyBits", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.RC2Parameters..ctor
Org::BouncyCastle::Crypto::Parameters::RC2Parameters* Org::BouncyCastle::Crypto::Parameters::RC2Parameters::New_ctor(::Array<uint8_t>* key, int keyOff, int keyLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("RC2Parameters").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RC2Parameters*>(key, keyOff, keyLen));
}
