// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECKeyGenerationParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECDomainParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters..ctor
Org::BouncyCastle::Crypto::Parameters::ECKeyGenerationParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyGenerationParameters::New_ctor(Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* domainParameters, Org::BouncyCastle::Security::SecureRandom* random) {
  return THROW_UNLESS(il2cpp_utils::New<ECKeyGenerationParameters*>(domainParameters, random));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters.get_DomainParameters
Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyGenerationParameters::get_DomainParameters() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*>(this, "get_DomainParameters"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters.get_PublicKeyParamSet
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Crypto::Parameters::ECKeyGenerationParameters::get_PublicKeyParamSet() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Asn1::DerObjectIdentifier*>(this, "get_PublicKeyParamSet"));
}
