// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECKeyParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECDomainParameters.hpp"
// Including type: Org.BouncyCastle.Asn1.DerObjectIdentifier
#include "Org/BouncyCastle/Asn1/DerObjectIdentifier.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] algorithms
::Array<::Il2CppString*>* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::_get_algorithms() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("Org.BouncyCastle.Crypto.Parameters", "ECKeyParameters", "algorithms"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] algorithms
void Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::_set_algorithms(::Array<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Parameters", "ECKeyParameters", "algorithms", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters..ctor
Org::BouncyCastle::Crypto::Parameters::ECKeyParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::New_ctor(::Il2CppString* algorithm, bool isPrivate, Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* parameters) {
  return THROW_UNLESS(il2cpp_utils::New<ECKeyParameters*>(algorithm, isPrivate, parameters));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters..ctor
Org::BouncyCastle::Crypto::Parameters::ECKeyParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::New_ctor(::Il2CppString* algorithm, bool isPrivate, Org::BouncyCastle::Asn1::DerObjectIdentifier* publicKeyParamSet) {
  return THROW_UNLESS(il2cpp_utils::New<ECKeyParameters*>(algorithm, isPrivate, publicKeyParamSet));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.get_AlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::get_AlgorithmName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_AlgorithmName"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.get_Parameters
Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::get_Parameters() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*>(this, "get_Parameters"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.get_PublicKeyParamSet
Org::BouncyCastle::Asn1::DerObjectIdentifier* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::get_PublicKeyParamSet() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Asn1::DerObjectIdentifier*>(this, "get_PublicKeyParamSet"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.Equals
bool Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::Equals(Org::BouncyCastle::Crypto::Parameters::ECKeyParameters* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.VerifyAlgorithmName
::Il2CppString* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::VerifyAlgorithmName(::Il2CppString* algorithm) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("Org.BouncyCastle.Crypto.Parameters", "ECKeyParameters", "VerifyAlgorithmName", algorithm));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.LookupParameters
Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::LookupParameters(Org::BouncyCastle::Asn1::DerObjectIdentifier* publicKeyParamSet) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*>("Org.BouncyCastle.Crypto.Parameters", "ECKeyParameters", "LookupParameters", publicKeyParamSet));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters..cctor
void Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Crypto.Parameters", "ECKeyParameters", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.Equals
bool Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.ECKeyParameters.GetHashCode
int Org::BouncyCastle::Crypto::Parameters::ECKeyParameters::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
