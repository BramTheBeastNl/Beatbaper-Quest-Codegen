// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/X25519PublicKeyParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 KeySize
int Org::BouncyCastle::Crypto::Parameters::X25519PublicKeyParameters::_get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("X25519PublicKeyParameters").WithContext("_get_KeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Crypto.Parameters", "X25519PublicKeyParameters", "KeySize"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 KeySize
void Org::BouncyCastle::Crypto::Parameters::X25519PublicKeyParameters::_set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("X25519PublicKeyParameters").WithContext("_set_KeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Crypto.Parameters", "X25519PublicKeyParameters", "KeySize", value));
}
// Autogenerated method: Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters..cctor
void Org::BouncyCastle::Crypto::Parameters::X25519PublicKeyParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Crypto::Parameters").WithContext("X25519PublicKeyParameters").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Crypto.Parameters", "X25519PublicKeyParameters", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
