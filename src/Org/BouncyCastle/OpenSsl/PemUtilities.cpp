// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.OpenSsl.PemUtilities
#include "Org/BouncyCastle/OpenSsl/PemUtilities.hpp"
// Including type: Org.BouncyCastle.OpenSsl.PemUtilities/PemBaseAlg
#include "Org/BouncyCastle/OpenSsl/PemUtilities_PemBaseAlg.hpp"
// Including type: Org.BouncyCastle.OpenSsl.PemUtilities/PemMode
#include "Org/BouncyCastle/OpenSsl/PemUtilities_PemMode.hpp"
// Including type: Org.BouncyCastle.Crypto.ICipherParameters
#include "Org/BouncyCastle/Crypto/ICipherParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.OpenSsl.PemUtilities..cctor
void Org::BouncyCastle::OpenSsl::PemUtilities::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.OpenSsl", "PemUtilities", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.OpenSsl.PemUtilities.ParseDekAlgName
void Org::BouncyCastle::OpenSsl::PemUtilities::ParseDekAlgName(::Il2CppString* dekAlgName, Org::BouncyCastle::OpenSsl::PemUtilities::PemBaseAlg& baseAlg, Org::BouncyCastle::OpenSsl::PemUtilities::PemMode& mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.OpenSsl", "PemUtilities", "ParseDekAlgName", dekAlgName, baseAlg, mode));
}
// Autogenerated method: Org.BouncyCastle.OpenSsl.PemUtilities.Crypt
::Array<uint8_t>* Org::BouncyCastle::OpenSsl::PemUtilities::Crypt(bool encrypt, ::Array<uint8_t>* bytes, ::Array<::Il2CppChar>* password, ::Il2CppString* dekAlgName, ::Array<uint8_t>* iv) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.OpenSsl", "PemUtilities", "Crypt", encrypt, bytes, password, dekAlgName, iv));
}
// Autogenerated method: Org.BouncyCastle.OpenSsl.PemUtilities.GetCipherParameters
Org::BouncyCastle::Crypto::ICipherParameters* Org::BouncyCastle::OpenSsl::PemUtilities::GetCipherParameters(::Array<::Il2CppChar>* password, Org::BouncyCastle::OpenSsl::PemUtilities::PemBaseAlg baseAlg, ::Array<uint8_t>* salt) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Crypto::ICipherParameters*>("Org.BouncyCastle.OpenSsl", "PemUtilities", "GetCipherParameters", password, baseAlg, salt));
}
