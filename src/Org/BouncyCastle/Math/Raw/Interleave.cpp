// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.Raw.Interleave
#include "Org/BouncyCastle/Math/Raw/Interleave.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.Raw.Interleave.Expand8to16
uint Org::BouncyCastle::Math::Raw::Interleave::Expand8to16(uint x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Interleave", "Expand8to16", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Interleave.Expand32to64
uint64_t Org::BouncyCastle::Math::Raw::Interleave::Expand32to64(uint x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>("Org.BouncyCastle.Math.Raw", "Interleave", "Expand32to64", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Interleave.Expand64To128
void Org::BouncyCastle::Math::Raw::Interleave::Expand64To128(uint64_t x, ::Array<uint64_t>* z, int zOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.Raw", "Interleave", "Expand64To128", x, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Interleave.Shuffle2
uint Org::BouncyCastle::Math::Raw::Interleave::Shuffle2(uint x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Interleave", "Shuffle2", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Interleave.Unshuffle
uint64_t Org::BouncyCastle::Math::Raw::Interleave::Unshuffle(uint64_t x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>("Org.BouncyCastle.Math.Raw", "Interleave", "Unshuffle", x));
}
