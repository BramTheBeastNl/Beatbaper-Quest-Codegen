// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.Raw.Nat160
#include "Org/BouncyCastle/Math/Raw/Nat160.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Add
uint Org::BouncyCastle::Math::Raw::Nat160::Add(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "Add", x, y, z));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.AddBothTo
uint Org::BouncyCastle::Math::Raw::Nat160::AddBothTo(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "AddBothTo", x, y, z));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Copy
void Org::BouncyCastle::Math::Raw::Nat160::Copy(::Array<uint>* x, int xOff, ::Array<uint>* z, int zOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.Raw", "Nat160", "Copy", x, xOff, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Create
::Array<uint>* Org::BouncyCastle::Math::Raw::Nat160::Create() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint>*>("Org.BouncyCastle.Math.Raw", "Nat160", "Create"));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.CreateExt
::Array<uint>* Org::BouncyCastle::Math::Raw::Nat160::CreateExt() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint>*>("Org.BouncyCastle.Math.Raw", "Nat160", "CreateExt"));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Eq
bool Org::BouncyCastle::Math::Raw::Nat160::Eq(::Array<uint>* x, ::Array<uint>* y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Org.BouncyCastle.Math.Raw", "Nat160", "Eq", x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.FromBigInteger
::Array<uint>* Org::BouncyCastle::Math::Raw::Nat160::FromBigInteger(Org::BouncyCastle::Math::BigInteger* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint>*>("Org.BouncyCastle.Math.Raw", "Nat160", "FromBigInteger", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.GetBit
uint Org::BouncyCastle::Math::Raw::Nat160::GetBit(::Array<uint>* x, int bit) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "GetBit", x, bit));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Gte
bool Org::BouncyCastle::Math::Raw::Nat160::Gte(::Array<uint>* x, ::Array<uint>* y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Org.BouncyCastle.Math.Raw", "Nat160", "Gte", x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.IsOne
bool Org::BouncyCastle::Math::Raw::Nat160::IsOne(::Array<uint>* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Org.BouncyCastle.Math.Raw", "Nat160", "IsOne", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.IsZero
bool Org::BouncyCastle::Math::Raw::Nat160::IsZero(::Array<uint>* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Org.BouncyCastle.Math.Raw", "Nat160", "IsZero", x));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Mul
void Org::BouncyCastle::Math::Raw::Nat160::Mul(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* zz) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.Raw", "Nat160", "Mul", x, y, zz));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.MulAddTo
uint Org::BouncyCastle::Math::Raw::Nat160::MulAddTo(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* zz) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "MulAddTo", x, y, zz));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Mul33Add
uint64_t Org::BouncyCastle::Math::Raw::Nat160::Mul33Add(uint w, ::Array<uint>* x, int xOff, ::Array<uint>* y, int yOff, ::Array<uint>* z, int zOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>("Org.BouncyCastle.Math.Raw", "Nat160", "Mul33Add", w, x, xOff, y, yOff, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Mul33DWordAdd
uint Org::BouncyCastle::Math::Raw::Nat160::Mul33DWordAdd(uint x, uint64_t y, ::Array<uint>* z, int zOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "Mul33DWordAdd", x, y, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Mul33WordAdd
uint Org::BouncyCastle::Math::Raw::Nat160::Mul33WordAdd(uint x, uint y, ::Array<uint>* z, int zOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "Mul33WordAdd", x, y, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.MulWordsAdd
uint Org::BouncyCastle::Math::Raw::Nat160::MulWordsAdd(uint x, uint y, ::Array<uint>* z, int zOff) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("Org.BouncyCastle.Math.Raw", "Nat160", "MulWordsAdd", x, y, z, zOff));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Square
void Org::BouncyCastle::Math::Raw::Nat160::Square(::Array<uint>* x, ::Array<uint>* zz) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.Raw", "Nat160", "Square", x, zz));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.Sub
int Org::BouncyCastle::Math::Raw::Nat160::Sub(::Array<uint>* x, ::Array<uint>* y, ::Array<uint>* z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.Raw", "Nat160", "Sub", x, y, z));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.SubFrom
int Org::BouncyCastle::Math::Raw::Nat160::SubFrom(::Array<uint>* x, ::Array<uint>* z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.Raw", "Nat160", "SubFrom", x, z));
}
// Autogenerated method: Org.BouncyCastle.Math.Raw.Nat160.ToBigInteger
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Math::Raw::Nat160::ToBigInteger(::Array<uint>* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::BigInteger*>("Org.BouncyCastle.Math.Raw", "Nat160", "ToBigInteger", x));
}
