// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.AbstractF2mCurve
#include "Org/BouncyCastle/Math/EC/AbstractF2mCurve.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Math.Field.IFiniteField
#include "Org/BouncyCastle/Math/Field/IFiniteField.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECFieldElement
#include "Org/BouncyCastle/Math/EC/ECFieldElement.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.BuildField
Org::BouncyCastle::Math::Field::IFiniteField* Org::BouncyCastle::Math::EC::AbstractF2mCurve::BuildField(int m, int k1, int k2, int k3) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("BuildField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Math.EC", "AbstractF2mCurve", "BuildField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, k1, k2, k3)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::Field::IFiniteField*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m, k1, k2, k3);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.SolveQuadraticEquation
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::AbstractF2mCurve::SolveQuadraticEquation(Org::BouncyCastle::Math::EC::ECFieldElement* beta) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("SolveQuadraticEquation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SolveQuadraticEquation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beta)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECFieldElement*, false>(this, ___internal__method, beta);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.GetSi
::Array<Org::BouncyCastle::Math::BigInteger*>* Org::BouncyCastle::Math::EC::AbstractF2mCurve::GetSi() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("GetSi");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSi", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<Org::BouncyCastle::Math::BigInteger*>*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.get_IsKoblitz
bool Org::BouncyCastle::Math::EC::AbstractF2mCurve::get_IsKoblitz() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("get_IsKoblitz");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsKoblitz", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.ImplRandomFieldElementMult
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Math::EC::AbstractF2mCurve::ImplRandomFieldElementMult(Org::BouncyCastle::Security::SecureRandom* r, int m) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("ImplRandomFieldElementMult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Org.BouncyCastle.Math.EC", "AbstractF2mCurve", "ImplRandomFieldElementMult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(r, m)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, r, m);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.CreatePoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::AbstractF2mCurve::CreatePoint(Org::BouncyCastle::Math::BigInteger* x, Org::BouncyCastle::Math::BigInteger* y, bool withCompression) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("CreatePoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, withCompression)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(this, ___internal__method, x, y, withCompression);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.RandomFieldElementMult
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::AbstractF2mCurve::RandomFieldElementMult(Org::BouncyCastle::Security::SecureRandom* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("RandomFieldElementMult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RandomFieldElementMult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(r)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECFieldElement*, false>(this, ___internal__method, r);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.AbstractF2mCurve.DecompressPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::AbstractF2mCurve::DecompressPoint(int yTilde, Org::BouncyCastle::Math::BigInteger* X1) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("AbstractF2mCurve").WithContext("DecompressPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DecompressPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(yTilde, X1)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(this, ___internal__method, yTilde, X1);
}
