// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.FpCurve
#include "Org/BouncyCastle/Math/EC/FpCurve.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Math.EC.FpPoint
#include "Org/BouncyCastle/Math/EC/FpPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECFieldElement
#include "Org/BouncyCastle/Math/EC/ECFieldElement.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve..ctor
Org::BouncyCastle::Math::EC::FpCurve* Org::BouncyCastle::Math::EC::FpCurve::New_ctor(Org::BouncyCastle::Math::BigInteger* q, Org::BouncyCastle::Math::BigInteger* a, Org::BouncyCastle::Math::BigInteger* b, Org::BouncyCastle::Math::BigInteger* order, Org::BouncyCastle::Math::BigInteger* cofactor) {
  return THROW_UNLESS(il2cpp_utils::New<FpCurve*>(q, a, b, order, cofactor));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve..ctor
Org::BouncyCastle::Math::EC::FpCurve* Org::BouncyCastle::Math::EC::FpCurve::New_ctor(Org::BouncyCastle::Math::BigInteger* q, Org::BouncyCastle::Math::BigInteger* r, Org::BouncyCastle::Math::EC::ECFieldElement* a, Org::BouncyCastle::Math::EC::ECFieldElement* b, Org::BouncyCastle::Math::BigInteger* order, Org::BouncyCastle::Math::BigInteger* cofactor) {
  return THROW_UNLESS(il2cpp_utils::New<FpCurve*>(q, r, a, b, order, cofactor));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.CloneCurve
Org::BouncyCastle::Math::EC::ECCurve* Org::BouncyCastle::Math::EC::FpCurve::CloneCurve() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECCurve*>(this, "CloneCurve"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.SupportsCoordinateSystem
bool Org::BouncyCastle::Math::EC::FpCurve::SupportsCoordinateSystem(int coord) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "SupportsCoordinateSystem", coord));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.get_Infinity
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpCurve::get_Infinity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "get_Infinity"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.get_FieldSize
int Org::BouncyCastle::Math::EC::FpCurve::get_FieldSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_FieldSize"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.FromBigInteger
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpCurve::FromBigInteger(Org::BouncyCastle::Math::BigInteger* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "FromBigInteger", x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.CreateRawPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpCurve::CreateRawPoint(Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "CreateRawPoint", x, y, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.CreateRawPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpCurve::CreateRawPoint(Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, ::Array<Org::BouncyCastle::Math::EC::ECFieldElement*>* zs, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "CreateRawPoint", x, y, zs, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpCurve.ImportPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpCurve::ImportPoint(Org::BouncyCastle::Math::EC::ECPoint* p) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "ImportPoint", p));
}
