// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Math.EC.ECLookupTable
#include "Org/BouncyCastle/Math/EC/ECLookupTable.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.ECLookupTable.get_Size
int Org::BouncyCastle::Math::EC::ECLookupTable::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("ECLookupTable").WithContext("get_Size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.ECLookupTable.Lookup
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::ECLookupTable::Lookup(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("ECLookupTable").WithContext("Lookup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Lookup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(this, ___internal__method, index);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.ECLookupTable.LookupVar
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::ECLookupTable::LookupVar(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC").WithContext("ECLookupTable").WithContext("LookupVar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LookupVar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(this, ___internal__method, index);
}
