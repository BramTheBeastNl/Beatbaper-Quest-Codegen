// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo
#include "Org/BouncyCastle/Math/EC/Multiplier/FixedPointPreCompInfo.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECLookupTable
#include "Org/BouncyCastle/Math/EC/ECLookupTable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.get_LookupTable
Org::BouncyCastle::Math::EC::ECLookupTable* Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::get_LookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("get_LookupTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LookupTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECLookupTable*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.set_LookupTable
void Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::set_LookupTable(Org::BouncyCastle::Math::EC::ECLookupTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("set_LookupTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_LookupTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.get_Offset
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("get_Offset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::ECPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.set_Offset
void Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::set_Offset(Org::BouncyCastle::Math::EC::ECPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("set_Offset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Offset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.get_Width
int Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("get_Width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.set_Width
void Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo::set_Width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointPreCompInfo").WithContext("set_Width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
