// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities/FixedPointCallback
#include "Org/BouncyCastle/Math/EC/Multiplier/FixedPointUtilities_FixedPointCallback.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo
#include "Org/BouncyCastle/Math/EC/Multiplier/FixedPointPreCompInfo.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECLookupTable
#include "Org/BouncyCastle/Math/EC/ECLookupTable.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo
#include "Org/BouncyCastle/Math/EC/Multiplier/PreCompInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities/FixedPointCallback.CheckExisting
bool Org::BouncyCastle::Math::EC::Multiplier::FixedPointUtilities::FixedPointCallback::CheckExisting(Org::BouncyCastle::Math::EC::Multiplier::FixedPointPreCompInfo* existingFP, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointCallback").WithContext("CheckExisting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckExisting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(existingFP, n)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, existingFP, n);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities/FixedPointCallback.CheckTable
bool Org::BouncyCastle::Math::EC::Multiplier::FixedPointUtilities::FixedPointCallback::CheckTable(Org::BouncyCastle::Math::EC::ECLookupTable* table, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointCallback").WithContext("CheckTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(table, n)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, table, n);
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities/FixedPointCallback.Precompute
Org::BouncyCastle::Math::EC::Multiplier::PreCompInfo* Org::BouncyCastle::Math::EC::Multiplier::FixedPointUtilities::FixedPointCallback::Precompute(Org::BouncyCastle::Math::EC::Multiplier::PreCompInfo* existing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Math::EC::Multiplier").WithContext("FixedPointCallback").WithContext("Precompute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Precompute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(existing)));
  return ::il2cpp_utils::RunMethodThrow<Org::BouncyCastle::Math::EC::Multiplier::PreCompInfo*, false>(this, ___internal__method, existing);
}
