// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo
#include "Org/BouncyCastle/Math/EC/Multiplier/ValidityPreCompInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.String PRECOMP_NAME
::Il2CppString* Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::_get_PRECOMP_NAME() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Math.EC.Multiplier", "ValidityPreCompInfo", "PRECOMP_NAME"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String PRECOMP_NAME
void Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::_set_PRECOMP_NAME(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Math.EC.Multiplier", "ValidityPreCompInfo", "PRECOMP_NAME", value));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.HasFailed
bool Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::HasFailed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasFailed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.ReportFailed
void Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::ReportFailed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReportFailed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.HasCurveEquationPassed
bool Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::HasCurveEquationPassed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasCurveEquationPassed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.ReportCurveEquationPassed
void Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::ReportCurveEquationPassed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReportCurveEquationPassed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.HasOrderPassed
bool Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::HasOrderPassed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasOrderPassed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo.ReportOrderPassed
void Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::ReportOrderPassed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReportOrderPassed"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo..cctor
void Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.EC.Multiplier", "ValidityPreCompInfo", ".cctor"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo..ctor
Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo* Org::BouncyCastle::Math::EC::Multiplier::ValidityPreCompInfo::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<ValidityPreCompInfo*>());
}
