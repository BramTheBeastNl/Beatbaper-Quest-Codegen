// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities
#include "Org/BouncyCastle/Math/EC/Multiplier/WNafUtilities.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities/ConfigureBasepointCallback
#include "Org/BouncyCastle/Math/EC/Multiplier/WNafUtilities_ConfigureBasepointCallback.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities/PrecomputeCallback
#include "Org/BouncyCastle/Math/EC/Multiplier/WNafUtilities_PrecomputeCallback.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities/PrecomputeWithPointMapCallback
#include "Org/BouncyCastle/Math/EC/Multiplier/WNafUtilities_PrecomputeWithPointMapCallback.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
// Including type: Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo
#include "Org/BouncyCastle/Math/EC/Multiplier/WNafPreCompInfo.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPointMap
#include "Org/BouncyCastle/Math/EC/ECPointMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String PRECOMP_NAME
::Il2CppString* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_get_PRECOMP_NAME() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "PRECOMP_NAME"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String PRECOMP_NAME
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_set_PRECOMP_NAME(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "PRECOMP_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DEFAULT_WINDOW_SIZE_CUTOFFS
::Array<int>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_get_DEFAULT_WINDOW_SIZE_CUTOFFS() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "DEFAULT_WINDOW_SIZE_CUTOFFS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DEFAULT_WINDOW_SIZE_CUTOFFS
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_set_DEFAULT_WINDOW_SIZE_CUTOFFS(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "DEFAULT_WINDOW_SIZE_CUTOFFS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MAX_WIDTH
int Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_get_MAX_WIDTH() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "MAX_WIDTH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MAX_WIDTH
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_set_MAX_WIDTH(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "MAX_WIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Org.BouncyCastle.Math.EC.ECPoint[] EMPTY_POINTS
::Array<Org::BouncyCastle::Math::EC::ECPoint*>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_get_EMPTY_POINTS() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<Org::BouncyCastle::Math::EC::ECPoint*>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "EMPTY_POINTS"));
}
// Autogenerated static field setter
// Set static field: static private readonly Org.BouncyCastle.Math.EC.ECPoint[] EMPTY_POINTS
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_set_EMPTY_POINTS(::Array<Org::BouncyCastle::Math::EC::ECPoint*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "EMPTY_POINTS", value));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.ConfigureBasepoint
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::ConfigureBasepoint(Org::BouncyCastle::Math::EC::ECPoint* p) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "ConfigureBasepoint", p));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GenerateCompactNaf
::Array<int>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GenerateCompactNaf(Org::BouncyCastle::Math::BigInteger* k) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GenerateCompactNaf", k));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GenerateCompactWindowNaf
::Array<int>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GenerateCompactWindowNaf(int width, Org::BouncyCastle::Math::BigInteger* k) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GenerateCompactWindowNaf", width, k));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GenerateNaf
::Array<uint8_t>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GenerateNaf(Org::BouncyCastle::Math::BigInteger* k) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GenerateNaf", k));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GenerateWindowNaf
::Array<uint8_t>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GenerateWindowNaf(int width, Org::BouncyCastle::Math::BigInteger* k) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GenerateWindowNaf", width, k));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetNafWeight
int Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GetNafWeight(Org::BouncyCastle::Math::BigInteger* k) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GetNafWeight", k));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize
int Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GetWindowSize(int bits) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GetWindowSize", bits));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize
int Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GetWindowSize(int bits, int maxWidth) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GetWindowSize", bits, maxWidth));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize
int Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::GetWindowSize(int bits, ::Array<int>* windowSizeCutoffs, int maxWidth) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "GetWindowSize", bits, windowSizeCutoffs, maxWidth));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.Precompute
Org::BouncyCastle::Math::EC::Multiplier::WNafPreCompInfo* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::Precompute(Org::BouncyCastle::Math::EC::ECPoint* p, int minWidth, bool includeNegated) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::Multiplier::WNafPreCompInfo*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "Precompute", p, minWidth, includeNegated));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.PrecomputeWithPointMap
Org::BouncyCastle::Math::EC::Multiplier::WNafPreCompInfo* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::PrecomputeWithPointMap(Org::BouncyCastle::Math::EC::ECPoint* p, Org::BouncyCastle::Math::EC::ECPointMap* pointMap, Org::BouncyCastle::Math::EC::Multiplier::WNafPreCompInfo* fromWNaf, bool includeNegated) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::Multiplier::WNafPreCompInfo*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "PrecomputeWithPointMap", p, pointMap, fromWNaf, includeNegated));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.Trim
::Array<uint8_t>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::Trim(::Array<uint8_t>* a, int length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "Trim", a, length));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.Trim
::Array<int>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::Trim(::Array<int>* a, int length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "Trim", a, length));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.ResizeTable
::Array<Org::BouncyCastle::Math::EC::ECPoint*>* Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::ResizeTable(::Array<Org::BouncyCastle::Math::EC::ECPoint*>* a, int length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<Org::BouncyCastle::Math::EC::ECPoint*>*>("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", "ResizeTable", a, length));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities..cctor
void Org::BouncyCastle::Math::EC::Multiplier::WNafUtilities::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.EC.Multiplier", "WNafUtilities", ".cctor"));
}
