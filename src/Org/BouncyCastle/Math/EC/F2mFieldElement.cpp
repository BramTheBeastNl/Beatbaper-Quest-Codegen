// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.F2mFieldElement
#include "Org/BouncyCastle/Math/EC/F2mFieldElement.hpp"
// Including type: Org.BouncyCastle.Math.EC.LongArray
#include "Org/BouncyCastle/Math/EC/LongArray.hpp"
// Including type: Org.BouncyCastle.Math.BigInteger
#include "Org/BouncyCastle/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement..ctor
Org::BouncyCastle::Math::EC::F2mFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::New_ctor(int m, int k1, int k2, int k3, Org::BouncyCastle::Math::BigInteger* x) {
  return THROW_UNLESS(il2cpp_utils::New<F2mFieldElement*>(m, k1, k2, k3, x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement..ctor
Org::BouncyCastle::Math::EC::F2mFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::New_ctor(int m, ::Array<int>* ks, Org::BouncyCastle::Math::EC::LongArray* x) {
  return THROW_UNLESS(il2cpp_utils::New<F2mFieldElement*>(m, ks, x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements
void Org::BouncyCastle::Math::EC::F2mFieldElement::CheckFieldElements(Org::BouncyCastle::Math::EC::ECFieldElement* a, Org::BouncyCastle::Math::EC::ECFieldElement* b) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Org.BouncyCastle.Math.EC", "F2mFieldElement", "CheckFieldElements", a, b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals
bool Org::BouncyCastle::Math::EC::F2mFieldElement::Equals(Org::BouncyCastle::Math::EC::F2mFieldElement* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.get_BitLength
int Org::BouncyCastle::Math::EC::F2mFieldElement::get_BitLength() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_BitLength"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.get_IsOne
bool Org::BouncyCastle::Math::EC::F2mFieldElement::get_IsOne() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsOne"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.get_IsZero
bool Org::BouncyCastle::Math::EC::F2mFieldElement::get_IsZero() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsZero"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.TestBitZero
bool Org::BouncyCastle::Math::EC::F2mFieldElement::TestBitZero() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TestBitZero"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.ToBigInteger
Org::BouncyCastle::Math::BigInteger* Org::BouncyCastle::Math::EC::F2mFieldElement::ToBigInteger() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::BigInteger*>(this, "ToBigInteger"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.get_FieldSize
int Org::BouncyCastle::Math::EC::F2mFieldElement::get_FieldSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_FieldSize"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Add
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Add(Org::BouncyCastle::Math::EC::ECFieldElement* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Add", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.AddOne
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::AddOne() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "AddOne"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Subtract
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Subtract(Org::BouncyCastle::Math::EC::ECFieldElement* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Subtract", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Multiply
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Multiply(Org::BouncyCastle::Math::EC::ECFieldElement* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Multiply", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyMinusProduct
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::MultiplyMinusProduct(Org::BouncyCastle::Math::EC::ECFieldElement* b, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "MultiplyMinusProduct", b, x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.MultiplyPlusProduct
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::MultiplyPlusProduct(Org::BouncyCastle::Math::EC::ECFieldElement* b, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "MultiplyPlusProduct", b, x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Divide
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Divide(Org::BouncyCastle::Math::EC::ECFieldElement* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Divide", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Negate
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Negate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Negate"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Square
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Square() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Square"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePlusProduct
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::SquarePlusProduct(Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "SquarePlusProduct", x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.SquarePow
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::SquarePow(int pow) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "SquarePow", pow));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Invert
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Invert() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Invert"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Sqrt
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::F2mFieldElement::Sqrt() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Sqrt"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.Equals
bool Org::BouncyCastle::Math::EC::F2mFieldElement::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.F2mFieldElement.GetHashCode
int Org::BouncyCastle::Math::EC::F2mFieldElement::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
