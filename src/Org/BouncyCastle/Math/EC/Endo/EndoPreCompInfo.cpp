// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo
#include "Org/BouncyCastle/Math/EC/Endo/EndoPreCompInfo.hpp"
// Including type: Org.BouncyCastle.Math.EC.Endo.ECEndomorphism
#include "Org/BouncyCastle/Math/EC/Endo/ECEndomorphism.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo.get_Endomorphism
Org::BouncyCastle::Math::EC::Endo::ECEndomorphism* Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo::get_Endomorphism() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::Endo::ECEndomorphism*>(this, "get_Endomorphism"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo.set_Endomorphism
void Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo::set_Endomorphism(Org::BouncyCastle::Math::EC::Endo::ECEndomorphism* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Endomorphism", value));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo.get_MappedPoint
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo::get_MappedPoint() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "get_MappedPoint"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo.set_MappedPoint
void Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo::set_MappedPoint(Org::BouncyCastle::Math::EC::ECPoint* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MappedPoint", value));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo..ctor
Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo* Org::BouncyCastle::Math::EC::Endo::EndoPreCompInfo::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<EndoPreCompInfo*>());
}
