// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.FpPoint
#include "Org/BouncyCastle/Math/EC/FpPoint.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECFieldElement
#include "Org/BouncyCastle/Math/EC/ECFieldElement.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECCurve
#include "Org/BouncyCastle/Math/EC/ECCurve.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Two
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::Two(Org::BouncyCastle::Math::EC::ECFieldElement* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Two", x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Three
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::Three(Org::BouncyCastle::Math::EC::ECFieldElement* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Three", x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Four
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::Four(Org::BouncyCastle::Math::EC::ECFieldElement* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Four", x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Eight
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::Eight(Org::BouncyCastle::Math::EC::ECFieldElement* x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "Eight", x));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.CalculateJacobianModifiedW
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::CalculateJacobianModifiedW(Org::BouncyCastle::Math::EC::ECFieldElement* Z, Org::BouncyCastle::Math::EC::ECFieldElement* ZSquared) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "CalculateJacobianModifiedW", Z, ZSquared));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.GetJacobianModifiedW
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::GetJacobianModifiedW() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "GetJacobianModifiedW"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.TwiceJacobianModified
Org::BouncyCastle::Math::EC::FpPoint* Org::BouncyCastle::Math::EC::FpPoint::TwiceJacobianModified(bool calculateW) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::FpPoint*>(this, "TwiceJacobianModified", calculateW));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint..ctor
Org::BouncyCastle::Math::EC::FpPoint* Org::BouncyCastle::Math::EC::FpPoint::New_ctor(Org::BouncyCastle::Math::EC::ECCurve* curve, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::New<FpPoint*>(curve, x, y, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint..ctor
Org::BouncyCastle::Math::EC::FpPoint* Org::BouncyCastle::Math::EC::FpPoint::New_ctor(Org::BouncyCastle::Math::EC::ECCurve* curve, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, ::Array<Org::BouncyCastle::Math::EC::ECFieldElement*>* zs, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::New<FpPoint*>(curve, x, y, zs, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.GetZCoord
Org::BouncyCastle::Math::EC::ECFieldElement* Org::BouncyCastle::Math::EC::FpPoint::GetZCoord(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECFieldElement*>(this, "GetZCoord", index));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Add
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::Add(Org::BouncyCastle::Math::EC::ECPoint* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Add", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Twice
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::Twice() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Twice"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.TwicePlus
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::TwicePlus(Org::BouncyCastle::Math::EC::ECPoint* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "TwicePlus", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.ThreeTimes
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::ThreeTimes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "ThreeTimes"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.TimesPow2
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::TimesPow2(int e) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "TimesPow2", e));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.FpPoint.Negate
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::FpPoint::Negate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Negate"));
}
