// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point
#include "Org/BouncyCastle/Math/EC/Custom/Sec/SecP256K1Point.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECCurve
#include "Org/BouncyCastle/Math/EC/ECCurve.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECFieldElement
#include "Org/BouncyCastle/Math/EC/ECFieldElement.hpp"
// Including type: Org.BouncyCastle.Math.EC.ECPoint
#include "Org/BouncyCastle/Math/EC/ECPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point..ctor
Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::New_ctor(Org::BouncyCastle::Math::EC::ECCurve* curve, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y) {
  return THROW_UNLESS(il2cpp_utils::New<SecP256K1Point*>(curve, x, y));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point..ctor
Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::New_ctor(Org::BouncyCastle::Math::EC::ECCurve* curve, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::New<SecP256K1Point*>(curve, x, y, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point..ctor
Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::New_ctor(Org::BouncyCastle::Math::EC::ECCurve* curve, Org::BouncyCastle::Math::EC::ECFieldElement* x, Org::BouncyCastle::Math::EC::ECFieldElement* y, ::Array<Org::BouncyCastle::Math::EC::ECFieldElement*>* zs, bool withCompression) {
  return THROW_UNLESS(il2cpp_utils::New<SecP256K1Point*>(curve, x, y, zs, withCompression));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.Add
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::Add(Org::BouncyCastle::Math::EC::ECPoint* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Add", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.Twice
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::Twice() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Twice"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.TwicePlus
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::TwicePlus(Org::BouncyCastle::Math::EC::ECPoint* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "TwicePlus", b));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.ThreeTimes
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::ThreeTimes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "ThreeTimes"));
}
// Autogenerated method: Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.Negate
Org::BouncyCastle::Math::EC::ECPoint* Org::BouncyCastle::Math::EC::Custom::Sec::SecP256K1Point::Negate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Math::EC::ECPoint*>(this, "Negate"));
}
