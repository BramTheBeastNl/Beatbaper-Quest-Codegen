// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.LimitedInputStream
#include "Org/BouncyCastle/Asn1/LimitedInputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.LimitedInputStream..ctor
Org::BouncyCastle::Asn1::LimitedInputStream* Org::BouncyCastle::Asn1::LimitedInputStream::New_ctor(System::IO::Stream* inStream, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("LimitedInputStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<LimitedInputStream*>(inStream, limit));
}
// Autogenerated method: Org.BouncyCastle.Asn1.LimitedInputStream.get_Limit
int Org::BouncyCastle::Asn1::LimitedInputStream::get_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("LimitedInputStream").WithContext("get_Limit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_Limit", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Org.BouncyCastle.Asn1.LimitedInputStream.SetParentEofDetect
void Org::BouncyCastle::Asn1::LimitedInputStream::SetParentEofDetect(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("LimitedInputStream").WithContext("SetParentEofDetect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetParentEofDetect", {}, ::il2cpp_utils::ExtractTypes(on)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
