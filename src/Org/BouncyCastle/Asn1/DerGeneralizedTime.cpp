// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Org.BouncyCastle.Asn1.DerGeneralizedTime
#include "Org/BouncyCastle/Asn1/DerGeneralizedTime.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance
Org::BouncyCastle::Asn1::DerGeneralizedTime* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetInstance(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Org::BouncyCastle::Asn1::DerGeneralizedTime*>("Org.BouncyCastle.Asn1", "DerGeneralizedTime", "GetInstance", obj));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime..ctor
Org::BouncyCastle::Asn1::DerGeneralizedTime* Org::BouncyCastle::Asn1::DerGeneralizedTime::New_ctor(::Array<uint8_t>* bytes) {
  return THROW_UNLESS(il2cpp_utils::New<DerGeneralizedTime*>(bytes));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetTime
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetTime"));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.CalculateGmtOffset
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::CalculateGmtOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "CalculateGmtOffset"));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Convert
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::Convert(int time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("Org.BouncyCastle.Asn1", "DerGeneralizedTime", "Convert", time));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.ToDateTime
System::DateTime Org::BouncyCastle::Asn1::DerGeneralizedTime::ToDateTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "ToDateTime"));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.FString
::Il2CppString* Org::BouncyCastle::Asn1::DerGeneralizedTime::FString(int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "FString", count));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.ParseDateString
System::DateTime Org::BouncyCastle::Asn1::DerGeneralizedTime::ParseDateString(::Il2CppString* s, ::Il2CppString* format, bool makeUniversal) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "ParseDateString", s, format, makeUniversal));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.get_HasFractionalSeconds
bool Org::BouncyCastle::Asn1::DerGeneralizedTime::get_HasFractionalSeconds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_HasFractionalSeconds"));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.GetOctets
::Array<uint8_t>* Org::BouncyCastle::Asn1::DerGeneralizedTime::GetOctets() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "GetOctets"));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Encode
void Org::BouncyCastle::Asn1::DerGeneralizedTime::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Encode", derOut));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Asn1Equals
bool Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1Equals(Org::BouncyCastle::Asn1::Asn1Object* asn1Object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Asn1Equals", asn1Object));
}
// Autogenerated method: Org.BouncyCastle.Asn1.DerGeneralizedTime.Asn1GetHashCode
int Org::BouncyCastle::Asn1::DerGeneralizedTime::Asn1GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Asn1GetHashCode"));
}
