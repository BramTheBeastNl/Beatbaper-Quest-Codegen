// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Org.BouncyCastle.Asn1.BerTaggedObject
#include "Org/BouncyCastle/Asn1/BerTaggedObject.hpp"
// Including type: Org.BouncyCastle.Asn1.DerOutputStream
#include "Org/BouncyCastle/Asn1/DerOutputStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Org.BouncyCastle.Asn1.BerTaggedObject..ctor
Org::BouncyCastle::Asn1::BerTaggedObject* Org::BouncyCastle::Asn1::BerTaggedObject::New_ctor(int tagNo, Org::BouncyCastle::Asn1::Asn1Encodable* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("BerTaggedObject").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BerTaggedObject*>(tagNo, obj));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerTaggedObject..ctor
Org::BouncyCastle::Asn1::BerTaggedObject* Org::BouncyCastle::Asn1::BerTaggedObject::New_ctor(bool explicitly, int tagNo, Org::BouncyCastle::Asn1::Asn1Encodable* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("BerTaggedObject").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BerTaggedObject*>(explicitly, tagNo, obj));
}
// Autogenerated method: Org.BouncyCastle.Asn1.BerTaggedObject.Encode
void Org::BouncyCastle::Asn1::BerTaggedObject::Encode(Org::BouncyCastle::Asn1::DerOutputStream* derOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Org::BouncyCastle::Asn1").WithContext("BerTaggedObject").WithContext("Encode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Encode", {}, ::il2cpp_utils::ExtractTypes(derOut)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, derOut);
}
