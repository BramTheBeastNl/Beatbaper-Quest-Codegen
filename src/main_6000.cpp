// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE005F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Unknown
Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Unknown
void Oculus::Platform::RoomMembershipLockStatus::_set_Unknown(Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE0062C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Lock
Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_get_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Lock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Lock
void Oculus::Platform::RoomMembershipLockStatus::_set_Lock(Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_set_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Lock", value));
}
// [DescriptionAttribute] Offset: 0xE00664
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomMembershipLockStatus Unlock
Oculus::Platform::RoomMembershipLockStatus Oculus::Platform::RoomMembershipLockStatus::_get_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_get_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomMembershipLockStatus>("Oculus.Platform", "RoomMembershipLockStatus", "Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomMembershipLockStatus Unlock
void Oculus::Platform::RoomMembershipLockStatus::_set_Unlock(Oculus::Platform::RoomMembershipLockStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomMembershipLockStatus::_set_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomMembershipLockStatus", "Unlock", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.RoomOptions.SetDataStore
void Oculus::Platform::RoomOptions::SetDataStore(::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.ClearDataStore
void Oculus::Platform::RoomOptions::ClearDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetExcludeRecentlyMet
void Oculus::Platform::RoomOptions::SetExcludeRecentlyMet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetMaxUserResults
void Oculus::Platform::RoomOptions::SetMaxUserResults(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetOrdering
void Oculus::Platform::RoomOptions::SetOrdering(Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetRecentlyMetTimeWindow
void Oculus::Platform::RoomOptions::SetRecentlyMetTimeWindow(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetRoomId
void Oculus::Platform::RoomOptions::SetRoomId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.SetTurnOffUpdates
void Oculus::Platform::RoomOptions::SetTurnOffUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.RoomOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::RoomOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.RoomOptions.Finalize
void Oculus::Platform::RoomOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RoomOptions::SetDataStore
// Il2CppName: SetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(::Il2CppString*, ::Il2CppString*)>(&RoomOptions::SetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::ClearDataStore
// Il2CppName: ClearDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)()>(&RoomOptions::ClearDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "ClearDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetExcludeRecentlyMet
// Il2CppName: SetExcludeRecentlyMet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(bool)>(&RoomOptions::SetExcludeRecentlyMet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetExcludeRecentlyMet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetMaxUserResults
// Il2CppName: SetMaxUserResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(uint)>(&RoomOptions::SetMaxUserResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetMaxUserResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetOrdering
// Il2CppName: SetOrdering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(Oculus::Platform::UserOrdering)>(&RoomOptions::SetOrdering)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetOrdering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::UserOrdering>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetRecentlyMetTimeWindow
// Il2CppName: SetRecentlyMetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(Oculus::Platform::TimeWindow)>(&RoomOptions::SetRecentlyMetTimeWindow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::TimeWindow>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetRoomId
// Il2CppName: SetRoomId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(uint64_t)>(&RoomOptions::SetRoomId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetRoomId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::SetTurnOffUpdates
// Il2CppName: SetTurnOffUpdates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)(bool)>(&RoomOptions::SetTurnOffUpdates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "SetTurnOffUpdates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RoomOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&RoomOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)()>(&RoomOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)()>(&RoomOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomOptions::*)()>(&RoomOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE0069C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Unknown
Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Unknown
void Oculus::Platform::RoomType::_set_Unknown(Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE006D4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Matchmaking
Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_get_Matchmaking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Matchmaking"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Matchmaking
void Oculus::Platform::RoomType::_set_Matchmaking(Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_set_Matchmaking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Matchmaking", value));
}
// [DescriptionAttribute] Offset: 0xE0070C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Moderated
Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Moderated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_get_Moderated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Moderated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Moderated
void Oculus::Platform::RoomType::_set_Moderated(Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_set_Moderated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Moderated", value));
}
// [DescriptionAttribute] Offset: 0xE00744
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Private
Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Private
void Oculus::Platform::RoomType::_set_Private(Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Private", value));
}
// [DescriptionAttribute] Offset: 0xE0077C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.RoomType Solo
Oculus::Platform::RoomType Oculus::Platform::RoomType::_get_Solo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_get_Solo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomType>("Oculus.Platform", "RoomType", "Solo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.RoomType Solo
void Oculus::Platform::RoomType::_set_Solo(Oculus::Platform::RoomType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::RoomType::_set_Solo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "RoomType", "Solo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE007B4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType Unknown
Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType Unknown
void Oculus::Platform::SdkAccountType::_set_Unknown(Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE007EC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType Oculus
Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType Oculus
void Oculus::Platform::SdkAccountType::_set_Oculus(Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "Oculus", value));
}
// [DescriptionAttribute] Offset: 0xE00824
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SdkAccountType FacebookGameroom
Oculus::Platform::SdkAccountType Oculus::Platform::SdkAccountType::_get_FacebookGameroom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_get_FacebookGameroom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SdkAccountType>("Oculus.Platform", "SdkAccountType", "FacebookGameroom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SdkAccountType FacebookGameroom
void Oculus::Platform::SdkAccountType::_set_FacebookGameroom(Oculus::Platform::SdkAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SdkAccountType::_set_FacebookGameroom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SdkAccountType", "FacebookGameroom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE0085C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Unreliable
Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_get_Unreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Unreliable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Unreliable
void Oculus::Platform::SendPolicy::_set_Unreliable(Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_set_Unreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Unreliable", value));
}
// [DescriptionAttribute] Offset: 0xE00894
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Reliable
Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_get_Reliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Reliable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Reliable
void Oculus::Platform::SendPolicy::_set_Reliable(Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_set_Reliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Reliable", value));
}
// [DescriptionAttribute] Offset: 0xE008CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SendPolicy Unknown
Oculus::Platform::SendPolicy Oculus::Platform::SendPolicy::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SendPolicy>("Oculus.Platform", "SendPolicy", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SendPolicy Unknown
void Oculus::Platform::SendPolicy::_set_Unknown(Oculus::Platform::SendPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SendPolicy::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SendPolicy", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00904
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Unknown
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Unknown
void Oculus::Platform::ServiceProvider::_set_Unknown(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE0093C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Dropbox
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Dropbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_Dropbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Dropbox"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Dropbox
void Oculus::Platform::ServiceProvider::_set_Dropbox(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_Dropbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Dropbox", value));
}
// [DescriptionAttribute] Offset: 0xE00974
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Facebook
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Facebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_Facebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Facebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Facebook
void Oculus::Platform::ServiceProvider::_set_Facebook(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_Facebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Facebook", value));
}
// [DescriptionAttribute] Offset: 0xE009AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Google
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Google() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_Google");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Google"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Google
void Oculus::Platform::ServiceProvider::_set_Google(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_Google");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Google", value));
}
// [DescriptionAttribute] Offset: 0xE009E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider Instagram
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_Instagram() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_Instagram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "Instagram"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider Instagram
void Oculus::Platform::ServiceProvider::_set_Instagram(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_Instagram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "Instagram", value));
}
// [DescriptionAttribute] Offset: 0xE00A1C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ServiceProvider RemoteMedia
Oculus::Platform::ServiceProvider Oculus::Platform::ServiceProvider::_get_RemoteMedia() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_get_RemoteMedia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ServiceProvider>("Oculus.Platform", "ServiceProvider", "RemoteMedia"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ServiceProvider RemoteMedia
void Oculus::Platform::ServiceProvider::_set_RemoteMedia(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ServiceProvider::_set_RemoteMedia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ServiceProvider", "RemoteMedia", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00A54
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Unknown
Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Unknown
void Oculus::Platform::ShareMediaStatus::_set_Unknown(Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00A8C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Shared
Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_get_Shared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Shared"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Shared
void Oculus::Platform::ShareMediaStatus::_set_Shared(Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_set_Shared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Shared", value));
}
// [DescriptionAttribute] Offset: 0xE00AC4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ShareMediaStatus Canceled
Oculus::Platform::ShareMediaStatus Oculus::Platform::ShareMediaStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ShareMediaStatus>("Oculus.Platform", "ShareMediaStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ShareMediaStatus Canceled
void Oculus::Platform::ShareMediaStatus::_set_Canceled(Oculus::Platform::ShareMediaStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ShareMediaStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ShareMediaStatus", "Canceled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.StandalonePlatform
#include "Oculus/Platform/StandalonePlatform.hpp"
// Including type: Oculus.Platform.StandalonePlatform/UnityLogDelegate
#include "Oculus/Platform/StandalonePlatform_UnityLogDelegate.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatform.InitializeInEditor
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::StandalonePlatform::InitializeInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatform::InitializeInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::StandalonePlatform::AsyncInitialize(uint64_t appID, ::Il2CppString* accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appID, accessToken);
}
// Writing MetadataGetter for method: StandalonePlatform::InitializeInEditor
// Il2CppName: InitializeInEditor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (StandalonePlatform::*)()>(&StandalonePlatform::InitializeInEditor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform*), "InitializeInEditor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandalonePlatform::AsyncInitialize
// Il2CppName: AsyncInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (StandalonePlatform::*)(uint64_t, ::Il2CppString*)>(&StandalonePlatform::AsyncInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform*), "AsyncInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::*)()>(&StandalonePlatform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::*)()>(&StandalonePlatform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.StandalonePlatform/UnityLogDelegate
#include "Oculus/Platform/StandalonePlatform_UnityLogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatform/UnityLogDelegate.Invoke
void Oculus::Platform::StandalonePlatform::UnityLogDelegate::Invoke(System::IntPtr tag, System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatform::UnityLogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, msg);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform/UnityLogDelegate.BeginInvoke
System::IAsyncResult* Oculus::Platform::StandalonePlatform::UnityLogDelegate::BeginInvoke(System::IntPtr tag, System::IntPtr msg, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatform::UnityLogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, tag, msg, callback, object);
}
// Autogenerated method: Oculus.Platform.StandalonePlatform/UnityLogDelegate.EndInvoke
void Oculus::Platform::StandalonePlatform::UnityLogDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatform::UnityLogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: StandalonePlatform::UnityLogDelegate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::UnityLogDelegate::*)(::Il2CppObject*, System::IntPtr)>(&StandalonePlatform::UnityLogDelegate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform::UnityLogDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::UnityLogDelegate::*)(::Il2CppObject*, System::IntPtr)>(&StandalonePlatform::UnityLogDelegate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform::UnityLogDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatform::UnityLogDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::UnityLogDelegate::*)(System::IntPtr, System::IntPtr)>(&StandalonePlatform::UnityLogDelegate::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform::UnityLogDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatform::UnityLogDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (StandalonePlatform::UnityLogDelegate::*)(System::IntPtr, System::IntPtr, System::AsyncCallback*, ::Il2CppObject*)>(&StandalonePlatform::UnityLogDelegate::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform::UnityLogDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatform::UnityLogDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatform::UnityLogDelegate::*)(System::IAsyncResult*)>(&StandalonePlatform::UnityLogDelegate::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatform::UnityLogDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.StandalonePlatformSettings
#include "Oculus/Platform/StandalonePlatformSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserEmail
::Il2CppString* Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserEmail
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserEmail(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserPassword
::Il2CppString* Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserPassword
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserPassword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.get_OculusPlatformTestUserAccessToken
::Il2CppString* Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "get_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.StandalonePlatformSettings.set_OculusPlatformTestUserAccessToken
void Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "StandalonePlatformSettings", "set_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Writing MetadataGetter for method: StandalonePlatformSettings::get_OculusPlatformTestUserEmail
// Il2CppName: get_OculusPlatformTestUserEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&StandalonePlatformSettings::get_OculusPlatformTestUserEmail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "get_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::set_OculusPlatformTestUserEmail
// Il2CppName: set_OculusPlatformTestUserEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&StandalonePlatformSettings::set_OculusPlatformTestUserEmail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "set_OculusPlatformTestUserEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::get_OculusPlatformTestUserPassword
// Il2CppName: get_OculusPlatformTestUserPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&StandalonePlatformSettings::get_OculusPlatformTestUserPassword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "get_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::set_OculusPlatformTestUserPassword
// Il2CppName: set_OculusPlatformTestUserPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&StandalonePlatformSettings::set_OculusPlatformTestUserPassword)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "set_OculusPlatformTestUserPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken
// Il2CppName: get_OculusPlatformTestUserAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&StandalonePlatformSettings::get_OculusPlatformTestUserAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "get_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken
// Il2CppName: set_OculusPlatformTestUserAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&StandalonePlatformSettings::set_OculusPlatformTestUserAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), "set_OculusPlatformTestUserAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandalonePlatformSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatformSettings::*)()>(&StandalonePlatformSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandalonePlatformSettings::*)()>(&StandalonePlatformSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandalonePlatformSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00AFC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Unknown
Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Unknown
void Oculus::Platform::SystemVoipStatus::_set_Unknown(Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00B34
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Unavailable
Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Unavailable
void Oculus::Platform::SystemVoipStatus::_set_Unavailable(Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Unavailable", value));
}
// [DescriptionAttribute] Offset: 0xE00B6C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Suppressed
Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Suppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_get_Suppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Suppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Suppressed
void Oculus::Platform::SystemVoipStatus::_set_Suppressed(Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_set_Suppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Suppressed", value));
}
// [DescriptionAttribute] Offset: 0xE00BA4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.SystemVoipStatus Active
Oculus::Platform::SystemVoipStatus Oculus::Platform::SystemVoipStatus::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::SystemVoipStatus>("Oculus.Platform", "SystemVoipStatus", "Active"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.SystemVoipStatus Active
void Oculus::Platform::SystemVoipStatus::_set_Active(Oculus::Platform::SystemVoipStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::SystemVoipStatus::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "SystemVoipStatus", "Active", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00BDC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow Unknown
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow Unknown
void Oculus::Platform::TimeWindow::_set_Unknown(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00C14
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneHour
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_OneHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneHour"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneHour
void Oculus::Platform::TimeWindow::_set_OneHour(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_OneHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneHour", value));
}
// [DescriptionAttribute] Offset: 0xE00C4C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneDay
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_OneDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneDay"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneDay
void Oculus::Platform::TimeWindow::_set_OneDay(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_OneDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneDay", value));
}
// [DescriptionAttribute] Offset: 0xE00C84
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow OneWeek
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_OneWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_OneWeek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "OneWeek"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow OneWeek
void Oculus::Platform::TimeWindow::_set_OneWeek(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_OneWeek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "OneWeek", value));
}
// [DescriptionAttribute] Offset: 0xE00CBC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow ThirtyDays
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_ThirtyDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_ThirtyDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "ThirtyDays"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow ThirtyDays
void Oculus::Platform::TimeWindow::_set_ThirtyDays(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_ThirtyDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "ThirtyDays", value));
}
// [DescriptionAttribute] Offset: 0xE00CF4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.TimeWindow NinetyDays
Oculus::Platform::TimeWindow Oculus::Platform::TimeWindow::_get_NinetyDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_get_NinetyDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::TimeWindow>("Oculus.Platform", "TimeWindow", "NinetyDays"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.TimeWindow NinetyDays
void Oculus::Platform::TimeWindow::_set_NinetyDays(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::TimeWindow::_set_NinetyDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "TimeWindow", "NinetyDays", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserOptions
#include "Oculus/Platform/UserOptions.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.UserOptions.SetMaxUsers
void Oculus::Platform::UserOptions::SetMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOptions::SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.AddServiceProvider
void Oculus::Platform::UserOptions::AddServiceProvider(Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOptions::AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.ClearServiceProviders
void Oculus::Platform::UserOptions::ClearServiceProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOptions::ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.UserOptions.SetTimeWindow
void Oculus::Platform::UserOptions::SetTimeWindow(Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOptions::SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.UserOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::UserOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.UserOptions.Finalize
void Oculus::Platform::UserOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UserOptions::SetMaxUsers
// Il2CppName: SetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)(uint)>(&UserOptions::SetMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "SetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: UserOptions::AddServiceProvider
// Il2CppName: AddServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)(Oculus::Platform::ServiceProvider)>(&UserOptions::AddServiceProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "AddServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ServiceProvider>()});
  }
};
// Writing MetadataGetter for method: UserOptions::ClearServiceProviders
// Il2CppName: ClearServiceProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)()>(&UserOptions::ClearServiceProviders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "ClearServiceProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserOptions::SetTimeWindow
// Il2CppName: SetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)(Oculus::Platform::TimeWindow)>(&UserOptions::SetTimeWindow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "SetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::TimeWindow>()});
  }
};
// Writing MetadataGetter for method: UserOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&UserOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)()>(&UserOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)()>(&UserOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserOptions::*)()>(&UserOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00D2C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering Unknown
Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering Unknown
void Oculus::Platform::UserOrdering::_set_Unknown(Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00D64
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering None
Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering None
void Oculus::Platform::UserOrdering::_set_None(Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "None", value));
}
// [DescriptionAttribute] Offset: 0xE00D9C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserOrdering PresenceAlphabetical
Oculus::Platform::UserOrdering Oculus::Platform::UserOrdering::_get_PresenceAlphabetical() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_get_PresenceAlphabetical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserOrdering>("Oculus.Platform", "UserOrdering", "PresenceAlphabetical"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserOrdering PresenceAlphabetical
void Oculus::Platform::UserOrdering::_set_PresenceAlphabetical(Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserOrdering::_set_PresenceAlphabetical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserOrdering", "PresenceAlphabetical", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00DD4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Unknown
Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Unknown
void Oculus::Platform::UserPresenceStatus::_set_Unknown(Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00E0C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Online
Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Online
void Oculus::Platform::UserPresenceStatus::_set_Online(Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Online", value));
}
// [DescriptionAttribute] Offset: 0xE00E44
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.UserPresenceStatus Offline
Oculus::Platform::UserPresenceStatus Oculus::Platform::UserPresenceStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::UserPresenceStatus>("Oculus.Platform", "UserPresenceStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.UserPresenceStatus Offline
void Oculus::Platform::UserPresenceStatus::_set_Offline(Oculus::Platform::UserPresenceStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::UserPresenceStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "UserPresenceStatus", "Offline", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipAudioSourceHiLevel
#include "Oculus/Platform/VoipAudioSourceHiLevel.hpp"
// Including type: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate
#include "Oculus/Platform/VoipAudioSourceHiLevel_FilterReadDelegate.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 audioSystemPlaybackFrequency
int Oculus::Platform::VoipAudioSourceHiLevel::_get_audioSystemPlaybackFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::_get_audioSystemPlaybackFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "VoipAudioSourceHiLevel", "audioSystemPlaybackFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 audioSystemPlaybackFrequency
void Oculus::Platform::VoipAudioSourceHiLevel::_set_audioSystemPlaybackFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::_set_audioSystemPlaybackFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipAudioSourceHiLevel", "audioSystemPlaybackFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean verboseLogging
bool Oculus::Platform::VoipAudioSourceHiLevel::_get_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::_get_verboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "VoipAudioSourceHiLevel", "verboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean verboseLogging
void Oculus::Platform::VoipAudioSourceHiLevel::_set_verboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::_set_verboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipAudioSourceHiLevel", "verboseLogging", value));
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.set_senderID
void Oculus::Platform::VoipAudioSourceHiLevel::set_senderID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::set_senderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_senderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Stop
void Oculus::Platform::VoipAudioSourceHiLevel::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.SampleRateToEnum
Oculus::Platform::VoipSampleRate Oculus::Platform::VoipAudioSourceHiLevel::SampleRateToEnum(int rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::SampleRateToEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleRateToEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipSampleRate, false>(this, ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Awake
void Oculus::Platform::VoipAudioSourceHiLevel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Start
void Oculus::Platform::VoipAudioSourceHiLevel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.CreatePCMSource
void Oculus::Platform::VoipAudioSourceHiLevel::CreatePCMSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::CreatePCMSource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePCMSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.MSToElements
int Oculus::Platform::VoipAudioSourceHiLevel::MSToElements(int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::MSToElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "VoipAudioSourceHiLevel", "MSToElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ms);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel.Update
void Oculus::Platform::VoipAudioSourceHiLevel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel..cctor
void Oculus::Platform::VoipAudioSourceHiLevel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "VoipAudioSourceHiLevel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::set_senderID
// Il2CppName: set_senderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)(uint64_t)>(&VoipAudioSourceHiLevel::set_senderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "set_senderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::SampleRateToEnum
// Il2CppName: SampleRateToEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipSampleRate (VoipAudioSourceHiLevel::*)(int)>(&VoipAudioSourceHiLevel::SampleRateToEnum)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "SampleRateToEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::CreatePCMSource
// Il2CppName: CreatePCMSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::CreatePCMSource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "CreatePCMSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::MSToElements
// Il2CppName: MSToElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&VoipAudioSourceHiLevel::MSToElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "MSToElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::*)()>(&VoipAudioSourceHiLevel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VoipAudioSourceHiLevel::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate
#include "Oculus/Platform/VoipAudioSourceHiLevel_FilterReadDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate.Awake
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipAudioSourceHiLevel/FilterReadDelegate.OnAudioFilterRead
void Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::FilterReadDelegate::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::FilterReadDelegate::*)()>(&VoipAudioSourceHiLevel::FilterReadDelegate::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel::FilterReadDelegate*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead
// Il2CppName: OnAudioFilterRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::FilterReadDelegate::*)(::Array<float>*, int)>(&VoipAudioSourceHiLevel::FilterReadDelegate::OnAudioFilterRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel::FilterReadDelegate*), "OnAudioFilterRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VoipAudioSourceHiLevel::FilterReadDelegate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::FilterReadDelegate::*)()>(&VoipAudioSourceHiLevel::FilterReadDelegate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel::FilterReadDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipAudioSourceHiLevel::FilterReadDelegate::*)()>(&VoipAudioSourceHiLevel::FilterReadDelegate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipAudioSourceHiLevel::FilterReadDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE00E7C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate Unknown
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate Unknown
void Oculus::Platform::VoipBitrate::_set_Unknown(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE00EB4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B16000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B16000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B16000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B16000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B16000
void Oculus::Platform::VoipBitrate::_set_B16000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B16000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B16000", value));
}
// [DescriptionAttribute] Offset: 0xE00EEC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B24000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B24000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B24000
void Oculus::Platform::VoipBitrate::_set_B24000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B24000", value));
}
// [DescriptionAttribute] Offset: 0xE00F24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B32000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B32000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B32000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B32000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B32000
void Oculus::Platform::VoipBitrate::_set_B32000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B32000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B32000", value));
}
// [DescriptionAttribute] Offset: 0xE00F5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B64000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B64000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B64000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B64000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B64000
void Oculus::Platform::VoipBitrate::_set_B64000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B64000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B64000", value));
}
// [DescriptionAttribute] Offset: 0xE00F94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B96000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B96000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B96000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B96000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B96000
void Oculus::Platform::VoipBitrate::_set_B96000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B96000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B96000", value));
}
// [DescriptionAttribute] Offset: 0xE00FCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipBitrate B128000
Oculus::Platform::VoipBitrate Oculus::Platform::VoipBitrate::_get_B128000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_get_B128000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipBitrate>("Oculus.Platform", "VoipBitrate", "B128000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipBitrate B128000
void Oculus::Platform::VoipBitrate::_set_B128000(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipBitrate::_set_B128000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipBitrate", "B128000", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE01004
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Unknown
Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Unknown
void Oculus::Platform::VoipDtxState::_set_Unknown(Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE0103C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Enabled
Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Enabled
void Oculus::Platform::VoipDtxState::_set_Enabled(Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Enabled", value));
}
// [DescriptionAttribute] Offset: 0xE01074
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipDtxState Disabled
Oculus::Platform::VoipDtxState Oculus::Platform::VoipDtxState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipDtxState>("Oculus.Platform", "VoipDtxState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipDtxState Disabled
void Oculus::Platform::VoipDtxState::_set_Disabled(Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipDtxState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipDtxState", "Disabled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE010AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unknown
Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unknown
void Oculus::Platform::VoipMuteState::_set_Unknown(Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE010E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Muted
Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_get_Muted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Muted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Muted
void Oculus::Platform::VoipMuteState::_set_Muted(Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_set_Muted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Muted", value));
}
// [DescriptionAttribute] Offset: 0xE0111C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipMuteState Unmuted
Oculus::Platform::VoipMuteState Oculus::Platform::VoipMuteState::_get_Unmuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_get_Unmuted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipMuteState>("Oculus.Platform", "VoipMuteState", "Unmuted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipMuteState Unmuted
void Oculus::Platform::VoipMuteState::_set_Unmuted(Oculus::Platform::VoipMuteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipMuteState::_set_Unmuted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipMuteState", "Unmuted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.VoipOptions.SetBitrateForNewConnections
void Oculus::Platform::VoipOptions::SetBitrateForNewConnections(Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipOptions::SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.SetCreateNewConnectionUseDtx
void Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx(Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipOptions::SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.VoipOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::VoipOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.VoipOptions.Finalize
void Oculus::Platform::VoipOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: VoipOptions::SetBitrateForNewConnections
// Il2CppName: SetBitrateForNewConnections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipOptions::*)(Oculus::Platform::VoipBitrate)>(&VoipOptions::SetBitrateForNewConnections)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), "SetBitrateForNewConnections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipBitrate>()});
  }
};
// Writing MetadataGetter for method: VoipOptions::SetCreateNewConnectionUseDtx
// Il2CppName: SetCreateNewConnectionUseDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipOptions::*)(Oculus::Platform::VoipDtxState)>(&VoipOptions::SetCreateNewConnectionUseDtx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), "SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipDtxState>()});
  }
};
// Writing MetadataGetter for method: VoipOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&VoipOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipOptions::*)()>(&VoipOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipOptions::*)()>(&VoipOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipOptions::*)()>(&VoipOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.VoipPCMSourceNative
#include "Oculus/Platform/VoipPCMSourceNative.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.GetPCM
int Oculus::Platform::VoipPCMSourceNative::GetPCM(::Array<float>* dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipPCMSourceNative::GetPCM");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.SetSenderID
void Oculus::Platform::VoipPCMSourceNative::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipPCMSourceNative::SetSenderID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.PeekSizeElements
int Oculus::Platform::VoipPCMSourceNative::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipPCMSourceNative::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSizeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.VoipPCMSourceNative.Update
void Oculus::Platform::VoipPCMSourceNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipPCMSourceNative::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: VoipPCMSourceNative::GetPCM
// Il2CppName: GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VoipPCMSourceNative::*)(::Array<float>*, int)>(&VoipPCMSourceNative::GetPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), "GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VoipPCMSourceNative::SetSenderID
// Il2CppName: SetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipPCMSourceNative::*)(uint64_t)>(&VoipPCMSourceNative::SetSenderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), "SetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: VoipPCMSourceNative::PeekSizeElements
// Il2CppName: PeekSizeElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VoipPCMSourceNative::*)()>(&VoipPCMSourceNative::PeekSizeElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), "PeekSizeElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipPCMSourceNative::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipPCMSourceNative::*)()>(&VoipPCMSourceNative::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VoipPCMSourceNative::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipPCMSourceNative::*)()>(&VoipPCMSourceNative::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VoipPCMSourceNative::*)()>(&VoipPCMSourceNative::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VoipPCMSourceNative*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xE01154
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate Unknown
Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate Unknown
void Oculus::Platform::VoipSampleRate::_set_Unknown(Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xE0118C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ24000
Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_get_HZ24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ24000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ24000
void Oculus::Platform::VoipSampleRate::_set_HZ24000(Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_set_HZ24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ24000", value));
}
// [DescriptionAttribute] Offset: 0xE011C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ44100
Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ44100() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_get_HZ44100");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ44100"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ44100
void Oculus::Platform::VoipSampleRate::_set_HZ44100(Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_set_HZ44100");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ44100", value));
}
// [DescriptionAttribute] Offset: 0xE011FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.VoipSampleRate HZ48000
Oculus::Platform::VoipSampleRate Oculus::Platform::VoipSampleRate::_get_HZ48000() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_get_HZ48000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::VoipSampleRate>("Oculus.Platform", "VoipSampleRate", "HZ48000"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.VoipSampleRate HZ48000
void Oculus::Platform::VoipSampleRate::_set_HZ48000(Oculus::Platform::VoipSampleRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::VoipSampleRate::_set_HZ48000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "VoipSampleRate", "HZ48000", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform
#include "Oculus/Platform/WindowsPlatform.hpp"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform.CPPLogCallback
void Oculus::Platform::WindowsPlatform::CPPLogCallback(System::IntPtr tag, System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::CPPLogCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CPPLogCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.getCallbackPointer
System::IntPtr Oculus::Platform::WindowsPlatform::getCallbackPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::getCallbackPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCallbackPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.Initialize
bool Oculus::Platform::WindowsPlatform::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::WindowsPlatform::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Writing MetadataGetter for method: WindowsPlatform::CPPLogCallback
// Il2CppName: CPPLogCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::*)(System::IntPtr, System::IntPtr)>(&WindowsPlatform::CPPLogCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), "CPPLogCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::getCallbackPointer
// Il2CppName: getCallbackPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (WindowsPlatform::*)()>(&WindowsPlatform::getCallbackPointer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), "getCallbackPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (WindowsPlatform::*)(::Il2CppString*)>(&WindowsPlatform::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::AsyncInitialize
// Il2CppName: AsyncInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (WindowsPlatform::*)(::Il2CppString*)>(&WindowsPlatform::AsyncInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), "AsyncInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::*)()>(&WindowsPlatform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::*)()>(&WindowsPlatform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.WindowsPlatform/UnityLogDelegate
#include "Oculus/Platform/WindowsPlatform_UnityLogDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.Invoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke(System::IntPtr tag, System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::UnityLogDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tag, msg);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.BeginInvoke
System::IAsyncResult* Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke(System::IntPtr tag, System::IntPtr msg, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::UnityLogDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, tag, msg, callback, object);
}
// Autogenerated method: Oculus.Platform.WindowsPlatform/UnityLogDelegate.EndInvoke
void Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::WindowsPlatform::UnityLogDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: WindowsPlatform::UnityLogDelegate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::UnityLogDelegate::*)(::Il2CppObject*, System::IntPtr)>(&WindowsPlatform::UnityLogDelegate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform::UnityLogDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::UnityLogDelegate::*)(::Il2CppObject*, System::IntPtr)>(&WindowsPlatform::UnityLogDelegate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform::UnityLogDelegate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::UnityLogDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::UnityLogDelegate::*)(System::IntPtr, System::IntPtr)>(&WindowsPlatform::UnityLogDelegate::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform::UnityLogDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::UnityLogDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (WindowsPlatform::UnityLogDelegate::*)(System::IntPtr, System::IntPtr, System::AsyncCallback*, ::Il2CppObject*)>(&WindowsPlatform::UnityLogDelegate::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform::UnityLogDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: WindowsPlatform::UnityLogDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WindowsPlatform::UnityLogDelegate::*)(System::IAsyncResult*)>(&WindowsPlatform::UnityLogDelegate::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WindowsPlatform::UnityLogDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AbuseReportRecording::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportRecording::*)(System::IntPtr)>(&AbuseReportRecording::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportRecording*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportRecording::*)(System::IntPtr)>(&AbuseReportRecording::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportRecording*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AchievementDefinition::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementDefinition::*)(System::IntPtr)>(&AchievementDefinition::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementDefinition*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementDefinition::*)(System::IntPtr)>(&AchievementDefinition::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementDefinition*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinition
#include "Oculus/Platform/Models/AchievementDefinition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AchievementDefinitionList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementDefinitionList::*)(System::IntPtr)>(&AchievementDefinitionList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementDefinitionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementDefinitionList::*)(System::IntPtr)>(&AchievementDefinitionList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementDefinitionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AchievementProgress::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementProgress::*)(System::IntPtr)>(&AchievementProgress::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementProgress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementProgress::*)(System::IntPtr)>(&AchievementProgress::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementProgress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AchievementProgressList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementProgressList::*)(System::IntPtr)>(&AchievementProgressList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementProgressList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementProgressList::*)(System::IntPtr)>(&AchievementProgressList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementProgressList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AchievementUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementUpdate::*)(System::IntPtr)>(&AchievementUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AchievementUpdate::*)(System::IntPtr)>(&AchievementUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AchievementUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ApplicationVersion::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationVersion::*)(System::IntPtr)>(&ApplicationVersion::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationVersion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationVersion::*)(System::IntPtr)>(&ApplicationVersion::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationVersion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetDetails::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetDetails::*)(System::IntPtr)>(&AssetDetails::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetDetails::*)(System::IntPtr)>(&AssetDetails::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetDetailsList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetDetailsList::*)(System::IntPtr)>(&AssetDetailsList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetDetailsList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetDetailsList::*)(System::IntPtr)>(&AssetDetailsList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetDetailsList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetFileDeleteResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDeleteResult::*)(System::IntPtr)>(&AssetFileDeleteResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDeleteResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDeleteResult::*)(System::IntPtr)>(&AssetFileDeleteResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDeleteResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetFileDownloadCancelResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadCancelResult::*)(System::IntPtr)>(&AssetFileDownloadCancelResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadCancelResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadCancelResult::*)(System::IntPtr)>(&AssetFileDownloadCancelResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadCancelResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetFileDownloadResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadResult::*)(System::IntPtr)>(&AssetFileDownloadResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadResult::*)(System::IntPtr)>(&AssetFileDownloadResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AssetFileDownloadUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadUpdate::*)(System::IntPtr)>(&AssetFileDownloadUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssetFileDownloadUpdate::*)(System::IntPtr)>(&AssetFileDownloadUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssetFileDownloadUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CalApplicationFinalized::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationFinalized::*)(System::IntPtr)>(&CalApplicationFinalized::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationFinalized*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationFinalized::*)(System::IntPtr)>(&CalApplicationFinalized::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationFinalized*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CalApplicationProposed::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationProposed::*)(System::IntPtr)>(&CalApplicationProposed::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationProposed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationProposed::*)(System::IntPtr)>(&CalApplicationProposed::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationProposed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.CalApplicationSuggestion
#include "Oculus/Platform/Models/CalApplicationSuggestion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CalApplicationSuggestion::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationSuggestion::*)(System::IntPtr)>(&CalApplicationSuggestion::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationSuggestion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationSuggestion::*)(System::IntPtr)>(&CalApplicationSuggestion::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationSuggestion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestion
#include "Oculus/Platform/Models/CalApplicationSuggestion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CalApplicationSuggestionList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationSuggestionList::*)(System::IntPtr)>(&CalApplicationSuggestionList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationSuggestionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CalApplicationSuggestionList::*)(System::IntPtr)>(&CalApplicationSuggestionList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CalApplicationSuggestionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Challenge::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Challenge::*)(System::IntPtr)>(&Challenge::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenge*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Challenge::*)(System::IntPtr)>(&Challenge::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Challenge*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ChallengeList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeList::*)(System::IntPtr)>(&ChallengeList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeList::*)(System::IntPtr)>(&ChallengeList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ChallengeEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeEntry::*)(System::IntPtr)>(&ChallengeEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeEntry::*)(System::IntPtr)>(&ChallengeEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntry
#include "Oculus/Platform/Models/ChallengeEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ChallengeEntryList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeEntryList::*)(System::IntPtr)>(&ChallengeEntryList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeEntryList::*)(System::IntPtr)>(&ChallengeEntryList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CloudStorageConflictMetadata::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageConflictMetadata::*)(System::IntPtr)>(&CloudStorageConflictMetadata::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageConflictMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageConflictMetadata::*)(System::IntPtr)>(&CloudStorageConflictMetadata::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageConflictMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CloudStorageData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageData::*)(System::IntPtr)>(&CloudStorageData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageData::*)(System::IntPtr)>(&CloudStorageData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CloudStorageMetadata::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageMetadata::*)(System::IntPtr)>(&CloudStorageMetadata::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageMetadata::*)(System::IntPtr)>(&CloudStorageMetadata::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CloudStorageMetadataList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageMetadataList::*)(System::IntPtr)>(&CloudStorageMetadataList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageMetadataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageMetadataList::*)(System::IntPtr)>(&CloudStorageMetadataList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageMetadataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CloudStorageUpdateResponse::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageUpdateResponse::*)(System::IntPtr)>(&CloudStorageUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CloudStorageUpdateResponse::*)(System::IntPtr)>(&CloudStorageUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CloudStorageUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Destination::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Destination::*)(System::IntPtr)>(&Destination::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Destination*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Destination::*)(System::IntPtr)>(&Destination::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Destination*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: DestinationList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DestinationList::*)(System::IntPtr)>(&DestinationList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DestinationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DestinationList::*)(System::IntPtr)>(&DestinationList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DestinationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Error::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Error::*)(int, ::Il2CppString*, int)>(&Error::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Error*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Error::*)(int, ::Il2CppString*, int)>(&Error::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Error*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GroupPresenceLeaveIntent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GroupPresenceLeaveIntent::*)(System::IntPtr)>(&GroupPresenceLeaveIntent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GroupPresenceLeaveIntent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GroupPresenceLeaveIntent::*)(System::IntPtr)>(&GroupPresenceLeaveIntent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GroupPresenceLeaveIntent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HttpTransferUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpTransferUpdate::*)(System::IntPtr)>(&HttpTransferUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpTransferUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpTransferUpdate::*)(System::IntPtr)>(&HttpTransferUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpTransferUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InstalledApplication::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InstalledApplication::*)(System::IntPtr)>(&InstalledApplication::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InstalledApplication*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InstalledApplication::*)(System::IntPtr)>(&InstalledApplication::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InstalledApplication*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplication
#include "Oculus/Platform/Models/InstalledApplication.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InstalledApplicationList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InstalledApplicationList::*)(System::IntPtr)>(&InstalledApplicationList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InstalledApplicationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InstalledApplicationList::*)(System::IntPtr)>(&InstalledApplicationList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InstalledApplicationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: InvitePanelResultInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvitePanelResultInfo::*)(System::IntPtr)>(&InvitePanelResultInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvitePanelResultInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvitePanelResultInfo::*)(System::IntPtr)>(&InvitePanelResultInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvitePanelResultInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LanguagePackInfo
#include "Oculus/Platform/Models/LanguagePackInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LanguagePackInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LanguagePackInfo::*)(System::IntPtr)>(&LanguagePackInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguagePackInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LanguagePackInfo::*)(System::IntPtr)>(&LanguagePackInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LanguagePackInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchBlockFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchBlockFlowResult::*)(System::IntPtr)>(&LaunchBlockFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchBlockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchBlockFlowResult::*)(System::IntPtr)>(&LaunchBlockFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchBlockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchDetails::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchDetails::*)(System::IntPtr)>(&LaunchDetails::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchDetails::*)(System::IntPtr)>(&LaunchDetails::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchFriendRequestFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchFriendRequestFlowResult::*)(System::IntPtr)>(&LaunchFriendRequestFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchFriendRequestFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchFriendRequestFlowResult::*)(System::IntPtr)>(&LaunchFriendRequestFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchFriendRequestFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchInvitePanelFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchInvitePanelFlowResult::*)(System::IntPtr)>(&LaunchInvitePanelFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchInvitePanelFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchInvitePanelFlowResult::*)(System::IntPtr)>(&LaunchInvitePanelFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchInvitePanelFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchReportFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchReportFlowResult::*)(System::IntPtr)>(&LaunchReportFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchReportFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchReportFlowResult::*)(System::IntPtr)>(&LaunchReportFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchReportFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LaunchUnblockFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchUnblockFlowResult::*)(System::IntPtr)>(&LaunchUnblockFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchUnblockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LaunchUnblockFlowResult::*)(System::IntPtr)>(&LaunchUnblockFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LaunchUnblockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
// Including type: Oculus.Platform.Models.Destination
#include "Oculus/Platform/Models/Destination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Leaderboard::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Leaderboard::*)(System::IntPtr)>(&Leaderboard::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboard*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Leaderboard::*)(System::IntPtr)>(&Leaderboard::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Leaderboard*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.Leaderboard
#include "Oculus/Platform/Models/Leaderboard.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardList::*)(System::IntPtr)>(&LeaderboardList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardList::*)(System::IntPtr)>(&LeaderboardList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntry::*)(System::IntPtr)>(&LeaderboardEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntry::*)(System::IntPtr)>(&LeaderboardEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardEntryList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryList::*)(System::IntPtr)>(&LeaderboardEntryList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryList::*)(System::IntPtr)>(&LeaderboardEntryList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LinkedAccount::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinkedAccount::*)(System::IntPtr)>(&LinkedAccount::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinkedAccount*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinkedAccount::*)(System::IntPtr)>(&LinkedAccount::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinkedAccount*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LinkedAccountList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinkedAccountList::*)(System::IntPtr)>(&LinkedAccountList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinkedAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinkedAccountList::*)(System::IntPtr)>(&LinkedAccountList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinkedAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LivestreamingApplicationStatus::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingApplicationStatus::*)(System::IntPtr)>(&LivestreamingApplicationStatus::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingApplicationStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingApplicationStatus::*)(System::IntPtr)>(&LivestreamingApplicationStatus::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingApplicationStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LivestreamingStartResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingStartResult::*)(System::IntPtr)>(&LivestreamingStartResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingStartResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingStartResult::*)(System::IntPtr)>(&LivestreamingStartResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingStartResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LivestreamingStatus::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingStatus::*)(System::IntPtr)>(&LivestreamingStatus::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingStatus::*)(System::IntPtr)>(&LivestreamingStatus::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LivestreamingVideoStats::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingVideoStats::*)(System::IntPtr)>(&LivestreamingVideoStats::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingVideoStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LivestreamingVideoStats::*)(System::IntPtr)>(&LivestreamingVideoStats::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LivestreamingVideoStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingAdminSnapshot::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshot::*)(System::IntPtr)>(&MatchmakingAdminSnapshot::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshot::*)(System::IntPtr)>(&MatchmakingAdminSnapshot::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingAdminSnapshotCandidate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshotCandidate::*)(System::IntPtr)>(&MatchmakingAdminSnapshotCandidate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshotCandidate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshotCandidate::*)(System::IntPtr)>(&MatchmakingAdminSnapshotCandidate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshotCandidate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingAdminSnapshotCandidateList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshotCandidateList::*)(System::IntPtr)>(&MatchmakingAdminSnapshotCandidateList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshotCandidateList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingAdminSnapshotCandidateList::*)(System::IntPtr)>(&MatchmakingAdminSnapshotCandidateList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingAdminSnapshotCandidateList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingBrowseResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingBrowseResult::*)(System::IntPtr)>(&MatchmakingBrowseResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingBrowseResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingBrowseResult::*)(System::IntPtr)>(&MatchmakingBrowseResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingBrowseResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingEnqueueResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueueResult::*)(System::IntPtr)>(&MatchmakingEnqueueResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueueResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueueResult::*)(System::IntPtr)>(&MatchmakingEnqueueResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueueResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingEnqueueResultAndRoom::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueueResultAndRoom::*)(System::IntPtr)>(&MatchmakingEnqueueResultAndRoom::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueueResultAndRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueueResultAndRoom::*)(System::IntPtr)>(&MatchmakingEnqueueResultAndRoom::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueueResultAndRoom*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingEnqueuedUser::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueuedUser::*)(System::IntPtr)>(&MatchmakingEnqueuedUser::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueuedUser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueuedUser::*)(System::IntPtr)>(&MatchmakingEnqueuedUser::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueuedUser*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingEnqueuedUserList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueuedUserList::*)(System::IntPtr)>(&MatchmakingEnqueuedUserList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueuedUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingEnqueuedUserList::*)(System::IntPtr)>(&MatchmakingEnqueuedUserList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingEnqueuedUserList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MatchmakingStats::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingStats::*)(System::IntPtr)>(&MatchmakingStats::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingStats::*)(System::IntPtr)>(&MatchmakingStats::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingStats*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncConnection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncConnection::*)(System::IntPtr)>(&NetSyncConnection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncConnection::*)(System::IntPtr)>(&NetSyncConnection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncSession::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSession::*)(System::IntPtr)>(&NetSyncSession::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSession*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSession::*)(System::IntPtr)>(&NetSyncSession::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSession*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncSessionList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSessionList::*)(System::IntPtr)>(&NetSyncSessionList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSessionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSessionList::*)(System::IntPtr)>(&NetSyncSessionList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSessionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncSessionsChangedNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSessionsChangedNotification::*)(System::IntPtr)>(&NetSyncSessionsChangedNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSessionsChangedNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSessionsChangedNotification::*)(System::IntPtr)>(&NetSyncSessionsChangedNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSessionsChangedNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncSetSessionPropertyResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSetSessionPropertyResult::*)(System::IntPtr)>(&NetSyncSetSessionPropertyResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSetSessionPropertyResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncSetSessionPropertyResult::*)(System::IntPtr)>(&NetSyncSetSessionPropertyResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncSetSessionPropertyResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncVoipAttenuationValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncVoipAttenuationValue::*)(System::IntPtr)>(&NetSyncVoipAttenuationValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncVoipAttenuationValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncVoipAttenuationValue::*)(System::IntPtr)>(&NetSyncVoipAttenuationValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncVoipAttenuationValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSyncVoipAttenuationValueList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncVoipAttenuationValueList::*)(System::IntPtr)>(&NetSyncVoipAttenuationValueList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncVoipAttenuationValueList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSyncVoipAttenuationValueList::*)(System::IntPtr)>(&NetSyncVoipAttenuationValueList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSyncVoipAttenuationValueList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NetworkingPeer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkingPeer::*)(uint64_t, Oculus::Platform::PeerConnectionState)>(&NetworkingPeer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PeerConnectionState>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkingPeer::*)(uint64_t, Oculus::Platform::PeerConnectionState)>(&NetworkingPeer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PeerConnectionState>()});
  }
};
// Writing MetadataGetter for method: NetworkingPeer::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (NetworkingPeer::*)()>(&NetworkingPeer::get_ID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkingPeer::set_ID
// Il2CppName: set_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkingPeer::*)(uint64_t)>(&NetworkingPeer::set_ID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), "set_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: NetworkingPeer::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PeerConnectionState (NetworkingPeer::*)()>(&NetworkingPeer::get_State)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkingPeer::set_State
// Il2CppName: set_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkingPeer::*)(Oculus::Platform::PeerConnectionState)>(&NetworkingPeer::set_State)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkingPeer*), "set_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PeerConnectionState>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: OrgScopedID::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OrgScopedID::*)(System::IntPtr)>(&OrgScopedID::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OrgScopedID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OrgScopedID::*)(System::IntPtr)>(&OrgScopedID::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OrgScopedID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Party::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Party::*)(System::IntPtr)>(&Party::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Party*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Party::*)(System::IntPtr)>(&Party::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Party*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PartyID::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PartyID::*)(System::IntPtr)>(&PartyID::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PartyID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PartyID::*)(System::IntPtr)>(&PartyID::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PartyID*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PartyUpdateNotification::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PartyUpdateNotification::*)(System::IntPtr)>(&PartyUpdateNotification::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PartyUpdateNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PartyUpdateNotification::*)(System::IntPtr)>(&PartyUpdateNotification::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PartyUpdateNotification*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Pid::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pid::*)(System::IntPtr)>(&Pid::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pid*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pid::*)(System::IntPtr)>(&Pid::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pid*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PidList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PidList::*)(System::IntPtr)>(&PidList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PidList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PidList::*)(System::IntPtr)>(&PidList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PidList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
